cset: moving following pidspec: 16866
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.682208506 seconds)
loading group "string"... done (took 0.583737526 seconds)
loading group "linalg"... done (took 9.947590739 seconds)
loading group "parallel"... done (took 0.192398691 seconds)
loading group "find"... done (took 1.536469171 seconds)
loading group "tuple"... done (took 2.19520829 seconds)
loading group "dates"... done (took 1.496394126 seconds)
loading group "micro"... done (took 0.217748343 seconds)
loading group "io"... done (took 0.623926848 seconds)
loading group "scalar"... done (took 47.129296085 seconds)
loading group "sparse"... done (took 14.317236285 seconds)
loading group "broadcast"... done (took 1.258812717 seconds)
loading group "union"... done (took 11.246301433 seconds)
loading group "simd"... done (took 2.765362381 seconds)
loading group "random"... done (took 10.788699598 seconds)
loading group "problem"... done (took 2.290492979 seconds)
loading group "array"... done (took 25.608960969 seconds)
loading group "misc"... done (took 1.192228592 seconds)
loading group "sort"... done (took 3.972100986 seconds)
loading group "collection"... done (took 20.207973351 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.753063253 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.150116872 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.252161504 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.353294406 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.246629628 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146010197 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163870834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.351905876 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023783363 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.239242016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154339666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.58688869 seconds)
done (took 6.075048162 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258704091 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.328937097 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172540157 seconds)
  done (took 1.105073018 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088516079 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.182406997 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108615807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095018824 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109836488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10930732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.111532903 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112733364 seconds)
  done (took 1.435909964 seconds)
done (took 3.500471822 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535654506 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.91825596 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.541100141 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16275673 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316900704 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.417033199 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.334140716 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.202269092 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10400824 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.103551633 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174815035 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.437578284 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474649726 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.001862984 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104955537 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092676848 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128314008 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773589882 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.075451149 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129202897 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.57825751 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213109697 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.109696284 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.113515634 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.195260929 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115288803 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174402845 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101544144 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.656757634 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.126766548 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196137348 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095279535 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163348983 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.243011967 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.229639443 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.103429546 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680837208 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.195383113 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098457032 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096441957 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682637605 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.130346776 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.165561552 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10292611 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090890921 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183824229 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113991111 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.089971884 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111597591 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087004908 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164886517 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.447440454 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.088826299 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.166135809 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.087522174 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700477557 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096202607 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.279050166 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133078752 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105203152 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.071761799 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.102934193 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153776295 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.106147292 seconds)
  done (took 20.626258665 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.159358188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165936238 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091115504 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141861839 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140910081 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.0927232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080533314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.090486639 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129383859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240242376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137878449 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.170147406 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087124251 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084288161 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146980017 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251569908 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12171057 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1061723 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099278761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106511591 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126258631 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111049586 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108127841 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110162434 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168180063 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201099378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106997735 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119224936 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096976568 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.119594651 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138086878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147870457 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.087574588 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083366204 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18877951 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118758075 seconds)
  done (took 5.300914473 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223563671 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12233987 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.23749913 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171817203 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147273948 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.172736475 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159232604 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.298959693 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.318484631 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177890608 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110304419 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107974727 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090252804 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08119805 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.208170407 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074817348 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658204137 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.187242461 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151910339 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153035424 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104662748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100249287 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384927533 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080232646 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096109235 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081696478 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088270541 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.208269478 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10249738 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.217922343 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098089769 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085649001 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128104902 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197320185 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129203566 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12499623 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096570573 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093995526 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215125049 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111308086 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073191772 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130416262 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128863236 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129886502 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094300685 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091035193 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.23590858 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078595123 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094480358 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105225193 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.14502864 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195314193 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.131002989 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07759332 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32630961 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111259182 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102408032 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077721806 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291341704 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130038995 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080048282 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09430486 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076773535 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098502919 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076514936 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448514129 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1096395 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.966637521 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080120149 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.169929587 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102409237 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102460406 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100326302 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082774263 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115564104 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077415875 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093018608 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07760086 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093164453 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099248616 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103083123 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098476378 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094801654 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144262342 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.107051708 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116425186 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106615921 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101108423 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09408631 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123448141 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079250937 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100023799 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173580538 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105971087 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103176148 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102369824 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136142868 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090114946 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201613848 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078317796 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096226919 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106804405 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098348176 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124874093 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111334381 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09281579 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08014406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089750934 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076852198 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159181149 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078864914 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0935815 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10144527 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094383207 seconds)
  done (took 23.935731708 seconds)
done (took 50.467092652 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.601465943 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.115198608 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118728159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.114666449 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100171265 seconds)
  done (took 1.737843306 seconds)
done (took 2.401307151 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.378282078 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182547211 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124263548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181469671 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102198245 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.188907478 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186938975 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098633719 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216566917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095174283 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179930219 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095540807 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085284721 seconds)
  done (took 2.806204301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093444922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124832747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095920872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10963824 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074530812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109280768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10753485 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107413128 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107215701 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085711599 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090041597 seconds)
  done (took 1.767202436 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091529485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117433517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082695858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10694705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074039367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106899103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090984487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126697765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1070772 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086524173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091483892 seconds)
  done (took 1.741125558 seconds)
done (took 6.96827977 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.187830714 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.481482392 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148064584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202306141 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.392827623 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253402484 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61937069 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.16734746 seconds)
  done (took 12.329444944 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.175797085 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080520926 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098683426 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098868981 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081663282 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09895922 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08085935 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096452252 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082064058 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09631894 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082814489 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097091641 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08291029 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097898799 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098388362 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.081905916 seconds)
  done (took 2.267668846 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121686506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119578079 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105133228 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10909536 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086947945 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103993241 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105745282 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08884061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099938441 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087138754 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.107166382 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105483592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091474202 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10116249 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104749362 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094749145 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102262967 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106114875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093527457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.1074399 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094270798 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103165293 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104812384 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094015718 seconds)
  done (took 3.215341474 seconds)
done (took 18.472273848 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.175776791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096566309 seconds)
  done (took 0.943056869 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146218073 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148821128 seconds)
  done (took 0.969714859 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109500038 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093905844 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141169751 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115004628 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080924639 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095082838 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133361704 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080689876 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095360648 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080854123 seconds)
  done (took 1.703171232 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084024543 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099097245 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.093055409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.14503435 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109195719 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099723881 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085430763 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099797257 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08719055 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096591227 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105277553 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119662792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090122716 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125981176 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103518015 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091789223 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11267857 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105317968 seconds)
  done (took 2.531912384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080842262 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095881242 seconds)
  done (took 0.855295399 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084645231 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095783748 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086289298 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100273743 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081293842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095122582 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096003424 seconds)
  done (took 1.317966474 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.567212097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276261168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.380712417 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119044024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143059615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.406366509 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143151144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.113316877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097485597 seconds)
  done (took 2.968121233 seconds)
done (took 11.96580501 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087717064 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.21946029 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.688038792 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104659415 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095950503 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142038412 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.324100381 seconds)
done (took 2.350248433 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347007469 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.155073377 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088317684 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091867386 seconds)
  done (took 1.362445415 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075040751 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104129981 seconds)
  done (took 0.863596846 seconds)
done (took 2.918893505 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.114643662 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093990058 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077513829 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094407126 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077272366 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094293912 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076685715 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09377212 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079354638 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095270442 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.079673195 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094693123 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078479212 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094819529 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079800504 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094991758 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078906505 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094606596 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079360077 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09536299 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079485716 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095706669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07940702 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095190944 seconds)
  done (took 2.841050749 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103356686 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098082216 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100573695 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085590607 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105582614 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08761851 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102596013 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098471016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087221305 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09884282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088207831 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10470292 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100307382 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088941734 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099093605 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087760311 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103230981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099527871 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083356389 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104773858 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086673022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098711735 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105867061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086896432 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104523949 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103149727 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083217956 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099881639 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08818641 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.104307012 seconds)
  done (took 3.580060597 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08775398 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092492976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082219211 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103736203 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078140048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097703976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077393645 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09552538 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082742213 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097452344 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084180011 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097112801 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077803799 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099663868 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082856942 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099968841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092438545 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09497904 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07807094 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098647134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083112663 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093491809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080778779 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097986336 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081085723 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093880555 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080943801 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097237849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081719686 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095810029 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08183014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100702231 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080701368 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106570758 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084812807 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097178723 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086368428 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094339067 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.08296658 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094024942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076904669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096756239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07870122 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105562808 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08239302 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099024742 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079735707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098690295 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082599642 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102652595 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094463831 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079353221 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100426373 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083845628 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100789111 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077849067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098120394 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077962554 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098420033 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080103322 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094144268 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077856132 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102008989 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082006989 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116223188 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089268302 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09437052 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08412437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098561603 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08634368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100258177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111094434 seconds)
  done (took 7.221845691 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093142975 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109127296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084494267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100175666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081772873 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098962865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.089059529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098510516 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099201152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092105839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098122322 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08447118 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101157005 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084117565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098166959 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083350565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106629792 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098930226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083086588 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099002555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08165143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107189124 seconds)
  done (took 2.769550773 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.258144801 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086053362 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.150266146 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113120075 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119187933 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09679669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101376253 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105709117 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087783837 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112016288 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109582844 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087873273 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.124270227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109716685 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09484589 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112648496 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104243221 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095971199 seconds)
  done (took 2.769232766 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096933954 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098944161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107087699 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.217256272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100987116 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085082048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109906829 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117402739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085179653 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10180601 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095723147 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102005414 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085112787 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103646066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101189107 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082948077 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102572324 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086018364 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112326025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112837253 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094433032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111660045 seconds)
  done (took 3.014465291 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099956823 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09840947 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133698055 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086956643 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098517013 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080735283 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104309531 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084234068 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109896214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101757929 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084572874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099743957 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09432035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10203226 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109882189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086707193 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102089973 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085960998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101703976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083557255 seconds)
  done (took 2.651279658 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176327718 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09901671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11772753 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131112331 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100387873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116820117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130364733 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100352195 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116577731 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135024767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100473571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116577882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130472582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12513223 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099911821 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130378008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130103342 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128111894 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096974833 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115721323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133660944 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101201981 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129621508 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117698523 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101581795 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11810493 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100734147 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127388289 seconds)
  done (took 4.034256204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078928404 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080102258 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098297359 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081630501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099138774 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081497974 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098550608 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082614568 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097907322 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083350139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.099073445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082645821 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100412128 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082861628 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098896345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081724984 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098417173 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082727623 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10003445 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083464019 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099288044 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083031961 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099277847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082136843 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100393624 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08166651 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099529539 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082503415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099329732 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082378963 seconds)
  done (took 3.410622175 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093154314 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107407297 seconds)
  done (took 0.910146964 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.089345751 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116730444 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079886575 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101332525 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093475731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100395807 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11269177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093046272 seconds)
  done (took 1.49293684 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147852105 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.149739984 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087214942 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110872651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.147381625 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.142574538 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144110961 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086080763 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.100081548 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.073671696 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.141653767 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093587908 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.086402882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102618645 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088136536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110627106 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09913387 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090348124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105196674 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08269986 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103781974 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092417152 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10434126 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.11025015 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078000514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105846997 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089826539 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110631757 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097615731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087825371 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.100701751 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081392045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102490135 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086767895 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097459422 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.148515566 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096311968 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098302023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102508002 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087355131 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107990212 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081817214 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10508471 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082477675 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104596761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101997806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087589682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098243363 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077537692 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.095213096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081129568 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09830525 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080137715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103137908 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10441309 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093955608 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099453114 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078809066 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097351166 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080916269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101485113 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082103087 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105013382 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09976946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082359783 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.102769838 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085238166 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098991699 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.08406617 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098268885 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085822981 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118140764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104420018 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087051482 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104315266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081337903 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100315043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104684072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085713175 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104800638 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086499369 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106145449 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08392214 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096829585 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082038794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104429783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100943008 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083626876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092937928 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095716419 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101226439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080820772 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094812192 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083402171 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.097806157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084386964 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094515456 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102524289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079645629 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103619873 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086919518 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095775739 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088021415 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102950537 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087703601 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.102228893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142720647 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099564266 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081662837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102175904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087655697 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096363123 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084873067 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096862154 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078525769 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098336435 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086853281 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103319089 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08359708 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102645468 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100342961 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088876425 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100596259 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081276586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09732497 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085801223 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109507568 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.104980827 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08375077 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100096389 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081840216 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102707501 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086221661 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104428515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088414393 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100195428 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080492395 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09954243 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089327024 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.104641941 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099049968 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085308045 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10528866 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085567401 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101767169 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10567624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081007995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096069543 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087151167 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098729244 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08300773 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109456446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082379685 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101465508 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09768164 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091558979 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099900065 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086817701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101795704 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08730645 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105239116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076471818 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100001479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084871265 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10516561 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09950767 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082495057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098394218 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089232151 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096780094 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086296868 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095837297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.079163252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104189442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082187045 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102991735 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.081098264 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115843949 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113857512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088456501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104008664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085419799 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104231245 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103162623 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0865291 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106317367 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088841249 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10185756 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084063539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104798476 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.079277573 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.10113977 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105661714 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087574037 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093116819 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083983098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093686994 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086667027 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106820343 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086177529 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10528538 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083930748 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102051455 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109999901 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081767952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103273531 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077252054 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104064931 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.092305075 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105939656 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088680477 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105511967 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101345544 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083193355 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108888675 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084941776 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104095468 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082549765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096024992 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087405143 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106179897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085975406 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098011676 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082173966 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105054225 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105666993 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083238931 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09624316 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087645348 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108278104 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081486171 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105217539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099497522 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.084372378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113340614 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079455642 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.098633244 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089008719 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104437559 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080911945 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.100139228 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101129809 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097477673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10334823 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084682926 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101180178 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090608983 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101705065 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.080689973 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099827481 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084848789 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096634197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083946202 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.103886518 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100309517 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082511691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10829162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088867561 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106390576 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08454046 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104165868 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106728356 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089091881 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099054496 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088585074 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098880638 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077822457 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099602563 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077032491 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101016418 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08128767 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105735908 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083887705 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102971156 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103012389 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086903204 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10135437 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08783683 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116826004 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096437733 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078775064 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102547373 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086091048 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100729039 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08268913 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100892414 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105546502 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086159146 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106569193 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.078938236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100035426 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088238708 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100380866 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088782747 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106502587 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.089787915 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099468051 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103621675 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082952789 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108805102 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07940251 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.104532389 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085195396 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104169816 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100718065 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083719174 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100450294 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07902033 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100834248 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088152787 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097269606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087754086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.1019286 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085002224 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097383552 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081790757 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106778775 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096205412 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089706966 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100026606 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078265001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097652217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088156666 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105521772 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088147681 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099896844 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086358106 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107099955 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085790683 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099752089 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109534472 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090776627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108089769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093241413 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095166205 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084807179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109504662 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099340875 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085165914 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100431575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080518162 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107247991 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087987327 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106135767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085056675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096979428 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083140806 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106935106 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08670205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.105197774 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084470712 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10431072 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098737892 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085460884 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106440045 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087099594 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107985253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087096546 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103793813 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083491317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105947386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10018857 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079598669 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.096618739 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084679625 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107013763 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077439713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104897998 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086247334 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101345884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084822631 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10417094 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082251081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103049915 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087410046 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.099980472 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111558925 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081930491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100423148 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087208836 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105626043 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079796257 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10137972 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081975338 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107389193 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.085359758 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105350275 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10416829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087124302 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103722779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087082905 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105715893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087472156 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097620337 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089704562 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10879362 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083934839 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099805367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103296443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079929902 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103219278 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088845543 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102247695 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090993848 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106666849 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085191605 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.102719425 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105830497 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085283722 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107487597 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081082899 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104023956 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079200617 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107012623 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085127295 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107258039 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101085273 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079202628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106379214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087410766 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103791666 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090796675 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107263306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079741723 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098552661 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08432955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100306527 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113372252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083048999 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102916523 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085782961 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101695393 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083168108 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107698914 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081548995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100863421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087128869 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105298909 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09979794 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079248031 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103813155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.085699501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105568232 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086117324 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099869434 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086926096 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109035284 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103120996 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078210169 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.10243255 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089151033 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104355721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082649579 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09737897 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093750148 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106392643 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108419385 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081533853 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105259842 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083557822 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103710491 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090373318 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101969279 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086647922 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102397286 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106148665 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093539131 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0965305 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080391628 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111858368 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087868383 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107052777 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085348035 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102144374 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107971927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090348944 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.105936266 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080283849 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099255398 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082218392 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097667682 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084787854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111249474 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103988527 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082991126 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103903867 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086978119 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102956999 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084604571 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098512934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089699041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101795296 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090935937 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09797685 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078305132 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103885071 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088750717 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100158743 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.082312287 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101474066 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102643585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080734606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102324659 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090388127 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105822445 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088510954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104795041 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084319968 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102892603 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113172087 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082376548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1017424 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096040293 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108645842 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087631186 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105577758 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109423881 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089572018 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10414085 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089834813 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103806068 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082068628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108780364 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090707545 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116314593 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104062177 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.078967019 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105693772 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08099905 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099654309 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090553096 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109087475 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091137918 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104929075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083455904 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109845573 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102971711 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086972768 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101992005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084414985 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105839095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083817305 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.104975308 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083772083 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109363474 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108543569 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087786995 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110869058 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078976415 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112469634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091125934 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110836835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083274409 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099373289 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081310256 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103555061 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089993352 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088628414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103895778 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085479783 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10509263 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08761287 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105804593 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085043366 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10983155 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089131702 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101903984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088062378 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.100001065 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082192636 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101447539 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106724889 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090879194 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107152383 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093655678 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108085277 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084989077 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102313258 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106621772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08533403 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.106207427 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086657409 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102152414 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080607834 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107396462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092005954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105451386 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090271801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110184229 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103866608 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090294487 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111205527 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087852959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102999375 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089340533 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104128233 seconds)
  done (took 57.87454152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.160035172 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092494399 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104096698 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086087454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13219666 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104705574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085801057 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105244386 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086623989 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117661129 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103383582 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084966451 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128234848 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135360409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131107152 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117690404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084787302 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105507545 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085393527 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104810813 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107465993 seconds)
  done (took 3.021950567 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108612333 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12141997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122082358 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12554863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095269175 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119862144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.122257669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119994522 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107276505 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116799425 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.124910375 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119441508 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.097333176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115369515 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116136553 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116230891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105406827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113850921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122391293 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.120714785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097606247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123109031 seconds)
  done (took 3.291750069 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093904273 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106125377 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090375087 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10346453 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088614049 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103612021 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093391028 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103285474 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093812305 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.103521365 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.082142642 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102099943 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085226425 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.103201662 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08384219 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102749597 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11261929 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088278187 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108681177 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084033111 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120168311 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085941509 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103587103 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.082376658 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.116387938 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10815667 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084936548 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106634865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.080065576 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107580855 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.084377045 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105823361 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087979339 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099911617 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.079718395 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106621151 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088090824 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103707798 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085054069 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.101071662 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085857983 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108770886 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109770011 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086067508 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10283461 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083288925 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106990267 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085417481 seconds)
  done (took 5.401680634 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124585741 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16352755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091652283 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152836161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127353805 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118670788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089390932 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130762242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10817083 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110555645 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108888396 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127529303 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110544648 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114307758 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089536608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110379743 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093927368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110738007 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117705811 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090768768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116614133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112757927 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107006725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125911025 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112426953 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090232692 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111823629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11285765 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123603158 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.099966856 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115032116 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116367385 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10850035 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113543194 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109778959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092102498 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129030081 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111627938 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09288923 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106339211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110171297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096084531 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112562331 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1289007 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092901598 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112704257 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111915157 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086821181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125540065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111052295 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.101885099 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127108992 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113601549 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.094060973 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114201175 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125790061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111363489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090135464 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112327183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124485145 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087918816 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112678324 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127229358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091260089 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118382681 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.128602977 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.094620069 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114361246 seconds)
  done (took 8.513206368 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121635763 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114877137 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128706805 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128712448 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099302624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11469727 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114416876 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095699152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116045633 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122645553 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096112668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223664029 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092632509 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122011944 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114824545 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096375236 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114252128 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11555103 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097213923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11496676 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114488455 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110080016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115725126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128269679 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131974584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092160232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114977806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113971821 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109784551 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113785521 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130803411 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115276613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096231044 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128834926 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131668453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115821682 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089119463 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115074719 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11485967 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09714597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.111611485 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127644124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.097224715 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110959452 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09595478 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115557082 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1290544 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132686937 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122944614 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104414542 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114964426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128711934 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095840402 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114995913 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127646755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140154038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128291204 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12820077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095292991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129461171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130322945 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138945014 seconds)
  done (took 8.015143141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086088558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084617933 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104968394 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084718856 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106064902 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085042829 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104030592 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084881187 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103853668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085105668 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104462354 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084974253 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104170621 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085087737 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104956558 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085611159 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10465322 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085501373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105633723 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085950925 seconds)
  done (took 2.651246361 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098490808 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128849944 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090101885 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116960145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108409723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098348086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107441101 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089487394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10949099 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109388767 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102316526 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122026275 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108578216 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09842165 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121265003 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116911344 seconds)
  done (took 2.502898439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112846592 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.13133415 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168261477 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111299089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.090783853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.116843099 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089416315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.110943206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106930792 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09647033 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112957597 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093926263 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110753813 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089768337 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108426122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112322419 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087745164 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112855365 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088773377 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.168256202 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.115531358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.091438305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110089626 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112505686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093132392 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.116352127 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.097681666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109241868 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109760517 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091257022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112058955 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09880191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108261851 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.113293201 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090276568 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110188903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090048619 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110076865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093939643 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108350363 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090875938 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112620375 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108838634 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.092283891 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106010295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091128489 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106736827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097757778 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111407864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112114945 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090060547 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113665417 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094755343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120653983 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117484567 seconds)
  done (took 6.645468685 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104053802 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109981776 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104756075 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105727543 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089937463 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111418169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108936667 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09245934 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110674632 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086214733 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111025881 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091981344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111561543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10982161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093687903 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112325308 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088906062 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11311836 seconds)
  done (took 2.633155813 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095426417 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107746143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095117182 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109395714 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089506241 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10839669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087719283 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106635379 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08762718 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108275244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090190191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10828446 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089179687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.109212991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108816406 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090540697 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108614446 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08731524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108628917 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08902947 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1095196 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087542972 seconds)
  done (took 2.967327914 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.100904002 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.167012454 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119147971 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.177508186 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109457716 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087432768 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118379104 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.107363361 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109029912 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105831367 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.08590871 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.106177285 seconds)
  done (took 2.178006037 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117524358 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150507637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110181221 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090209792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121713874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095818834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115275395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115403005 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126854831 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112141443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116469308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126296754 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127777912 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128059706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102844828 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122111422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116086255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097055152 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111000164 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139138969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096410558 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127481347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114573147 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115463726 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096134702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12818879 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128399496 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132585994 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095857962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128190612 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122738229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115997617 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109016855 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132672072 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108877309 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127567919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096925514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13926703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12337745 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128450395 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09005749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122154073 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129437646 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123990444 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109039371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116177107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125010764 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096270631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115771273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146812519 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123132994 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130020002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103676407 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127975669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128478921 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147407385 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134244069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129826973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122351355 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114390088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127505296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122412617 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128606917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133296425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102377495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129390214 seconds)
  done (took 8.676167362 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137597636 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112045804 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116779167 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134600157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110181022 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116257608 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116854237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095880263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116442096 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111167043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166633323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09714417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129325255 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129906912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1173068 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097412449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115514081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132419072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092236493 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147467789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116476146 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130992348 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130288985 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130597458 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113261852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122670462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116769542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09735385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11601426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11587567 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103852353 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116172964 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128882095 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091887942 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130822638 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11651829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116035253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10590112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116269329 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123363962 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129096559 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139558419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098155145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116086274 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133277916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098319186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117281263 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112558061 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097426888 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112661515 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133828963 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133861503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113231302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129986303 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11544494 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117270381 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096763947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117015563 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11710599 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103669545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130542631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116082506 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149397377 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097726587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115727717 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130296043 seconds)
  done (took 8.599540382 seconds)
done (took 158.351774626 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152307866 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.172534066 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14902463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147112676 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104247161 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119687763 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1382485 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.150517423 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083207041 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103582116 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083532961 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107883125 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150959776 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103398175 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084452659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107249661 seconds)
  done (took 2.744227648 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185899239 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336994951 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126327085 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11482912 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092910662 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106574721 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093846439 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11646197 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109656182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099420144 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107084926 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087550597 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118577701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107042899 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089637261 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106466079 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118164795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087275999 seconds)
  done (took 2.999392613 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111657601 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148217874 seconds)
  done (took 1.057187333 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124368545 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192298445 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327694659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159370469 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.136520684 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.112281735 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160135777 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126366668 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201294116 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130630449 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131381195 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091843954 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139100959 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117621316 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.123721933 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091891852 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142310354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.121439967 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100956235 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.112259717 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117384808 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113518598 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119031805 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.101816961 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.212357753 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110178848 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113743822 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.112596617 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.093817754 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120864556 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094618304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130607862 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128980992 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.199699954 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098506806 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.196154483 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100482753 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112077264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119807326 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090711706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.116758323 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117056543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10910336 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111705563 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112812522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101441177 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.11334882 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093009009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117084163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121924989 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095664905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114523702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.195095477 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102971873 seconds)
  done (took 7.745819442 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907459984 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154385083 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089666564 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.039189385 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138988042 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127469294 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.88930517 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134808691 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.276981259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.913540945 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107673688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124072102 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259280033 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.293998835 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.193347309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372418028 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.764570035 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103929886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141796824 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16108987 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121558415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139313512 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134666645 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437125978 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092177105 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1104779 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119862519 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103627106 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.200177143 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089991975 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116034082 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220437216 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.284066928 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227916334 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092604082 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109429473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088712275 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.208506052 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.307888688 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.252175075 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185612055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107694712 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090279624 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120092696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132265526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086059067 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.2012993 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193094303 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.21399876 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096244086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123647246 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122669195 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098070027 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.200649704 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.087109496 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.387711578 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37420277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089939209 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122209515 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125352352 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294838443 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09002262 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259185057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140934658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.240736931 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109828102 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824184929 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184579396 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110717864 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117005909 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099632519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118999042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11941203 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178814532 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409213597 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102092141 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115338736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10856967 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231978315 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.109586125 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088987204 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.202218146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092291378 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121725684 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12360542 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122365532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1906721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270112186 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123259705 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121580413 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096370253 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126898862 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11326172 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230650312 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251636003 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.197518662 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236615868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119734226 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.204702748 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18426793 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117856107 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190555036 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121310243 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105681256 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119790364 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246783123 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152104589 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.111453911 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097489587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121671172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156579327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113292482 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.101608269 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.208515714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498831223 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18695477 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10649171 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094380168 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121690762 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182091086 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12032719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.293103337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121423713 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184889748 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120072874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086557294 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121748469 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183225419 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120094808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122157499 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098606823 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121666916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.270858422 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2720544 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103885659 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262146379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189409091 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118293357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193534969 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122603267 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189784421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122801084 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119678131 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094074836 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815657575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127515766 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12139137 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116764153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.202829148 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089084012 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111605392 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088499186 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106655764 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823657066 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092904267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112087622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091610354 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117448847 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12190495 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100638589 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116936856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18076451 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.285918879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10357107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119923068 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089009845 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.199237878 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113592362 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090477037 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110371763 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.089954478 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123055046 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097219384 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113774189 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192409703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198539346 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255207262 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572671521 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090619696 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110938088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262386754 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110551236 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.342454818 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121957641 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.259753084 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187559493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108102622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373051524 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188688445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201120166 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113900169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190946473 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1078931 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123646594 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181721106 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110932313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100068137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.199586821 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105608155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125087824 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.19580836 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112076468 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250268457 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108635798 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.18841765 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114216734 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119139234 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343175516 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089932645 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129807472 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179913648 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11808252 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111483771 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.791336105 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110406102 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125771401 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098436254 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256956836 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.207883413 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122563767 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102197984 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12468844 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18079749 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254316718 seconds)
  done (took 47.164982501 seconds)
done (took 62.504191157 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32253057 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279930107 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.335059395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232799113 seconds)
  done (took 2.075182029 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.225968402 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16114075 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.191716605 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109007763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201484792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109740185 seconds)
  done (took 1.823012975 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.536075995 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.440289762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.35370748 seconds)
  done (took 2.158071599 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278209003 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272090087 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.361446024 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.500840069 seconds)
  done (took 2.375403886 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.256665313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132257597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127693393 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.182615927 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221110732 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.22060711 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151907549 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166911209 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.113894479 seconds)
  done (took 2.452848757 seconds)
done (took 11.708923372 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.357859129 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.341264659 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.203681536 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.329121519 seconds)
    (5/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.250971137 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.256856243 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101600143 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130965683 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096594216 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238664524 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.271066297 seconds)
    (12/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.234626711 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.333351024 seconds)
    (14/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097169425 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.300607463 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.242233933 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.153033802 seconds)
    (18/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07884728 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.311765213 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.105391581 seconds)
    (21/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197633753 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.353093589 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128867887 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.102647739 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.149459444 seconds)
    (26/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.092491895 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136918718 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.208365898 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.230712478 seconds)
    (30/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080356684 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119551903 seconds)
    (32/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.219565872 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.095970639 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.233956651 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165322007 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118824114 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.31643048 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.23481752 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1198582 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.252257265 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082529431 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.15649083 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199518976 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098227124 seconds)
    (45/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.217448034 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204358698 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087355712 seconds)
    (48/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.197833861 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.185791934 seconds)
    (50/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.235772629 seconds)
    (51/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095339604 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118826848 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.203338766 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098701435 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119663372 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190413373 seconds)
    (57/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096269831 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.102657859 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.096172275 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118995358 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.220293696 seconds)
    (62/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175575306 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102137137 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.152271505 seconds)
    (65/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181264836 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13489668 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102215773 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.192047697 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15476188 seconds)
    (70/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.218422881 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11929582 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088625501 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119861267 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.115007725 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101317707 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097576037 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118258401 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093126836 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.137250458 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220103027 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096737097 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101267186 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096073123 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20037678 seconds)
    (85/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.189200202 seconds)
    (86/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.174843578 seconds)
    (87/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188161039 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.228786512 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.223479347 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112276419 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098938083 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.104094196 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.105568447 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.217884563 seconds)
    (95/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.119094988 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095973679 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123540674 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094318157 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.220412446 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.18911148 seconds)
    (101/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121280103 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097637223 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120414852 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081158653 seconds)
    (105/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100807737 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.222084272 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096148358 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.103591903 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096704761 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103249395 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095824775 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119231575 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106876425 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.175408298 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118961399 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080326406 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.20166544 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095721359 seconds)
    (119/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.179161774 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.103720324 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09154136 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103165183 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161620613 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.138793917 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136466106 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096803431 seconds)
    (127/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108858449 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0794182 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09669001 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09724837 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10295557 seconds)
    (132/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08026122 seconds)
    (133/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085977217 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102503374 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080749518 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119043231 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091979833 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11159777 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079407812 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102766903 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088488305 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080639321 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.175424871 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102362607 seconds)
    (145/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079847705 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09654106 seconds)
    (147/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.102417445 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080318112 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120124318 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079791521 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.102341334 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081014885 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096126912 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11134453 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086399591 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.108270427 seconds)
    (157/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086042468 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114799484 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096952335 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110858655 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102367015 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119603757 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087028686 seconds)
    (164/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102307547 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090648507 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.102513574 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113978086 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.102899028 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081288089 seconds)
    (170/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091108725 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102346674 seconds)
    (172/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097510254 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.408983196 seconds)
    (174/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129514622 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081046595 seconds)
    (176/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122050989 seconds)
    (177/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080938887 seconds)
    (178/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080686067 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102673099 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08121056 seconds)
    (181/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.107640364 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113469143 seconds)
    (183/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.101340287 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099528758 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.109884797 seconds)
    (186/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086847279 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082036469 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102152859 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.094726993 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118633449 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.081130917 seconds)
    (192/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.102969911 seconds)
  done (took 27.852142051 seconds)
done (took 28.693025942 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229288075 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104322254 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122154794 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123483639 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.180940185 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102980725 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.133409809 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.126543356 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104566878 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119409512 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089834951 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130051259 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10070879 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202672765 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.103844214 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116513447 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091639345 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128163718 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131045172 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.111107244 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.179793823 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115988323 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105907185 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115554725 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182575085 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092618251 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122659272 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123671882 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107481219 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119488196 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101270721 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114571126 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.132426922 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.10897596 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112757677 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096417927 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112969359 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088587865 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121490957 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.099020283 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130417764 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121906765 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.102494325 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.116666278 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.098887757 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12029025 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09115332 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127357295 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112628032 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100525719 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115761028 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.109479027 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119463255 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089693798 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112959664 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115463046 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104815165 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113918231 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107081511 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113229832 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093373059 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113892623 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101363989 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113068831 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096698617 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.113603596 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119975924 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099842286 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119250471 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093182249 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112920288 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096775224 seconds)
done (took 9.279540164 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095752991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177785127 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.181885277 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.187215357 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147313903 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.132816423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.136579132 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120648273 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.131019832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13892755 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.12951377 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143352392 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.192258263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12780298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.133489349 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099029935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.130327618 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12367236 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191274328 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117536883 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151359 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.129595404 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151845433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.111426529 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121652872 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156324346 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101751952 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122071675 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122069077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106975804 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.140826307 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.098503114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.122408648 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136571932 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109310154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127476683 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132976059 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10045629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120536984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.097095451 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133976309 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131423722 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098006944 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.134260925 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122297655 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.107874563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.130316529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105969778 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122874654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123009897 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10087818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.151819345 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.129524288 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110221702 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128727274 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127405205 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106160321 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.128101745 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.100630739 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127388817 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119650236 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098516015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124285038 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.148499141 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.100876116 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.128390585 seconds)
  done (took 9.311316358 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119966039 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158410111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132969809 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10968144 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128453867 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.111118598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088235984 seconds)
  done (took 1.726897215 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089286501 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186288401 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.184633924 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185552245 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181461275 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217762653 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112555939 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.114064448 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150490807 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.102143681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184103933 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241570699 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098565721 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.132250558 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189129828 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090171278 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.211704012 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090057933 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125666326 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.186692865 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.105465342 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.14451392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13116205 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091520183 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.17976441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116587791 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241031512 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131816002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120891699 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.101000869 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129253683 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202623877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.180615353 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.1308891 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09371896 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182690416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.179587967 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127243631 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.196216124 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119194435 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.18112 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.102998369 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128383405 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104795831 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125726918 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166516527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.133404073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.103506604 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.125955175 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186905028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12749692 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180529762 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098758292 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.125785591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.104058379 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128073073 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133016558 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.103788865 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188151169 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130647047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182781782 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182613469 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182082789 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18207646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137988343 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182274458 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179844386 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.101653107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1265832 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127568471 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182810993 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.102252379 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.127813923 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170797789 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130802213 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.182112917 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.181601338 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098805765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129064274 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095263298 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124608057 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092225454 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17666958 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126388316 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124849725 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112220414 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129961857 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104218329 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.118855512 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.140717568 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.103126234 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.127847313 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13290113 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104686463 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133024961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.186409159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.128046019 seconds)
  done (took 14.699109944 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0930428 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116179583 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099000084 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117494353 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092842359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119811273 seconds)
  done (took 1.534838284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.122368799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.129028405 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.139655793 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105957165 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186177549 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.186872852 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.190101081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124656365 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.146631235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115715904 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.186975632 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.214548679 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.188026148 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.108176413 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.192061217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.131037559 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.189705917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127604358 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.114478314 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125870356 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1346089 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10776592 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124290662 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.17983842 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.131238246 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10624577 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127320995 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.114615114 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135360783 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12569149 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.108714818 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.130246578 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123304487 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101585635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.190526712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122115618 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124540212 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109837698 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131443254 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.130524986 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194197009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1014316 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135941294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13398303 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101582053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121581575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.133826152 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102771596 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.189748846 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151491551 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.13453079 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.105089143 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.131653821 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.134887056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098180946 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125275629 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.110400274 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.215719544 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.108176386 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122253724 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.106512296 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130973495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125209174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.110914871 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131827816 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133242782 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098791669 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129821008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102289192 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129195111 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13401807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.105879047 seconds)
  done (took 10.575379296 seconds)
done (took 38.725740342 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.258904282 seconds)
  done (took 10.152806863 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.920921779 seconds)
  done (took 1.818974832 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.282794429 seconds)
  done (took 18.215061638 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.578868753 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.643182477 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.003374588 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16760693 seconds)
  done (took 3.290335243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.984606898 seconds)
  done (took 1.904549914 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.352273063 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280527498 seconds)
  done (took 1.536115881 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.707170053 seconds)
  done (took 1.616906418 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.271772386 seconds)
  done (took 3.175324747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.380056625 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198156098 seconds)
  done (took 1.49946224 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.688601697 seconds)
  done (took 1.602914582 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.147059672 seconds)
  done (took 31.063687339 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248845292 seconds)
  done (took 1.174102011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.316456026 seconds)
  done (took 1.233761294 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.58187539 seconds)
  done (took 4.50119534 seconds)
done (took 83.693178996 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104495754 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131356099 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108017332 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128226108 seconds)
  done (took 1.384944287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11254826 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.129069785 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108818321 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.127023592 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.137397276 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103265805 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12820207 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.112038523 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126971422 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131243521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.104165225 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.128858385 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130313644 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102877285 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.125959931 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105776835 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131896115 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.127923085 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105428796 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.129900596 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104709334 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.129423828 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13023076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.106542156 seconds)
  done (took 3.80307993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102425129 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120998258 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098872006 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121279074 seconds)
  done (took 1.369853517 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112639947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144286591 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14359759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.112532891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14444218 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.142811342 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102013056 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.12396022 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10338334 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.135904312 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.152822515 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12560701 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142921005 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.129825611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112820473 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.121187281 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.106645629 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145563818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.137046554 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.113162655 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.128900452 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13705948 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.101941227 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14167238 seconds)
  done (took 3.986409598 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21422904 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.116979216 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152040855 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.181437501 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.161030206 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.102101558 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.154343587 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133523133 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.109587784 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.138736594 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.130301021 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.190284108 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105205194 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130790848 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105504351 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.134280886 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.14199173 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.134900856 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.17691425 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.109227345 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131603554 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.142974895 seconds)
  done (took 4.02438961 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105399604 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121055923 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092170808 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120696538 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103930672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124974081 seconds)
  done (took 1.594953712 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098046128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1157756 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095001329 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116816181 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094855247 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113991757 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08904222 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115288638 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090764122 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114599843 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091561204 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089599413 seconds)
  done (took 2.154673596 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.309345565 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094816783 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124307395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.118889551 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104166294 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121628742 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139300549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094751157 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.263826553 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091287004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141275062 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202178976 seconds)
  done (took 2.739405116 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22609707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10697614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322605672 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.401314325 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167675442 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1795842 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288731895 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177264119 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206070542 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150953901 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239418083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143311741 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165661558 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194631117 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151221823 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.225341997 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190259497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218405267 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161933302 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251649298 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177736944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180985442 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196245833 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163863671 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12107116 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17310763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131427529 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136128924 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187616613 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185835797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191533226 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161166314 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152333666 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220433469 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25105399 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197418391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314739209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140898771 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204997566 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198071929 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288306501 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126404065 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238657632 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169449498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114538089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195392858 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167954964 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.223279367 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.115640365 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150178195 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204260262 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188834508 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.224156725 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147370447 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308112191 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158884009 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159458067 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189383484 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202673482 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207479222 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180252403 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.13027411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198150447 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196008097 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18757193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15750691 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185076993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135644168 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18617522 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212620199 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196073112 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204262975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.202692185 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143763917 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177981617 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184311094 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166983556 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183154283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171748861 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103081352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162403466 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147180332 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135668375 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17434487 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129970929 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224815518 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143613294 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.396889365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222007597 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170614009 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1756483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178496817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208169207 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132253709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.131688981 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160134043 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.175293501 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172000249 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114872959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171501543 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151774562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.138849781 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163888318 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10461175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170930256 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160548751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180189652 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175893016 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.114533317 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178290867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160667961 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171585817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186070289 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201847484 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140510625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140874817 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205740466 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170301563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145327439 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192390175 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208403564 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179375434 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12123867 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208120655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209624533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153986115 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205895265 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153149786 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116841194 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168050576 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169893051 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168801384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164922478 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110403236 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168766237 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238648704 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.109706554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147075254 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187451292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137420473 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110042878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150897987 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146674039 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15161713 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133882467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148666172 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168430392 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17171268 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16550431 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173401256 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152990343 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210158883 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141908651 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.173853056 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132350999 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12912996 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198328473 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200552063 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136357761 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214808823 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184026186 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235940658 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174471833 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138449748 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191663267 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112271751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.130190197 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178652855 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175189419 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17773794 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203268875 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207107374 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183758074 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167192901 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161136932 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183946792 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.189482767 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172924697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155568764 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176099979 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184089109 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129865033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.109122362 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138338423 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154554287 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114925839 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141212533 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19769322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178985158 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226941294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173056795 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151636498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198904765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.110223627 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17913408 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191643624 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150269679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204383956 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196594898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180038856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152739103 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179442786 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130147985 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108062519 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144604821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184624523 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142354161 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144557822 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128927683 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223690974 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191560369 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160691067 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218496007 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181320191 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208918284 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130309343 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.176277527 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186668616 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170437282 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170247072 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13727789 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175403773 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193078994 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156025248 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208561358 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175748963 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183761587 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245667739 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168795368 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111874053 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161943641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179276385 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152556774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179015002 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156419852 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120012646 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166505785 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.148168571 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136125427 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201353271 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154300885 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198037543 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.171956497 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192977281 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133385521 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155980889 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17315911 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130890566 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.129104333 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185873518 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206870413 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158267874 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172877813 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189455584 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139944273 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337426088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20640845 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227414227 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122814381 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154386663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175208664 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174107445 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178973699 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194649465 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155978257 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192157134 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17390061 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155826318 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118086398 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158878842 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162129003 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168732183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146216008 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16806051 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126172782 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229366962 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125331451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17049603 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180522901 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.159353346 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.167667965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128528299 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241253131 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169655464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194651266 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168490176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183337382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217152533 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133292273 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110574932 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138360227 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194804187 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114090272 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171990074 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219401336 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210515082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170847475 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179504659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148319394 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.108778079 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174841911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159739439 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237227375 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127129088 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150332552 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209705493 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162639957 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140405526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176541369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292964925 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156264214 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191891317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104371762 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308570952 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109963594 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140937008 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172915381 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185391418 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117401421 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192712269 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177233985 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155410526 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17574388 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148720227 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204445521 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222389991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183751441 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219551999 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128414553 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17257462 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177209039 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219057912 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127025633 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159397929 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174655203 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199442293 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202297178 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145107985 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17659612 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175657795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173870072 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195840229 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144786907 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216418479 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139045317 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177027606 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123913183 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133453444 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171150769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194476023 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141127958 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190680642 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170679803 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140534499 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111349636 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165035269 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170896905 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156158214 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137931334 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199456984 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108793664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175592926 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184125237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14107863 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166192761 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131130268 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143325748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155239991 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157106238 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145701912 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151804502 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198449915 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143693212 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193147005 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180129949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17907114 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173856187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156128983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679943107 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111739676 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199573377 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16092997 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205153754 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160707088 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182631211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176856088 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162330574 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181254568 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162897593 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236319299 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178593136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17543942 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112631748 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156483867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152542751 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141954678 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136623988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177212563 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151185281 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149359781 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174096384 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154827451 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.130678028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148572855 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201794354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160459066 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201721219 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199282042 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151255032 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181244121 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19361772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138349453 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178491954 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187604646 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151742863 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16631245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.117254548 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.147389954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18340471 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.13388629 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147403743 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174128516 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17555647 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176940989 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147607642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173968717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15434044 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174050392 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109812151 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.168250296 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171666636 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142939928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.11134826 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166869965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174830354 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.171886124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138823928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154919645 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194947111 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.132130099 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144309207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2922362 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171869582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210080591 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168535145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118023307 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154873548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17031643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168705751 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172918659 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13946418 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115287616 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144359724 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193926499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171347887 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168287088 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195789545 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175200996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219986625 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156655778 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255359019 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150127081 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167563497 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142131537 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.11499625 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155495993 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144826296 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157868734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204506236 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182242519 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164684005 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.154947249 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111976696 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132362033 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114737606 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176293654 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167117784 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171562761 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157423988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10237532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155543522 seconds)
  done (took 83.712539092 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150122346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.142562393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153516793 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201273422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171002899 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263780775 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210760322 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234194806 seconds)
  done (took 2.541776627 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107533607 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.141281386 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148935461 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130325622 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131087468 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.411240789 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143733013 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127961896 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.1930369 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141461226 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124495565 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.605137446 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.127174177 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.102780651 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122286157 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126800069 seconds)
  done (took 3.895036067 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.431538942 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.5410875 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.972145661 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.258152086 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.240458948 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189585433 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746966873 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177420754 seconds)
  done (took 12.574104956 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133652743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147856486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.356185648 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.223024552 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.168685639 seconds)
  done (took 2.054446709 seconds)
done (took 126.751657104 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106760948 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134861313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.111341688 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136382245 seconds)
  done (took 1.499654065 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.155613945 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.118007434 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092620521 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116409094 seconds)
  done (took 1.504086577 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.534692622 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088609574 seconds)
  done (took 1.674436021 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138241865 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153291152 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.151951951 seconds)
  done (took 1.473779028 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116500489 seconds)
  done (took 1.136592411 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114673613 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129278301 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.198382873 seconds)
  done (took 1.469166468 seconds)
done (took 9.782628765 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107987059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432226971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.421494007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115350584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732787447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383524182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.078537076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162758511 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.21402641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122938509 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116073232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702782354 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031383917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341525447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.013355851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344898267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704422189 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09546523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13118693 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124172291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029233997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122562662 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098033405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122161203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676847816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.443196807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095280271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387953732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122990178 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103281736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409912604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096094988 seconds)
  done (took 17.10057931 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10469622 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192201406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135163277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097814594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131477136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096650718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134605938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111637446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.232013189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095660102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14527351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094849183 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129060969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095833241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14788048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121459462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096856809 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123680449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103639438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125139206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117168672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124079545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09883308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123725795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096578328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156064654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123764572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110561587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122969172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104005504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126006337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096708958 seconds)
  done (took 4.947843321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146272205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202015629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.136457081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131450945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184032636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124926913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215265149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165512016 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205898697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123699604 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118101921 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122999048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.140095711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12333357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14785148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096260827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124264061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096239507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131941014 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098885488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14469104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123210108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098462447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124269534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095884601 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157525591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098191317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138596754 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123461096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104137046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126594161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096291492 seconds)
  done (took 5.301251896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108572184 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13726603 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121675848 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.150069705 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103331135 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135749029 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.136879628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103680947 seconds)
  done (took 2.033411916 seconds)
done (took 30.405640995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12288874 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141654408 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115765784 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.136515843 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.202347387 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099025489 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.141217975 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098542209 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.136935841 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117964703 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.123284179 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101711838 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143655151 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105712923 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.185007667 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.138741234 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.192914521 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.186122456 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102176642 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13736133 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102240964 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221217172 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108392557 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130060869 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.169017314 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129093574 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.181459222 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106229753 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.133368008 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133502486 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.158431344 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.135850158 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130475825 seconds)
  done (took 5.59403265 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205487907 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.212812735 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.101892256 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129719611 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.204085937 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101832748 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205299702 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.129862314 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.101888458 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.129480366 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101227738 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.205707971 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.219994645 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.227529816 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.242701574 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.215534771 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.204607488 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.21318502 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.200479696 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.218876186 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.201744421 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.129383986 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.216846586 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.217013378 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.101101331 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.131162333 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.24056089 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.212799187 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.238139454 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.200077441 seconds)
  done (took 6.496826276 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109151895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14613686 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123620778 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200430129 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164712911 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.105586442 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143051362 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150507288 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.12294773 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124485271 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112890282 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163685713 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114967739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136158136 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.131184135 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11718443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.150478307 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099167152 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132458402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119030808 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14546926 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144002559 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113376376 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135665035 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.096891509 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134548876 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103398967 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13988505 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.135757317 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.114426456 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132092902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103579479 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.128795202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107283054 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.132856101 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.137162072 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124898175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137767417 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10866308 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.155831629 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.106783884 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.131322182 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151675921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.152015659 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127370339 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.110118037 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138531399 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139066701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098880354 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146560648 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114437973 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126743926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.119234724 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125934449 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098686431 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135568452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100011871 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128101256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.140873011 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.102139574 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152962647 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.105241312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135711614 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.100451476 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132642398 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09770587 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125669792 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102763252 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.151225444 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13490313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13364379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.126829863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.110424618 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135705919 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105113838 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135448969 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098787187 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134830156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134354708 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104801105 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.138421655 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10082457 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131595558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117132303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.145166895 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137309658 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109984271 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138529748 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101839846 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12822546 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111783626 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127491685 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102766115 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139981458 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.127293142 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.101536659 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.138106389 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.108376541 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.125081861 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118696794 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133510723 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098835423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.144587034 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.127439226 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102528825 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.137890305 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.111929497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126109373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107737464 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138863554 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09839662 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.131748779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103066614 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125449771 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.11499857 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.137934562 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131631949 seconds)
  done (took 15.727541943 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.304790896 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312437167 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207084272 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.373169019 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.153114935 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.206886291 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.310722168 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.328524027 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10532704 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173075385 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.188929095 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280631546 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09927346 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.161364106 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313854884 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.380487164 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16110843 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174684874 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172984373 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124090688 seconds)
  done (took 5.587118863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120760238 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17261502 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160059693 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.161156602 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105931963 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14265547 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098278052 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.152990376 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.136343975 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106126763 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.125740774 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.125188905 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.136392515 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.109387525 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.145741299 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174047942 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104267861 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134036293 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.153881102 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.105469196 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138680017 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.158919345 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11022821 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.155874885 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143429856 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.113413514 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12583525 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.107317463 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130377798 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.104085536 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.132738005 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.148629672 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104923873 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.133987586 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.107269557 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.139912474 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.10065633 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.130952516 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100266834 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131976839 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115516126 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136230561 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.10444211 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124594008 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112569004 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.129373314 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110795237 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.137848031 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138862255 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11395592 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.138805793 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.111091082 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.134520186 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.119094065 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130603118 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.144119662 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.112844314 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140421234 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10595703 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126153317 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097508345 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132766999 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.104409824 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.140011127 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138455265 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.122581212 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.142227552 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12769369 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.104661619 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133283807 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102779967 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.145781366 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152272258 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.104224524 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.131234643 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.116115775 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.131406162 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090666332 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.138296291 seconds)
  done (took 11.106161766 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129634763 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.133193408 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.121086079 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.167848452 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.142215142 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105615659 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.134183542 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.120617955 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.143350121 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112183883 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.142449414 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.114670772 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154626522 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143616029 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.104147925 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146300774 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.110118071 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.172033158 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.149070417 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163169331 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.113392367 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133991089 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.112994387 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141643089 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164443412 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.111900647 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162319166 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109855439 seconds)
  done (took 4.827598923 seconds)
done (took 50.375960131 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.207580909 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.351615343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.133933329 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.131384051 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.144227935 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.13948748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.155141221 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.134893699 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.848872837 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.125135301 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.131760927 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.140592627 seconds)
done (took 26.710125209 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.417958291 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.623851597 seconds)
    (2/2) benchmarking "String"...
    done (took 1.42992908 seconds)
  done (took 4.111727124 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.12893081 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.127448982 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.369036688 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.134987871 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.129093882 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.145011391 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.128893549 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.141099475 seconds)
  done (took 15.233843466 seconds)
done (took 24.951094033 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.175422237 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.333180302 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.387538783 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.15097529 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.135778657 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.127732408 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.147398721 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.149031988 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.135585489 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.135893086 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.52645856 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.382561417 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.152220783 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.505017392 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.137058744 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.156518936 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.128620188 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.374610384 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.13444697 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.18879143 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.12014944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.142589966 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.133525033 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.141618388 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.135513636 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.142493552 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.17124163 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.143598693 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.320214102 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.149661702 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.173798806 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.13342291 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.178014222 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.131682494 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.142368706 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.132319698 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.328377438 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.137154124 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.126323196 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.148814273 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.325811036 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.133233407 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.134955555 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.131082552 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.141109589 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.181614502 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.132190657 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.239185588 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.150296465 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.141311783 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.136174863 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.510653445 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.131284083 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.141735124 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.157378688 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.359674482 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.14044604 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187973284 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.157264208 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.140424971 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.150869669 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.129948229 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.168063727 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.140258142 seconds)
  done (took 139.221961151 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.132561917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.136647899 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.136325585 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.159405906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.132814293 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.138931825 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.13272875 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.131650701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.137709652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.165797398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.133571107 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.132331018 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.136893479 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.09894337 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136391817 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.155270593 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.138713868 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.155584342 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137722665 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.133634526 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.132709883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.137728749 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.147967633 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.133855849 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.178688999 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.228158769 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.172664523 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.148850884 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.13816641 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.135681309 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.176881337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.156069104 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.729755063 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.005137347 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.145956534 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.144611603 seconds)
  done (took 77.739322768 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.135179563 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.134655613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.133112226 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.166410738 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.134281168 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.701042271 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.704181859 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.847495724 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.79477972 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.471989072 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386629426 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.13449569 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227424528 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.146840685 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.134300125 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.13598729 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.150153273 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.175505554 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136466428 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.134436811 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.701504083 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.152155429 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.317910835 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313946091 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.15159466 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.16632696 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.535628321 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.134756131 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.167486842 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.4656745 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.182847588 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1347489 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.492472276 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.112154107 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250269879 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.139050116 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.167042821 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.135872536 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.415303666 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.136500292 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.135748778 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.139803541 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.790389803 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.13562915 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.702683823 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.142341814 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.068941272 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.135628443 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.136690421 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136877297 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.164096981 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.767183575 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.15251297 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.13735184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.140215543 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.137023809 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.136523413 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.168788757 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.215083882 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.248725056 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.152382701 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.137696186 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.140614807 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.168567969 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.137934579 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.317234533 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141146202 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.640851342 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.214534254 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371367973 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.706156669 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143024165 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235223305 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257223742 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.138958176 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.136939082 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.138309661 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.137873657 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.249851807 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.141152527 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.554455031 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.314693998 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.156006465 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.486035175 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.239270667 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.138707995 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.492783321 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139011226 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.138858768 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865597112 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235503667 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.138710062 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.139578435 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139097673 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.552594608 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707892401 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.378909237 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.14305426 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.366607729 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.143901453 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.139467514 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.557145487 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.687873371 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.776820241 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.140079067 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253596076 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.314593545 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.156533952 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.13988692 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.487155004 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.143471679 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.199771383 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.139350442 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.538118898 seconds)
  done (took 357.973329434 seconds)
done (took 575.994142516 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.882454742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.824830674 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.963356911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.857947192 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.828961108 seconds)
  done (took 10.425506187 seconds)
done (took 11.494464794 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.329738546 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.333168979 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.205655462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.333670075 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177935287 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.344925173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31205085 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.164956778 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.241611248 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.220781076 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.245482595 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195320406 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.173659726 seconds)
  done (took 17.347797782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412389917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.148840222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224241865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385476054 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184209359 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.406640027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.439161435 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.148728815 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287183267 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160071317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.159985404 seconds)
  done (took 17.028452543 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408336458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.149034455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216724695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399146146 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.188660905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41464994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44878635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.14885404 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.290310803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164554106 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158938481 seconds)
  done (took 17.057707118 seconds)
done (took 52.503865268 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.185880125 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.309822148 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.176008485 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.160650569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.154912406 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.156508278 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.161095749 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.155614345 seconds)
  done (took 10.533048324 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.153845996 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.154742791 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.155354133 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.154488496 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154812351 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.153312395 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.153573355 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.153880377 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.154333275 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.154582061 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.155717309 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.154791104 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.153441562 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.155209293 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.156566169 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.155400749 seconds)
  done (took 19.546371245 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.157621965 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.154594581 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.156440845 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.156589389 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.155301342 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.157427435 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.157210281 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.154280085 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.156878313 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.156611739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.157102554 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.156223591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.155895562 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.155865514 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.156117207 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.156475684 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.155238988 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.156923914 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.160190579 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.157165945 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.156450528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.156877004 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.155986973 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.155843287 seconds)
  done (took 28.828364726 seconds)
done (took 59.980754184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.144380609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.167184508 seconds)
  done (took 5.385426758 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.216509916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219165915 seconds)
  done (took 3.510702265 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.157601423 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.157516403 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.15719967 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.155665049 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.156620796 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.156088734 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.157533595 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.157869289 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.15707183 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.156652129 seconds)
  done (took 12.643576374 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.156922169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.156178976 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.15748915 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.157756184 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158021099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.158575941 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.158116537 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.158055042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.15783733 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.158511526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.15948913 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.158798421 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.157858777 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.157489146 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.158571985 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.158413683 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157887449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.158508372 seconds)
  done (took 21.91870673 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.171964635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.179019041 seconds)
  done (took 3.425594661 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.298767267 seconds)
    (2/7) benchmarking "second"...
    done (took 1.199417718 seconds)
    (3/7) benchmarking "month"...
    done (took 1.274179622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.264331358 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.200348682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.178754562 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.200114115 seconds)
  done (took 9.690972316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.160071454 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.346168629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.452176511 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.708366511 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.161361173 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.184827973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.986141758 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.186654344 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.180762609 seconds)
  done (took 13.442869712 seconds)
done (took 71.091410943 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.149359481 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.186800528 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.185559491 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.179231886 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.508248649 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.166151806 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.156986347 seconds)
done (took 15.609228447 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.141543447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.16195423 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.153579401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.168686748 seconds)
  done (took 9.701450735 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150752047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.441047854 seconds)
  done (took 4.668050119 seconds)
done (took 15.44776481 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.16022345 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16093292 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.160957087 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.160598465 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.159981191 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.160260029 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.160351844 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.161697762 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.159011961 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.159920182 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.160750147 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.160627929 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.160670259 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160888177 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.16230377 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160850543 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160604126 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160746911 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.161079969 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161318044 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16154919 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161358065 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.162279273 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.163222243 seconds)
  done (took 28.940086753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.162198568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.161673021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.162596747 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.161930756 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.161200117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.161160593 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.162836049 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.161283385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.162150864 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.162168605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1615116 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.161812489 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.163175321 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.162906765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163455987 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.162378832 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.161646828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162859428 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162822157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.162687495 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.163984264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162187269 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.16201534 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.161958116 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.164302468 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.162278742 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.163718776 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.163514056 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161208732 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.163111555 seconds)
  done (took 35.95313881 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.168272373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.169051757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.16254504 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.16437079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.163989536 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.164170052 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.163297301 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164487585 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.16402119 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.16503458 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.164671464 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163859711 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.164901944 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.164701643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.164007239 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.165363902 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.165877866 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.165952718 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.164592844 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165176911 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.166363071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.165750914 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.165855094 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.166940025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.167766281 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.165152317 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.165857935 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.165074864 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.164323999 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.164632065 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.165600148 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166390868 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.166855728 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.165596537 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.166410061 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.164981214 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.169892117 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.173582241 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.167239925 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.168641243 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.166362489 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.166400814 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165621579 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.167276358 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165625175 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166153823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.166905499 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.166374033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.167213223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.166019598 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.167319887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.167696879 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.166832579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.16658126 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.167770119 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.166982912 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.16700049 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.166607018 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.166751869 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.167907754 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.167494533 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.166049452 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.168895228 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.167237647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.169389526 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.166427332 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.166218708 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167095438 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.168145031 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168500196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.167835718 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.167167399 seconds)
  done (took 85.061988822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.169217953 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.169332042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.167561854 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168045293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166954528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.169080892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.169621196 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168887906 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169236971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169874999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169501926 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.169605809 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.17002916 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170262804 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16984981 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.168920845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.169296468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169575389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.170010221 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.170787419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168938552 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.170766655 seconds)
  done (took 26.811239452 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170645069 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171671365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.169436197 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171274518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.172733664 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170171267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169400182 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.170413939 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169892781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170446733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169691322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169778758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171662183 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169527154 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170374535 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171618164 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17097761 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.172525829 seconds)
  done (took 22.157675723 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.170516718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.171258904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.170691922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.170355508 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.171145486 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170901308 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169680361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.171660639 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.169982736 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.171336207 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170991822 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171253261 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170875062 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.172242923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171707358 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170608676 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.171088443 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171374704 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172107607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17208055 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.172503871 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.172386253 seconds)
  done (took 26.854551295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172291532 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171174237 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.17198134 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.172489454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.172744581 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.17146098 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172260059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.173110465 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.174304417 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.173053291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173154731 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.171979363 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.173801893 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.172132305 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.171265385 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.1730158 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17166061 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.172920761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172200313 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.172557405 seconds)
  done (took 24.537324929 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173941467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173819018 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174478658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174117827 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174713424 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.174372335 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174877644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.173947721 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175908888 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174820457 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174702763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.174366721 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175056702 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.175164453 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17404179 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174657354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174605216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174861942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176473508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174972911 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.175342635 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.175434351 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175075811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174425922 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.176327755 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175501069 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174661234 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17611211 seconds)
  done (took 33.987255468 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175423305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.174760441 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.174437287 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.174322797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.17591674 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.175649966 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.176946913 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.174989571 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.178129437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.1759969 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.176704754 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.176000895 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176030677 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.176088232 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177383713 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.17719164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.180946612 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.177344059 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178842271 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177601645 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.176722317 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178471936 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.178617161 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17960269 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180249897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.180073369 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17970523 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.17810655 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17861778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179399058 seconds)
  done (took 36.411562572 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.226261509 seconds)
    (2/2) benchmarking "in"...
    done (took 1.220929993 seconds)
  done (took 3.541352398 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.180076219 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.180142928 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.178970981 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.177769714 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177933427 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.177336586 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.177080112 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.177667745 seconds)
  done (took 10.521078766 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.173947177 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.179287519 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.178251484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.176840188 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.178500342 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.173968929 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183066844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.185083638 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.175077921 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175917691 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.178958366 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.179517974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.177191889 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177172551 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.175228919 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.179519659 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.181996242 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.179049264 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.179951035 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.179504522 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.178768387 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177672744 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.179926299 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.183344297 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.177046231 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.184873945 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.184444819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.183915811 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174616815 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.180457248 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.178678085 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.181247896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.17997282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.179703442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.179904355 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.179371954 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186253584 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201099252 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.184828807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185475768 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182068685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.180846678 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.176361706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.179985656 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181087094 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.185852645 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.181207494 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.181309667 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.177691059 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.180339183 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.186333973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176838355 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.182974941 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181972159 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.181584214 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186422456 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.206559353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.180288272 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.18456621 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.188513895 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.195910642 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.191111265 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18214118 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.186650375 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18750747 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.196033686 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.187437307 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.189266724 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.183654168 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.182550811 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.185805098 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195753598 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.194601819 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.184033676 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183494035 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.1832681 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179635513 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18434461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186975264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.192480268 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.190909537 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187376936 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192618565 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198688614 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.181362761 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.184677375 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.182610081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.183620429 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.181201136 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191073265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.207713135 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.183760771 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.180027045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.179325531 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.182453314 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.184825266 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.180435331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181415911 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.184658389 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.183995845 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183169455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181727011 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.186865852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186531623 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.184457375 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.188963938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.189179059 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180212936 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.18947836 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.190646473 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183765785 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.18203477 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.185798182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.185313104 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182104071 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.187308464 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.186189756 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.182051144 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.18765923 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.186809263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190126922 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.202814021 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.188727492 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.186869445 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.185676138 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.193411104 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185811415 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.185160539 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.188836399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.186558313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.185339671 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183922391 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.189534178 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.182089909 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.188244887 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183672133 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.186966067 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.186204397 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.186486735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183281132 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.186384892 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.183593977 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.18505119 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.18860021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.189315994 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.18514809 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.193166226 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.186880688 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.185624804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.187782598 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.189558571 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187565582 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.183659861 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.188442108 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.183448558 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.188787427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.182880645 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.189817765 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188465377 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.18874364 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187869299 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.184024647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187341879 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.189652073 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.187162778 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.186834961 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.190183269 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.187401546 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.189258929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.182545871 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.190041024 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.182659256 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.187750126 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.194206709 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.188245706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.188531325 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.188878288 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189752571 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188788619 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189067156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.188593931 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.19160219 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.190093059 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.193054838 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.19436373 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189171033 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.188408095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186675249 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.186563472 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.189183732 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.18882898 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.196575311 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199969416 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201277619 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.188670853 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.193958889 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.186822935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.193387838 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189911089 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.193190072 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.189845082 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191311008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185433773 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191674026 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.186520091 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.192352037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.186151393 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.192237545 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.19306798 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.191230096 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191133663 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.187632172 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189534983 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.193041117 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192440236 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192176502 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.187429696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.192465866 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.186807177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.1880662 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.193904656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.19153689 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.19514305 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.197034623 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19009965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193469334 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.191066705 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.188365463 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.19395351 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191464664 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.192722321 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.20007254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.194319968 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.191103851 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.199346383 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.213814285 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.188563834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.192582242 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.196586874 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.191413337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.190589298 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.198543395 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.193408098 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.192788718 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.192519373 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189413822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.195464438 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.196843525 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.197832237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.189227954 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.194374529 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.191931802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.194656844 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.191860522 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.192638355 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.191248746 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.193990598 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196766279 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.194794335 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191014123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.195777018 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.192722908 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.194768022 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.192232895 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.199552677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.196087471 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.194229178 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.193258303 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.192280076 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.197070897 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190915677 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.195427162 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.191383925 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205259827 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.209725643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199733689 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.197608074 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.197597134 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198877378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.196820775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.193618497 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191801733 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.192708428 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.194000228 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.192138248 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.196982297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192210975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.196874634 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194927695 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.196479783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.200428563 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.197269171 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.191667855 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.197922329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.197092439 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.19790286 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.191970008 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.197498261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.196341307 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196278719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.196263371 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.194922301 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202639448 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198343852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.19524241 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.194767313 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.194247356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.193365772 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.194700218 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.198803965 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.196961962 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.203520134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.195625049 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.200804674 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.196341254 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203279862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.201079786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195830565 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.204261618 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.198712944 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.193031551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.194697656 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.199416745 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202758754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204914692 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.195547507 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.201259463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198236721 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.198946342 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.198068386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.198920251 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.199499134 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.198704925 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.204311188 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.221193877 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.197696571 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198991769 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.202530976 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.199087433 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.199978367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.194072123 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.1999571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.202279412 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194492855 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.198719538 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.196285342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.201140751 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.204460718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200325319 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.199903594 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.199372075 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203535227 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.203346935 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202299137 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.200605207 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.204155006 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204811287 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.204541906 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.206255244 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.19714466 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.203139523 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.200806914 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.196734411 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.196632404 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.197790249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.200858137 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.19797625 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.205642693 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.200120078 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.198878447 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.19966152 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.203692868 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.19700225 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206221715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218098008 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.19914529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203617122 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.20230857 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.198257123 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.204473423 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.201715678 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.196175064 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.200593159 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205030824 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207428807 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.199352781 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.202074261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197399497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20390048 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.201954847 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.202288442 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.202850988 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.201842483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.199068005 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.202662322 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202124587 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.207265634 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.19958958 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201972131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.201759828 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.209123689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.207920793 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.20054031 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203975348 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.204893973 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.199658133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.200047485 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.2046884 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200200705 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204102817 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.200320829 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204355385 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.202643219 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.203083002 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.202828543 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.205384073 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.200428358 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.200964345 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.205707927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.205336462 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.204401294 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.201829337 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.206829946 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.199800111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.200747707 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.205475415 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.200790316 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207237863 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202165615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.20565283 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202325971 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.206184546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.205101344 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.205537239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.199943854 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.202113455 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.210746452 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.208468718 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.208873377 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207234475 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.208806268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20123679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204534879 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.207616261 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.20147779 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.202839899 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.206830692 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.203278075 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.203730382 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.204773544 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.206990268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.209591597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.206556424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.202992551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212601824 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.22897832 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.208822912 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.203121333 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.205627801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.204082331 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.207627333 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.207236387 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.202442592 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211524811 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.209175772 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209024783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.205006453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.20569599 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.204358553 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209428873 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207825008 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.204404474 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.210625131 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.205374233 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209437154 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207482337 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.207682311 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.203552643 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.204602443 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.207248317 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.208297309 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.208167082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206526084 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.207812525 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.206920373 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20939456 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.209173184 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.208647915 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.209002211 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.203878358 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209135572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.203527449 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.210942072 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.207946978 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.206586515 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.212281002 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.208432695 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206752258 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.211554586 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.214647399 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.209467815 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.205220893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.206746174 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.210207785 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.211606509 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.208924965 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205852647 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.208028804 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.210897037 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208751576 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.208899333 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.207309582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.220446595 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.23658205 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206299588 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.206418515 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.210551137 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.213683205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.21143515 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.21042522 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.209111442 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.209467713 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.215484486 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.2101636 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21351157 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231691321 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.209287753 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.21361806 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.209433051 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.211982785 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.210619798 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215033489 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.210751236 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.210700089 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.220965071 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.215282632 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216323282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232507375 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.214824405 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.211313567 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.213889887 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206990247 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.213188833 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.210467317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.213780622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.213135589 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.213304104 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.212926858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.208608612 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214177552 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.213090527 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.217502225 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.213473118 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.208478507 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.209904606 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.212866196 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.212266517 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.213875276 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.212277993 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.212891886 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.214088105 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.209479142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.224747303 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227525737 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.215082301 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.213026495 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.213117681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.2147215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.213835565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217551411 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.219891476 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.214090193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.213475007 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.211322697 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217938213 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.216302543 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.211297169 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.211168594 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210575807 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.216069117 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.223770053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229136117 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.215618245 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.215484996 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215280875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.21477746 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212737484 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.216478112 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214359429 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.212054372 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.213296543 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.218168464 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.216094452 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.21474345 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.213235823 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.220667762 seconds)
  done (took 714.842444907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214757168 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216183984 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21541449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215105057 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216553225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215322759 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215972349 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215246966 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217017697 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.216609306 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215252187 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216886028 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.216056618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21715868 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217108391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.218040319 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216449488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217682937 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217072191 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217083681 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.216940821 seconds)
  done (took 26.671112403 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.217783923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.217130984 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216073625 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216729575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218087041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217620681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218947692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217054032 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217630503 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216449872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217531501 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217658914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.218299071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.218270723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218616012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217346076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219125825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218481358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.218842657 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218867177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217622766 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218350356 seconds)
  done (took 27.920220756 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.218268809 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.218268525 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.213562289 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.220165958 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.223341391 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.22401588 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.226773168 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.223903907 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.224302751 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.215254264 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.215735073 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.216462166 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.219214643 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.224466525 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.218385103 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.221972029 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.219228366 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.219485807 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219929763 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.219646989 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.223047872 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.22483145 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.219180293 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.215188124 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.220787431 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219759201 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.21949025 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.220338532 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.217246135 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.222125395 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.219231848 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.215762198 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.221333619 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.2182297 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.217970377 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.222296316 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.220357139 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.220558405 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.220712615 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.226424839 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.236673833 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.219989026 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.224660796 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.226718138 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.222061329 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.220022286 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.226814131 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.221422346 seconds)
  done (took 59.735151015 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.221048967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.222417451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.221672443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222045167 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220806916 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.222173093 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.223313828 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221651432 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.221672776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.222137428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.223585955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.222455188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.22359954 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.223560335 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.221902202 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.222357605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222209626 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.222853453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.222509279 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222171516 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.222291631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.222829607 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222789209 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.22301435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.223502504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.22214881 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.221879509 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.223241592 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.224515616 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.223279686 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.222419312 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.223102543 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.223908608 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.224195023 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.223530355 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.224162999 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.223864942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.224954635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222810007 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.224476049 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.224924189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223156937 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.22623071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.224305407 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224401992 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.224067251 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.225255607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.22549911 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.225039761 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.225778993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.223933649 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.224711532 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224528456 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.224732303 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.225227794 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.224460642 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.225560166 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.225730873 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.224747611 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.22530771 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.225962513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224817977 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.226062154 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.226252625 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.225625641 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.22645397 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.225729752 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224868829 seconds)
  done (took 84.350300256 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226264089 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.225827481 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225809648 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225752205 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226671615 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.225783455 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226938742 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.224901935 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2249568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224837603 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22579548 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.225512228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.225448805 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.227206531 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.227075413 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225561922 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.22531809 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225061067 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227325859 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226159785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.226598146 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.226278527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227028702 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.226286553 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227269904 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225903131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225879821 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.227782898 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227393822 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227193121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227660678 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.227151456 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.226607905 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226264132 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227253761 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.228295021 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225809793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227320263 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.227660469 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227797209 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226921543 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226970168 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226996513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.228468521 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227791894 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227891695 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226354247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.229053529 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.227298135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228233412 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.228753784 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228272991 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228595772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228481728 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228922596 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.230279669 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229962128 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228573878 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229720097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.229279249 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229468359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.229132609 seconds)
  done (took 77.220742798 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229943389 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230526196 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.229404005 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.229250961 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229175226 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229473272 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229371298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.229556756 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229394668 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.231538528 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229651509 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230628614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230538399 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231394142 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230876315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231181769 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22986694 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231142594 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229923536 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230601211 seconds)
  done (took 25.74130927 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.230091298 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.230741261 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.230942427 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230379595 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.231001778 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.231583025 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.23117747 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23066931 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230333995 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231141231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233269761 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232522776 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231573106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231065075 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.230828699 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.230364074 seconds)
  done (took 20.835846037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.23228674 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.231116153 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.23051712 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.230747077 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.231443749 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.230988602 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.229696501 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.231122021 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.231746432 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.23193167 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.232522365 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.231921222 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.232042175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.231673074 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.2321262 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.231442022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.23227739 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.233265839 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.232883275 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.231674749 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.233006609 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.23144564 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.232698439 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.233583313 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.233181901 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.23296191 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.233440335 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.232341514 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.232695699 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.233287136 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.234319527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.233147705 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.233512978 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.233311711 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.233576449 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.233245515 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.234616996 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.233443028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.233682832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.233446106 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.234296421 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.233562176 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.234075743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.233152899 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.234645174 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.234414765 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.234082552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.234325809 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.234024187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.234941024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.23437071 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.234871995 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.234199503 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.235953265 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.234624523 seconds)
  done (took 68.955046397 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234720422 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234906101 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235315727 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23463738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.23429378 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.235551471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234695429 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.237794976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234677142 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235326192 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236331967 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.235947527 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235622039 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236013395 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237207097 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237340005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235746193 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.237051815 seconds)
  done (took 23.38679717 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235046857 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236246961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.236061366 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.236757437 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.238420475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238314993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236775699 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.235240003 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237133394 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23581745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23580505 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.236915843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237016731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.236979773 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237011458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236501612 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.236251756 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238155615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237177447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237110799 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236892156 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236590222 seconds)
  done (took 28.352198545 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.231086373 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.232253439 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.232254842 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.247245665 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.247439894 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.232157222 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.231461163 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.231421335 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.253635269 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.280320515 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.276154263 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.248154738 seconds)
  done (took 16.088634383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237090295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23908816 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238735456 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236704781 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238329231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237986353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238546625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23799493 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238857572 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238323608 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238812173 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238067468 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238806534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238790418 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239029954 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23834834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239242954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238899774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239150816 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240272162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239659946 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239050608 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239786277 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240198752 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239832735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240628446 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239988227 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240032918 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239290565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239416516 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239189102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2409576 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242761484 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242269859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242029815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244530025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241709478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240192119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241417881 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241032901 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239801511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24031707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239559334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240314436 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241819084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240861514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241168845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240495308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241472178 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242183246 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242299678 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241889445 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242620786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242153218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240850602 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242440428 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241359449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242446484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241576715 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242775803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241219409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240969883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241344736 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241936656 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241136437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242164544 seconds)
  done (took 83.009256706 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242089353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24143035 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241923028 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24377981 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242676555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241205227 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242551281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241023074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243044445 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242712114 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244001445 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242699239 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242687803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241911625 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243541569 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242890365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243225609 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243086692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242380813 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24395543 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244787747 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242480239 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242808531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24274878 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243793034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243645653 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.242995041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242270962 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244181003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242912183 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24315464 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243613447 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244588765 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.24321858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243398525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243611258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244329781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243109284 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243453632 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244432113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243812497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243876128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244769018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243897273 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244592888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244417586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244025048 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244863911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243599188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243689755 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245240904 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24514211 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244853112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244273102 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244765439 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2447514 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244413317 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245183118 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245603101 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245100145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2463857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243672885 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243941303 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243578503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244271154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244013794 seconds)
  done (took 83.23097163 seconds)
done (took 1676.196160623 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.40707532 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.361964388 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.238878757 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.252876233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.238487797 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.262733566 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.252586287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.24055774 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.238410585 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.238135516 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.239949044 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.462775802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.234592541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.239512088 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.2403305 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.338757259 seconds)
  done (took 25.63766901 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.268473973 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.247127517 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.366066609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.266051378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.268952926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.440332636 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.303196324 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244783767 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.424024635 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.268360819 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.243322529 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.268724322 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.243721032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.236158538 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.26616696 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.44091911 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.501801202 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.23941407 seconds)
  done (took 27.68919818 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.709787961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.270324172 seconds)
  done (took 5.131679356 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.262149826 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244356354 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244921793 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.241607666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.240828831 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.235063277 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241830387 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.236667995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.234538146 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.374797558 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.248904683 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.256204143 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.25993145 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.2439538 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.246803283 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.28507487 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.405079412 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.24718568 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.245827273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.247698747 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.241585704 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.340250613 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.285944069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.247673057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.370780219 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.24670247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.243836555 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.249844078 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.367706501 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.248604593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.241521881 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.242052707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.243723016 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.236719194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.698308361 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.256954799 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.251621105 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.268516382 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.247117896 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.396229183 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.244445092 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.249508763 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.236702552 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.684366331 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.372896141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.361550518 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.260751676 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.248976309 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.244879131 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.310029702 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.244112206 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.246962362 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.302605448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.09545425 seconds)
  done (took 80.427646183 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.243314683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.238226507 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.416445592 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.257258769 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.239453615 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237538942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.239055629 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.534935093 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.279903685 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238897236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.550738245 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823034492 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.26207201 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.239423795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.109975434 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.33893751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239927127 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.238098164 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.23954923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.244389266 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801920272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244787254 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.242577369 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.366110989 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.27756155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759988346 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.253284026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.245357605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.242458875 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.240349331 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773486496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.266245455 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.307024551 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.24237008 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.521082104 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.628136168 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589252057 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.249756671 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.286884825 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.245397086 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.246770632 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748644996 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.605042526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.241269632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.257257954 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755255231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.241172733 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.253584201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.249830635 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489519376 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240837273 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.241998021 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.241203752 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.262676871 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.241488574 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.32784787 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330430523 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766101839 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.242447553 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.255430355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.257806187 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.242703891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250747661 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.246491847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262602664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608792699 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.402011916 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.24575551 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607292734 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.769923272 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.257699104 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853231179 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.259164998 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.257559094 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.278010313 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241778119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.246467233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772162521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243417971 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.241783816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.590699266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.244125253 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.550091561 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263316592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242762437 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835103994 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.258118393 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.255108711 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.242738243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24246907 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.247599345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245410279 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.540879625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.266200569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.242376749 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.242999954 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.26074843 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242163656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.264403179 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.24589436 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834488671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.264760049 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.240936061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244317186 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.242360076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.246384378 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.241610007 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.243085337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509786097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.241641471 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.260908637 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.241301421 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.242763627 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.24799365 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372745094 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.248539156 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.552861054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.242805133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241943255 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.247711127 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242214109 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.244473653 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241307083 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.2504728 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128778637 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54285939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258568916 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.259232549 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242364594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242691302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267355744 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247056346 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.286614026 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243669272 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041054802 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286977123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.255066687 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.243093298 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.2554998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.249519169 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250037482 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244747622 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.544259145 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526816366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.40610211 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.245224459 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.243353457 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026180224 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.292799453 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422580716 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.26140865 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24340457 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494108515 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.453868303 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24446849 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.247073939 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.246628044 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502778874 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.254713592 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55675421 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80663455 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.267751203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.256776677 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.058355671 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043594267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.25022655 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.247659953 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.540146282 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.264487398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.244103898 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.244702763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.245316709 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.261576107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.262920606 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250434078 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.246468655 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.244880353 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.288391283 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.435912468 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261353822 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.255165654 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755384057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315956317 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.252690651 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.252346894 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.250610268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.245698879 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.344401293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.245923804 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.279544049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.246762018 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.251111512 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808948611 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.246052902 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.246642066 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436745336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956240956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.263006027 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.247520555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.247741281 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.153688775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783308249 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.304099285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.560663669 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.253561138 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285697791 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.245870904 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.28436532 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789180654 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250934055 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248398903 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919824797 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.269635712 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.842105396 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.247412755 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.248457885 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856630302 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.270431282 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.249409025 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.257838643 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.25126251 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569050989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.247269625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.30034478 seconds)
  done (took 478.976995334 seconds)
done (took 619.014133125 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.247328969 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.251134023 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.24394677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255670049 seconds)
  done (took 10.159494868 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262713097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.254854421 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.260029093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.255570153 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.263197908 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.256585819 seconds)
  done (took 8.716896097 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.250414092 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.255397424 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255602353 seconds)
  done (took 7.925353042 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469789382 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269374206 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61062699 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.275132413 seconds)
  done (took 8.790045196 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.26208646 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262045522 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.2615219 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262355666 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.263974797 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265343762 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.263273442 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.263141594 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.264413451 seconds)
  done (took 12.530937479 seconds)
done (took 49.28605283 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.384728729 seconds)
    (2/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.310277317 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.313066391 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.391732259 seconds)
    (5/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.408298164 seconds)
    (6/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.248005028 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289289986 seconds)
    (8/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.301111296 seconds)
    (9/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.287970256 seconds)
    (10/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.423668021 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.355504159 seconds)
    (12/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.292263038 seconds)
    (13/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.245230238 seconds)
    (14/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353606465 seconds)
    (15/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248306648 seconds)
    (16/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.399501986 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.351799979 seconds)
    (18/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.287329578 seconds)
    (19/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.049318765 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.312936963 seconds)
    (21/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.092111246 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.18704127 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.369199316 seconds)
    (24/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.242940802 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.401722454 seconds)
    (26/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.418589873 seconds)
    (27/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.343551032 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.252870467 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.527859866 seconds)
    (30/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.244936808 seconds)
    (31/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.311575612 seconds)
    (32/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.337761094 seconds)
    (33/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.322836794 seconds)
    (34/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.003404598 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.510744018 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.355387489 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.34750514 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.086215872 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.284108712 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.313014855 seconds)
    (41/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.945386358 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.262818461 seconds)
    (43/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.276082681 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.288996864 seconds)
    (45/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.400145648 seconds)
    (46/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.141862109 seconds)
    (47/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.475943683 seconds)
    (48/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.02571166 seconds)
    (49/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.386602433 seconds)
    (50/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.29578115 seconds)
    (51/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.327760654 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.281664357 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.978461636 seconds)
    (54/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.295876123 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.253922143 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.25576327 seconds)
    (57/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.316740271 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.907688223 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.369956889 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.275472322 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.923292231 seconds)
    (62/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.908232215 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.947813151 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.400194848 seconds)
    (65/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.014814938 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.354712801 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.251990745 seconds)
    (68/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.253599954 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.472683886 seconds)
    (70/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.247829624 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.366688135 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.350661164 seconds)
    (73/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.294076683 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.331916994 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350291599 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.365584794 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.35901103 seconds)
    (78/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.419639695 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.329346955 seconds)
    (80/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.246821763 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.35489057 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.404291606 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.418454687 seconds)
    (84/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24764671 seconds)
    (85/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.18657476 seconds)
    (86/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.330352379 seconds)
    (87/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.266533279 seconds)
    (88/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.359111805 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.24884855 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.389049923 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289330188 seconds)
    (92/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.248146047 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.310036336 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.389950809 seconds)
    (95/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.426356226 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.39590222 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.263953268 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.269643103 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.974619695 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.251332295 seconds)
    (101/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311826671 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.260044426 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.291690027 seconds)
    (104/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.958806208 seconds)
    (105/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.407654317 seconds)
    (106/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.05495473 seconds)
    (107/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.312481993 seconds)
    (108/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.250827042 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.286663463 seconds)
    (110/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.395236817 seconds)
    (111/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.305845606 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.349843337 seconds)
    (113/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.298430164 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.347907546 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.411925961 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.00623566 seconds)
    (117/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.394638695 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.344786665 seconds)
    (119/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.301952722 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.249194855 seconds)
    (121/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.267196364 seconds)
    (122/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.250790094 seconds)
    (123/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.286875202 seconds)
    (124/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.401812486 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.339849007 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.291110828 seconds)
    (127/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.437990702 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.268277996 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.417639624 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.466622859 seconds)
    (131/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.277363813 seconds)
    (132/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.255673551 seconds)
    (133/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.37552943 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254392072 seconds)
    (135/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.252396669 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.302668729 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.260984875 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.434639953 seconds)
    (139/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.421404827 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.251078826 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.322642578 seconds)
    (142/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.251850619 seconds)
    (143/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.350258583 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.036972131 seconds)
    (145/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.368251896 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.388811463 seconds)
    (147/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.441537656 seconds)
    (148/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.972173427 seconds)
    (149/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.303491585 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.319203029 seconds)
    (151/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.497688753 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.055856653 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.268501145 seconds)
    (154/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.34530393 seconds)
    (155/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.323683583 seconds)
    (156/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.421934563 seconds)
    (157/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.438762695 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.364598488 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.47781261 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.314705802 seconds)
    (161/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.269624892 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.299113303 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.420868668 seconds)
    (164/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.398017133 seconds)
    (165/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.42731336 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.474127139 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.367484859 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.0663551 seconds)
    (169/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.383747143 seconds)
    (170/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.254358431 seconds)
    (171/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.422131906 seconds)
    (172/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.317083042 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.27352768 seconds)
    (174/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.30122587 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.915641465 seconds)
    (176/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.30570243 seconds)
    (177/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.254907621 seconds)
    (178/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264377461 seconds)
    (179/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.258744986 seconds)
    (180/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.233145182 seconds)
    (181/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.33875559 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.496355141 seconds)
    (183/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.300064324 seconds)
    (184/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.29935043 seconds)
    (185/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.254829662 seconds)
    (186/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.456955026 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.259282469 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.037070215 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.287702348 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.367337106 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.442639608 seconds)
    (192/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.255419578 seconds)
  done (took 323.388903934 seconds)
done (took 324.556120793 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289246269 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.331943422 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.273705807 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.271931062 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274766812 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27539697 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.2990889 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274348621 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.291656768 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.293900083 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.275351168 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.288834206 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286638997 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.288911671 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.306992247 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.276035822 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.274599466 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.289775298 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.295343905 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.29621619 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276197376 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275529799 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.303823916 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.273957674 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282223815 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.2818952 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.281114704 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.269085461 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.286711522 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.295768729 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.27831952 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.28089343 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.297359825 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.291545758 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276745303 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.290709247 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276405223 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.332717889 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.300754352 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.292809412 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.289580209 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.297165671 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.281417922 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.281109964 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.292564837 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303852215 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285175494 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.290215726 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.280297956 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.268060025 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293501613 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.293573943 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.29013067 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.268504588 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.270921715 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.291588016 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.293387976 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293144198 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.289332113 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278325667 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.310665263 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292310802 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.293862876 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284894525 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.289979188 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289497711 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.292270928 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299361418 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.290924852 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278397255 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27970652 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.290591054 seconds)
done (took 101.905583678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.406664888 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.276776685 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.421218099 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.279714564 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444288005 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.425561045 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.279078817 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.280666619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.27925012 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.130879321 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.279965169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.281004215 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.269555974 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279927467 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.40898126 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.280516123 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.280161179 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.05921742 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281173512 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.417791634 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.27643427 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.281378388 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281909408 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.167928906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.278558584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.275347407 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424502959 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.282715656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.035712734 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.272885435 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.270508049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.067106143 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.426117561 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.311564944 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.282863133 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.292016548 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.446986062 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.308723417 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.403713847 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.408369006 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422629539 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.312096436 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.271657162 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.271492523 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.284300139 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.281402483 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.282947489 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.312947448 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.279676848 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.283003409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.024263093 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293000852 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.282688115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.283865379 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.282849032 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.311605916 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.283098263 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.28354794 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442826662 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.284411435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408620294 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144343259 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.161479943 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.283762087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.271916183 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.284261732 seconds)
  done (took 105.370307964 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.346954591 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.359731794 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.394135493 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.282204226 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.332661483 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.3966026 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.283330378 seconds)
  done (took 10.579509818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.286302108 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.284695755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330182939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329423744 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.284599256 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.436418065 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285498014 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292106366 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.284653415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.332555975 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.285710378 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.285022725 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.294094705 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.278606737 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328643556 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.291870725 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395083784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282096754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.285732943 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43131104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285069088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.294323698 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.334983911 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.292642856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.286397902 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.288978731 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.058280723 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287583179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286517272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.286428324 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287402185 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.335849167 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.286090698 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.282540311 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286020931 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.397413664 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.287582726 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287023962 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.287363582 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.285325981 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.287970158 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287318114 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.286863457 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.287154134 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.287611462 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305817789 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.287172662 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.288037683 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.287882828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.288104659 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.33284297 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288839164 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.28814223 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.288450895 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339229891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296382439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.288551992 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.288259712 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.288876348 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288065034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.435484608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331010382 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.28841135 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331388275 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287390589 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.287857672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.288699563 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.288907214 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376478731 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.288695096 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333061932 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.288722376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.466014106 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.308621551 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.291038346 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.288057887 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.288789438 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289158234 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.281704655 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.29098278 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.289012669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.286636431 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.292013911 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290160657 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290003015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442180255 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394796619 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.291755375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.298212789 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.29248472 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.289957147 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.338094732 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29055192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.291231596 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337402818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400240996 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.340054978 seconds)
  done (took 132.885239614 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.301402135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.299468336 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.288823154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.314095198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.287607666 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286450192 seconds)
  done (took 8.967219918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.288717909 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.294348273 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.292244637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.29090253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.291942194 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292974253 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.292494114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288161319 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.295237662 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.2927948 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.292339836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.294636141 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.294299659 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.292190384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.292671863 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.292144587 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.291481495 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.291851464 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.292736235 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292933875 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.288657066 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.293104265 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292645422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.28988738 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.296543491 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.291737092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310416589 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.292653169 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.293332713 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.296897632 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.312694478 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.295097669 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.290854634 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.292828503 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296345486 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289652898 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297071325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.295509798 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.293495997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.293756614 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.295279403 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294076404 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.293609736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.296703122 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.291476072 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294544598 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.299177661 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310849602 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.295107854 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.296192745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29728137 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.29382259 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.29369422 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.295153156 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.291504242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.310404029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.29838867 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294064682 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.29474621 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.289905634 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.297343984 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.294259063 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291119054 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.296546017 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293252293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.296009456 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.291565715 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.297652739 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294622771 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.294444859 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.297671258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.294806955 seconds)
  done (took 95.410156954 seconds)
done (took 354.394201595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.990777195 seconds)
  done (took 12.184865946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.396128885 seconds)
  done (took 3.592293522 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.806668447 seconds)
  done (took 23.003750612 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.315833085 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.307466356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.309514022 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.294248748 seconds)
  done (took 10.420638239 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.59049269 seconds)
  done (took 3.783098941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.290625672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.287448641 seconds)
  done (took 5.772687691 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.504445738 seconds)
  done (took 3.696914639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.483746779 seconds)
  done (took 3.677243833 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.305447157 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.299785519 seconds)
  done (took 5.804664689 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.286582317 seconds)
  done (took 3.478905968 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 30.900419019 seconds)
  done (took 32.094175643 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.299144902 seconds)
  done (took 3.494149699 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.332505587 seconds)
  done (took 3.524999478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.951405146 seconds)
  done (took 6.142970739 seconds)
done (took 121.865409843 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.283026528 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.288959812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.288862479 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.290477385 seconds)
  done (took 10.344174377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371490289 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370592315 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.377442951 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.368185427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.358786778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.381760006 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.320925665 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.321448633 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.364497118 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.363468988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.377804507 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.34470626 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.372903785 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.320391359 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.346961988 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.378160591 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.369627256 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.378684037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.320667776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.358897701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.294885046 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.366275793 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.35911223 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.294888855 seconds)
  done (took 33.678025315 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.783711262 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.359230019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.443962731 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.335677416 seconds)
  done (took 7.115461789 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400034145 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.399775854 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411277251 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.454417929 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.581305673 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.411759776 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.318846598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316773324 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.304015869 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.398556577 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.427187575 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.374663184 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.587973422 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.295337128 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.632059872 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.296141865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.295741685 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.385863445 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.448408457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.47523443 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.296474309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.400102611 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.390630989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.375152818 seconds)
  done (took 34.872991282 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.30642252 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.31226599 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.297349534 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.313671279 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.298072732 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.298207883 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.29820295 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.304030716 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.298934904 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.297775324 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.298680944 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.312645245 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.301284308 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.297929041 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.306238759 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.300757239 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.299757192 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.305447655 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.307516701 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.299174878 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.303654418 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.305281293 seconds)
  done (took 29.859692621 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.28668689 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.286700449 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635838417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.541323943 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.287653921 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.291819786 seconds)
  done (took 13.525303527 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.365843925 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517280012 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.291902399 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.648875667 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.74094083 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.292951784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292620801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.542825656 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.859187046 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843082679 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.355211507 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.366210643 seconds)
  done (took 19.313616805 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.291329453 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.290479251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.29626252 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.311722812 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.351275323 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.300508277 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.306286804 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.284947334 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.350711031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.355843099 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.301219425 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346534979 seconds)
  done (took 20.983627493 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386330345 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289743239 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290117674 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310402541 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297318954 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134825267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317866652 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033311527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.320344771 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568131284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29122756 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387499212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544851755 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292962919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315215159 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.255303963 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525592277 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809055813 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299588669 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291247922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344454617 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293950521 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301303629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.512778845 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141735737 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291118458 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.686869158 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292087523 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573892185 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311455985 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301791163 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.292284304 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569477809 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964621527 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425595978 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504970968 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311357748 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295415045 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.285558022 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.294635342 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327885272 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299854923 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303981679 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293982468 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293845231 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302537143 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040161688 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.325913787 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.295606478 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293906801 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549894836 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399196302 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.29944866 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29377475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357655011 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300167843 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.30011227 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422398734 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889815165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295837726 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302916504 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.301838158 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293342581 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300113478 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968510045 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.303298945 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.301439032 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30050715 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296599553 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301586999 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319488056 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296743129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.321135551 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29699154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081883972 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305220122 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304334957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871300893 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299990057 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.301798451 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527276921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297039816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296165046 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.29633044 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296642657 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997580186 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310217188 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.283048735 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367137468 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0555131 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.536333359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32316202 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327810684 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518807243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.284017176 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296969016 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.310889646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306255453 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31920903 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038993484 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323159293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.303293526 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55310891 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.508814889 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309464991 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.27359894 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794672556 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331219047 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.321158021 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31150526 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.517163837 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.901103877 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319156421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312522167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337560817 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298591875 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038667803 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314096672 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.309937012 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301702605 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58471006 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.086491904 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30487182 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363817515 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299670676 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.301031212 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302480261 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306157781 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29897494 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.502144769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326620748 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.312777563 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.299760494 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298992022 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308579031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309162784 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.306654552 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522242026 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299515299 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584186195 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301012807 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300480615 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299907686 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.521726335 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.313805979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.308297163 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562166256 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312111834 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319909314 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316552927 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333998401 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411480511 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331616862 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.302254466 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561277721 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.307353948 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.311004049 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308813673 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30926818 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309602532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.311716869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303890886 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913640384 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315321361 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306404731 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304327516 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.319738328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366960903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311832612 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517625713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.310112955 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327089036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.312522773 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.313895939 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526032305 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311928923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.302895426 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383902799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.789996 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937572964 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323158007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.303457421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.3028549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.303077583 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303802372 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304022177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303335733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515994215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322794066 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304396457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915484512 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31097409 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318600999 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.316019569 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314295575 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.311207518 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303814803 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.304637148 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336269266 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311546612 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.320956948 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441289266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.320519265 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304622092 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.822900962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311264177 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305233334 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304136885 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335825306 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304128032 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213739446 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571400733 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301468278 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579545866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32214689 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.328321049 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.304912856 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307130263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311475783 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.330460763 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333123967 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.315698782 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32019271 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312111306 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873288285 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107700133 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869383259 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323097535 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.315903381 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310731505 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050324193 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330492807 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305527224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54132757 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054955642 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330653998 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801833137 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.343319046 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076418183 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562911466 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543731309 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310595109 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.312245627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571092371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522882344 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34078233 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306698469 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313453143 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.294374909 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887239507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330150371 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395018326 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058625809 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331875376 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314710838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.343944831 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312807267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722731295 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331466474 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30817178 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309454067 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323247189 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205210981 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317009799 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308079522 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98316536 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315601238 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.805047396 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334059497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.524619292 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325307492 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.311124612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.317269088 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.31885528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567649718 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568419311 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314802006 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309498539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892948887 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.177515818 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.317820465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310558368 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034980863 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321179736 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599857533 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.329427468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.3154957 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325513612 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311236958 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310046689 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.310677856 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314395431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313178429 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814254048 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.307940702 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324703791 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32959846 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333918966 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.565223396 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.326123857 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908565182 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544700613 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319784178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345597247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.317080865 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312279922 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.303306557 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312700751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311436936 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401740517 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.538601451 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31291275 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.304586743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394698968 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527612733 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311202017 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311921727 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556429874 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.318406677 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.315552339 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109185528 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349582798 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312511046 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314083917 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308503759 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353917471 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380972056 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529507717 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.32928823 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.323019538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725571467 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337249974 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31418338 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.329071663 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40959632 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3152725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.320190099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.093355039 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930158826 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13020714 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949329118 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579687768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316915025 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318264271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314123772 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452383189 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314322511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59111166 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315066937 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.310080201 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337104014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315656028 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324176285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530698709 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592849435 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314972436 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323155149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321076459 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.315988049 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326397461 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.525774382 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826563015 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880937815 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318387944 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32243194 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069965042 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615959227 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316459939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315204755 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317598238 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.32119314 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317623303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.324967543 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328874407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458168346 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576815741 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996758385 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.350119558 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.358888262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.920817206 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321121523 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574867946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31724457 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534952785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943445428 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061334577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581204741 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385503884 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535743236 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.322284885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454690009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.317789888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322657167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317579481 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317539288 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.31816923 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.3275412 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94409726 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583531291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.323581923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.316833478 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35288522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.327943724 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550150541 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016816898 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542312993 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32898708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324913347 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320478399 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949710957 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581486665 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322349302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.325210988 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563160283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323793428 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34965115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.009561318 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.318468201 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895699247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.532644997 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340269385 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321194854 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.069010504 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929546002 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.325162732 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835647176 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32352914 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334586169 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60012138 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.327474173 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336247882 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602700926 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.327095799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322699318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541142844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.919642134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104301722 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.332496404 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322163815 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.327615011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321816353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388192613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327195772 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321606738 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.746395053 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345754235 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322425569 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334886059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.322906818 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32965047 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.326878963 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321423766 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.329296639 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.33062731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.313040446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344380671 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451881658 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881631261 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352686783 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.997339603 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.652048619 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575362668 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330685771 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.314060971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.328010298 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323541461 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322023443 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32272929 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318479936 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900604899 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.326121591 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.336501813 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327925672 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.314209585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534576322 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338238397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550047234 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330949463 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344130196 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.311673189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324686642 seconds)
  done (took 945.86186766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323512209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.334033363 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.366675344 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.41361229 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3465222 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.40434539 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.367187208 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441101639 seconds)
  done (took 20.221326404 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.325811061 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.328506139 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.320938585 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.333035017 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.324199356 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.797202064 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.336637439 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.343525044 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.34061868 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.321725767 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.323526575 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.997253458 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.348875238 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.333761666 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.325304355 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.329820121 seconds)
  done (took 31.662468189 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.276317141 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.463551178 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.269898723 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.377042401 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.369654268 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.335832786 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.567580413 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.338239582 seconds)
  done (took 26.224012072 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.331524606 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.33165061 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.333025351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.332657978 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.331698263 seconds)
  done (took 7.887946126 seconds)
done (took 1202.745485729 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.332053613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.33167874 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.332546028 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33295243 seconds)
  done (took 6.555900657 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.313251993 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.313427843 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.315827297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.32554782 seconds)
  done (took 9.495041182 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02996878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.92946182 seconds)
  done (took 5.186160166 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.810004754 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.812469756 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.811128586 seconds)
  done (took 6.664817961 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637113355 seconds)
  done (took 2.867907004 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.219536415 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.285215472 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.988336155 seconds)
  done (took 7.725412398 seconds)
done (took 39.722528853 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.32440725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.569491469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.477636205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.322901409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.486550676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478424426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.126312276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.326329256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.334229173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.32999038 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.323609312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.486272407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.041444689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.570819381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.043817388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.570938219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.486776445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.337766115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327457785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.324383283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.129611187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324151699 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.322896014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34479839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.488227303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.468985404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.334541215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.570743158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.337969768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339246401 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.4994055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.326165254 seconds)
  done (took 81.008945607 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.324575339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.334769047 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.341312149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.325186719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.344809268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.340260881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.326148043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.32323263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.323938433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.324197823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.340763456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.341070909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.325036675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.325375483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.326362073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.325733833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.326058969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341934589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.326776743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.328207865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.32530988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340676431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.326302573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.340014581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332576307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.327248693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.35408186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.333596043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.326400487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.338696217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.325057818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.345462137 seconds)
  done (took 75.862483321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.327855846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.342058573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.345229265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.325972935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.327906594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.343687946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.328283934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.341400011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.326687105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.357709675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.327474911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.327389494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.345344977 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.327700405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.330792465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.332135467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.327614598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.327694178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327246591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345178221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.329542803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.327855143 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341301852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.32815974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.328454359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.329184458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.342162357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.328290613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344024024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.34204859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.327831444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.332489812 seconds)
  done (took 75.919792615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612835895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340904392 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.343160005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.334984807 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.341792022 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.339591126 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335447395 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618959657 seconds)
  done (took 14.50020874 seconds)
done (took 248.522948139 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.346708393 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.840399967 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.379758402 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.346818595 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.357563542 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.362178873 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.565007878 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.383408458 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.56435077 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.352390164 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.370556271 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.334785584 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.152533282 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486893235 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.151528384 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.261355439 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.23642069 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.330109599 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.927106001 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.616120424 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363053964 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.333306216 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.144120607 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.26561024 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.321712714 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.417121824 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434894681 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560156165 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.499260649 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416693719 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.857254479 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.3369404 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.368622091 seconds)
  done (took 62.919085724 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.336169203 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.440459897 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.342070279 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.341813208 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.444225201 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.342388116 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.336351077 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.341945065 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.341358104 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.342973914 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.342240466 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.343946868 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.344908402 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.372573354 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.448703494 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.335783938 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.338037253 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.44421369 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.337439369 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.336512112 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.370398893 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.343722785 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.348452026 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.373148956 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.345219391 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.344037397 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.440951666 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.347629602 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.347187854 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.44110111 seconds)
  done (took 42.192871228 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.344380863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.945835402 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.091680765 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.351985316 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.342051551 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.344768478 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.628749762 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.34595229 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.344639003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.343704522 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.842475587 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.348436153 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376599527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.108148179 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.344887426 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.347161195 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.345272845 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.343762733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.946527802 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350964025 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.650425434 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.348434296 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.633469138 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.356665722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.363778285 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342873906 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.346160991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.164428896 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.364036145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.837990131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.134321277 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.634283762 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.102664414 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.108713646 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.134647162 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.354078859 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.347541417 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847197516 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.344586235 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.343498559 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.632882347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.349318646 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.092705713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.023335787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.361375856 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.347435535 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.190910404 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.862781991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.589574518 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.355621131 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.118121473 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.347559681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.349276927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.345935782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.591319127 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.350007035 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.343318587 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.182145697 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.368556908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.635686557 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.354081654 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.347158213 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.953325478 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.345181645 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.944242029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.346977968 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.353385284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.364993755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.097892687 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.348891175 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041913805 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.36212213 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.350212109 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.839786712 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.95049767 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.247394516 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.347814502 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.95717001 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.122738901 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.651582964 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.349590188 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.154243167 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.651659805 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.348815579 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.353203077 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.354561414 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.351674499 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.417886159 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.632842826 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.987097655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.036296126 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.202639595 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.65780496 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.354051667 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.347442156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.18994483 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.370968236 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.351668778 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.095810454 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038910707 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.36440479 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.35648208 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.05020903 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.366750912 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.638918364 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.352741109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.104887851 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.349440336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.416912419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.352381165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.354114715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.369859216 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.638075382 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.351973081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.354511674 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.027589409 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.875486087 seconds)
  done (took 189.77709002 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.34176033 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.358124948 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.350844398 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.341945909 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.343200073 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.350868749 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.343616875 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.343064849 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.348012427 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.343025851 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.344433435 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.351777281 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.350383059 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.343637088 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.357123507 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.345028064 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.344241625 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.357047392 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.344332325 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.343797078 seconds)
  done (took 44.192676403 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.35350598 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.91272931 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.88778652 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.353984548 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.354832303 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.349793893 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.405927996 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.356006282 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.354499469 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.650711744 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.524169461 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.354629379 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.354289329 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.35408848 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.890017114 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.345428317 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.651496504 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.913904073 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.356835418 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.914984208 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.345129702 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.35690623 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.348310591 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.924208541 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.663341887 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.640081837 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.408343838 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.932101282 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361367397 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.354724556 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.926691341 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.360184062 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.350477071 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927655049 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.377588013 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370044077 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.356116905 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.410784622 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.411263392 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.655859262 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.926622981 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.653799994 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.374198453 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.531578367 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.364317465 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.35154607 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933025576 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.379972278 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.350418456 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.364125383 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.363573424 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.901255063 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.376040253 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.901763173 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.378430185 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.358160902 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.920158275 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.904829312 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.917886743 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.53150135 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.35769647 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.642976569 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.35803381 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926781103 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.375130312 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.357733971 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.358848686 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.528813723 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942811954 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.645217859 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.658170844 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.657808934 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.359693666 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.417823236 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.376029893 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.658877795 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.417444144 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.749690931 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.660628728 seconds)
  done (took 123.604460483 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.620254781 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.467911824 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.75510935 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.97002562 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.35405221 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.509916834 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.467388109 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.609669624 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.355635267 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.443335503 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.353315396 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.47674427 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119255755 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.444216651 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.46512636 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508892941 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.355501295 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.349600631 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.058592833 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.991714296 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.365931811 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.460757976 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.857658976 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.565913592 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.351800001 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.947222813 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.331732482 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.356022735 seconds)
  done (took 54.165261069 seconds)
done (took 518.085151191 seconds)
SAVING RESULT...
DONE!
