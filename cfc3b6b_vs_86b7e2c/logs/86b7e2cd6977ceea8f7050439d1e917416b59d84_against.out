cset: moving following pidspec: 6160
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.254228295 seconds)
loading group "string"... done (took 0.469136674 seconds)
loading group "linalg"... done (took 7.650075706 seconds)
loading group "parallel"... done (took 0.176014405 seconds)
loading group "find"... done (took 1.182888491 seconds)
loading group "tuple"... done (took 2.105766933 seconds)
loading group "dates"... done (took 1.344484816 seconds)
loading group "micro"... done (took 0.24780311 seconds)
loading group "io"... done (took 0.661210844 seconds)
loading group "scalar"... done (took 41.767196105 seconds)
loading group "sparse"... done (took 12.452796077 seconds)
loading group "broadcast"... done (took 1.111990361 seconds)
loading group "union"... done (took 13.677872143 seconds)
loading group "simd"... done (took 4.775655635 seconds)
loading group "random"... done (took 9.685958119 seconds)
loading group "problem"... done (took 1.964238437 seconds)
loading group "array"... done (took 22.427837504 seconds)
loading group "misc"... done (took 1.422118814 seconds)
loading group "sort"... done (took 3.587476528 seconds)
loading group "collection"... done (took 19.408832512 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513059565 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137468867 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132897035 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147684791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203841802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145352287 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160490697 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11584688 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968717789 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.188245302 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155453101 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514217314 seconds)
done (took 5.133076386 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224325796 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093304137 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103395509 seconds)
  done (took 0.86819578 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077284837 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144697243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094646272 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078325306 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094674786 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077253129 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094711168 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077619363 seconds)
  done (took 1.33951001 seconds)
done (took 3.194979505 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735959289 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286274706 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201128626 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462324706 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198469858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214128408 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679107378 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342205258 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254840839 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099885049 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143123901 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388963268 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135593983 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.72645629 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089803355 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123955541 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179712383 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44362221 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082378204 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110555677 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117674242 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143040539 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130694025 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089786372 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186384803 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081621061 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193849683 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108030211 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080990277 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290491151 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200746053 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687097368 seconds)
  done (took 10.923269862 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111193228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133786433 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097747264 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138467339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135030779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099736392 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086028937 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095779418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121505321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176785802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116513728 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139227862 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095933691 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083800307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11576501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243294138 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121066847 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103522766 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100423982 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103870133 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122091835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116018883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110429521 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094632678 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167886733 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224865393 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112755195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12851652 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098750272 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114697271 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14469223 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145377023 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098390667 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081307336 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172455041 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126678979 seconds)
  done (took 5.170200114 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186425054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120809648 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166612203 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163344921 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139882951 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.15955396 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111663951 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24567817 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109371946 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165266518 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143834224 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116296237 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080484042 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098741288 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095957442 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.673112242 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123376976 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154017661 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115068326 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102055629 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08242666 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364110512 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102579082 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080323703 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098534863 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065253372 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158219543 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099056977 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.253875602 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085784299 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118280335 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098103702 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12823861 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1160858 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126239257 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140042228 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09505435 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079103078 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177698707 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122217703 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085916471 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097479359 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119780208 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132688088 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117648835 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099200194 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095902473 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20393444 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097189899 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097769258 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.955412144 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181843323 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091529059 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098022293 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327929428 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100338087 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100751691 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078749045 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273998055 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185335248 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094587289 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081517271 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098745072 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079860779 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100607541 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384006978 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09516623 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739677336 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089309324 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107888181 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082064339 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095535839 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103466457 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087413235 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11460299 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079102772 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098643324 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079293638 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096253934 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081073806 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108823874 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101376598 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079422662 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163730263 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08117355 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114670685 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126631654 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08286749 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09531461 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129369225 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082678324 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097179552 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133376535 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080852491 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108292783 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093554417 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082302238 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142654925 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097472876 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181226916 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080230866 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129998312 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099427368 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113634143 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11103754 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099674125 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084319064 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094907369 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076783849 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163780801 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081247424 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098585369 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082450756 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111937948 seconds)
  done (took 22.622441329 seconds)
done (took 39.393578877 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331040041 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103672116 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102691279 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102280617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099330567 seconds)
  done (took 1.484423546 seconds)
done (took 2.206136302 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286229397 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171233592 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094313699 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166613764 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092944874 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17394604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158345172 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11149546 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219163906 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076922432 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162675133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093819783 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076680527 seconds)
  done (took 2.63300038 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095125929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114678146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082447858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111129929 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076210292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110550312 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091735577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117156912 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108774569 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083884664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093118604 seconds)
  done (took 1.808124563 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093196441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112085216 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081071296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110848164 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077478606 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112375156 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093781352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117663516 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10913237 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085802581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09355059 seconds)
  done (took 1.808229413 seconds)
done (took 6.962922743 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09047705 seconds)
  done (took 0.806964872 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920769556 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.876262163 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112314364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14872069 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299716038 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192480307 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475780999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125507945 seconds)
  done (took 11.07827122 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115421687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100827368 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100530333 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095513984 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103759742 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081709852 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100280817 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097858937 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086322282 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101334149 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087987369 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103901634 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101124031 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086319242 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104417729 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085812885 seconds)
  done (took 2.337112263 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118809943 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118427965 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105866526 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108039146 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086988093 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104477081 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106416285 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088784752 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101485523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103945748 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089970154 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106775831 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105552118 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08164029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108183615 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110417859 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086825352 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10743214 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109645181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092435875 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108220816 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097270968 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08918302 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108757946 seconds)
  done (took 3.278467444 seconds)
done (took 18.222830984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158647099 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108200895 seconds)
  done (took 0.993461006 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094911311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11317664 seconds)
  done (took 0.938621264 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097475766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095271685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124198197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111726904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082082916 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098354553 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122404387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082365974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098202899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082545979 seconds)
  done (took 1.729129083 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082550286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109002056 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101237127 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095025108 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105348222 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09508957 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086969836 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098177796 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108599959 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077098618 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103690127 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116542848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087890303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118179611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107467396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084250472 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104061922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10091694 seconds)
  done (took 2.517877697 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078639125 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097131877 seconds)
  done (took 0.909890763 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080320717 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093501278 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080115754 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098526233 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095653987 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077827177 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096278196 seconds)
  done (took 1.354659806 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469477502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135140947 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253337111 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085105021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119017651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302065682 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097820141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084523109 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102865332 seconds)
  done (took 2.438260932 seconds)
done (took 11.615825072 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092772989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118969277 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114243274 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467958861 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107343653 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09804279 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.16242188 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255274162 seconds)
done (took 2.156458121 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148437032 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323734479 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113412588 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067607411 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097509851 seconds)
  done (took 1.345567131 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079286922 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099997961 seconds)
  done (took 0.921740159 seconds)
done (took 3.159554583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080044601 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132552932 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079916927 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097852008 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081379568 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100555706 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078761834 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098120904 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078630128 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098980217 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097833096 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081625503 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096565034 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081119539 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099126051 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079560862 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096255327 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081021285 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095989702 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07961191 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096059287 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081136612 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096949516 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07896877 seconds)
  done (took 2.944104809 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098904978 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098223269 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104449784 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087295812 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103316964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087148533 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104482694 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098795694 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08739418 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101508829 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101947934 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085633812 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101908394 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086169378 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101546191 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103363979 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087025124 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099698403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084184713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102970165 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104571758 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082062915 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103588049 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104205942 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084995988 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103440796 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083971081 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100087147 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104332583 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085410615 seconds)
  done (took 3.629890947 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084493026 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093809285 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07696519 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1036348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078855134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099393817 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07933165 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09714177 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080184069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097679286 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081144415 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09659027 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079298601 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098557972 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080957279 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100622553 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110905136 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079344859 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097940277 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079762196 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100587745 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079674379 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097649053 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079041888 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096808239 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07892877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097180057 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079479144 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097576417 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078684572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10034791 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083499955 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097125951 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085885674 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101194594 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078713517 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100597717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07921455 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097920375 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096838596 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078954324 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097171398 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079611732 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104165756 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079270939 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09929863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079602022 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099038522 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079964234 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101737482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079561058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096749792 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08151889 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097612817 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101083042 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07926079 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098549752 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078806733 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098769265 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078465498 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096844435 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078459411 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099894992 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080362549 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112514115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086121182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097537427 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081894774 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098634033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081973084 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099517732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111685991 seconds)
  done (took 7.268278477 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083118694 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106119459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08217826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099801043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078177735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098258645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100965567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08019909 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099956146 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086916246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097984636 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081294277 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099880334 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110105168 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080839937 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099709179 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086654552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095661208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081047977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102447655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080500322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101134078 seconds)
  done (took 2.783128105 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210039457 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104754806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141197791 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109290854 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085243287 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109314565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10441451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089559126 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104599459 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085234868 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103106651 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105345619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085301943 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102660628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102890393 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086931304 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103843557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08641837 seconds)
  done (took 2.676513714 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093167902 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099181432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104311925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100814049 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101393097 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084742175 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105956887 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111534416 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086207245 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101232962 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092363415 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10200041 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103282517 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082996066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103406361 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082301788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102721375 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083758614 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1097159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106352097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107234888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092442669 seconds)
  done (took 2.916209517 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096168114 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101084723 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119403671 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084145284 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097208599 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081929604 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107788981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083262038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109572189 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102727259 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082818485 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0995159 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089496371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100571147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106067237 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083045242 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103256979 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082810813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102976477 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079406117 seconds)
  done (took 2.672935229 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101578259 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099600644 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101792718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09276948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102211359 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084612276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112190917 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102692476 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0838253 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126522418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102225311 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084850541 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112188217 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107686954 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102077341 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094272503 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111246352 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111170614 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085683096 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101526891 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12835442 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085109973 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112152081 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.213047388 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0841774 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102685937 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103060448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09040944 seconds)
  done (took 3.699471496 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080847321 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098803423 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078709679 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097595357 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07961741 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098701013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08079897 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098915126 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08306498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098671483 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082397215 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101173081 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083380208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100640818 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085493725 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10083896 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083809711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099187879 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080732219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098770368 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083505061 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101078185 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082415677 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099015463 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080058101 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100252665 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079966121 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097660775 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081605563 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096029797 seconds)
  done (took 3.477029595 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090200219 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10575421 seconds)
  done (took 0.957152029 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079242557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114879782 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078792904 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102065335 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086540812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099499976 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107595616 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086321919 seconds)
  done (took 1.5159721 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095494722 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109985344 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084303291 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114151245 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113401734 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097549396 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16376134 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103150457 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089001846 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099982721 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.097268922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101340329 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108143811 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083637408 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107942716 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09009087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099929489 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089906634 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105313419 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100857181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085417986 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11391337 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086982857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099223111 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085053151 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114309027 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112023116 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085531542 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106308782 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110694784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089202902 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095730934 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083302885 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103252136 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082964288 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111758985 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115274803 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086727311 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111173909 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08545305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113541739 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097023496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089192772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107724577 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094694671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102703482 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085526595 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097677132 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0992841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086537977 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09743395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08345757 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097213956 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091544512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106594691 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116064117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083209556 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104312717 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086936702 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105735044 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090519229 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10468834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086170162 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101214321 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109661969 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088421924 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10984646 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079499089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096928888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081946808 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111402667 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125007956 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091915981 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103393 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084954661 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100269339 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105717157 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085468091 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109765491 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092942401 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103757381 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109460074 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091978955 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102531179 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08712328 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110916235 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100717883 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086720125 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099875443 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098857998 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098766476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079541093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09685514 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107638987 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084889902 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099151763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079484693 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110247659 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075849545 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100580513 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083444861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100675051 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108335925 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087830864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106215948 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107023844 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088273386 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099663033 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084878047 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096890337 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083516116 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102673724 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088503286 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092994874 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102976102 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083604633 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100630719 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088580033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09758863 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08245382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107431814 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106520114 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080878573 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096585197 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085206192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100407028 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085942516 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106034059 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098879399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077321101 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09499807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085773035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100131725 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088133676 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106400593 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102856115 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076485138 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09894109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086106197 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107597022 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100061457 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08209444 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104343829 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082929392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099777646 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087575234 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102432415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081087357 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.1038365 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102225001 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077665491 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104235003 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084669162 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100296981 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088546269 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105960548 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103658687 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08298708 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099280002 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088134705 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102045395 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08185863 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100641897 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080649611 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108953679 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102294453 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077083842 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09697263 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089287791 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097627124 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082518828 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098552019 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102594611 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083986158 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097867359 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082160685 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10151182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094062547 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105001888 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102266645 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087621563 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110447927 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082346185 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101430673 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09965523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082889464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101472345 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088915095 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106842746 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106472089 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084106847 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096496076 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088532348 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10816154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0813201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097889254 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081291083 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103627422 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10708605 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086356139 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101524063 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08064372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100681316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104699004 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085076241 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099715061 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081093115 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104778205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08144486 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108509613 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101524003 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091446128 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104346181 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077824066 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104573783 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098490885 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088381239 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095890128 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080077378 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098578252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082942516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099151447 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085114216 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095018587 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088928457 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108320103 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100456623 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08158684 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100594692 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090682643 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102329689 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086144943 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103452987 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106208117 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095616561 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099093277 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086155556 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110323272 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101102022 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076763231 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106068053 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081113113 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099591692 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081330637 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098537507 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085962843 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110325409 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105350351 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076428776 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103226403 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08116854 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098857594 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078307468 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106870371 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105160581 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084988712 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109536868 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084302003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101774185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08660595 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100257563 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102073778 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083449275 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104175647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084638941 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103692642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082144306 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102485632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099542007 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080966135 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102668983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084866028 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100548614 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09004421 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100493536 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082896448 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104382294 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102379672 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083757723 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101491852 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081858826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104181611 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082652354 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101355539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085738435 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096164862 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10860069 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082281996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108825473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083170043 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097936266 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088836779 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103881302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106264712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084257012 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102324455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084154768 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101768899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086076879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109744725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0982433 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09113283 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106992415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083149227 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104793525 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082848206 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102868973 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081547661 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103160078 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101907102 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082469087 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101017256 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087179621 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103518526 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082964901 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102877345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102024529 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082682306 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103132229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07778562 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099767116 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082437817 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101291357 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090507938 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102332064 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103526685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081572947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102954434 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081736135 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09790939 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090676312 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111717363 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102239922 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091363186 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100290436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083836831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110932259 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095440754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080668626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100043705 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081061425 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109001624 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083965361 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10975174 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083479 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100892687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098135201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084388059 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100469358 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077571454 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099191943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086468282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103899714 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081913834 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104157577 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085561447 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103052791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109103134 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082585721 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102984926 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083422432 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100337398 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083660016 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102803273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087329167 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105052902 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101813258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080360368 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101520255 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085008346 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102138107 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083864365 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10270622 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099364646 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101666389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104401097 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087419855 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096471925 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086397032 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101164583 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082862973 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100670586 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085766179 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10573426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103378851 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09068654 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101141694 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083718124 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101898127 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081080299 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101656517 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101625334 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082999539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099690019 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084337502 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112754124 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083903852 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10666337 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084853147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106019812 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109491782 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087434252 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107616061 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094929177 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109816768 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106624306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091764949 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109691652 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089308273 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107640298 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087592314 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111699046 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104155606 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092573718 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104901037 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08691933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106540225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082933247 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105555771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085698317 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103338952 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108821847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084578394 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101272783 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082947522 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103211219 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08748182 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109895521 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113151144 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088679563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109090203 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081420533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102940264 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08819757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102765012 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085894878 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105028022 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108532341 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084811995 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102732695 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082378254 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112556475 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0924322 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111109234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103579897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090225344 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105110415 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087619762 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106074843 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086100903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107214742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109904178 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08612028 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105005449 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093665661 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109624129 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088091606 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107078117 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086179015 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102591483 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097147176 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083986262 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103397315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090459532 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104867802 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083574268 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111632893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101911201 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082541316 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106391944 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083343214 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109358148 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078877208 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103919154 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106042905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084837768 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097834502 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082789413 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100950828 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086116616 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10396606 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08224593 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114617045 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113578356 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088229859 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105111844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085172563 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101596082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08215204 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105064967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087593919 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108403434 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112084116 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081945588 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101900901 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078954869 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102651462 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086984354 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105790667 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080409202 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098000667 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081877609 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104927257 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108486193 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082563183 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101763595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087051265 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105250094 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081245742 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106719772 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098953775 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088519969 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113176982 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085139995 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103019163 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088846779 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111554974 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103701455 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07915026 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103727185 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08628051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10310788 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084714556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103742495 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11609518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086300033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101137391 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082620727 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104514949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082729688 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109434072 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103451375 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084916302 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106777853 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084865258 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112046162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104633564 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089900379 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104834081 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085963142 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102363057 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084084293 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10198132 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081400263 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103544004 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103624103 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088905142 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111454479 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082711942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112725327 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109952073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088943481 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099177835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082059622 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102442851 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079034395 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105160311 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081566522 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101180871 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100871216 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083126741 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102351048 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090514999 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.1047744 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085761281 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102603275 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077862731 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104448264 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104719849 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087146377 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099445321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083641356 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104728394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092128753 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10658737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084698882 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104519596 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103998341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084885467 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097874462 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090457371 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101212704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086096816 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102857501 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084354355 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104358154 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106373278 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089445933 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103984832 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085626422 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114698194 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105966458 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080727686 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09931976 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088731168 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101000505 seconds)
  done (took 58.023650129 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146440404 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080604159 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098112654 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079044104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113091464 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099280296 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079113779 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09864685 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081675453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102775064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079221007 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098738199 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108296068 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123874858 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093427635 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103174468 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079086167 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099746929 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097748921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080169768 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107785483 seconds)
  done (took 2.858940912 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104302616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116990839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114303482 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119043647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089589095 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115306182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11501531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115336494 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099504034 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110319032 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118419127 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115094603 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090692165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109824445 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110652861 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092878899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11856642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108923822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114800218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094667838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11218349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114328856 seconds)
  done (took 3.209685775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084243235 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102115484 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084818789 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097735345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082966041 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098152419 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088046746 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100257766 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087756328 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101777816 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081452445 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101689301 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103743296 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078618807 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101972878 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081474524 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151605499 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106871205 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083010778 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104370796 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097681555 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084978681 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098175331 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080004733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10180206 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08726174 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103524186 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081872944 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102330338 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082414213 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102695646 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080763553 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105228059 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102744401 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082430081 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101845261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083671127 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10263197 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079191175 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101215075 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08373608 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099021326 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083835542 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104391323 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081822012 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100631786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084822191 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103131469 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096939339 seconds)
  done (took 5.434377812 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104705392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159905002 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086080266 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142273119 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119832692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113099232 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087984714 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142133989 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101401363 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082064505 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12209398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119723087 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10284288 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088869616 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109866147 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103154402 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085806421 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101931137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107307544 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083259495 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107708529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089603628 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119526253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117707071 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10794076 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082805599 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103019895 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1084931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096376668 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108652671 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108554712 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091591066 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120983746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107855126 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101848955 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08698065 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121686818 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103776124 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087297085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100686572 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087446636 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109417679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109027813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122033566 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084661787 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107890431 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083590569 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100290071 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117799687 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087008254 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113450276 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119608535 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107284485 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085202677 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108953675 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120214149 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083624806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101716952 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087075642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11774534 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100886485 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087801455 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118024702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106438813 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111742433 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098722947 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109078517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108391885 seconds)
  done (took 8.085894179 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092768373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110596701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119860661 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120168856 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091531456 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11109308 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109882226 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090079065 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110770542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117300414 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109685549 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132675806 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085939833 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114219089 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110137309 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091763582 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110494163 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110779521 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091298312 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110477712 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111203577 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119930747 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090680709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120321727 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140986265 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105550105 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090613492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112002585 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119845851 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110596117 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122470241 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090738819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110876866 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12057606 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123538794 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090755059 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102750229 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110660165 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090867976 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11138462 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105523347 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10115918 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109682798 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105028462 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090875774 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110046273 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120901966 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12355211 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113584015 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09620889 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111696215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120142221 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110794909 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091915779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119919669 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145630873 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121300713 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120107196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110560097 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100517175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120899949 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127965974 seconds)
  done (took 7.638413894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107432393 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115224022 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117886 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099864691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082578631 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109353344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081550247 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101784372 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113951043 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094194329 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116597084 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108476525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112260214 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097342413 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108600435 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112074429 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089040963 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109371111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114440577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108484769 seconds)
  done (took 2.925826821 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093201874 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124413266 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084854475 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112328644 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107603627 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091403537 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107582897 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107371047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10785701 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09579682 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11603589 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105340445 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092064436 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116288768 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110933616 seconds)
  done (took 2.484521555 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095620375 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118150793 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120329174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085154154 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104163302 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08047146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105325793 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100786458 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081828027 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123087543 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085742578 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113014985 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109322377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08530027 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101525568 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087799787 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100909752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082053466 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104924834 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119379296 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095417053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103661346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106437956 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087493062 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105229919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09011914 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105509384 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10268243 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083967502 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106094845 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085122605 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113966111 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101686453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08373021 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103045325 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082624016 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104843404 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085510319 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108402394 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103600926 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083536082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104921843 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085592891 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106365646 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081038022 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10606441 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100779112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091026586 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103376435 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085701226 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105826577 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107140826 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087033691 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117303355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091447579 seconds)
  done (took 6.250321295 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099193161 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108662368 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080282049 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105578236 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091100716 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109300975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108765669 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087430313 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106997957 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083145191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107961919 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091180714 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109967983 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112468687 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089786707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112815043 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084724493 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111042936 seconds)
  done (took 2.638380438 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089827281 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104846986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091941698 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106092353 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085684665 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111573716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084336583 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105658327 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105055206 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085597963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105981994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088246852 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103000664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087507839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105974669 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084007822 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108130354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102661578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086670536 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100648409 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087732879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104044201 seconds)
  done (took 2.971890649 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118073616 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124184173 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094873359 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23160348 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104205929 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131793027 seconds)
  done (took 1.639560578 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108927992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121359299 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106055722 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107500059 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115434298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107058229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087550887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10744863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11814248 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101241842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109171654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116896985 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118455698 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096535079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114446331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114885858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107112977 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088437638 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105990248 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128698488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087440664 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11798064 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107537623 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087026618 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107237686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117288907 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118460808 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122194427 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087742147 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117822194 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114567342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086861148 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118564694 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122170397 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108742024 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098254241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107366332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129150933 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114473018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09736866 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10911932 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115383903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098306894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115572504 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120570924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107809888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093394743 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109239192 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110777761 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138239116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097473111 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117875753 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115066073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119578822 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117414881 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135875666 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101743998 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117583235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115051796 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123546325 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117886251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094700097 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116561343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122201522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115841755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118056157 seconds)
  done (took 8.152863095 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102524134 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125730525 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107569064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122038625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097020339 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108188419 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108193371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087509473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108343589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107006568 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15257871 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088439439 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117900452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118051533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108162364 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088905654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10803925 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117753512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087246643 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134860227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108732667 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118158398 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117418426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098441017 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122990417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115472922 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107887973 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087740762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109369374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108333369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094648555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109220017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117449572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086559823 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119129824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109039664 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087473952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115206723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108288023 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114397321 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097591526 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128767439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107869549 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1091854 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122690985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088277239 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108277561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086680117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108615304 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107348508 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101776618 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122889155 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122152482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118413975 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108520316 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087721675 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109091399 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10745198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088598564 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114819113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11807926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10827068 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135905562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088863998 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1086403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117738885 seconds)
  done (took 8.018254439 seconds)
done (took 155.613884027 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097593598 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136230686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095588819 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170760799 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106471117 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119531644 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138500215 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097496065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106526537 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086356625 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106400085 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08702561 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171147552 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085340802 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106392778 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107917473 seconds)
  done (took 2.659646067 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199253825 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253937504 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10204669 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106153906 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089026591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110314076 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104449363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091140559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110320401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085414547 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108554403 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085964332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105425566 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08578606 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111343101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087785344 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106398026 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090956357 seconds)
  done (took 2.880666437 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112483569 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145877199 seconds)
  done (took 1.109003176 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119841828 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180302949 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318166754 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158385345 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106724347 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127030152 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156647763 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130835354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198264449 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123227405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12703355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146987658 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.120835096 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09948714 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124764672 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.147765315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09809023 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.121028711 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117399518 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117376386 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106480175 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115339058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093604354 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181610662 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120726742 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084653422 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108548251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120244014 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096047594 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119345226 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130379062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103402199 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179523414 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102247035 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179080587 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099534453 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12016363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120433284 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095985079 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124871063 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124363104 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1099278 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.125132712 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.090313771 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124823587 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.111308586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090249811 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.119985111 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101885981 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11584947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113672532 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1552212 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119228223 seconds)
  done (took 7.691879859 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797728719 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.169438654 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090833903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887608433 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145391873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10876148 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.798648892 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140382046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240006596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.770535172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141348346 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127243863 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233239608 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237036658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93213879 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310622142 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67058952 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108507016 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156745986 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158674642 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12154364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139222828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13063403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430085859 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095153924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113014523 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117479263 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100650884 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160832381 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126122604 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114274348 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179000357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247324591 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206169323 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116699984 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089206982 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11210439 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170733675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268098665 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216074552 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18272597 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087656666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111349904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122119975 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111346428 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109203999 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163343986 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196062878 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173760429 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092425137 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122645048 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120992163 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123541373 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16925749 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126022396 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296719081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327433668 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112636914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120557072 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105630953 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264497238 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122581425 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226304431 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117291744 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214262731 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111192092 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781580582 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192338714 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089734991 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118531281 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119628551 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09507895 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122966631 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167276666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392596604 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12544741 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095890245 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116013022 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220351382 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126344814 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11166275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163905101 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115806079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100555088 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125701934 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122661285 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171371486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23021433 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123994333 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121233122 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093762325 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126526586 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117280033 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212016152 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219645375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163434173 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210834977 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122302794 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164217723 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189592117 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099237405 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194574935 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097784408 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126371582 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12363015 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2193979 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147451373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10153809 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117161446 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118544898 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149704235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126928983 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098296061 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190902211 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458437939 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169079674 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110204381 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127280245 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099074365 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18238028 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097254599 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2580509 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12203259 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171182666 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120346413 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087437828 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121246904 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165457948 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123981563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121520789 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101279837 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120007354 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236989482 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219707211 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123295226 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222320099 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184862957 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118994559 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17298131 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123463616 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167204569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12056285 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121306286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095146116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791209769 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123896424 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098305286 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117443388 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18824488 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112120023 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102571913 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126364602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109412408 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753538645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127759046 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121623632 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10194036 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12088842 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121572374 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096455066 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116316529 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161776276 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232256115 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122655804 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120198143 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102732191 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182238052 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09562533 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126196776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125881235 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125456097 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100617987 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116452967 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124502556 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171539353 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163010738 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220033989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597519129 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091051333 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125098607 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229946345 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090002746 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29207021 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120645573 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22578049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165940124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121368202 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319017712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166879117 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188002384 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127112005 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175831872 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08736953 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119923264 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164742122 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112616544 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117941783 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163748648 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125590013 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101411611 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.966095482 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113372134 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2284424 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108998665 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172343736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094380445 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121791134 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294697146 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112102697 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107228318 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186315844 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095028088 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125913502 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.727244416 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104469543 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122654243 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118683489 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22436904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164786738 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097358319 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120092285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12213674 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163889191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2074467 seconds)
  done (took 44.269245316 seconds)
done (took 59.456147744 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276050269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213094865 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259319077 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16727838 seconds)
  done (took 1.863686365 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174467566 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147519583 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119811642 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107519149 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148867528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085606432 seconds)
  done (took 1.656416457 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351728091 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26968353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23860133 seconds)
  done (took 1.738195397 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287733426 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25274962 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354846959 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418927988 seconds)
  done (took 2.308818883 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20842104 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131125557 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111210347 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106297055 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201882639 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253028412 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141299756 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201713752 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1222271 seconds)
  done (took 2.403088988 seconds)
done (took 10.848213262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.13618795 seconds)
    (2/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.255506683 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.230806922 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.21634512 seconds)
    (5/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.21640499 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.276148497 seconds)
    (7/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120547246 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199767361 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094356439 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.118290243 seconds)
    (11/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118659807 seconds)
    (12/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097153961 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.180118795 seconds)
    (14/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134981734 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.1224575 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13415975 seconds)
    (17/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.249485093 seconds)
    (18/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.129939087 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118950761 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.204627038 seconds)
    (21/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.141127113 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117098854 seconds)
    (23/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09417226 seconds)
    (24/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183065612 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.141731153 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.135871979 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103990485 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.22016694 seconds)
    (29/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06615913 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136196798 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108833247 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.14764836 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114401613 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127148359 seconds)
    (35/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068240991 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20231457 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17662804 seconds)
    (38/286) benchmarking ("sort", Float64, false)...
    done (took 0.171209118 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.225351328 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103670137 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212771211 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.224708834 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170561107 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.163853493 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117232035 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135181579 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100157938 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 0.176532045 seconds)
    (49/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108982053 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086518799 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149058405 seconds)
    (52/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091896774 seconds)
    (53/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117098353 seconds)
    (54/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.17556003 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112129904 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118952425 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121249501 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094910402 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116279127 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159883994 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135264331 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117561376 seconds)
    (63/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093889414 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110431932 seconds)
    (65/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086264152 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.198096317 seconds)
    (67/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.139771557 seconds)
    (68/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16762603 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111430933 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.137845129 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.173668679 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191839036 seconds)
    (73/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117271921 seconds)
    (74/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098113926 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109379544 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195837668 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119118343 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.131286534 seconds)
    (79/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196622346 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067649251 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.087026208 seconds)
    (82/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114311028 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149598553 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088054972 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.19532973 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101524662 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182996071 seconds)
    (88/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.15288971 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092849037 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.1655678 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11606757 seconds)
    (92/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091759802 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123717118 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111375194 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196528558 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089435138 seconds)
    (97/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091733582 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18852851 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137997263 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066872716 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118983305 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.167016153 seconds)
    (103/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099165495 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.10976569 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138513237 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067891721 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089875621 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092334039 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113382863 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.173306143 seconds)
    (111/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102323273 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089829089 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118424061 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182780208 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119091521 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067577868 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098326962 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138484825 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122002243 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.181602287 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095821857 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.182160331 seconds)
    (123/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234079663 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117587151 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076359547 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066339216 seconds)
    (127/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121162306 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115376274 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095508945 seconds)
    (130/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108326658 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067009689 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12695691 seconds)
    (133/286) benchmarking ("sort", Float32, true)...
    done (took 0.232496104 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094600736 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113134278 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06698372 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12113157 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067730541 seconds)
    (139/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087738281 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109111434 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093651322 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.1006902 seconds)
    (143/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157201738 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093147588 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108786567 seconds)
    (146/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090348432 seconds)
    (147/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066581599 seconds)
    (148/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195223075 seconds)
    (149/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170140135 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135811649 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096282947 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1175553 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086524775 seconds)
    (154/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113310223 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086681043 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115667071 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086438456 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116401254 seconds)
    (159/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175338 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066599045 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120619687 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066763747 seconds)
    (163/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09447398 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171202296 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067571535 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.109079671 seconds)
    (167/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.130952691 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122120843 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068139021 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 0.232644953 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163953043 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158499674 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093986838 seconds)
    (174/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.144029328 seconds)
    (175/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120987227 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096470807 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.07666365 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140924227 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067910635 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110417619 seconds)
    (181/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066842644 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090326947 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067307373 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08673998 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09040974 seconds)
    (186/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095234191 seconds)
    (187/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.089527867 seconds)
    (188/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067756632 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223829747 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220793561 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108554036 seconds)
    (192/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088987861 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180662615 seconds)
    (194/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067633687 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090653821 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068591642 seconds)
    (197/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110861236 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110733977 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090119441 seconds)
    (200/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06756527 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092960558 seconds)
    (202/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.09903016 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089162643 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138505089 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119426646 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095566183 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187080275 seconds)
    (208/286) benchmarking ("sort", Int8, false)...
    done (took 0.18885245 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067865417 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090639912 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140054382 seconds)
    (212/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121510686 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093771105 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110399113 seconds)
    (215/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.391333216 seconds)
    (216/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088470367 seconds)
    (217/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066652221 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10829117 seconds)
    (219/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076116444 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10894738 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087109833 seconds)
    (222/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112761464 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086646735 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.17251705 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108675867 seconds)
    (226/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076172543 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067790711 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090148202 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066770423 seconds)
    (230/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067096656 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091351732 seconds)
    (232/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088818065 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111165102 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088082812 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090900362 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067510662 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109818712 seconds)
    (238/286) benchmarking ("sort", Int8, true)...
    done (took 0.223120513 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085537467 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111593428 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.141081016 seconds)
    (242/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119840109 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08605748 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135703306 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116444111 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112281573 seconds)
    (247/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133875343 seconds)
    (248/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070953015 seconds)
    (249/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127664673 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171976372 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068749507 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118690267 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066697637 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08735401 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134030357 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066595292 seconds)
    (257/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092647351 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088886331 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091958958 seconds)
    (260/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.07704498 seconds)
    (261/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110211165 seconds)
    (262/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094407408 seconds)
    (263/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068207951 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118109077 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067536684 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109755091 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085951815 seconds)
    (268/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231760941 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109139342 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093471768 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119325052 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087264183 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137334473 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109650465 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06861116 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066681064 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.1154016 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087166013 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100777111 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099863027 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090843289 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0676148 seconds)
    (283/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067493486 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115311778 seconds)
    (285/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093446621 seconds)
    (286/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090542508 seconds)
  done (took 36.005359985 seconds)
done (took 36.888607047 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09957451 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148184587 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096477003 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135810871 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123548349 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091032284 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119261339 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098652414 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122227292 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124035671 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098263485 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092974345 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096775525 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.1198129 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09623956 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138170318 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122984557 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093459561 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118328995 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085655464 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119142026 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088587192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112115273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069604536 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121306421 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093008189 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116317528 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120214187 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08596487 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110355607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089767747 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117574209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086143074 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123759334 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092720145 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118191282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097285725 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119532664 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111861272 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086671323 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118249804 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085857001 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116548257 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094973853 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115320057 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092565841 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117944114 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100095477 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139520043 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116015698 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094894323 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121940133 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096393033 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117674664 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091118363 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118619372 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091579899 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139157731 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119306917 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092138071 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118627368 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094133631 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116076198 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094508869 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118769442 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121118232 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097962742 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115131511 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096837598 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116223647 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086523962 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118559697 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090106875 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11041961 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095397291 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120700172 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085161938 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.1161227 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117720968 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092303883 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110197476 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089565009 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111847985 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093268233 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112189533 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070089407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113870332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093273248 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109642289 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096269584 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116400095 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093651843 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112105025 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098642679 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110160184 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092262914 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112046725 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087775367 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112774451 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091430575 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11076476 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089717011 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119303359 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089087779 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116842175 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123820959 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087287679 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117115625 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086526384 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110663063 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102906908 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121095928 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087855231 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116006793 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086163645 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118682974 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086765071 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110696503 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086937545 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110733272 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09272756 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110665391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112659451 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094251276 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125213768 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087240878 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114651862 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090348542 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11098816 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093603533 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110929369 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087032791 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113557781 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078159444 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113496674 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087714086 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118282215 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090196418 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119009979 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089332149 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120350266 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092859287 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117525243 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093082212 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109992307 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074939959 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117473469 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089981601 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113007197 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087431641 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113394986 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087217998 seconds)
done (took 16.905147634 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087871945 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183604082 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151581833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142102124 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107795192 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111941147 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122952208 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118400572 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11316398 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14352239 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110574986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131900346 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148236918 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087828502 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111843312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09095797 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112705725 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102553776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145015568 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132818997 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163951227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087380735 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147265422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134700112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121945929 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114025066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112447868 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091407777 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11494364 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103653192 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132022896 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115189918 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087815861 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13477614 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104508134 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119933497 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08844159 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119637523 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087673897 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111151232 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140785994 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133251672 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093581205 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117918263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09191281 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115133406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089225213 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121203864 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098297571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116645995 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125797516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155069062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091244056 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122261363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087488389 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123179669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121728732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090397929 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112390252 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090826017 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111911023 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091206038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127061015 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141843814 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091273732 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121538848 seconds)
  done (took 8.605225406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104770262 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139641035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105628897 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131971948 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111675975 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088413854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113221738 seconds)
  done (took 1.738678143 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089466848 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135395357 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112896961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135711177 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131942716 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111537369 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123941258 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089502669 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13305971 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089403133 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13466284 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15045806 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090407916 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12068928 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138993019 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088749837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137368583 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089999709 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117001317 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112490764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116273594 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135675251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090729111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114069307 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103244984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114576038 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161953062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093930762 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11483267 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092160561 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112139093 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151245309 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103485487 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125214775 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08955292 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129951659 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128736322 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087069981 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125724233 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094564851 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12817714 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090401184 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114871191 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087799053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118965875 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099379846 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117200694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090151673 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116315976 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133699839 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090183468 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144915767 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089190365 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118024184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090781046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119865344 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099123966 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113864586 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133595228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09002953 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13050152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105491994 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128470419 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131139355 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091565007 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127722551 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103099582 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116980993 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090842842 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117450276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105895664 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111857525 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090970512 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125603624 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117229032 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112613273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137333636 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091526279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124427812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090207573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115190881 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114262732 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112018936 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118620152 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08965421 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117846596 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092353867 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111892221 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088355419 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117566291 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087630112 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115018336 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094371569 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115263487 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092419961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131326853 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116058666 seconds)
  done (took 11.833136995 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094393059 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117710119 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092318649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115054852 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091115964 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115377523 seconds)
  done (took 1.580939833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115126258 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117513157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104650263 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121256655 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155843434 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103891264 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130230089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123883851 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108214378 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126939333 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12915525 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105083856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136055419 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121334162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10454487 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120833597 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129837176 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100681711 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127664643 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096994429 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136530686 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122165375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096650109 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131731159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11833721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09610058 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12637468 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103152983 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128233568 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123273597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096106715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118655102 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097976023 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125328803 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129632732 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09618061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120522529 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120058703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100202299 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117807399 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105706497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121701144 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127554905 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093551575 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123358713 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121823434 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09414139 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12514359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103254012 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118793138 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118634469 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096086589 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120205258 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096954073 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.130344601 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133322643 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101074852 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138618868 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130511877 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104130522 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.126765076 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100314891 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132451077 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12544307 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.111294093 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127134506 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130160488 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104015436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130393261 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103836022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12831445 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100656735 seconds)
  done (took 9.369901785 seconds)
done (took 34.070264594 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69129691 seconds)
  done (took 1.644515739 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.840651754 seconds)
  done (took 1.796874413 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.493088933 seconds)
  done (took 17.481545079 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49963956 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583088315 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999989658 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17716362 seconds)
  done (took 3.216761261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94552686 seconds)
  done (took 1.920669469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.28401114 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234420062 seconds)
  done (took 1.480598735 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785943437 seconds)
  done (took 1.761057596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.378550277 seconds)
  done (took 2.338755553 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.3338949 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184155808 seconds)
  done (took 1.489876619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566466277 seconds)
  done (took 1.534607101 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.973832617 seconds)
  done (took 10.947791664 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269363374 seconds)
  done (took 1.246934519 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304996003 seconds)
  done (took 1.275076411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.458734283 seconds)
  done (took 4.43394249 seconds)
done (took 53.537383447 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104720306 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127003005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102309674 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124910506 seconds)
  done (took 1.427605557 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108123221 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122712521 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100953174 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120267031 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125913385 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096674762 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124196922 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101437229 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121192231 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097628978 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121251118 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12036214 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099501857 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123744544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093523828 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123972392 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099410239 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121129646 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124627033 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097562752 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119153994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098039951 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125915341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095093438 seconds)
  done (took 3.657777605 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104783689 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119434834 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096737201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118202744 seconds)
  done (took 1.422258935 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106974491 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132562756 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105874562 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125524799 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130781759 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105425153 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117107108 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09246907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120033406 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100169381 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116244705 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138368243 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107427793 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125584434 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102033721 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114782259 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091399727 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131406614 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125015603 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100538008 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11863403 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100238053 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114859255 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109508308 seconds)
  done (took 3.710739347 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178213853 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.131936052 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138759716 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095475488 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159862968 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141409607 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088739154 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140959299 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088187693 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131180534 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118571093 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134742384 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129805888 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088611543 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113877145 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088765962 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128602064 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129781149 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091722737 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128344293 seconds)
  done (took 3.436434437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105678155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12593762 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090821314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.120780852 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100308053 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120777095 seconds)
  done (took 1.650403866 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097031247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122494221 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092443659 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116058075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093813573 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114720251 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088876219 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115037223 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089676494 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115742513 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089558468 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113106026 seconds)
  done (took 2.233464709 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514317677 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120621521 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120189489 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089239362 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125242208 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090573493 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130031376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092137794 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142145299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090052657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116417812 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092012526 seconds)
  done (took 2.706385291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242029212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12552902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284304346 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367122257 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156569902 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165408682 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277076498 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164880494 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205378785 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150190978 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231407018 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197093939 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153895415 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1929346 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138758219 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145719651 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191527434 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251470639 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153186041 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213113901 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207951328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16734426 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181295545 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152920263 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112508615 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193251994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096196182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130583827 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208399131 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206913034 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190293086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161731231 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148004202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238596796 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249135636 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196371904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280021269 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134579531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143246672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166326875 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265520572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139940978 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233993207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15610272 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10577553 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222171333 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168636328 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184021627 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147004405 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139599514 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199124463 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240432488 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194590515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138959047 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300327336 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159427479 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166962966 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199690195 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262915921 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235437427 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198923859 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129766427 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199192125 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198943844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218219436 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.132288735 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210031206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149181633 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183657736 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189786959 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166430213 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204296256 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181354111 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140036369 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170883669 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173387749 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174074208 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259495069 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186886562 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122944099 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168965561 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150180453 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105651578 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194960474 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127455744 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22004584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144389785 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163774896 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208871726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161169367 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16410665 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224266435 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186312976 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150604685 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086064088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156910355 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160198001 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184026442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142286556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16851081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166457262 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139586263 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176975873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099912232 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184903593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117795156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174394429 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183901014 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1287896 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162843877 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154331356 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149626914 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177902277 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201355366 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141733062 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133886183 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208757604 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177726604 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141666272 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177399757 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228567449 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117369078 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149924656 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22958702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223969978 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142143999 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230736186 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152944633 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109564493 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133532051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182236576 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156473544 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165187608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132645103 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184188617 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206203873 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125961299 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139694406 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196532794 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134148 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132444277 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155115368 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120936982 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137668878 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143889164 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146002317 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176494135 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179755217 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154473315 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168084667 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150233705 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249287964 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140318473 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152186078 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122527872 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122309161 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194740304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225402913 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104534585 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232753945 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173226684 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200788676 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196078471 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108295906 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178927238 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130577218 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093198283 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221114666 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168819466 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163087289 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195596413 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222417245 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180949967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182916038 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165509852 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200173809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138617792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183265002 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111047435 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161314957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159163457 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123782679 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113256301 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135391935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149873442 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143230099 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132744158 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198676286 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170043859 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216192075 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158525088 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121984096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207225249 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102524096 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177280584 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206050049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119029226 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.225751711 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193572025 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211654053 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117251551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227376835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093892947 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126402231 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141980363 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170470179 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133411439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108959189 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161460957 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181422433 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206869934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171733855 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206940559 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201443532 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190602605 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095701902 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169918163 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183653631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202573719 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154019086 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14146327 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153656662 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177579306 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155024967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254375847 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170643317 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176736045 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204852821 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15089333 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132211527 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151692926 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178975969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153959266 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176756636 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147371065 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138167642 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161743806 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103634219 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160929726 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212189192 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162928301 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188231045 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14971001 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185562944 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128361832 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162011365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160973846 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165385707 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081229495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202265207 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202687427 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147730154 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16590396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188685273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131701263 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309021187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237687509 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196653657 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138617291 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156618303 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161778758 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163553861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171212223 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179796015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159824623 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189190717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159836747 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136893257 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111986433 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150687979 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153194123 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133419675 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149082739 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178213832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138772457 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189243749 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155337042 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158872541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172871119 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149502467 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117058427 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150450892 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243746339 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185325352 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240336886 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150059827 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178779188 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20781979 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126374152 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10389191 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134104702 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178264529 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13658861 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190940889 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213863409 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201140771 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180831382 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206030082 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113227359 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12164419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159700322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168495474 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202955553 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149395756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150184909 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232038328 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110595983 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131540038 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16692223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288162187 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148036544 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204448655 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108306976 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281548841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105281439 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139076847 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170141471 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233828315 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108928464 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178439787 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171168653 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161184984 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163903735 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149632144 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192312865 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237142675 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200742671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210614889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106264049 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157261806 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175272513 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220109515 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155989378 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111019456 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231204026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196198672 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194249977 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142112868 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169373168 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168301781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1588491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214666434 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108151089 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234814365 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134053875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192716235 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153940725 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138867465 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177596834 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188393158 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141182198 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187566315 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20994267 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108025004 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134799516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166033234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177709288 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155238731 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12982549 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181469278 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126340726 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195654021 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260049633 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134622471 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155961592 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119961036 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137326071 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154714758 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158696898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139956273 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140264207 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227411147 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134267697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192192629 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201279554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198561856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174969659 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145847732 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694550887 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103362432 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222698461 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119948805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234765296 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153325734 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173521039 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161483101 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168389128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194788721 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161707006 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231737862 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220231071 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180842573 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132385305 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158347613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155395819 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143955463 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125710274 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169055867 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159455347 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145931458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179088101 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190874254 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10776394 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141359625 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199271589 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149762108 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184695722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180350113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140278158 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173239055 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213624249 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105978316 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207753263 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208742903 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142648603 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150012146 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134591928 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.121285984 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261468855 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126058002 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188706648 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213089112 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131822903 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167964391 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147227981 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222429315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158553244 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186218472 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142871091 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159262091 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15805828 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137882394 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103238755 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157503361 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166645371 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151724961 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159480501 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164150841 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195197668 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095968992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145263752 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311374625 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177495142 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216504677 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136881062 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136165734 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162437549 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122201448 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.204761955 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180380083 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135652079 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107878301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137196257 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129568641 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136456939 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155439622 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193574726 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164907572 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23541198 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109892214 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279496267 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141147219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155921204 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089456724 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133446708 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150738429 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146527614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156756479 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194049898 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262579978 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149590507 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106611889 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14933146 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126674705 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109063885 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164841751 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166160052 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176799551 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146556609 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109587474 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156236105 seconds)
  done (took 82.811022948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19215959 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133081274 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147969001 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201579971 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176627679 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270078798 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21051358 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254388362 seconds)
  done (took 2.655380448 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0941558 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146317934 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157629467 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132850553 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092070272 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119572863 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343010417 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13336374 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116140941 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121925798 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173867417 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094041715 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548125195 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091347527 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120088078 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107928679 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091653202 seconds)
  done (took 3.748939605 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.166756638 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495623711 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.932810508 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194514649 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159663245 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117838121 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.702533768 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095098502 seconds)
  done (took 11.941435703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114833014 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136874135 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123856981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152512749 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141419775 seconds)
  done (took 1.75563729 seconds)
done (took 124.12882106 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0987441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127681951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098470716 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130910388 seconds)
  done (took 1.521850094 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094799223 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078485456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109302473 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075971457 seconds)
  done (took 1.433956732 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.18959315 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168738943 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410832113 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071976633 seconds)
  done (took 1.590653516 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115578485 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132844726 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105047021 seconds)
  done (took 1.439482184 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106843914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129744315 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104008814 seconds)
  done (took 1.421456548 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105890008 seconds)
  done (took 1.185123772 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107708233 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137451088 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109677315 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136144426 seconds)
  done (took 1.572042264 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098367472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127231759 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109001383 seconds)
  done (took 1.413643025 seconds)
done (took 13.014273143 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103295875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422856732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385381188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145637852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721782221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38049307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036975209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146670982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165716587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092653818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139862002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671989951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.065775182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379059758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024893808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471237508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675997274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120606917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119438531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094520734 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.02171327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092012407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121549249 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093340466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703318121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426284329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094832399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.470738497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092706439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126644154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382839764 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123502451 seconds)
  done (took 17.182868763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095732154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173244882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098429459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137447993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124402796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094978338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126848261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093622416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179640843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122850178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11046962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12202988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125098742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095626756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141682885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09323182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12508874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092950965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121563955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121373567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112235557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120173338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09408298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121959092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093914394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136108383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122350787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093355574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120776416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099412823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126971102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095571785 seconds)
  done (took 4.816936793 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140543608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18328802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128680891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127256829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168250137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123555003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19893473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118502459 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182950294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122324141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139662417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093259099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156852227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121836128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115199196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121392591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096155668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121372344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092601249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12305775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139101524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094028326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122327576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092973593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123099491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108097306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124250503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120650361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093840226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12576217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100171364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123578741 seconds)
  done (took 5.133142221 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097543194 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126334789 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109314111 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138100841 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094650673 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125122605 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097090388 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124508655 seconds)
  done (took 1.999404008 seconds)
done (took 30.216114707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113832091 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.130846593 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107351098 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134075006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103186875 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131312021 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092268752 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133000507 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134100609 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10189832 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13744817 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092639103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12281594 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092652074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135027357 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098403118 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132825366 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102493588 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133508128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131996512 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094515723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133118004 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102538606 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132815106 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104165655 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134279034 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137126461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099684458 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122536252 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094672548 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123669493 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110171824 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132811159 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112283522 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135653699 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105222803 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.131195284 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094981885 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132768198 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133092106 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100720941 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132519824 seconds)
  done (took 6.041799367 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109834671 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14987933 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105148369 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080826256 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116108823 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081199101 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138646091 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079219127 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109824854 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107922776 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074324703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106357526 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078712178 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101381281 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077553038 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075345436 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108530986 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076623544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077180111 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10576183 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079950574 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073342453 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108153331 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078838728 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074684578 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109488494 seconds)
  done (took 3.579279976 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100787919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134276093 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112997117 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184566563 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16001915 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099652988 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132191785 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139578541 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109162654 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119966577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097089247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149753685 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109640854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129687054 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092005533 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137513999 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135428515 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094607105 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128462906 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112977052 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138121884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103940518 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140895955 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132678033 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09242514 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122651259 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096636924 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135005397 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098479459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130905959 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096183722 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124759351 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122844258 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105071837 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12726426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094044318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141491473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102518562 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130733343 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121752761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100691501 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121934172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11444456 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161242923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091917547 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129515778 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123732338 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103515224 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12108664 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110902255 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131244658 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092198111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126630923 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091544261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12135114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106993339 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123459359 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094697212 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131710089 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127485324 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105732775 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124725757 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108657555 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123235603 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100367385 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12200579 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092853457 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121195167 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144090021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095083314 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161733108 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093549074 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124852259 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102569764 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130519896 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128321231 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093385867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137737806 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103301795 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125467064 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103002203 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1259631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095736789 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140396606 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123808786 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095272677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12290354 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100832226 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124271158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094139071 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136741158 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09173555 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125061198 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110562168 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122149492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12260504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099666246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12632665 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092422687 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135649779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098318064 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123088198 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131973284 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093666041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124438555 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103177811 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126387671 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091904441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127506834 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099642127 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123356028 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093809375 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126521101 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094168705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132451919 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128965274 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098812522 seconds)
  done (took 14.813926057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227905286 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21632661 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20679926 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295312191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135910602 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115935997 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21290146 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15696636 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123791043 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160894772 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172983643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182205849 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170623949 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182178776 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171351729 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093262151 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143154516 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134526921 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244477733 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258469759 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144270533 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101397025 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162380888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159727386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137629991 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131864935 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110406038 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134261447 seconds)
  done (took 5.800326367 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111166191 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156094433 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098637872 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144992425 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149426286 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092668535 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128239954 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095586588 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135563719 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137006156 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093904767 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129941183 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100406286 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132193888 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123374472 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103623778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132677689 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095023208 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126484802 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097140112 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133464303 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101949412 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12712643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121484746 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102525619 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122425003 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086467945 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142720247 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122043649 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116160622 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120896058 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102043696 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137429698 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094146825 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124253083 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096442201 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126349261 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0965118 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125890809 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092703948 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123377638 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078058325 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12304873 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137502957 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100723868 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080605499 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129631351 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128205933 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095411064 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120816237 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095806024 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125425985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097036671 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130818586 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097121092 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124908333 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096840832 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116015259 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100472121 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125174942 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085043998 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122187601 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098811794 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118678197 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101756928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127919557 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093115704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125438429 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097212865 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129482165 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095966624 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129714607 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09102362 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125732285 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096707272 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129006251 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126227973 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093650498 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122131628 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094669847 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074876787 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125727793 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073953755 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125607131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092310044 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122382803 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095208521 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130268018 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137598886 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09611432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132344113 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094580331 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123411786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097266679 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11390993 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098563909 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14115136 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141880696 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094720519 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122336934 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108166251 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126707808 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094929595 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106897619 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10241808 seconds)
  done (took 12.996811072 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132778765 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156610399 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12598817 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112590598 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157214418 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.165139201 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10093129 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131238702 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096753243 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142511304 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093568416 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132014516 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094226353 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138272873 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158268391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10705179 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126625873 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107540344 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128105961 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169211114 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111635271 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142610771 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111013802 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124924539 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129225283 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110722615 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161145348 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107768398 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136961459 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142416852 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108665355 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161367249 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144148972 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098911892 seconds)
  done (took 5.49620787 seconds)
done (took 49.816064266 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208549625 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440079254 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193021548 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.139107104 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.195114556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.235700607 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205695313 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194959791 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.746381104 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196198067 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.414961329 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.709387148 seconds)
done (took 59.998797911 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.287872755 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.344929326 seconds)
    (2/2) benchmarking "String"...
    done (took 1.472263384 seconds)
  done (took 3.932042281 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.721212471 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.130509704 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452107883 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188408584 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189878952 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.484710005 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.841842793 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.5346467 seconds)
  done (took 27.936297992 seconds)
done (took 41.9937242 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202451265 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.25044056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229147779 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.167321835 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299979153 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.221527932 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.528263146 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.221288207 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205514359 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.176860067 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.210562573 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189537156 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213591153 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.566787581 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196064983 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.190060629 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237315202 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.683929542 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594219253 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.196362304 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.192334943 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.226741511 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211634851 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.200073136 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251577385 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191121737 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207542175 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.217064884 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.743402011 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195724446 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202036233 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.747334919 seconds)
  done (took 190.483228373 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190763985 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.122171645 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.230677317 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220873411 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.635398928 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393274837 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.336375438 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.711579111 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215340136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223844394 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.432442988 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196613373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.504775202 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167405932 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220171372 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.254998919 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.419432002 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.505103277 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233164406 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.337898932 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201978408 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.427877103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.336379811 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.383140171 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.227418116 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.320011946 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.240076303 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.24667378 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404239756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.338332663 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.251275506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.222473749 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.815100506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050753343 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21793203 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21078471 seconds)
  done (took 149.56391025 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191890549 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19306281 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192846768 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22413065 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192097071 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.765555696 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773608134 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.70488573 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.402397657 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.534761504 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.448535982 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193470218 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288153054 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206112516 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193494806 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207765779 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236014661 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198515481 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193094584 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.753838171 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.205210322 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.288401977 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389346491 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.20920441 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227474049 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584096024 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194227675 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226828121 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.532781064 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.527841077 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.244133731 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19394643 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193995455 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.574142005 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312135484 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196597969 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227282996 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194847336 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475569725 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193399354 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192728105 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.194352632 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195491567 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877453518 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19986394 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.755316068 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194455586 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166034838 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199886081 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194264848 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.984954332 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.849321968 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.217974727 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19439754 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198032037 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194788952 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195094484 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226453163 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.966718221 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289143784 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211919698 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195456205 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197826525 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226891394 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195554193 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.436973395 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196067133 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.202197735 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249984954 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309966603 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.763208649 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20252447 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295817665 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318456652 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196725528 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197745236 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19671953 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195705694 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307274598 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196269837 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.605849679 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.373110319 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213905923 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.539927493 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297348195 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195853103 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607817117 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202173111 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197149747 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946743621 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294243281 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196377387 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197893372 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196815038 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.606630096 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198035928 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.773643588 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478592801 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204041391 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.954772985 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203295254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.625471944 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.749667332 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880627795 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20339218 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311544162 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37390984 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214956305 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198878807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.550854457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201604305 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257345844 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19844495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596553426 seconds)
  done (took 366.036271665 seconds)
done (took 707.198335383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.802301973 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.796477264 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906332949 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.786525707 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.752703408 seconds)
  done (took 10.167835428 seconds)
done (took 11.291928885 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383848132 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384567367 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25863014 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387411895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231605095 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409331666 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363565203 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224536272 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299994713 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.281243295 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304022615 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251419308 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240306829 seconds)
  done (took 18.145065002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518031429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510986227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262174545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524780841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238352872 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51366534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421037335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411864527 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413052681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23339949 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213417899 seconds)
  done (took 16.386512521 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521980559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.509572245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267542296 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515190822 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242119201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512145303 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405540955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416613768 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420384785 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233946935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213279456 seconds)
  done (took 16.383161477 seconds)
done (took 52.039055162 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209894289 seconds)
  done (took 2.335957801 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243503353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410129517 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231764312 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214645414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209888334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211636596 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215940522 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210987957 seconds)
  done (took 11.074626034 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205893985 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20738885 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.207502671 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209310403 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208748218 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206800366 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210076064 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20735806 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209647751 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.206879184 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209043153 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.211575846 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206585167 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21109819 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.210546877 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20710832 seconds)
  done (took 20.462298182 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209815471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.206923526 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.207334236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.208499286 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209106584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209031572 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209564024 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208306682 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208995631 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207832612 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209541603 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207884429 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209302401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209521469 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.209348447 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208627587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208320062 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209092432 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214158435 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208386952 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209629831 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209688265 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209365136 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208678559 seconds)
  done (took 30.147148977 seconds)
done (took 65.145801444 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.832999291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.89038846 seconds)
  done (took 6.851917628 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.212054661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.211829189 seconds)
  done (took 3.554655105 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210051293 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.211297039 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211467893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211991058 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211227641 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211170717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211539904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210527526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212217282 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.212132629 seconds)
  done (took 13.242729682 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210990904 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.211416427 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208709534 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213101308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211909516 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.210211514 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211802349 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211825362 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211830862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.210353951 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212383764 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21090477 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.213202141 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21044193 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212743095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209918268 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209470309 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210862504 seconds)
  done (took 22.931548921 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212678865 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212997165 seconds)
  done (took 3.556964095 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.210391827 seconds)
    (2/7) benchmarking "second"...
    done (took 1.211505504 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210761886 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210165032 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211138582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210520998 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21101481 seconds)
  done (took 9.606878114 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215515636 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39201976 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.471636582 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.831487478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216347043 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217567524 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055906393 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.219069642 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220149319 seconds)
  done (took 13.971222456 seconds)
done (took 74.845208994 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.245007752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231380497 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.50015709 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.224229948 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229279504 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.506661788 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.254060028 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333623067 seconds)
done (took 37.656531892 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.214045494 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189169732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.985337549 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200154399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271955567 seconds)
  done (took 18.777886609 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243122616 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54798315 seconds)
  done (took 4.920913369 seconds)
done (took 31.044449634 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214154434 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212540686 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21557681 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209171651 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211995873 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212638215 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.20973988 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210602486 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209549013 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213744292 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214142906 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.212217315 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20923914 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.212922751 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211747912 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209991044 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210672513 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213339382 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213512145 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210692696 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20946982 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212305188 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211537205 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209446706 seconds)
  done (took 30.210293631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216071665 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211915417 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212082246 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212417696 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210319566 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.211077102 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.211653353 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.208847337 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.212657983 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212413716 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210399848 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209275367 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212347749 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.209139108 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211048749 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209182088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.212647841 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208728152 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213184375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209445436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.211989853 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209919423 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210864403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211645346 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211074373 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210424324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21289741 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.21019376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213239842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210299585 seconds)
  done (took 37.46874104 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218021026 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220245436 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21346829 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.21318732 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213337297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213153139 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213715274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213809735 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213174135 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213256721 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212580017 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.212703017 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213783733 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213919211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213738855 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21419612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213525655 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213824277 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213212261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.212848897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213735936 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21348051 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.213057272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.213282648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21459846 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213509744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214872624 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2137485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215053876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214512896 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2145045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.214708424 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214367092 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215331119 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214880451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214821615 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220600487 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221358381 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21502994 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215094513 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216145079 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215791683 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215880446 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215242213 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.21572616 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216203145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.215128678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215530994 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215920127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215340207 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216371086 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.2156992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216115222 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217367529 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216692368 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216803762 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216475527 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215964378 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.215632315 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.215872582 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.215963562 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216255368 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217095455 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217971737 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217184557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215867343 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.215682697 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21619376 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218127223 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217214324 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.216969784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218849604 seconds)
  done (took 88.635747611 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216691504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215353411 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21450397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216272995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214592065 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218219266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215691268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217838202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215082684 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217924806 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217520618 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216299185 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215210642 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219102613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217189905 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215962435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217503028 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215928546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219761447 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219100035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218744049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215602151 seconds)
  done (took 27.904383556 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219713589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220651633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215416892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218647182 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217625024 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219575673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219888264 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220278592 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220259796 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216003742 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217293888 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218161764 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216543541 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215549847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217023207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219004767 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218768649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218593476 seconds)
  done (took 23.064076049 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217460629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21677933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219779109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216489986 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217030408 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219762315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217539846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220489532 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221466009 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218297658 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220166616 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220943895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.221718525 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217580831 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220909039 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218141228 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22042494 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219657642 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220978586 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218751678 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22058894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220434526 seconds)
  done (took 27.962299141 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22171484 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222331127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.21803644 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219082759 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21983812 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222290026 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221653497 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21898346 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222022835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222767146 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218520524 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.22097949 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220306133 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219986729 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219581509 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219077405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221361225 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220403059 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221536328 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219408562 seconds)
  done (took 25.548774273 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222829668 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222161561 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2220431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2232061 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223018534 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223728115 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224063278 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224471822 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222819836 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223483896 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223733233 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223431902 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224206748 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22305951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223642734 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222364187 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224057201 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225571459 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222844785 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222908025 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225230595 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225266044 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224354606 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224657088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223336 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224544949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223653893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224556049 seconds)
  done (took 35.403010508 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223789033 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223682997 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220028831 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221321916 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221366236 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.222464381 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220459755 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222473667 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22293972 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219627085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223410448 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223077896 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22419368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.224603673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221784883 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222582035 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222799777 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221065848 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219756955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220040343 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224071595 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224579856 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222926656 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220318472 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220574307 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222746984 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220975475 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220737784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224819688 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222349329 seconds)
  done (took 37.805113312 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.241739858 seconds)
    (2/2) benchmarking "in"...
    done (took 1.241603989 seconds)
  done (took 3.622871354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220953603 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223417986 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.224416525 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222521256 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225264595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225019073 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222440815 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2207045 seconds)
  done (took 10.924002695 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.224039793 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226215855 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224751985 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225552267 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225397943 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224628854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232004131 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243788086 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225821778 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226084099 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232022694 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.232977463 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22747352 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.223935779 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.22440449 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227383683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224336033 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.223788451 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224961431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226648118 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224197677 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227584876 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227836857 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.223423802 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226116047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.23673256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248008939 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225309036 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224987575 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.227482988 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224927412 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222878871 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225455114 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22551173 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226243195 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226828558 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235436366 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245528439 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232041876 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245128267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226992122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.223353955 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226600512 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226830203 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228284763 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22664138 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226635597 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224264805 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227088132 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.230426458 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.231897012 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227248718 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224704931 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229487808 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.226911035 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234946936 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.245750017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231257661 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237291191 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238366706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261173637 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251383154 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23044945 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.228502634 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238232464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250684675 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233822802 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243738144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225641248 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226654496 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235154641 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258703345 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253451656 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.228516855 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227911338 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228201288 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228451894 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227773116 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234975054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249615917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228224211 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231688398 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2374258 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252409621 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230297637 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226564584 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226791172 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228140869 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229284396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238975847 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246592123 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228686028 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.229182236 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.227052608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227872183 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228317275 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227758473 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228507404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.224831952 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229418203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228948744 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231313905 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.236366377 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228299978 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228514514 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.234273196 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247202681 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229125344 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235128841 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227519749 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228192219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.229613417 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234748556 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225143293 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231289761 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.235764087 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229658827 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229041952 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.226802109 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228561806 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239247842 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252610297 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228401882 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.227573901 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.234084988 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240390079 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227704747 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230370723 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.227611197 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22599692 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224912117 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.230814587 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.227648878 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228951219 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228786307 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229347698 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226177848 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228026449 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.228706426 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229528945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230248942 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23060616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.230653375 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.232573308 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.230095947 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230602143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234760618 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248406127 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231190288 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.231059606 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.226377719 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229667128 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231200957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.230320628 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229747088 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230630043 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229898874 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231378855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.229850473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23027807 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229619184 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.230970341 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235316043 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.230578783 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234950818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231570103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.22819411 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.229912343 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.230464521 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230424954 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232062504 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.229847195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234096354 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.237720351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.230766168 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.230810491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.23312102 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230700314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230417063 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231137301 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234816849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24049315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.230943543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.237544469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25125905 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232356473 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.231757261 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232636233 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.232025197 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231846387 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236215153 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239665922 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245040659 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257539539 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233238599 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23722558 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234181057 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236763366 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236215118 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231808053 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233104868 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233030747 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233694328 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232634408 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.23505702 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232706109 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.232563276 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.233302168 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.232970799 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.232843467 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23431532 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.234319763 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23516639 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.230832287 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234944485 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233277372 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233972606 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.231088993 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.233960536 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.234106379 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232840853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235363553 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240600075 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23098988 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235983972 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235185295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234667833 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233473439 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.234827131 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236500794 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.235294827 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240453621 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.253644576 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.235542767 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242204899 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.252061338 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.234146962 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.23677668 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235663148 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.233465079 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237683465 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.242339193 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235132368 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.234402015 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.234812492 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234995956 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237624116 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.241454393 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250416695 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.23441996 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.235730551 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236326249 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232187188 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.236127155 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236649632 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234990622 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235210751 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234715745 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23486176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234847989 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.233950273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.234874427 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.235633631 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237456393 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.241651083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.237982078 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234335763 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.236196215 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235123382 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.238218933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236553701 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.234654828 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234621754 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246615933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.258044731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240605408 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25330104 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.234746091 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240751755 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253973672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.237264853 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23408485 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236219201 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.235558163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.234258678 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.233791324 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235315054 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238111321 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235619673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.234520929 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.238390803 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.233779362 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235287191 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.234870336 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.234934828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.235260729 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234137627 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234636014 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.235853205 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236064702 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.23439286 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23564443 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241042987 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255145633 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.234534164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.23463884 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232379009 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.235070394 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235923999 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236207398 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238310947 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.243359445 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23695665 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.244058261 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.23552602 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24389584 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.234619322 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.238162086 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.241882181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233077725 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232845055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.236054021 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.234378723 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24078449 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253160653 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.236265722 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.237199971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235434433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234016717 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.234684031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.235438968 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.234220125 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23564249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243143253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253948725 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.240988463 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235720025 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232611405 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.234795383 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.236304103 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.234302992 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236753649 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.234703563 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237893797 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.236108062 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234437937 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235426611 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234848666 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234578697 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.232245603 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234214907 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24280633 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254360787 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238284049 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235426244 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24172058 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252868031 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241746198 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253838242 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.237782421 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236208055 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235122224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235480301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.235653876 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.236945117 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236863541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236705836 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24117638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.235370363 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.236628412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.236976685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.236115636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.235051422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24414396 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25559998 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.239227422 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239949873 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233773094 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236157825 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.239737916 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.23604737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234270681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.238959442 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244877635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244203245 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236812885 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.236789071 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236524525 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237047536 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.237123597 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.237052974 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236862277 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237727032 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237844715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237420187 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23962627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235945702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237250262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237289588 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237808099 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.24766365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.256119374 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.237614696 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238124893 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.239036657 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238877195 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237798106 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237962218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238515173 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239070472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238685951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243180834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.24228521 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240417345 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238873008 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238646124 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237858103 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238362039 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238339792 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237774015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238267113 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.239975572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238478858 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.23880126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238817929 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238579883 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238566096 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237874169 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239837373 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245011671 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239570341 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.236611474 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239453553 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239206091 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239079521 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23994351 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.245904655 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260821544 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.246882505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.246269964 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242952232 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.240376108 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240992937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245916541 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.238709115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241421284 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239600534 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239883269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.24010973 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.242658274 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242578461 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.246275476 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.25780443 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239800052 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249464946 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258676055 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239993287 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24156604 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.24364768 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239626016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237832104 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.240800776 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.240682639 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24755042 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.260463025 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240890219 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243241827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240759361 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.241064035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244729557 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242101758 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.242071557 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.239559289 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.241607224 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242006107 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241440799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.238153709 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242057319 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240230259 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244274376 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247337974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240236217 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243710804 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241823808 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242857932 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24208212 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241571685 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239745694 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.240550874 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24154954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242607096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.242371808 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.24510415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242694608 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244383757 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243569017 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244183291 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245414999 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.251285756 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24843082 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240727581 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242407538 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243504178 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245232906 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244567324 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242976179 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244718353 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.245167887 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.245214471 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243081556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243175178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.245867244 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258591016 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.261156703 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245419707 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244394884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247211153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244261828 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.241533887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244396183 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.247600692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246425895 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249657549 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243873237 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250752381 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261470751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245268118 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247466006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.248988704 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.25020021 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246937991 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244949993 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.244669031 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.248355109 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258808335 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24452554 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256364984 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271440481 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263181217 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246322039 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.245829532 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245320605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244960139 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.246762534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.2478207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246755552 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246147365 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245984234 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.246846903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250822697 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246335126 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247694406 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245908168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.245661592 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.246652886 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.244985176 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.248137151 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.246589864 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.245845209 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246735813 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.247162827 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.245884151 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258697751 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.270680086 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246377828 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247318093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244763791 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250639008 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248871515 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255097602 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252143783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247867146 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247602048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.249268966 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247951224 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.245249041 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.24755729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.247918505 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246730571 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.24577134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259676641 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271180436 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25222397 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247178404 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248963871 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.24827979 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248935511 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247694095 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249067986 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.248182268 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.250504661 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251840055 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248206865 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24819133 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.251701176 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.254293667 seconds)
  done (took 739.140986171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24620978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246934977 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245809468 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24554004 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24674544 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247745041 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247703584 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246846196 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246860298 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246793096 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247143214 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247330484 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247929591 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246349104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248412357 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247794994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246991086 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246719343 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248329265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247099809 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247080759 seconds)
  done (took 27.35039291 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24915033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.2481401 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248982049 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249698264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248587762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250441268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248835518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250889666 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251521579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248635008 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250281237 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25206557 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.249913853 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248540173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248706999 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253440591 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25148057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247812074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.250654522 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248415047 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252014021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248921864 seconds)
  done (took 28.659939188 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251911941 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.251488633 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251396795 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.248964037 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251430322 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.249185137 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252668892 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.252567142 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252323672 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.252932766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.250423981 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.253881546 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257914979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.254983141 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.255221942 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.253785627 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400008534 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.253348254 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252561834 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.252775411 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.249246354 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259080668 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.269440604 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.250660418 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.252262829 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.253758442 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.254087983 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.253063835 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.252873041 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.253775043 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256490492 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.252508079 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253408977 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.256416314 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.253127315 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.256495308 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256994231 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.254057068 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.250948688 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.253779819 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263689955 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271208322 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254713784 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.26004785 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.271987981 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.254039398 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257673673 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.260133084 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.252034602 seconds)
  done (took 62.803909887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.254674947 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.254831363 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.252214435 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255945864 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.255465397 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.254160188 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.25470224 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254455457 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.252465554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.251867508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.254464296 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.253057312 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254342355 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.255021249 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.255449508 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.252015709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253206137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254380503 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.25390534 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.253535713 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.253244812 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.254880527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.255756078 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.253888272 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.255450527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.253737329 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.253493105 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255612072 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.252695023 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.253182261 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256878343 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.257258757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.258228947 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.254293892 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254756098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.255564851 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.257958832 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.254323293 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256888137 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254891011 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.257891777 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257641664 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257550596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.257928969 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.254637131 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.254532324 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.255567172 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.255287453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255625736 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.257973711 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256943005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255123432 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258068989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.254276348 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258219167 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.258702793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.255851046 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.255295073 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.258916489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.256584393 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258134521 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257881257 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.256303092 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.258836931 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259128241 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257169458 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.256036024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.257900756 seconds)
  done (took 86.54594319 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258255863 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258137822 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258249507 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259798454 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258581285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.258132986 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258431602 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258603039 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258074004 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259253209 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258136157 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25833456 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.258707306 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259037175 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260418643 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260151973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259892575 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260329568 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259813459 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25873742 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259542756 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258429923 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259867443 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259416979 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256441256 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255402239 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256801922 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255124839 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255873863 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255342884 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256696689 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.25651602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.248888948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.249671665 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.249985559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.249486346 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250606456 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251094189 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.250681081 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248982244 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239308196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239385435 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23949497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.240040392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239917443 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.239721089 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.239198453 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.238889926 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.233196941 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231721505 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.232847173 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233108211 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232751494 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232801962 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.232921201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.233932439 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232486418 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232774494 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233709289 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.233231891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231884176 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.233649208 seconds)
  done (took 78.614976922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233911357 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234812991 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.231016735 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.231928501 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23443944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232027581 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233386509 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.233959111 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234808324 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.234076916 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23394304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231138099 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230955852 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233540477 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231385108 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231504755 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230783735 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232686537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233857154 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232986799 seconds)
  done (took 25.806027857 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.232719272 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235238328 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.232487205 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231721162 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.235134785 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.233651975 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.234160826 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235199891 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232641812 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235991256 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236225269 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.235321415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232839524 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233495107 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.236047279 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.234238838 seconds)
  done (took 20.8958099 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.233371162 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.236213875 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.235620438 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.234680738 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.232801437 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.233157176 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.237009634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.233599355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.233913043 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.237477714 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.237066091 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.238106512 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.234658998 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.234800507 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.232120353 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.236426952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.233191407 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.231892454 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.235682604 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.235933036 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.232526028 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.232242945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.235873348 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.236313075 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.232697567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.233441075 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.233115183 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.233585887 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.234427579 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.236096948 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.23286376 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.235152876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.234695595 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.233358974 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.23664065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.23392346 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.235397386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.236202754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.238247383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.236679615 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.238001179 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.23433963 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.237115184 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.236838841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.235467416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.237512882 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.23473531 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.235377153 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.234458645 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.235479135 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.236920201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.236576134 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.236813571 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.238677342 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.236769556 seconds)
  done (took 69.086266148 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238571926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.237656077 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.235359642 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.238123328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.237963722 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.234928932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.237919892 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.23739033 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234787689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238281488 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236618751 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.239509871 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235128521 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237893857 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236652677 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238580468 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236016893 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.23635907 seconds)
  done (took 23.41926663 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237175677 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.236254063 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.238861533 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237065893 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.236422687 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.239934484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237244175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.240186289 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239473048 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.238533179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235839352 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.240467913 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238529514 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.240300815 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237797161 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237189948 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.241616583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239760193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.238252052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236586131 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24088687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240244639 seconds)
  done (took 28.400947828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.239388437 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.239279122 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.238979249 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.253542815 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.256009259 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.261253255 seconds)
  done (took 8.642300201 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246441999 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241441835 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238708605 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240544789 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240991009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237224696 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238384723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238185125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240780811 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238968694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238815904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24127466 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241843387 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238456331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241021081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241524368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238554971 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238604762 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240221535 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242556943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239532936 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241876334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239557719 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23937156 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238397471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238092579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241466644 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240876369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239787162 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241833415 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241194205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239918196 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24253895 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240745849 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242148134 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24184202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240621004 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242992978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242712383 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241444071 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.242996279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243562768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242140367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240031289 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24260816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240484601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240145612 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241510944 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240276221 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243630958 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243053652 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241788979 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243592845 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243407743 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243552505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243211996 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241202521 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241652192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244147506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241578468 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241260322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244298217 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240324264 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241421047 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245209175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241765347 seconds)
  done (took 83.09649944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241353472 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242065184 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243865459 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24339816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241939527 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241202525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242282326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24169126 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242081145 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242220755 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246187285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243789874 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243519676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242553509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242454009 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243735735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242224813 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243369617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243256076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246578954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24370049 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242908141 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243292616 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243846539 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243491786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245989642 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244433966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242430668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244475039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242530121 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24374953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243730567 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244654315 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244493013 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243891717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243253305 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243722188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24364316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244656702 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246775483 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243805921 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246784176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244211814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244412782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245380266 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243518743 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245355027 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244340898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244317143 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244226036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245024381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246284603 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244932091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245022775 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244525568 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244427408 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245690164 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246605907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245409743 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247141953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245351536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.245578433 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247596033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245324301 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244641822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24517509 seconds)
  done (took 83.274357266 seconds)
done (took 1715.417592823 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.40972538 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.363056275 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.24781105 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.246471775 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.248220448 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.26559091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.267796807 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.248100586 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.247789445 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.247511006 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.247467118 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.435360146 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.248415424 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.248434157 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.248648751 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.344533598 seconds)
  done (took 41.727087112 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.274434813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.255387729 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.357126761 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.275485941 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.273770419 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.425041638 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.307706759 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.254625622 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408228638 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29688002 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.686439055 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.274477451 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.253517174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.273736002 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.270778278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.424928802 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.482717759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.692747611 seconds)
  done (took 28.65180288 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.662346148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.245222134 seconds)
  done (took 9.071125676 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.270639572 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.254148348 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.253187445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.252750663 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.245333666 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.246107194 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.251513628 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.24920448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.622683067 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.368693115 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.254423268 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.262095736 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.271243908 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.254757611 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.251268589 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.289159727 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.402818538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.25194493 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.251174945 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.259060549 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.253921291 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.356700056 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.291597431 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.252069265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.368835096 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.572529627 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.259923282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.259144897 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.382044288 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.250896062 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.250665801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.251401584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.252972977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.855841951 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.752387289 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.266726191 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.273809002 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.260059754 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.249194381 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.414531941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.251269716 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.25836876 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.243855567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.749222759 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.399733267 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.363083919 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.367370133 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.27358014 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.254441264 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308042122 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.250336769 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.249289101 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.276327291 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.99589167 seconds)
  done (took 106.24934955 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.268802921 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.630805509 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407949236 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.262402864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.8440779 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.898181469 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.26086686 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503066411 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.285533229 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24030597 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.526609933 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724491922 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.258606449 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.256431977 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.28844787 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.238041707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237044777 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.942795366 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.254178047 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.234079902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713877583 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23943958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.238962703 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.389599526 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.270022247 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.673147209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.506361713 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.676423733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.254887773 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.234092075 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.672903637 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.26217003 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.304455813 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.233785599 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.486527346 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577646048 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573730165 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.254258196 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.280824048 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.234735448 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.260787319 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.667590845 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576355403 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.253145691 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.255450988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.690120347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.252493758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.239400952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.236932653 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.431284462 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.120626244 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.239708669 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.504197416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.239593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.53156521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300437497 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.306891475 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703251135 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255074476 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.310308285 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.295659376 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232985774 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236727987 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237092901 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232902067 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.556977723 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.616508877 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.237632046 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.562805156 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.684387843 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.250237889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.744483395 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.054185918 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.259050121 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.285093421 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244213984 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.751469805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703362145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.263006952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.232056066 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548899236 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.2468895 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.504347795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.251496487 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.234714997 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74037263 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.242778991 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.257445033 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.236322281 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.255986456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.862560079 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.240451917 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.487752915 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.264270697 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.234383255 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.236064424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.285649551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229674112 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.253588181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.238288353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.725744347 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.252622843 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.338662115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254182076 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236743801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.236889695 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.231694037 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.23864924 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.448660246 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.681419925 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.25514566 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.240083614 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.242856506 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.237784563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.383520704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.24021843 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521424793 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.254871393 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231877672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.23761793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.906319855 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25114979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233981449 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.243574994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11078969 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.443714481 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.255321124 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.235076298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.240566093 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.253043373 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.411146844 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258003594 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.272657083 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.241216935 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.908276966 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275581774 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.241446379 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.777627004 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.246247604 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.121573248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.258785916 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239071421 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513334096 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.495726636 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.507039149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.232374592 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.247475456 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905623836 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.252509198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.369508068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.255532203 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335089442 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43397436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372453695 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.238670106 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.861235081 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.232194045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44513089 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.239504494 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527250599 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.703445836 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.247718071 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.247372628 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91678156 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.961345125 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.904573245 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.24113212 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.501928597 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.186821684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.720326812 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.236246195 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.24892728 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.669718957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.243240893 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.242436706 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.240905371 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.241358697 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391481511 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.410826099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.853530699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.236587674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.666707022 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285220114 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236198024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.25793829 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236651235 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.58919077 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.289547059 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.243743785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.250790334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.241624514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.247718533 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691633292 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.110547379 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.242250198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.392366538 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843507381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.252292651 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.243091574 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.865512212 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.530250233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.729699551 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.298884513 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.528909436 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.254482459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.276810355 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.78942884 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315869986 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691272374 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256803422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.244867523 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803758318 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.258128172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.312030369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.238850007 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.241954907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.743606739 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.260741094 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.241315412 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.37167488 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.256045214 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501039059 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.245829116 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.249962327 seconds)
  done (took 1087.576370601 seconds)
done (took 1274.436666078 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.245084884 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.244485142 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.224133728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242741489 seconds)
  done (took 26.114276223 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253143637 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.249518747 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.249694338 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.246253276 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.248238177 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246968035 seconds)
  done (took 8.654941056 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.304351338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246429733 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24630957 seconds)
  done (took 18.957931288 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.441354792 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.451833709 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.551848043 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.307679324 seconds)
  done (took 9.913499738 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.253491765 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.250941304 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.250854562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.254917538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.253996514 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.252363038 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.250430028 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.252890152 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.256640711 seconds)
  done (took 12.437671452 seconds)
done (took 77.237202331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.95670758 seconds)
    (2/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.439944343 seconds)
    (3/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.060500119 seconds)
    (4/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.0765548 seconds)
    (5/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.24443591 seconds)
    (6/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.797894034 seconds)
    (7/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.333802739 seconds)
    (8/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.185577955 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.289082257 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.482740721 seconds)
    (11/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.26375998 seconds)
    (12/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.328690985 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.119514866 seconds)
    (14/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.536530364 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.288151957 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.589370824 seconds)
    (17/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.754083841 seconds)
    (18/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.838977283 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.27354654 seconds)
    (20/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.232828213 seconds)
    (21/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.445537296 seconds)
    (22/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.289333817 seconds)
    (23/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.049059798 seconds)
    (24/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.261179079 seconds)
    (25/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.974528821 seconds)
    (26/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.938719267 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.048460579 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.962006004 seconds)
    (29/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.815592674 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.653033497 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.092643079 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.26768457 seconds)
    (33/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.600229766 seconds)
    (34/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.58832511 seconds)
    (35/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.230765746 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.248109083 seconds)
    (37/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.400746831 seconds)
    (38/286) benchmarking ("sort", Float64, false)...
    done (took 5.536133572 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 6.24898107 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.94436293 seconds)
    (41/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.235776961 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.229540512 seconds)
    (43/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.175764321 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.225634404 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.379381258 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.275241593 seconds)
    (47/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.276305039 seconds)
    (48/286) benchmarking ("sort", Float32, false)...
    done (took 5.237425169 seconds)
    (49/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.266352048 seconds)
    (50/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980511351 seconds)
    (51/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.609597415 seconds)
    (52/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.468305308 seconds)
    (53/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.38992493 seconds)
    (54/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.595084414 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.106553009 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.377263825 seconds)
    (57/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.258862913 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.357896906 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.512818195 seconds)
    (60/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.561610374 seconds)
    (61/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.348671656 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.256563897 seconds)
    (63/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.281444148 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135687461 seconds)
    (65/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.590034102 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.233065689 seconds)
    (67/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.425466429 seconds)
    (68/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.73460831 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.310149074 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.249992592 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.266133495 seconds)
    (72/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.230424313 seconds)
    (73/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.277294537 seconds)
    (74/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.275215556 seconds)
    (75/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.253945323 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.258764504 seconds)
    (77/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.598069457 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.327318769 seconds)
    (79/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.228448243 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.268134328 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.401389669 seconds)
    (82/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.314853839 seconds)
    (83/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.61488901 seconds)
    (84/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.293815159 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.677073348 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.43626594 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.341006069 seconds)
    (88/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.430227328 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.693408746 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.270496798 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.278881902 seconds)
    (92/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.372504763 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.372272152 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.270961627 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.23460842 seconds)
    (96/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.255448515 seconds)
    (97/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.369090269 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.231774668 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.679064879 seconds)
    (100/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.233894627 seconds)
    (101/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.267182472 seconds)
    (102/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.734463509 seconds)
    (103/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.010545719 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.451894174 seconds)
    (105/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.253553331 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.241728618 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.224310563 seconds)
    (108/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.285999673 seconds)
    (109/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.311493004 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.452128266 seconds)
    (111/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.363981799 seconds)
    (112/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.232101132 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.142261851 seconds)
    (114/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.429286522 seconds)
    (115/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.293144152 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.511378062 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.314400406 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.257004887 seconds)
    (119/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.367817468 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.763871697 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.286754969 seconds)
    (122/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351998371 seconds)
    (123/286) benchmarking ("sort", BigInt, true)...
    done (took 6.252391982 seconds)
    (124/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.532571359 seconds)
    (125/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.617394944 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.450804961 seconds)
    (127/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.279900862 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.969346847 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.518105782 seconds)
    (130/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.335066054 seconds)
    (131/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.230011602 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.572138841 seconds)
    (133/286) benchmarking ("sort", Float32, true)...
    done (took 6.256852032 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.357350545 seconds)
    (135/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.254916494 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.11829227 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.28118899 seconds)
    (138/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.750385173 seconds)
    (139/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.261684861 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.993204658 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.283015881 seconds)
    (142/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.243812283 seconds)
    (143/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.231596844 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.340469561 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.491602553 seconds)
    (146/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.336109229 seconds)
    (147/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.319037446 seconds)
    (148/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.25316508 seconds)
    (149/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.233705076 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.636858776 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.279668165 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.373356879 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.14203234 seconds)
    (154/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.322073562 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.009193001 seconds)
    (156/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.282241448 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.602282805 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.298075557 seconds)
    (159/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.621312093 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.608755884 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883721481 seconds)
    (162/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.012434602 seconds)
    (163/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283162136 seconds)
    (164/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.249067083 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.096573689 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.920845814 seconds)
    (167/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.47579023 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.344457611 seconds)
    (169/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.482651805 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 6.280613012 seconds)
    (171/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.246997827 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.369512671 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.282163477 seconds)
    (174/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.822978049 seconds)
    (175/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.262317176 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.296039442 seconds)
    (177/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.491042719 seconds)
    (178/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.431104057 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.247759612 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.735760092 seconds)
    (181/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.696960444 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.23800381 seconds)
    (183/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.254670623 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.659094402 seconds)
    (185/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.249998254 seconds)
    (186/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.292221847 seconds)
    (187/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.235385995 seconds)
    (188/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.746009044 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.349406661 seconds)
    (190/286) benchmarking ("sort", BigInt, false)...
    done (took 6.274036551 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.326653139 seconds)
    (192/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.356694362 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.917854366 seconds)
    (194/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.732853871 seconds)
    (195/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.233534999 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.234329485 seconds)
    (197/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.293882656 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.275760357 seconds)
    (199/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.826364781 seconds)
    (200/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.764850566 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.379477474 seconds)
    (202/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.605388904 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.346312665 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.775644003 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.882222413 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.466319854 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.35188799 seconds)
    (208/286) benchmarking ("sort", Int8, false)...
    done (took 4.307556904 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.240570785 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.343748556 seconds)
    (211/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.274867372 seconds)
    (212/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.282020801 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.279901392 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.657593055 seconds)
    (215/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.023534071 seconds)
    (216/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.378753777 seconds)
    (217/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.237379854 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.302024656 seconds)
    (219/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.602394054 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.96787516 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.261077511 seconds)
    (222/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.413114593 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.653536174 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.267858073 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.846092218 seconds)
    (226/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.600917537 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.918318922 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.257860253 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.258842638 seconds)
    (230/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.257253226 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.256174649 seconds)
    (232/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.354988313 seconds)
    (233/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.366835812 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.258243362 seconds)
    (235/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.073881854 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.044851795 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.262812003 seconds)
    (238/286) benchmarking ("sort", Int8, true)...
    done (took 6.279922151 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.481498811 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.301628501 seconds)
    (241/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.252800924 seconds)
    (242/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.27455272 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.880251804 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.508253881 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.290015686 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.091877103 seconds)
    (247/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.102065827 seconds)
    (248/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.251935612 seconds)
    (249/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.578304191 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.412969387 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.246137437 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.647113751 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.66741162 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.888837679 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.265662338 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.250278735 seconds)
    (257/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.243256287 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.34292358 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.243752659 seconds)
    (260/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.025563872 seconds)
    (261/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.34605673 seconds)
    (262/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.272618258 seconds)
    (263/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.278011244 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.360090524 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.245117385 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.823258853 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.338229278 seconds)
    (268/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.260358744 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.373574822 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.286701391 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.066973778 seconds)
    (272/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.258610975 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.511205985 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.144221031 seconds)
    (275/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.245569423 seconds)
    (276/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.029096209 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315336994 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.269107273 seconds)
    (279/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.469388171 seconds)
    (280/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.397302131 seconds)
    (281/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.815501987 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.447936134 seconds)
    (283/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.244443843 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.282183558 seconds)
    (285/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.287720007 seconds)
    (286/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.24331789 seconds)
  done (took 910.56886898 seconds)
done (took 911.728651988 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.296108993 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291932206 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.271792612 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.297605113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.386565486 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.295247948 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.287303375 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.278685973 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.324577739 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.325531157 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.27292642 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.2941881 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.277591149 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.273209001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.270863558 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290011866 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.264818874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.272378782 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.2905254 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.282807515 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.287447708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271028321 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.323478208 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.295928992 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.277938437 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.280452025 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.279136293 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.293118904 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.385324914 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.273248488 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.275657698 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.28508739 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26158914 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.26973961 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.269145713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.292714738 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.284175163 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.283940142 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.280475008 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.305857114 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.650948967 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.289362889 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.275308561 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.274092361 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278416098 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279745585 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.278625104 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.282621596 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291296302 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293136543 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.651713209 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.308772054 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.27852231 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.274769487 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291401793 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.27835131 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.278064583 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297038241 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.29356438 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293409498 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.250028762 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.278193142 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.281504896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.292757013 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.282136486 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.667703937 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282893095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.280579127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.657160283 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.299398062 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.666748087 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.296156669 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.278379506 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.292915987 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.308338748 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.261315135 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.268210629 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.279372163 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.281588018 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.276496093 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.287210127 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294626311 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.285278151 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276802386 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295039358 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.303006676 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.293554909 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.28204569 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.286456768 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.300826154 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.284731296 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.290500942 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.283246455 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272444425 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.287921445 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.284555063 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279888605 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279429306 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.283216075 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.29248915 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.64620656 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307667403 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.274400481 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.279330433 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.2802505 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.296509804 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.644021077 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.293062731 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.299339389 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325556964 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.280814333 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253816689 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.280646409 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296486523 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287156724 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.284271885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.273329901 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.256246602 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.635363417 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.308474855 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281268617 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279142018 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296969966 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.280644347 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.275233652 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.270982958 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.280853714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294174767 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.400065093 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.290924665 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311561868 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.277224945 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.284106517 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.301749301 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.299975839 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.311917385 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.283911788 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298932336 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.295541987 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.275585321 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.294654951 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.29327211 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.286217609 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.287398847 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.275541411 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.305700269 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.297079073 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293243663 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.300830183 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.403042893 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.278294027 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25847966 seconds)
done (took 216.036026293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.34450701 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.278222871 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.369721201 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.278853091 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.37645975 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.37751468 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.27499785 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.27590389 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.276132774 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.660274845 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.278482476 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.280295944 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.272697388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279606499 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.364332423 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.280186211 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.280765319 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.623002362 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.281158074 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.353662673 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.281850016 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280369891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283082347 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.663337301 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.27477248 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.277028302 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.355260525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.280110386 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.631530697 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.27741024 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.279066038 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.629673915 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.369802746 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.299701426 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.294817918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290799469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.378204611 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.301745669 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.363837206 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.359824069 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.365544636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.318462688 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.274480106 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.280181209 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.285942879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28506734 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.279860894 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.309036233 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.280017082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28306361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.623883307 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.289769345 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.282929076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.282882428 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.283299835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314603464 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.278036491 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.283261285 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.371442398 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.286925311 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.348107974 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.666791234 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.658113063 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.283149148 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.282669204 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.28271737 seconds)
  done (took 144.949388199 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.352306126 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.357307237 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.391266641 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301419078 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.334385741 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.396605437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.302206251 seconds)
  done (took 10.626789426 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290963759 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.283720882 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331837021 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.333815324 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.282361105 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.461812641 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281547708 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.29449051 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.280906869 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.33383504 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.285896244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283810089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.290454348 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.279184383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330455055 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.295570643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398734999 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.284810831 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.284462467 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439526598 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286326054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296441582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.334877468 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.297751769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.286265281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.293581659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.096042301 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287586772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283451212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.284854659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.282466674 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.363583389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.285511116 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.284376552 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284334186 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.400596668 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.284286046 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283852889 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.2845414 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.28019148 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283983725 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284926453 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.285593692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.282492978 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.285170846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310176807 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.285052777 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.285550045 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.285592019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.288354866 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.334482363 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.286619733 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.283846513 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.283580427 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339465793 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29228119 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.287216726 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.282948545 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.286476187 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283610324 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.440673138 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.333871429 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.28513335 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.334604434 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.288342887 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286452652 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.286442109 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.28652062 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339119011 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.286368509 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335437276 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.28148826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.475574518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.311220696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288114341 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.288484431 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.289499325 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287261161 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.289874449 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.293050686 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.285050855 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.287854674 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.29324954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285277572 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288426322 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456975075 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395358051 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.28491884 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.299063859 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.293105456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.285954897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.341448342 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.288132443 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.286281046 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33994137 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401499039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338186983 seconds)
  done (took 148.920966583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294004481 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.295026302 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.289418371 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302329214 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.289081766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.287092614 seconds)
  done (took 8.956780449 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.294195586 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.290998702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293246366 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.287463029 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.290956948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.290666935 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.290406726 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290428831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.293390402 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.286773558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.290346749 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.290705099 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.291683338 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.288841932 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.288336298 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.289401625 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.289563825 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.287403312 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294251999 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291080262 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.39470141 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.289225445 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290769624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.29074079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.294336677 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.289862362 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297502636 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.289611516 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.292015334 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.298885929 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.313983186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.291709411 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.293219698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.297701762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.295771663 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.29239207 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294065061 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.291667511 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.289967221 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.292589073 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291111508 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291913333 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.292578168 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.292448202 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.295319118 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.295670792 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.297599798 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299671922 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.291590031 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29238708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.293462717 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.292441164 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.294719104 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.2955536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.295588147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.318085702 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.297328785 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.294057935 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.293618941 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29441988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299514123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.294930763 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294487564 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.296591661 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.290772713 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.294499409 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.294212001 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300894533 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294943371 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.293728226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.29776925 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.292570042 seconds)
  done (took 95.442972291 seconds)
done (took 410.083364663 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.56947763 seconds)
  done (took 7.772818277 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.343603102 seconds)
  done (took 7.546941196 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.013500242 seconds)
  done (took 21.212995792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.289414578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.402706449 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.307542779 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.28837792 seconds)
  done (took 26.485682937 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.418183913 seconds)
  done (took 7.617373167 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.289648212 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.296822961 seconds)
  done (took 13.786860918 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.636823604 seconds)
  done (took 7.834120591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.566239101 seconds)
  done (took 7.76594169 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.295371443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.304698662 seconds)
  done (took 14.053746431 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.270628332 seconds)
  done (took 7.470711037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.053937532 seconds)
  done (took 11.255064646 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.301945358 seconds)
  done (took 7.504197454 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.297958605 seconds)
  done (took 7.49674267 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.0111766 seconds)
  done (took 9.21303392 seconds)
done (took 158.218893344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.288609326 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.291590269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.293705206 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.284672486 seconds)
  done (took 26.359300848 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.328577861 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.327433352 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.32988998 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340235467 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.340270943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.328968579 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.32172868 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.320001845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.339880243 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.331610128 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.330216373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329670223 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.328224788 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.321088383 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.330715689 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347499538 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.339381909 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.329766106 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.323185067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.334668726 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.295229218 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33957929 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.331918351 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.298318908 seconds)
  done (took 33.088327807 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.817755995 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.366624512 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.449887272 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.347507931 seconds)
  done (took 7.183480682 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.348778984 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.350043346 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.358810285 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.400025091 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.426004677 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.361301533 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325219036 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.318318744 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.30738252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.352981844 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.430019823 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.367052407 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.430655689 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.296274545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.482483267 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.296012549 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296466224 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.351513692 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.409096643 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.427747318 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.297522678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34929345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.352374609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.366510051 seconds)
  done (took 33.905126217 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.301189724 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.316775221 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.302056589 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.300565692 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.307717665 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.301307191 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.301816032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.297462028 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.29913208 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.304774228 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.297796856 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308402849 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.296264866 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.299327887 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.302612191 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.299719558 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.305032234 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.298142476 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.297386164 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.303270629 seconds)
  done (took 27.243449601 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.294163048 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.23417398 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.640397917 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.54578615 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.294122524 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.289659976 seconds)
  done (took 28.504688501 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.370166573 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.514010593 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.304679587 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.635741367 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.734002893 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.31258103 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.297765451 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52941366 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.836057157 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832298545 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.351079222 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.36876107 seconds)
  done (took 19.290957499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.306981373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.298287345 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.307180762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.315752723 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.350218852 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.319517523 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.308290769 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.292648457 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.355745119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.375709814 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324188449 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350705994 seconds)
  done (took 37.113823368 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382910698 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340004582 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.162919236 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3377488 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038862799 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504918696 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348413597 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003185947 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.317173073 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570569691 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309230321 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384982617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551801862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309803056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302729562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.254741487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536375233 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753223431 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298086547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.220375192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326543303 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301669026 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.302697092 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519165787 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524304823 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.277441546 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.558803807 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07174683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572444632 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315759194 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312413678 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30216941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574511387 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933801941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410110339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502752899 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316486486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842441154 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.288518722 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.214885896 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318648139 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296631772 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310459609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298666784 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235276799 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302383601 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996257675 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.31913175 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.016039798 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301695661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54891869 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399440774 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.304257529 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.871939061 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345445203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311424726 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.304378837 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392036207 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890219675 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612093799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315404557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.238488658 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.300268953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.131239798 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926219964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.318139672 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.306037879 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303527562 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237116312 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.197219248 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321705768 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448224425 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325613653 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.949490702 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970087892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.323651178 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237069222 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821179439 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299288408 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.242102192 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530335 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079330854 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241024739 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.245204925 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23564417 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971044067 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308436645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.645458925 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327708772 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010059427 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52310131 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330712983 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325285478 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525679533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.180184104 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301354228 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.304424383 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432747668 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322661402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997757875 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253031081 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.304088885 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559938068 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.513556014 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303287692 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.258057067 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780394615 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317437428 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.321499551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302256208 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513685456 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.872498401 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335666924 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615349166 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326826951 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.079595387 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997189266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306920606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.311406793 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.30409308 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562934294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.022591626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185622124 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371473069 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309863006 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304558526 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.253788573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15861444 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.187017375 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.492875967 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318759889 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.335945723 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.304903979 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253585752 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.300972633 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326313484 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.089233109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.528790148 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307419252 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58478726 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240844784 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452618752 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314192901 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.526470889 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474708853 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.330024396 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566330391 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306625356 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328558317 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319961426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325767549 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406748498 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327997734 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.308742653 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.566823683 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.310319818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.31099833 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.257904135 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091809027 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310404321 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.313377079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332235923 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878494011 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296796132 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309118575 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220499682 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.322156731 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376120515 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314218394 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513503679 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.100552612 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319966612 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.330834225 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.314631244 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527617313 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318997683 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.259387131 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394461949 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.781242165 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892284473 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340184828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.245082042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.019081505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.002870679 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308958721 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496704072 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309457029 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513386454 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341586716 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308887159 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888073826 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328975489 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.177926192 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.31909579 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321318012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.313996657 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311942841 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.058249932 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64966042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318427081 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.323967925 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453063903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.323404492 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246009124 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.827031992 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316267073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310614186 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.096308999 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346171726 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.167111218 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103933871 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583450844 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311002647 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563711019 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.28051189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.346065117 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.346650058 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311176817 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335794834 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.329310291 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337375317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.32203781 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.182453255 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.755132422 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875227944 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009908135 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856626895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.58498608 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.326887802 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.20828591 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011659022 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260831292 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.968189415 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494990492 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053997226 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273736333 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783774928 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507796419 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079135521 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559274831 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544945105 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.566161555 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.33427296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570205529 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530050262 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34847097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.314608321 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245848145 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.591351473 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857445195 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335101426 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398016854 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013657037 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33374955 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.096409674 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.318091536 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.961558756 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708775435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865341234 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701651429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313350364 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32913495 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105427958 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331380753 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840551184 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931190961 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326632457 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.789529346 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266988775 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518364091 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348694516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.31145704 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.559802349 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.323783581 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.572124201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564728719 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25560984 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.323023888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830701956 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.179974239 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.320922809 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316663823 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016950444 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319253616 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596882381 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.33202368 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.036044781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33956087 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248878141 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250845658 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.006817591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3163454 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29232799 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791148263 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.316028366 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341661784 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322983831 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173325562 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57287261 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.330683988 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887233895 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554741788 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317923632 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345126649 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.320512749 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323294526 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.302536865 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.243505004 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.55178047 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35909056 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546481112 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.2064437 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.224973489 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319805545 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533230777 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212995812 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316220427 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575185893 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.042636095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.336973197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41834694 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356212962 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324174966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334769903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.317455581 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353936124 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404691635 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524646297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.348916354 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.329424998 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707346408 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345865023 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323838523 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333255179 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410411843 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673349267 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.042198819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.096403073 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891569337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041818808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.904873195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583639569 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327018714 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319486159 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254528246 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46444614 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.845401154 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593729659 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448574116 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.330445509 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347858675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321141679 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339892304 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538149283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595683314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.190215222 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32007516 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98574497 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.478079972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32989099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.532426325 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798828773 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869941845 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427489285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321098537 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042471111 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607288654 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.413399141 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323003657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910148894 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.336090198 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.985386368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.33186574 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329770304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472000666 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570190117 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970682253 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.347568162 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.480827928 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.096153231 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.310965772 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581711374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.757730494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527278149 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918697468 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014629396 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588949763 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391140504 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528928853 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.450836126 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470772874 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.334889579 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202716079 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322832532 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169264623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.032940695 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.332490232 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894058435 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600908844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.323226128 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.332228294 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343193564 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.332599063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.547081979 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99668364 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.54440611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332692029 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322329104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.315262579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894530239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588484543 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261720539 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.324646897 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560104013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578165222 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349511248 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.774080887 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.035242178 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861661301 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.295680271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342807035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327131651 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.007759124 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899498488 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.071140681 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813035161 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982680212 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337775861 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601860181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.329805149 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33182264 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605973398 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.32977716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335899426 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538427908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.919556585 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084137694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.338620263 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.357281188 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.266808124 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551361556 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359670762 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267248039 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325526954 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.726417802 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349684384 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45849577 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335902976 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.334568767 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339112362 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.065287711 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62202048 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330022636 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.306662949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.305333318 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348341715 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419652673 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878797644 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347959531 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.005032665 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679033784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583305609 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338641865 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309863479 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.329957443 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327954836 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045617261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.295390814 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342034474 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880681528 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.328528811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.356392035 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332356002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.542666093 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538069985 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332421322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540516641 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354246 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345462524 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.227671732 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.096665507 seconds)
  done (took 1623.623427901 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357536962 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.356367023 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.328819009 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.335578195 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.3701841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352243033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.349640802 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.339366554 seconds)
  done (took 52.028157056 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.334229164 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.484146923 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.359736894 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.328916571 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.335420825 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.334731709 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.777171407 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.342050031 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.336194301 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.338895528 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.342957699 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.331375178 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.966903936 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.338899149 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.342652738 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.318289265 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.342887576 seconds)
  done (took 65.197811948 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.346435937 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.667108676 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.98586545 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.403307537 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.343789382 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.338908521 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.808179757 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.352516289 seconds)
  done (took 58.487614287 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.348121758 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.34514653 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.347063492 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345322553 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.348953201 seconds)
  done (took 7.976413606 seconds)
done (took 2021.205111668 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.334937594 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.336388626 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.332875763 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.337747851 seconds)
  done (took 6.581653986 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.313072478 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.018444075 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.318632917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.330986159 seconds)
  done (took 18.221805262 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.344555373 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.354580968 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.001921124 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.930546959 seconds)
  done (took 5.176596737 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.083453124 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.096524963 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080366659 seconds)
  done (took 7.502852014 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.334932458 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.333862269 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.33591901 seconds)
  done (took 20.248980881 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.62221145 seconds)
  done (took 2.869354296 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.481637698 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.531538649 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.650617053 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.657117502 seconds)
  done (took 7.566307744 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.718422674 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.704164255 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.517756452 seconds)
  done (took 6.186915447 seconds)
done (took 88.296567551 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.070625892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.586284546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.540554276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.083500739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.562597999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.537343736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.545767382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.046144505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.547520929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.536644258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.039548398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.5610152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.707811496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.337616113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.70940534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.711018532 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.564955459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.11109139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.719716647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.954937455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.547762273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.675240312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.867476803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.690267027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.562420272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488417685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.260216837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.709809158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.885641177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.272280217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487936049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.118551881 seconds)
  done (took 190.289031806 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.339160385 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348542356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332830951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.340748367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.335564801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336509787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347263506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.334152913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33431968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.339882353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.332969937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.336351971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.350144051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.343611968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334607176 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.336692589 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356091677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.3432344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337221866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335961956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337308769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352485612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353994707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.334881895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.338529874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.338366536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.335907395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.361978563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.343496637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.334196308 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.339681369 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.33955246 seconds)
  done (took 204.1543982 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.351603289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335941558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350611973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.346414988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344786867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.337995949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.338967777 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.343544642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.33523979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.351664004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.337097885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.337780084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.340183944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340229053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.352882453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348048701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350395203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346093861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.342930276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360374015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353069985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.337227797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.337393602 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.33789866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355068316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.33984159 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.349894317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336418792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350789071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.338154927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.343460275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.342961803 seconds)
  done (took 204.265237007 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.541986271 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.346298377 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.346326306 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.302693145 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.346498445 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.34533383 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.340563784 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.53644552 seconds)
  done (took 14.357996462 seconds)
done (took 614.312837306 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.60090623 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.322988881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.543790977 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.3683157 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.079753928 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.384667489 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.365984165 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.532130444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.25121053 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.536103889 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.620176324 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.379875132 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762829258 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.362674507 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.615914969 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.465190461 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.204242614 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.323768981 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.675112671 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.872860191 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.624058003 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.824633555 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.547691393 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.260203452 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.787496581 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.838100007 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.061169899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.207602128 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.388322768 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.683007194 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.95389657 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.313962687 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43050158 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.423710406 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.480274832 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.46169653 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.282927314 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.423866222 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.565724584 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.608497942 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.856011801 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.077395691 seconds)
  done (took 91.621874686 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.331662405 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.33107183 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.330911004 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.337022738 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.333141119 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.334084753 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.333692436 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.331796381 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.333263669 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.333162907 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.330828077 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.335008611 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.332269863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.334124739 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.331240613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.333735546 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.335784265 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.333913712 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.332350745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.333351758 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.334302181 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.331410636 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.333162366 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.333595183 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.334911686 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.331897973 seconds)
  done (took 35.917008204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.353051636 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.595159477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.746736662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.357274417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350516162 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.355700944 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.425930127 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.358492268 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.352507989 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.35478865 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.517127921 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.3543331 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386342955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.777300239 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.354630653 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.354478597 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.351383222 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.349694054 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606027877 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369471777 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.451861142 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.360650258 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.426446594 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366901664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.377003749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.355148293 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.355706794 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.91820995 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372911183 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.522372729 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.109355786 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.429907292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.863684986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.777804449 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.111711171 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.360876349 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.354515492 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.526507482 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356366407 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.355135016 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.429480103 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.361397761 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.760818957 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.000130153 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.377070114 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.353698934 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.936272776 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540527387 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.587674289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.369210064 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.787200584 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.361136828 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.359404963 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.356440507 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.589068802 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.368523732 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.35858317 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.907514328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.38149735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.431514903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361299664 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.354629664 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.61366 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.354081696 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.600849481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.356505023 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364229115 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.375886629 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.762547822 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36200314 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.024166421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.371352175 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.355425793 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.519452511 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.603060457 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969849295 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.373010559 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.615348511 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.869921879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.445573653 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.360462023 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.906318554 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.447094038 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.36060307 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.359730717 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.355896134 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.35805478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.40732438 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.429015528 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.963670267 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035219256 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.934120253 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.449396054 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.369228077 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.359192276 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.90671691 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.376000801 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357197173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.757886707 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025965975 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.375099716 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.366626879 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.024300297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.379793675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.435983171 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.363559168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.773074512 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.358589939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.410425946 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359212632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.364508768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379920613 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.434123902 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.360127847 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.357476298 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.992825382 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.547471246 seconds)
  done (took 178.754736119 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.369236135 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.351677693 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.364243066 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.351686383 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.349883831 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358074894 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.349931835 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.354773369 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.359599844 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.35149416 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.352556805 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.352033103 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.354451312 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.375233799 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.365395462 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359266291 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.964726986 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.352111456 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.357154049 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.367295032 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.140587467 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.355018331 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.355913966 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.367505823 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.35448588 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.35442375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.355076212 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.374113968 seconds)
  done (took 152.681198323 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.360804193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.903257767 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.374521533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.487233089 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.379705627 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.35838965 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.485550498 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.415091536 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.379461027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.359189257 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.357303138 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.651192629 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.360316605 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.860728937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.540928274 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.50541016 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.855912128 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.374166196 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359107716 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.359355049 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.487174119 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.360650105 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.654672644 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.909308523 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377451321 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.906586277 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.346005141 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.360985832 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.357887604 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.907421401 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.375366197 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.653581692 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.434121445 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.419045056 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92949321 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.87640877 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.88274788 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.509122944 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.360029608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.358914357 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.358954541 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.344046776 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.914221952 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382304648 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361825293 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.897557661 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.378823576 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.362227804 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.366340459 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.35938672 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.417152559 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438835801 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.676252212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.91723704 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.45445029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.372561628 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.48827242 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.744416621 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.363947531 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.862066344 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.349396305 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.91683892 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381728459 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.344007724 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.360608545 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367652145 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.506960467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.489859772 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.865808735 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.37962113 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.863029921 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525262003 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361201166 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.359039884 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.364647059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.915805766 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.88077057 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.523809414 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.493350408 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.550035039 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.351116445 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.361153716 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.347858584 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.440096277 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.362024174 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.919879248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.881465715 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.379091854 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.36528554 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.365043571 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.364055119 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.530774856 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937367922 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458627945 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.856814353 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680709565 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665628637 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.369269182 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.41948264 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379159096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.662860573 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.370540631 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.420734287 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.80850464 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665852225 seconds)
  done (took 162.087812196 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603610323 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.559594624 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.455286501 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.508543731 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.962088184 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.92743495 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.610913097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.512688797 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.474326893 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.621017119 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.485053883 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.457550662 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.574911457 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.439113348 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.068516465 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445566652 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.473076646 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.515369145 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.51919115 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.359977574 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.03537256 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.64637963 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.548396978 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.214020437 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.46054523 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.100942946 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919237831 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.898782376 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.53109111 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.668711853 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.881872306 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.47718 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.326722812 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.0418231 seconds)
  done (took 65.596226016 seconds)
done (took 687.910639138 seconds)
SAVING RESULT...
DONE!
