cset: moving following pidspec: 15764
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.256122292 seconds)
loading group "string"... done (took 0.466787681 seconds)
loading group "linalg"... done (took 7.643223682 seconds)
loading group "parallel"... done (took 0.174570758 seconds)
loading group "find"... done (took 1.187055515 seconds)
loading group "tuple"... done (took 2.12763758 seconds)
loading group "dates"... done (took 1.344285798 seconds)
loading group "micro"... done (took 0.247755611 seconds)
loading group "io"... done (took 0.662609944 seconds)
loading group "scalar"... done (took 42.119537414 seconds)
loading group "sparse"... done (took 13.095555004 seconds)
loading group "broadcast"... done (took 1.172979399 seconds)
loading group "union"... done (took 14.448058305 seconds)
loading group "simd"... done (took 5.172383595 seconds)
loading group "random"... done (took 10.398483787 seconds)
loading group "problem"... done (took 2.057796148 seconds)
loading group "array"... done (took 24.634402612 seconds)
loading group "misc"... done (took 1.510779258 seconds)
loading group "sort"... done (took 3.982573343 seconds)
loading group "collection"... done (took 21.0992532 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540738824 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14079019 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134555084 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151144014 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206443745 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144677978 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159561286 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115887278 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.991257363 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179862874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156130278 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523408502 seconds)
done (took 5.174850713 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251222771 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095494959 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104976894 seconds)
  done (took 0.869872578 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078570882 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144465926 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095913454 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079478426 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096622613 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079361274 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096782532 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079031781 seconds)
  done (took 1.348365703 seconds)
done (took 3.228437952 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737286281 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.294498308 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202695384 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.473662994 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200305642 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219488477 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.723195955 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354919341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253482966 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103156569 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147582234 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396127167 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139461444 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.696140249 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092745488 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125459072 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189202447 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.485187202 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084987132 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111729786 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117964994 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143073572 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131588252 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093145436 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188842515 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082300051 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.200162403 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109626404 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081428091 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.294698514 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202901621 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.721573551 seconds)
  done (took 11.110029962 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111371296 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134177153 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100033607 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139763813 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136474084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101350148 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087953874 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097936933 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123093439 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178210647 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117824433 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138860692 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096275002 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083400339 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117758506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247047249 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121859035 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105739536 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10219784 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105072299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124416878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115536878 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110323023 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095439132 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170383763 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223660803 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113550075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128215326 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099063929 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114347681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146444399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145348108 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098093261 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08241825 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175529677 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127839318 seconds)
  done (took 5.207119169 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188322686 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124032282 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172449645 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167284178 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143352762 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162558071 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115020579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251554546 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.143988144 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165139157 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144686297 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119867729 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081563214 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101026783 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097787277 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.708574823 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.125818817 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159482141 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117682194 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105827699 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086137166 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.728108053 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105531408 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081110504 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101202464 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067003635 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162909107 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101579191 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.163614695 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123372013 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084377024 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138244109 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217249771 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111255525 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130001455 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140412319 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080439787 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100651387 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.183176114 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107281399 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081132111 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122700758 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.122657488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121903443 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138184255 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101482445 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099128949 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208555864 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08404029 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117344984 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.980246539 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182245897 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091417004 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097687168 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326708318 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1010878 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100211101 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078553553 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.27024367 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186777035 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100612093 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081760561 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09909674 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083426525 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401620542 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082557983 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.731032322 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084951905 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.112932776 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083959713 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09876991 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105877528 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08961684 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09664155 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099371228 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098879005 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083284911 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099086882 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079923198 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101676584 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109872456 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087335855 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09991183 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150633902 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09655166 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098909071 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129894967 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102626897 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079670723 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13438735 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10131764 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082984494 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136850381 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100575665 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093335978 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102124575 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145473818 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099335302 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.190038256 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096002448 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12726738 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103848407 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117129773 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116697094 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101099612 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086331267 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097607675 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078591908 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096501338 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078721578 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167296703 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085213782 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099409099 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111976259 seconds)
  done (took 23.362536727 seconds)
done (took 40.355377993 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.33634247 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105764476 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105974464 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105678166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103011385 seconds)
  done (took 1.503388616 seconds)
done (took 2.227746695 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.295079439 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17793881 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097536052 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173135818 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095386325 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179371103 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164796905 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114318981 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225719995 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078239318 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168494647 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095694595 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078056852 seconds)
  done (took 2.692368147 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093967836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116139789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083602787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113892141 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07741775 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113394992 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094453738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119763142 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112243961 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086362852 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095491615 seconds)
  done (took 1.831403922 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093377743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114313347 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082922969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112396454 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077930299 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112754905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09350412 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118210358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111404838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087321537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094898819 seconds)
  done (took 1.817237331 seconds)
done (took 7.056035217 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091441745 seconds)
  done (took 0.804631355 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.941257842 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.883333172 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112994967 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152659207 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31037083 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197339394 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.481995209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127512022 seconds)
  done (took 11.13968222 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.115124492 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104935259 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104747084 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085091246 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117143129 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086970968 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100184918 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104085823 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087698976 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102902456 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085022671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103943758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103034717 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087872744 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101492522 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08482674 seconds)
  done (took 2.35797096 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120240855 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120069802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10799119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111000245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088707699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107116644 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108892822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089994012 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102976945 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105691265 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091881259 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107248186 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105338488 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0814263 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107753522 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110118711 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087126126 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108349101 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109307066 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092129866 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109165575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097511463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088201587 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108396703 seconds)
  done (took 3.299324269 seconds)
done (took 18.322110181 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159876929 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111140678 seconds)
  done (took 0.99353306 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094566633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115363206 seconds)
  done (took 0.941522485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096464791 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095928375 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124882076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112112512 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081436161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098755957 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123344822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082208604 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098571545 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082561132 seconds)
  done (took 1.731298788 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082254819 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110523575 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103616299 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097168621 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106508474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097176652 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089208482 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101498414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111619793 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078342016 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104103692 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116392765 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087861298 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119487622 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107857706 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084900341 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103919002 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100750299 seconds)
  done (took 2.535717486 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078930452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098536337 seconds)
  done (took 0.911735065 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080799734 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095750271 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082487544 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099327114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096613141 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077934175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096562884 seconds)
  done (took 1.362410062 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.478261196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138814177 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258434751 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086556001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122456274 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307630283 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100499135 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086443856 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105771717 seconds)
  done (took 2.478863223 seconds)
done (took 11.683645579 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09295845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119093227 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115394734 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.477538444 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109001347 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099429566 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163083949 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256258663 seconds)
done (took 2.170919243 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148602564 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326003418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116893872 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068592914 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097918851 seconds)
  done (took 1.348990874 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07947615 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101641979 seconds)
  done (took 0.92136971 seconds)
done (took 3.16464954 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081406221 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134587471 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082226155 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101355884 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080438827 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101383118 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080151676 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098470458 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082455522 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099827458 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096517816 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081573465 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099389588 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082097781 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09733918 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080602667 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099875238 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079202454 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097191759 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079844897 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097235245 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081777786 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096611107 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079413204 seconds)
  done (took 2.965122549 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100157119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100816484 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105679755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087870859 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103981312 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087883906 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104751335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099765303 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088071417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101608007 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102714393 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086044175 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101672356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086904049 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102009103 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104129748 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088087694 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100109564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085618671 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103396684 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105887916 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082551347 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103838268 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105038964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085348701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104110522 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083903931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099617772 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104580984 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086408766 seconds)
  done (took 3.649057417 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084295064 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094834866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08035422 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104263542 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080616775 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09940471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079218788 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097882357 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080757375 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097696315 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081647727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097188952 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079242827 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098926856 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082320321 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101092334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109776505 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079589493 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098628188 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080204975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101195365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079451771 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09804752 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079915974 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096991602 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079081776 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097476319 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079446299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097745992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079483616 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100720363 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083084158 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097510837 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086078495 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100304145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079472858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101478193 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096838464 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080545581 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09691124 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079327469 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096906994 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079912751 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104079403 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080473015 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100079303 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080011991 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098617471 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080288055 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10058453 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079304191 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096681368 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082147151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098353413 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100975667 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079103806 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098189639 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079397323 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098009919 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07962739 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096423725 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0796581 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100037621 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080949263 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114131912 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087148892 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097292807 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080851964 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098067721 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082004159 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099419529 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111802076 seconds)
  done (took 7.289205159 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082710902 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106812125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080841484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100721655 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078722304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098257062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101765422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08015664 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099773125 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088477786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098181361 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0817319 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099083097 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110968548 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08109943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100248963 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086722213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096233674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080233695 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101462861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081162946 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101273331 seconds)
  done (took 2.788765841 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209509808 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10740052 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144942151 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110335005 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086594729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109491336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104280079 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089333337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106002544 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085668007 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103040822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105190116 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085101917 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102730376 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103851902 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086562734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105171119 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087316244 seconds)
  done (took 2.68902411 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093139745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099163002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10523848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101572538 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102731343 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085718529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10716654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110684059 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085513987 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101080566 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092688083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102783416 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104196619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083172124 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104199526 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083974118 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10404741 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084367697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111664056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106526613 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106685828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093740217 seconds)
  done (took 2.925756243 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097245033 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101348485 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118059592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085666572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097633117 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082384371 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108151448 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083313484 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108816711 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103954655 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083343427 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100798062 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089945207 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100815724 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106659937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083763888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103847114 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083750134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103716993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079672279 seconds)
  done (took 2.681837964 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102635187 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102753276 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103878754 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095011455 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102742736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084449276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112412286 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102318687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085495559 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128476239 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102492955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084519791 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113749521 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10867493 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102443042 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095276021 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112494218 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113693329 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08522128 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103402697 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128834846 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196774047 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112141176 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10354953 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08602458 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102806869 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10304367 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091003018 seconds)
  done (took 3.726958306 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081861494 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09957947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081194686 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100202076 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080421704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099654557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080199431 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099309363 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08258345 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099789913 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08348343 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101084689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083137262 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101594498 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085859039 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101926337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083163605 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098496892 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080750537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098631349 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083800767 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102497642 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083500991 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099086344 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08157528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101063193 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080701422 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098894727 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083753414 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099204925 seconds)
  done (took 3.499641808 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090952193 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107612274 seconds)
  done (took 0.961626522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079777751 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11656865 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081719548 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106285523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089059441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10281732 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111778132 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089250526 seconds)
  done (took 1.539702988 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09657747 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114762851 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085903168 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116348866 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113395192 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098732364 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165519093 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104849933 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090520766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100626556 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098185634 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102286788 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108389262 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084295975 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108260833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091185079 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100604169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089902143 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104793719 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101498636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085881131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113635708 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087359694 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099394435 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086322521 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114127415 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1125667 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085133867 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105925301 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112664812 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089741391 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096873939 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085265143 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103698394 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081899061 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112841872 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116534425 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086852002 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112290459 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086512164 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114765308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09834808 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090365935 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109052885 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095685349 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103382166 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086074969 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098654821 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10117427 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087577896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098695879 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084762584 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097600892 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091787691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106756404 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115974153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083124019 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10440535 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087010588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105324773 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091598729 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105366196 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086662852 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.1016035 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110288592 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088978721 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110107393 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079852317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096354584 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08195713 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112064971 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125320153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09313542 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104163839 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085463829 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100768373 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106557385 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086429043 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110195939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092501882 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103519409 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111117651 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092408929 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102934175 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086989896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111731306 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101560429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08698445 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101152012 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099432386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102475421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082211628 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100095581 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11211758 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088458443 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102629599 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081876692 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11077235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082160147 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103880068 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086201033 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104314058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112209484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090235304 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110038565 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110818155 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091910817 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103804065 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088509763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099518662 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086727751 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105995416 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091295254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097581008 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105891343 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086240581 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104266441 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092537181 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101669513 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085356261 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110340297 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109780254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083457546 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099778365 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087598619 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103708924 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08856479 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11116044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102009691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079595608 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098345856 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089343229 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10352192 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089439798 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109437171 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106238744 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078740763 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101419637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08971475 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110580156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102962494 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084941392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108501437 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085486373 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102692833 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089994409 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106052731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083977366 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108327765 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105271533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080268842 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107680061 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087696247 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101990145 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088809056 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10761583 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106557648 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086074792 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102159097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091107433 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105618957 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083962023 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103604232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083991575 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113469002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106193382 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080059749 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100862626 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093320834 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102126991 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085331937 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102526753 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107092751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086249822 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101979008 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085193701 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106288421 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096941882 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109392149 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105880525 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090858568 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114453812 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08449608 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.1053795 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103931982 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086873776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105195419 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092907272 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109108295 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109509208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08770539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100914514 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091121163 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111593524 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085237936 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101931231 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083753243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108383734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111489783 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089487033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10490645 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083206343 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104864215 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108581533 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08779574 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103511614 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085253113 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108693361 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084492901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111018859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105645781 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095112853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107615641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080212462 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108000442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101377839 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091620291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100439316 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082449495 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103428007 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086709664 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102590361 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087931562 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098446628 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093534122 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11188302 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104465466 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084586583 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104096363 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093581077 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105577986 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088892014 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107288161 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109439319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098373527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103614717 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088165599 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113810045 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104761558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079093054 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110130351 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083929403 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103479312 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084770267 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102813458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08863385 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114133649 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108963344 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079056736 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107447263 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08479295 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102818309 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081585438 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11105929 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108194519 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08726465 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112955419 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08723032 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105234116 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089226584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10438637 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105744178 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086966082 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107850859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086218177 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107747758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084550502 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106903862 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103452741 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084000793 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106597057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088590108 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104873801 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092015513 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10425647 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085721501 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107378165 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106262222 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086726853 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105346064 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085727247 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108689267 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086278916 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10497745 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08892014 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100499884 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111899186 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086602015 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113014611 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085585682 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101834084 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09186604 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10726236 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111036666 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08759658 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106006384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087324963 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104898011 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088855615 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113725644 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10278765 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094615284 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111244406 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086298992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107837894 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085699278 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105786776 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084699526 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10656522 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105912922 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085839465 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104342841 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090013148 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108084602 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085590457 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106926558 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106077724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085848649 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106762336 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080630842 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104161416 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085273088 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105093122 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094008732 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106101688 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107695281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084543857 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106582937 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085069413 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102144953 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094853174 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114587216 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105918573 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09433171 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104084382 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087967886 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114030209 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099327267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084034925 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103157831 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083304838 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114012171 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087528706 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113112883 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085799014 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104771074 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101869918 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087362106 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103300981 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079665146 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102813974 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089836922 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107937005 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08479582 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105502732 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088904081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10627955 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112691344 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085422595 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107074256 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086738717 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103183308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085164306 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10379949 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089325669 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107399508 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103244528 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083308126 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105360758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08775274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106186054 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085798872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107282219 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103357579 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105287223 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107872944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090105455 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100034608 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089510197 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10533729 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086290519 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105035438 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089713147 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109448031 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107022384 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093415375 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104612044 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087097395 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106505257 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084316781 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106243368 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105666508 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086492994 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104866224 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08810934 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114362316 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084392463 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108408634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087017447 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106247038 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110536415 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087755539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108116764 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094813749 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108733413 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107049743 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092545887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109584541 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089608606 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106666366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088468906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112682182 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104520008 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095363153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105614481 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087584907 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107544193 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08429842 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105425247 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085719819 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105819483 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110586869 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087405446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.1052857 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085705951 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103555163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087921862 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110084677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113602564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088615587 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108881274 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081394601 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10288882 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086943162 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103396726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08785877 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108572377 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112360259 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088474827 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105919494 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085434355 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113243225 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092551858 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110792955 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103560657 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091637969 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107380235 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088915687 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106881492 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087038784 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107251721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111815783 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08825079 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105170952 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095579502 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110286179 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08736794 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108037548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085969076 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107304312 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100951388 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088254463 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108163093 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094504712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108436701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086298242 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115669333 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105691726 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086508472 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110967592 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0861196 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113190924 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081654054 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108026222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107189879 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088342741 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101600189 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086289224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.104249895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089331807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10480305 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081779327 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11529768 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114101566 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088721085 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105015672 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085848408 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101594935 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082212547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105398909 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08776195 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108136295 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115734978 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085543998 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105192303 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08240248 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106102713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09071748 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110650135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084033861 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102520196 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085309378 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108556051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113299776 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086037948 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10585513 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089647646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109657474 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085389499 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110796374 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102888766 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090812341 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11748837 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088325248 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107574327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092478757 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115244335 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108065651 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082401816 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107954052 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089989447 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107214893 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089251479 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10838639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122076499 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090590349 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106617494 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086091172 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109569983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086896437 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114432245 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108567842 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088456745 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111598722 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088414054 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116188894 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109726079 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092719028 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108843828 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089506331 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106247885 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086739456 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105109104 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085157545 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108112239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108593667 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092258591 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11610306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086029043 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116705964 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114164656 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092529099 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103335917 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086427565 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106801118 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082544648 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108524331 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084987283 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10584155 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105004277 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085609485 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107359797 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093579551 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109666649 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087892182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107289322 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081529461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1082542 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108976538 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090950965 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103294544 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087378081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109072616 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093060181 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111630822 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087890432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108641186 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108462016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088241784 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102257711 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09391175 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105764876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089785096 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10681573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088013416 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10905299 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110190405 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093043544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108675874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089573404 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119914806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109804176 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085250315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103757636 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092896926 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105368404 seconds)
  done (took 59.674504437 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146716364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083050615 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103620012 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083475805 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117738869 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103106954 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08258987 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103306831 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084020583 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10614438 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082699946 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102742032 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114330374 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128690921 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096265147 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108248704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081528085 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104409795 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103147954 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08412425 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113352625 seconds)
  done (took 2.94593119 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104691484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117508645 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117594738 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123511305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0934259 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120245217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118648633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119462462 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104068452 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116073086 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123548743 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120324377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095349502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.115021539 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114812867 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097924692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122717587 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113842929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121235865 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09933914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117172934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119152889 seconds)
  done (took 3.309112372 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084214578 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102824252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088919024 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.102396209 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086947551 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102584741 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091758066 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105022393 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090845479 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.106105398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085153737 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.106695684 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108779997 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082312393 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106844012 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085263041 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158610178 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112255933 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087153868 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109594685 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.102423588 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089164685 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102850232 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083704305 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10569549 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09140252 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108575378 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086045999 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107495533 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087018921 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108016932 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084985428 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109329133 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107890919 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086932418 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106544645 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087983746 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107036991 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082609791 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10570907 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088421356 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103416382 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087537029 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108710787 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086476406 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105839492 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089262125 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10858582 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102905235 seconds)
  done (took 5.652674171 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104751452 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164707703 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089538452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149013274 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126707059 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.117661801 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091241536 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148274646 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106803522 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086391819 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127459178 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125570816 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108504937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09349656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111656036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108406999 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089278676 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107144234 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0922706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108190313 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113309291 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094361696 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12372357 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122049546 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11354883 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087070693 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107714522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113691311 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102279595 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114031392 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113199891 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094671356 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125518028 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114686451 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087721305 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112108242 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12785829 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108665954 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091188197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106741828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090748609 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113289695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114712445 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105542285 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110033665 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114158291 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087947009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10607143 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122965403 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090744104 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118097499 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125817642 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113082264 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08944053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115036657 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125349288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088629223 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106634982 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090899415 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121009206 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105751202 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093058253 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124318615 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111764774 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117360639 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10362332 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113681574 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113161569 seconds)
  done (took 8.427677438 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093712711 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113622385 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125048248 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126583532 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095659948 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117020437 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116296831 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09544128 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11619457 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122353206 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116019176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140034412 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090272648 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119609807 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117134609 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096944359 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116185194 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114771925 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096244499 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116153952 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116340116 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125746792 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095745595 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125595436 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146820868 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1109703 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095637521 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115872884 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125843144 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116565875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129800903 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095695389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117212938 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12634475 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128944496 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095140742 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109088629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116131496 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095854216 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115898587 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110587373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105839613 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115224383 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108056984 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094866002 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116368943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126344034 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128177861 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117731415 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100541996 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113373812 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122918184 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113656429 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093973943 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126017704 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153660026 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126090163 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126790631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117035039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104382837 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12662088 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133570146 seconds)
  done (took 7.959341279 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108892075 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116768741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118754264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100156461 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083391175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109859908 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08303906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103497864 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11892106 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100101472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122210888 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113919795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116851035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101036548 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111519135 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115385709 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092962919 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114458357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120354357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113975012 seconds)
  done (took 2.995273163 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093646361 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125118154 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085441777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116681862 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111882277 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095316035 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112063314 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11217997 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089910208 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11233555 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100972538 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121354118 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109809423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096537776 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121061974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116944352 seconds)
  done (took 2.549462152 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096729694 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11752079 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120559 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084345988 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106308485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084546334 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.110768283 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101943479 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084324292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12311272 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087954491 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114351552 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10943659 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090319438 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106221569 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091930667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.106548491 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086146411 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109642295 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125009879 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100825948 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108836783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111132299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091415611 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110397515 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094404251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111279726 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107380436 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088069372 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110398984 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08902485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118347079 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106972576 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087668792 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10834968 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086496476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110326971 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089406087 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114072507 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110265619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088657696 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110349101 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089567929 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111334046 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084775613 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.11162267 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106563566 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096345274 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108420269 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089755004 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110843327 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1120047 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090426943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121004951 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092510852 seconds)
  done (took 6.468858316 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100118218 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108875145 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080106633 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103781674 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088880401 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108736527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110061248 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092377216 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111594468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087707983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112501176 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093251354 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112681093 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114333949 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090469645 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114213838 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084732138 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112561342 seconds)
  done (took 2.663889892 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091243913 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105172717 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093924268 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107753039 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085494763 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110425004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084108573 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105962727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103584329 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086177373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106002991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088409956 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104102232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087975021 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10600909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08478209 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108551335 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103847651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08570425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101332007 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088624914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104740475 seconds)
  done (took 2.9808115 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118316932 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125539704 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092688108 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229545752 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103892748 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133241071 seconds)
  done (took 1.638102121 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110458335 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121595545 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106183731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106548499 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115723229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107404219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088033641 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108924227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122966024 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105782976 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1129622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123444359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121121098 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101755407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120163911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119740208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11292049 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09282563 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110601611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13317986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091277857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122618779 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112751051 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091424159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113801488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122527526 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123150708 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128250419 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092213393 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124059609 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119539433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092218181 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123311974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127596437 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113562089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102181385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113100923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133637117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116524312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100301683 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110298194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11705611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099514554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115152279 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11826216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108102789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093486397 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109002308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108547169 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136008714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094571941 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118275296 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115703487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118606885 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118952797 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135783721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102776991 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11877924 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118135202 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125304756 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122712739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098735879 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122546271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128027397 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120985713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12359692 seconds)
  done (took 8.342269117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103123127 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127490201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110203323 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127322687 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102635037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114620373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114009609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092206594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111776929 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108084811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153661126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088834897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119649305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120080054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113571324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092712223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113528724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12315585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091809217 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142073864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114159804 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123285132 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123408961 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101386272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12796311 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120870799 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113167398 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091292113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108437395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108269504 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09423923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108497915 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119265441 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087685421 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120569817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109123478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088485188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117374943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108654049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114889413 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097626395 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129724835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10891544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108239569 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123991085 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089047734 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108368981 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087124898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109460227 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107793602 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102004221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123573988 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122405816 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11938994 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108701665 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08835658 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110350649 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109375886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089179128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115889561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118029791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108751758 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136246521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089409295 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10869835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119638691 seconds)
  done (took 8.154714997 seconds)
done (took 159.219100783 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097912869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137915558 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099304046 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173956535 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107239004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119775856 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138995571 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098128381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107312364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086993413 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109398161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091461738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17576652 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085292854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107159999 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108423875 seconds)
  done (took 2.683800266 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19951356 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.260252344 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108136854 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112174742 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094009672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11659069 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109956606 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096642342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.115506991 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090634781 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.113755979 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090040472 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106984434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088529408 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112034756 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090962722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11129699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092741761 seconds)
  done (took 2.956361851 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113530619 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15704425 seconds)
  done (took 1.124421664 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118709464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181032383 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320536638 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156131221 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107189846 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127370895 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156369049 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132356799 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19767178 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123885592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123614792 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097607199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14154074 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117039965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095223464 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119390498 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142461631 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09368965 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115560298 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116521701 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117288411 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107601767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116551586 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093554098 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182756975 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120221039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084978559 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106735458 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11657792 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094972984 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115204396 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125868038 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098296644 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176590648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103850552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178484591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09792363 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114456871 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116326258 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092623854 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120068673 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11887028 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105030548 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119318674 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084354297 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119629345 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106165597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087286959 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11602393 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097950311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.118725133 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113918394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156980394 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119127708 seconds)
  done (took 7.575355248 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795972256 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16504197 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090895118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886656919 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139511789 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104246958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.786923938 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138449002 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234965985 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766415523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135794857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123298019 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229656207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239911176 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934684829 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310672315 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675866724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103829266 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150134928 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15422111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119983552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139085624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130421097 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459153636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095141929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11366249 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117448933 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100412361 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161120101 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12661827 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114725554 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179644341 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268505874 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185066243 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116949488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089860378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112262501 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17078862 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270027967 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217005774 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181689378 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08772789 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112623983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123237444 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112216114 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109128038 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165395764 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196468457 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175400542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092170984 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122238958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120966906 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121589605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166317162 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121643211 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289875324 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325901193 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112758685 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12233184 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106568877 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266054903 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124279252 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22553705 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117968916 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212945805 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111498569 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783990297 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192084202 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090126893 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118665265 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120613608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095484384 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122474273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172561999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393107727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124493913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093834394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112150158 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206625501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126145394 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112010421 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163504229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116655725 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100264937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126664707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123924877 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172510673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231469338 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125212792 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121664941 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094706887 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126434142 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118246734 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21291345 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220282261 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163090378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209449485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124547522 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163810365 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190793539 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099253461 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196231896 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098211358 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126271411 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124130343 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218286486 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146884291 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101615014 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117632837 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119709864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150008884 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127816218 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098032276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192644068 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488729553 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168845597 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110033303 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129026317 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099823768 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182583163 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098468151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258838029 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122827939 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170510784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12042971 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089039546 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122279096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166840497 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123945822 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122510845 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101594479 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120036361 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234790978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221363848 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123560985 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223566744 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184548487 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120212317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173849984 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123354293 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168125097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121311308 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122022547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095350647 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799564306 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125436155 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098641711 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117160671 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199594752 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111892865 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103192634 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126833941 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109399341 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758912743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128824756 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12243233 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102262046 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1202105 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122363559 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095722597 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1168749 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162366606 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233738681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121749001 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120346325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103371319 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183697526 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095288619 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127195867 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125708358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126268382 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101497224 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116008837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12487675 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172081727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163804201 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223934988 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598749258 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091486113 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12570682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232566059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090484332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292533674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121285372 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229171154 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167048218 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121745746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322139355 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168033489 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201044806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128667676 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174612716 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088107969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119787108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165616991 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11277333 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118497384 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166011553 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125362753 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102742255 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.979334267 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113492569 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227579983 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109334788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173536798 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095615273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122482978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289556821 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11295667 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108752528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188040249 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095977207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126294745 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725266779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104820405 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123265885 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119906989 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225247891 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166138541 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097556801 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121252246 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122235062 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164887896 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208027568 seconds)
  done (took 44.38415015 seconds)
done (took 59.568612091 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275304094 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214403599 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259880333 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169833156 seconds)
  done (took 1.86973493 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170477072 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148633108 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120324599 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107711524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150175178 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085667612 seconds)
  done (took 1.660458283 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.354300742 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271769194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240652636 seconds)
  done (took 1.747084819 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289996828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252890655 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356116782 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420739056 seconds)
  done (took 2.321333821 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20953287 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132539002 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112549181 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104514104 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197797864 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251597878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141193974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202814148 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122542505 seconds)
  done (took 2.402973757 seconds)
done (took 10.882158659 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.129690523 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.250241618 seconds)
    (3/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.235293183 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12750548 seconds)
    (5/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09934529 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117722507 seconds)
    (7/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094367906 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 0.232986648 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.14805517 seconds)
    (10/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.208062405 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103238332 seconds)
    (12/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.249011777 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.230048462 seconds)
    (14/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.234059709 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.132776725 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134881949 seconds)
    (17/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.123863285 seconds)
    (18/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.200620985 seconds)
    (19/286) benchmarking ("sort", Int64, true)...
    done (took 0.237240008 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108159258 seconds)
    (21/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.25010547 seconds)
    (22/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.23215628 seconds)
    (23/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123084331 seconds)
    (24/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.135982312 seconds)
    (25/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121093526 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236626417 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138144119 seconds)
    (28/286) benchmarking ("sort", Float32, false)...
    done (took 0.150929506 seconds)
    (29/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127159531 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166941353 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095646856 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10512996 seconds)
    (33/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098729542 seconds)
    (34/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121274602 seconds)
    (35/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132811481 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112069712 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224642929 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180940748 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.210774571 seconds)
    (40/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094085009 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.126699728 seconds)
    (42/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210349226 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146304737 seconds)
    (44/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144566041 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184822118 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.098715744 seconds)
    (47/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118675942 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.165707042 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 0.238065333 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083390689 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17750456 seconds)
    (52/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119768923 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09305848 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187066557 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200602114 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10434083 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137757687 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117568482 seconds)
    (59/286) benchmarking ("sort", Int64, false)...
    done (took 0.087758382 seconds)
    (60/286) benchmarking ("sort", Int8, false)...
    done (took 0.189414778 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150281325 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119639216 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144738472 seconds)
    (64/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.112933938 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.16004738 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118265967 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088163767 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090063452 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.20293749 seconds)
    (70/286) benchmarking ("sort", Int8, true)...
    done (took 0.223494843 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112666175 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122387166 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068073258 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115836076 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11999232 seconds)
    (76/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.16315233 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.154309297 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069237731 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189075192 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.227906669 seconds)
    (81/286) benchmarking ("sort", BigInt, true)...
    done (took 0.238971143 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 0.229115517 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119512606 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087558616 seconds)
    (85/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.144045303 seconds)
    (86/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086348102 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149809614 seconds)
    (88/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098537891 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121005487 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110410066 seconds)
    (91/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.118532372 seconds)
    (92/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115576774 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095285687 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135655603 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067570941 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173841518 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173387087 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098025186 seconds)
    (99/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113267436 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098583463 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.185091179 seconds)
    (102/286) benchmarking ("sort", Bool, false)...
    done (took 0.181862261 seconds)
    (103/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119104128 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102370534 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102189614 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087819982 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118103817 seconds)
    (108/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.161857903 seconds)
    (109/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.153325674 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111833602 seconds)
    (111/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092885993 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116110313 seconds)
    (113/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149102429 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089490416 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.110134292 seconds)
    (116/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.101109996 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092393758 seconds)
    (118/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172105885 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123841801 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071987491 seconds)
    (121/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121265373 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100777159 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110059407 seconds)
    (124/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067188431 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120637568 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095152887 seconds)
    (127/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.186688929 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176834495 seconds)
    (129/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090365208 seconds)
    (130/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154434419 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156735346 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117290699 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072593063 seconds)
    (134/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15652886 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092449095 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124688669 seconds)
    (137/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.071945999 seconds)
    (138/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.12371982 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194167218 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092284241 seconds)
    (141/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.128054184 seconds)
    (142/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109220958 seconds)
    (143/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.110473725 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095978055 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122017963 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.167083067 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165823842 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070791623 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111669653 seconds)
    (150/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164320635 seconds)
    (151/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077774106 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.078509041 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.090358672 seconds)
    (154/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066950936 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188301427 seconds)
    (156/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.114402545 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091695256 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185162013 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071803389 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139981749 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067627397 seconds)
    (162/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068803312 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.115207181 seconds)
    (164/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124122476 seconds)
    (165/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.150825395 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109448022 seconds)
    (167/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06781789 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093930297 seconds)
    (169/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111687408 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094977388 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.192940808 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110919472 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070371107 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119583325 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066589978 seconds)
    (176/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189251551 seconds)
    (177/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173826416 seconds)
    (178/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086991707 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138152125 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090803338 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116927283 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100444873 seconds)
    (183/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153332428 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186669863 seconds)
    (185/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099944034 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.229068937 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117428713 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091956273 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117497008 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.119649444 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.097332447 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099577171 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133869093 seconds)
    (194/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090985514 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121471887 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11902606 seconds)
    (197/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066854843 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06909891 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111580593 seconds)
    (200/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067068112 seconds)
    (201/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.119333358 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088493812 seconds)
    (203/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113642715 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087068541 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115863508 seconds)
    (206/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068993012 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184105063 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067358718 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11013736 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087546229 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090504355 seconds)
    (212/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086777995 seconds)
    (213/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067382425 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.314160613 seconds)
    (215/286) benchmarking ("sort", Float64, false)...
    done (took 0.172589344 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087013809 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110663548 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07869213 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06972164 seconds)
    (220/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093779556 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113934087 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120556643 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093833969 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111955268 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067682345 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092523891 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087596435 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125804222 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093667686 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136808672 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18460683 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067625721 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136580682 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086489307 seconds)
    (235/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122516269 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069701329 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114890302 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086839023 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113983258 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096342886 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091843322 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093592397 seconds)
    (243/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110635895 seconds)
    (244/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067998893 seconds)
    (245/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.17504644 seconds)
    (246/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088270654 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120911796 seconds)
    (248/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139069625 seconds)
    (249/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091667922 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101967694 seconds)
    (251/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080170539 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104343123 seconds)
    (253/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110915804 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110058864 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092265757 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066257991 seconds)
    (257/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090857664 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067294907 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067463034 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118249195 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108790158 seconds)
    (262/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067606392 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085577289 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109663557 seconds)
    (265/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06696985 seconds)
    (266/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090834356 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096293818 seconds)
    (268/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111457637 seconds)
    (269/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083911168 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116134924 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11291063 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110358616 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068367693 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067812264 seconds)
    (275/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091540456 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088793297 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164437868 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116478295 seconds)
    (279/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067515772 seconds)
    (280/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068321303 seconds)
    (281/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099772308 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06902531 seconds)
    (283/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128059967 seconds)
    (284/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090196109 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091335296 seconds)
    (286/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067291745 seconds)
  done (took 36.543902479 seconds)
done (took 37.429464747 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100004575 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148340252 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099947419 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141085542 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130458052 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09776487 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126367146 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10446036 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.130801308 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.132570971 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104283583 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094390036 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101739225 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120457798 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098892718 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13927649 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124814548 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095013346 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119558983 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.090029197 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122314541 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092991936 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113589515 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073660366 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122405651 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094885046 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117335411 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122713742 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089134011 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111369345 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093950973 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119496192 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091513908 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124790165 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09757383 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121219256 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10334348 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.127965388 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.117034205 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08931101 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123771373 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092557554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.122734309 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100588618 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121535975 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097946052 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119640134 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103437518 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140049742 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115741285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097462658 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122514778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098008591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118260042 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092627928 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119328337 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09226028 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140455855 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119644399 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093324886 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118706532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095563525 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116873965 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097111337 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119458037 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122330817 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098159354 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116953354 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098363273 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116719343 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088236308 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120829461 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090742756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111548198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096561304 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122324332 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087045593 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118013622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118391893 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094014206 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111147475 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09138556 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113257979 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095200475 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113675123 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070913757 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114605382 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094129885 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110465482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101034133 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116851158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095468884 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112707979 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099316594 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110840258 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093075328 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111806617 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088795702 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114099185 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091617296 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112494804 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094967973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120323925 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089925888 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117944454 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12434114 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087923867 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118848809 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087197996 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112231282 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104790901 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122032214 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087888764 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116904598 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088520118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119061496 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087404067 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111235266 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08761325 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111912341 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094069711 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111460329 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114332593 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095898592 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125143482 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08711045 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115282269 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091964137 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111906567 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093271363 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111707651 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087387702 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114047746 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078353539 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115226481 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089573657 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118330945 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091056221 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120115606 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.09003472 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120960041 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093159702 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117437457 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092742599 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111088603 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07515018 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117293514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090865064 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11405006 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087681008 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113881476 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087639554 seconds)
done (took 17.197263122 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087643148 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185233115 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151993713 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143195278 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108307816 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112445575 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123109236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118897823 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114615825 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143377308 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11226162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132605692 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148832763 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087808374 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113095117 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092297966 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113880762 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103472818 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145853075 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.1331744 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164640906 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087045971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147663399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135303981 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121924725 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105385346 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112882225 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092253905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115816343 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113052043 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132236409 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115864442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088425027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135508619 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105730341 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120746084 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088936345 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119265777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08736318 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112805531 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142106568 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134425708 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094170697 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118111309 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091911882 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115176535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089276731 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121749163 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098198082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117168561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128094235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157003436 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09132235 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122471152 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087442172 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122637615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122231848 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090156711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112526012 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090435841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112133528 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092671626 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128279971 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142478517 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09192915 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122212263 seconds)
  done (took 8.644622853 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10526761 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140282161 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105011172 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131660692 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112207879 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088688487 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113927093 seconds)
  done (took 1.742101548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089137934 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135887354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111656457 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136530803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133166992 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11263232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124123681 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089162006 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133795779 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090004369 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134322473 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151339145 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090882621 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121800963 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138656483 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088680601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138175186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089945345 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117280722 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112809174 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11805636 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135944652 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091031323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114084939 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103519415 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11475189 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162997628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094676427 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115135603 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093277948 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112482933 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152015907 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104571336 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125624365 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088888024 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130223971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128539126 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087298701 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127738484 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094843881 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129002105 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090625359 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116416946 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08763805 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118729031 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10019161 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117814433 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091036386 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116930709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134492398 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.108144722 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128532769 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089775588 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118481785 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091364472 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120087965 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099445429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1145001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133982581 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08979929 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131731741 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106147885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129230413 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131204152 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093037744 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128406387 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104425159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117191188 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091822296 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118302882 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105492403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113104138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090601169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126101585 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116738496 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113953225 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137801737 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091546922 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125237756 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114961047 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089522388 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11520557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112888498 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119684743 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090025221 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11909816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092653745 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113442164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08814171 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118694331 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088335118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116340882 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094354418 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115098995 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092481875 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131519193 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115674052 seconds)
  done (took 11.882200278 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090357952 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115212732 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092404761 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115292658 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091029776 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115283631 seconds)
  done (took 1.576300547 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115748583 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117908569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105154006 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121785094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156721933 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104023528 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129845197 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124574636 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108328109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128341658 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129869917 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105719889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137020557 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122032313 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104375128 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121471076 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104387137 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126120918 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127833265 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097967336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136993162 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121759711 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09707157 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132574423 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119240126 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09590811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126109182 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103033965 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128315285 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124280149 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097229751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119255309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098527614 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123890444 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129914156 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096037473 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120967238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119568538 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100762237 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118671268 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105454941 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121733473 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127738863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094363205 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124095716 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121089038 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094342189 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125295302 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103766666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119110281 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120191602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095897503 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121786984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094194622 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123468516 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12674817 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094601229 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13091882 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122060825 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097224262 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119504339 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093870668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12452174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118770513 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105624417 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119513098 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12199159 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09747274 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121883822 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096767737 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120295652 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093436537 seconds)
  done (took 9.255388824 seconds)
done (took 34.043106138 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.694982215 seconds)
  done (took 1.649717721 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.839378291 seconds)
  done (took 1.797242095 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.01790505 seconds)
  done (took 18.004683801 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493564751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579294827 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995024614 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181588497 seconds)
  done (took 3.210095548 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951643189 seconds)
  done (took 1.928837323 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2835633 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236036017 seconds)
  done (took 1.48247158 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770544889 seconds)
  done (took 1.744964458 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363227208 seconds)
  done (took 2.325617779 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326507313 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184309917 seconds)
  done (took 1.481641445 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551618952 seconds)
  done (took 1.52386163 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.281610748 seconds)
  done (took 11.258884537 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268768686 seconds)
  done (took 1.254781256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301871593 seconds)
  done (took 1.277945752 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.506521553 seconds)
  done (took 4.484422068 seconds)
done (took 54.393260735 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09905848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12690948 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103179497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124766209 seconds)
  done (took 1.423833433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101047527 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121348584 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100879115 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120608398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127102876 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096368946 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123430386 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101959438 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121011881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097421291 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12116199 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120072085 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098903113 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123610638 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09323264 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124692719 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099265692 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121619326 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124454501 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096881556 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119467815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098374939 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125773263 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094502585 seconds)
  done (took 3.652119303 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101311614 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119074828 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096673467 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118825403 seconds)
  done (took 1.417700093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100852991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131706897 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106155288 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125950784 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13228197 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106423135 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118146823 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092939078 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119503392 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100000517 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116070034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139279366 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107113629 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124844286 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102210823 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11435452 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091515719 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131507008 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125757783 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100904427 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118291039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099394516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116331321 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109938917 seconds)
  done (took 3.708395379 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170375355 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127577838 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139488768 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096116873 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160448335 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141034826 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088727227 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141052329 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.0879138 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130568597 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118396405 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133171739 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129731763 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088748235 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113988661 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087814007 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129370751 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128911209 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091498014 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128429323 seconds)
  done (took 3.418289234 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098697076 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118024481 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088747056 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117058164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099887112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121701954 seconds)
  done (took 1.627183044 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091240144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11536327 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091497751 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114631516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094809442 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115444349 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088461702 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115816646 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089529676 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115694964 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090282842 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114558266 seconds)
  done (took 2.219851356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508059651 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119951504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121098723 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088969842 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125177259 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090232817 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130217142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092910106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142019554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089164031 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116895562 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091218101 seconds)
  done (took 2.698570942 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237165193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125666148 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283463083 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367556343 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156569257 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165071617 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278677938 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162117455 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198291942 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151042409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23071901 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196516691 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152915555 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191043564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139053338 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145882339 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189784996 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250966411 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153387973 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212196449 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206882676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168329934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180196331 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15165448 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111872499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192889333 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095247446 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129944015 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23489893 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179448518 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191381178 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161384735 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147795686 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237762502 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249563784 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196378894 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280120637 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134023601 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166532394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143350847 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264558412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139059466 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233529089 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155906372 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105493595 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221683883 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166304634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177944101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146956433 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13953599 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198857988 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242603799 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194591541 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139648876 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302578222 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150129874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15899117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190508828 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252538566 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227140343 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190309396 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121503605 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189603465 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191346383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21285029 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152258691 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184392582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148400877 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183697317 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190126256 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166633585 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205435937 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180806771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139107007 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171036989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174106055 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172715317 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260432678 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185498807 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123001249 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17025666 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150316932 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105302363 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193598846 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125764279 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215504474 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144018754 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16544595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210288194 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160798706 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162323145 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222003233 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185374694 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149661768 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084072954 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154126785 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155842425 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177255414 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140216756 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159741497 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158033647 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131196487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169621376 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098219258 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212229811 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092071832 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174767727 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184518388 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128524915 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161336867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154948786 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150175444 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177603592 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201345942 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141642847 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134151636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21017049 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178619459 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142214462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177899988 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229713625 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117091557 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149471458 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227558395 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218344919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140657702 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230029112 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155222384 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108856147 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133638516 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181273159 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156588724 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162032259 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133147103 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185024092 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233957696 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099363185 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140164225 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19639044 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135238832 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132260651 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155322738 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121836634 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139672352 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144217423 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146205721 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177408742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179890767 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1555877 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168496397 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150708943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249593968 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140999676 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151402871 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122692651 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122863242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193783583 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2266439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104294512 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233732907 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172158262 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200924517 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196271799 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109081797 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179089369 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131801764 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093190401 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22218891 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16949416 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164057252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197223083 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223990531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181749806 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183852046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166450207 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201963418 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164763764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157323261 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112835221 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162212131 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160111743 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123897128 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111898504 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135558452 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151006972 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143472359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133708475 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200191714 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172516132 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216862379 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159781223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122222739 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208182967 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103050793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17669557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206433031 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118190131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227347173 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193247884 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213596579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117925814 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228414243 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094052879 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12680462 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142936677 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170318573 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134178664 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109294335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162012708 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180884751 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208587488 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171758986 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206815331 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201988325 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191508108 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094978606 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169235673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18491146 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203460326 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153183426 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139813687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152562854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178505534 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156475132 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256122376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170912993 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176782649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233098106 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124242223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132255788 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150618233 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178807105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154276668 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17716885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146963084 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139609882 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1607482 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10319324 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160799002 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214210456 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16301661 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188025134 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150894421 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185070089 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129246582 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161838433 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161490506 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166744081 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080828923 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202951933 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203971372 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146956573 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167177886 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215953304 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105220284 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30868807 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235685407 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195265098 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139107679 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155581134 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162127435 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163618566 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1719214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180438704 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159320344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187873436 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159434733 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136221488 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111299161 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150797348 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153096179 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132970492 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148930238 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178620668 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138481918 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189569573 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156955653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159418225 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173503059 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150100623 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11727432 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151007851 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244445363 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185152708 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24142393 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151381893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179255567 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207595795 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12728449 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103811033 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134159506 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17914564 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136455797 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191080544 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213774235 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200434263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181086317 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205645503 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11177415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120724918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158133352 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16890467 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20416969 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15078902 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148002371 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231054118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109630189 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132531237 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168535313 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288375754 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147067524 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195710045 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108067176 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281309724 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101203383 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132516582 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164114892 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237066811 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109161841 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178571767 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170929834 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160949416 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163932517 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150193637 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191953799 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238662361 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201153909 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211637135 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105764087 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157496756 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17713164 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222901787 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156657839 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111251417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233592073 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196069115 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195217975 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141800373 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168898322 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168730158 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15859932 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214638816 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10787928 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235411953 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134194555 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193495103 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153979293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138909026 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176992589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188935591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141172759 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186085089 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211051038 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107582307 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13429974 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166046596 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17856665 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154383578 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129016967 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18319771 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125765904 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196205681 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259486613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134031642 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155539346 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119027703 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137705241 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15591198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158399173 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139138104 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140409951 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22748095 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135356769 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193065367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228441438 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171578663 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174725828 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146081062 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693957775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103054213 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22375687 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119778818 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236066334 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152383596 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173644033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160065278 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169616813 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194666606 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161064142 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230339701 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219345369 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180389675 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132274706 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158334985 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154816423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145114573 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125882267 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168076697 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158838918 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146080052 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204733951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164285947 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107362522 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141316441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197832786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149280376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184885238 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179310392 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140101563 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174040382 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215817055 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105481674 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207090601 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208950823 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143347354 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150000988 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134052981 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149276579 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23454106 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125480755 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188422926 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211464033 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131624902 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195535544 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119410766 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221986285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158117774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186053411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14297078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160282181 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157341573 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138281022 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102873098 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156598664 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167277477 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150219448 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159430794 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165087278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194952384 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123352652 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116302447 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311235578 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178105653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215066633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136907176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135446403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162849586 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124530472 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.204388364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179241436 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136503631 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108101159 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137859046 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129248784 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135749826 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156597496 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194639327 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164920244 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234728739 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.10969954 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281379083 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140586598 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156181747 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089931032 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133276822 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150855988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145676297 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155522865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193472581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262331917 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149489054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106483817 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149849774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125472091 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108856265 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166005423 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165081447 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177685519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145357842 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109271398 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156303074 seconds)
  done (took 82.651485997 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169536792 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132505285 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147569207 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201428048 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176408132 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270158373 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209304412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253255962 seconds)
  done (took 2.630465693 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093395327 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14623816 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157423368 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133221552 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092317983 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119650743 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342013149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13426075 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11609673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120554303 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173282113 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09415252 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.546898147 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091357267 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119575712 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10818169 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092474789 seconds)
  done (took 3.747558012 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.205280436 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49697403 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.015567605 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193820138 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159694946 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117689263 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704236053 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09553238 seconds)
  done (took 12.060950765 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115803258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136564961 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123429657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152505935 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140455474 seconds)
  done (took 1.750603745 seconds)
done (took 123.980023669 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098230696 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127830931 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097658549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130961244 seconds)
  done (took 1.51734503 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09459564 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071461421 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100564306 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074601431 seconds)
  done (took 1.41305986 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189433886 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168461292 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401956815 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071778048 seconds)
  done (took 1.582460912 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114220766 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132708953 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103980965 seconds)
  done (took 1.435454496 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106977339 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129349633 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102778164 seconds)
  done (took 1.418770508 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105260998 seconds)
  done (took 1.184875205 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107739085 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136667689 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109321755 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136141236 seconds)
  done (took 1.570198095 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098289298 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12666734 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10952013 seconds)
  done (took 1.413170212 seconds)
done (took 12.966703411 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103991861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421885197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413541417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116764641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724109102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380111146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031910383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146207151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16427102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09266508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138863962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671824244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022572866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376728623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979827544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377353622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705726085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093575748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119274967 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093778233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013395514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09194934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121560843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092496734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704178977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425303585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09455906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371858432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092533294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126776333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382838307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122338242 seconds)
  done (took 16.883184393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095100327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173310352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098346555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137856758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123631652 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095232074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126493245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09447927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179087407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122266652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111968616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122564369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12553583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096230248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141801297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094000633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09355707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120817859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121282831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112856294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119738161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096554389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121170554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093902402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135283508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122297113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093399381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120466572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100134391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127206125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095659979 seconds)
  done (took 4.817307151 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141097438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182563649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128300218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12732518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168199542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123707458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197643972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118285466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182898994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122752625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138918559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09347599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156490702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121940184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11451445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121341563 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097683144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121993996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092625147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122283962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138504587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094179985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121480805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093632159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122324551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108800925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123658873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120396974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094054444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126595882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099962374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123297537 seconds)
  done (took 5.124969182 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096594309 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124933856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109006992 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13818999 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095561016 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124911387 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097883673 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12376354 seconds)
  done (took 1.993491002 seconds)
done (took 29.899777421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11022833 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126169137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10677179 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134108734 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102353703 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130489914 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090962603 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13227531 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133137085 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102024723 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136555464 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092747277 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121979808 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092338935 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134246721 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097160668 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131476112 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102884653 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132931545 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130896344 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094338514 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132752338 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102770845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13224881 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104578747 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132578319 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136569985 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100445266 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121281271 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094951989 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123381194 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103779865 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123849229 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106060484 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126787827 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097768776 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123232126 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095091268 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132557042 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132478423 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101060223 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13268268 seconds)
  done (took 5.967567243 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10784677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.143679583 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104737146 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080709703 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116114325 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080753476 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137028455 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079161775 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10966064 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10766768 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073789548 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105831303 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07811472 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100805617 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077075765 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075124511 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107050301 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07611918 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076825485 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104995305 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079597051 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072474102 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107062462 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078598531 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074759978 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109229389 seconds)
  done (took 3.552504083 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.0997567 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133693579 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114366604 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183284958 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160425388 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09905362 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130634891 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138700275 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108852836 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119466094 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096829005 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149044205 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1102495 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128707354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092343447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135862218 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134689082 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09470891 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128006104 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113305619 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137463688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103334195 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140176278 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132980848 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092181324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122522148 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096916622 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134674464 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098227769 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131290633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09622905 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124603782 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121723134 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105154437 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125087446 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094686131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141489218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102884479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130176684 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092864418 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128667943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121966143 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113282764 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160682398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091622883 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128571367 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09497977 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131727629 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120344241 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111295156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130674831 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092173792 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124923021 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092056215 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121461642 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106836525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123877592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095155428 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131590761 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126233829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106628621 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124415658 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1089173 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122016886 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100527592 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120724739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093512359 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120979845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142765628 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09536246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161421398 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094394391 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124391373 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102038322 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129887674 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128496036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094011064 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136738231 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102730036 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125617504 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102632406 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126172172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095503587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140397765 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123485662 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095314199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122352587 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100688196 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123278766 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0942105 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135460022 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092286528 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125486006 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110727388 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121431853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121288805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100378894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125910702 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092845914 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134350884 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098250478 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122934495 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102440916 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121868655 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123568406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103780512 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125760376 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09229853 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126549756 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099280872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122673528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094233377 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125024933 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094169245 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131938255 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128145506 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098840982 seconds)
  done (took 14.773683851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227266071 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214789537 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206244199 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292746751 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13508578 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115716438 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213887959 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15582449 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124053933 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159657332 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171809877 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181759612 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139720148 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.211009619 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170674982 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09331182 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142744231 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134906868 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244122211 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257794685 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143829164 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101577286 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171102644 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160650824 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137121276 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132483507 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111052975 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133508877 seconds)
  done (took 5.793220894 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10918016 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154674504 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098488824 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144726619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149162007 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093348996 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127687867 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094443212 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135521688 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135593333 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09297454 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129460758 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100732181 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131397467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123506364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103568536 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132194449 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097011642 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12534347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097930283 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133876191 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102462213 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127118072 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12108123 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103555104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121978855 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086302518 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142655031 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121675876 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115878988 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120200434 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10239548 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136781541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094685539 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12363183 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095561169 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125374175 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095040985 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124652804 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091395214 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122013306 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077626943 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121848787 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135909433 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099593976 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08031115 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129681128 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128078984 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094294981 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119450291 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096983457 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124922839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09674471 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129652694 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096879044 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123325062 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097380057 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116260134 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099843759 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124998601 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085009707 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120434036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099168514 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117797536 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100788318 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127717787 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092373201 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124941583 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097783254 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128660223 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095544518 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130376106 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091864647 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126269203 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096144397 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128878399 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125761301 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093429094 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122333722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095605617 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075538199 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123978953 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074084859 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126452359 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092654054 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123062777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095699902 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129574996 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138443774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095734853 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131750581 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094093418 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121909331 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096659236 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113180364 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096567166 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139327528 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14072718 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093785777 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121420609 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108151965 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125855754 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093160391 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105628565 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10283967 seconds)
  done (took 12.947996241 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130789093 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153601817 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123930646 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111704658 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156431097 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158141987 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101508032 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129983118 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094937202 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.1412755 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093857231 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131294624 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093850303 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137833035 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156110581 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103568934 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124913965 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107579449 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127235764 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168367646 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112162205 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143208123 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109859714 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123935686 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128242834 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110191347 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161567672 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107527331 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137463013 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142027582 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114029898 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160827517 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143267857 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104091079 seconds)
  done (took 5.46658782 seconds)
done (took 49.582892857 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.212895882 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405159382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186657535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.091827002 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.202318518 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225639932 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199651171 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187577935 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.682953641 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.187710305 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.426221443 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.691445188 seconds)
done (took 59.812882882 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.264522033 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.322584871 seconds)
    (2/2) benchmarking "String"...
    done (took 1.451022416 seconds)
  done (took 3.88767962 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.670946586 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.114921275 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446915061 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.187862177 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204987295 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.474922461 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.807936447 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.514534478 seconds)
  done (took 27.86639767 seconds)
done (took 41.804160936 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193513353 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.252266419 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229218041 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166531757 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299057794 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.237696341 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.476545057 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.202902004 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.203470906 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.174468329 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21006341 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.19627441 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192238395 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488717708 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.204000682 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192732944 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.228932213 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.671364778 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580511616 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197958007 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223530675 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.241906947 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.206944314 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20205615 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.209746633 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187156213 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202096859 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204852234 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.549900074 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.185600427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.189935754 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.646986761 seconds)
  done (took 189.964823362 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.186595384 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.337375707 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.406471143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220632474 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.647336663 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.391910209 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323003647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.718198551 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207330991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.195278435 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.419345307 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190360383 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.493251545 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.207337287 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.21648091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.25272467 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.394340123 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.49441359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224305221 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.341223417 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.204796908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.424066554 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.345065053 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.371570379 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.242730028 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.241296119 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.207015781 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223373054 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376636456 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.324765099 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195086105 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2278905 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.768228524 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.034836963 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201687692 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.197583366 seconds)
  done (took 149.567095932 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.184228029 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18298302 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.18463615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213595786 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183879872 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.706399646 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717606475 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.685789854 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.595225993 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.438602621 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.440290486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188116519 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276356158 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.197125452 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184452084 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20124548 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226988445 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185712265 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184308323 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717042465 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201755356 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.276195357 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352804854 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200556051 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214902694 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.571799232 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.184103941 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214833253 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509145489 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.229897755 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185893138 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530502565 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.654468767 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188663562 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295160949 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18743156 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215556289 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18652475 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461186237 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185974696 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.186711607 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189414249 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.185903976 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.838569276 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189472396 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.707113358 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186359738 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.114736441 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190022068 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186391182 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.964378915 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.794869534 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205863489 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186431805 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.188804092 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187398136 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186321479 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.216909385 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.997355117 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.282422422 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205342432 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191103635 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217011417 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.188154235 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.27589175 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.187426513 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.474359382 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244805499 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.292726507 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721539566 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19191667 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283313059 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306758933 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.188909435 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188829841 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.18735788 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187567809 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187397469 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296275363 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.18896345 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.564943627 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.355926946 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203817426 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.434718872 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.287893969 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188061794 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543695692 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193640518 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189100637 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899318155 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284527649 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187322028 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187896382 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187815491 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.565145796 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720777744 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414509669 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194601857 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.003304159 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192489302 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.581615268 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.698181306 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.832989301 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192859902 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297035877 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354901518 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207343138 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.186532899 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.186114094 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.186498264 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.394284136 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191298259 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.24731949 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.582310459 seconds)
  done (took 364.387906192 seconds)
done (took 705.035206403 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.78044056 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.772709277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.868675135 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.759769115 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.725251688 seconds)
  done (took 10.01995769 seconds)
done (took 11.13271641 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.363298507 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.359297333 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24212209 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.362451028 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215743536 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.377397177 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.340909936 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.206719162 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.282418572 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.262450307 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282111472 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237804523 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21991033 seconds)
  done (took 17.866302214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.488510831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480332044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251331051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482837355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228148077 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49274342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382040039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.38912859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392629654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220190629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19982809 seconds)
  done (took 16.122798503 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491225467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502778752 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255361765 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494880086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230016215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505925535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39280328 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.394846966 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395869234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220488914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202036622 seconds)
  done (took 16.200983064 seconds)
done (took 51.303426411 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.196231746 seconds)
  done (took 2.311444765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230228226 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.391704527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.215114079 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.202387033 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.197971489 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.198951588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.203624085 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.199402594 seconds)
  done (took 10.954729046 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194677514 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.195183607 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.193964721 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.195325561 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.197025217 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.196619908 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.194021727 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197636928 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.197155593 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196907964 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.19572832 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.197276877 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196862866 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20031677 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194472076 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.195560728 seconds)
  done (took 20.254696337 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195703728 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194451476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194772195 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.194800683 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19407377 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197123478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195887742 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.194602616 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.19463812 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.195182223 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.19631236 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.194856958 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.19547076 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19801614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.194452205 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.194990645 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.193736262 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19475663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199211899 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194952141 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.194436275 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.195098924 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.195328942 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195087316 seconds)
  done (took 29.805987641 seconds)
done (took 64.441376465 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.78003007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.708433183 seconds)
  done (took 6.602922875 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.197494301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.196535458 seconds)
  done (took 3.511552463 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197713347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.197020859 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.197842453 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.196329761 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.200557301 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.196391831 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.195848915 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.19635078 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.195458109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.196772081 seconds)
  done (took 13.085450189 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.196145019 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200056298 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.193763589 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.195554658 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.195515308 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.193982994 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.195780916 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.196547313 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198109146 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19482818 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200279403 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.194322054 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.196297847 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.195172427 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.196588609 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193238558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19412135 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.193667168 seconds)
  done (took 22.640317529 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.195228505 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.197456817 seconds)
  done (took 3.509197702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.194609512 seconds)
    (2/7) benchmarking "second"...
    done (took 1.193396144 seconds)
    (3/7) benchmarking "month"...
    done (took 1.193972512 seconds)
    (4/7) benchmarking "year"...
    done (took 1.194107191 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.193911374 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.194905478 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.194850748 seconds)
  done (took 9.474065337 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.196676676 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.392179054 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.472346957 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813784191 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.200732668 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.199516569 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.016913474 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.201212409 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202045627 seconds)
  done (took 13.810822299 seconds)
done (took 73.749572078 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.187490536 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.204616137 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.31681356 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210054875 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.210467745 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.489386969 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.237879061 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.312014401 seconds)
done (took 37.284730354 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.193993096 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.175620038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.835069088 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.174832457 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.191403128 seconds)
  done (took 18.49396338 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.131204796 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528196561 seconds)
  done (took 4.774867006 seconds)
done (took 30.579097899 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19890804 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.198257121 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.199021313 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.197146915 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.19597993 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.196748708 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.195471103 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.196478487 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.198003478 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197764269 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.196188777 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.197418169 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.198486528 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199362898 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196193011 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195055165 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198417035 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195376775 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195972981 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194777733 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.194876839 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199415635 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.194647008 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196144966 seconds)
  done (took 29.844123298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.19883311 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196942072 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.199031751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.199498951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.196618516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.199685532 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.200037617 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.197429553 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.199597509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.199908383 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197876757 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.197523222 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.199313725 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.196029084 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200295033 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.196877636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.200045285 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197259329 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19929454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.198424619 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.199808651 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197546817 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.1974916 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200162648 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197063959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197407589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.200698731 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19969608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199601165 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.198005667 seconds)
  done (took 37.076314696 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.205351259 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.206826014 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.201059836 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.200889346 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201488482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.201051594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.201069688 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200666114 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.200433021 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201751383 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.201719934 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200701073 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.202534127 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201556581 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.202271664 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.203063732 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.20126033 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.201624689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.201540381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201072489 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200892962 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.201331999 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20223359 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.201582351 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.201535258 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.202903224 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.201159518 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.202487118 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.200944852 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.201680624 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.202390563 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.201882876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.202499307 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.202208479 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.201289927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.203574239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.206364426 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.208392111 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.201935968 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202415908 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.202694182 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.203362826 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.203130496 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.202114142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.203210108 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.203681297 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.202261773 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.20265172 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.20432624 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.202946276 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.203884369 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.203820008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.204188359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.204229866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203341851 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.202430396 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203193675 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.204620784 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204585926 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.204521328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.204757119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204576294 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.204212813 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.203278917 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.204815627 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.204215783 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.203677864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.204915917 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.204674348 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.205234017 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204286388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204634149 seconds)
  done (took 87.730490187 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.206113026 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202686835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202486295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.20261685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203561097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.205510372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.20230219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205355981 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203304225 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204771898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205966963 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203729696 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204678608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205883504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206521287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.202740198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.206115197 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205529823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.207064824 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.207078657 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205793677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20365884 seconds)
  done (took 27.62637411 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206322015 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207534871 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202873684 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20683912 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205943965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.207117795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207565288 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208195446 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20693289 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205037897 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20524496 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207371012 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203664336 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204869763 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204060566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206259867 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206905556 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205705612 seconds)
  done (took 22.833853479 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.205138884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.205070642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.206294186 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.204717361 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205491097 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209016513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205503627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208211858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.208386341 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.204733375 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.207746746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207188946 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.208304552 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205148558 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208055435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.206436243 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.208108052 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205993051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208947372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205788161 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206297994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208666324 seconds)
  done (took 27.674936321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208208976 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207098375 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.206762927 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207364406 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206174083 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.208121615 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209085076 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.20673704 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210548352 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.208998048 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205836903 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209921589 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20781783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.207396236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.20712108 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208474593 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209592901 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207707139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209485039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.207192579 seconds)
  done (took 25.285398604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21132429 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210075648 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.210664492 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210821082 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211019497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212468657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.210683851 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.211111158 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.210871375 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211759476 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211193607 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211225089 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21041154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211788378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211873815 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211873821 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212141889 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21222549 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212842066 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212027575 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212561292 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21210744 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212972166 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212732531 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211972354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212814738 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212106413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211647781 seconds)
  done (took 35.056422286 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212504151 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211927069 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.210083642 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.209317793 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.210606271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.21061074 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.209283514 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209890027 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212335342 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211475705 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213754877 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21234691 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212931941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.212842547 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212497305 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.213531243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213633152 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.210842171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210790682 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211029211 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.213725217 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214128173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213155405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210926984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211654751 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.213769947 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212261446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211331152 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21369252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210385491 seconds)
  done (took 37.488117419 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.233389316 seconds)
    (2/2) benchmarking "in"...
    done (took 1.232867123 seconds)
  done (took 3.597219863 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.210882445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214718109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214591292 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212448213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211802638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.21523767 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215319397 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211599783 seconds)
  done (took 10.837329557 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.215311601 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.213278919 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.214975775 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.215329121 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.215015207 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.215831077 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222832109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.235041186 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.216817972 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217286616 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.222045952 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.222771985 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.219013451 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216839061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215818223 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218014713 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.216860567 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.217235155 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.216819684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.21854559 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217069542 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219088985 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219032473 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214227731 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.218780656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.227918324 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239503968 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.217625854 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217944723 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.221844737 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.217258332 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.215161253 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.217379476 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218700547 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.217630115 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.218342437 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226556635 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235513025 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.224710628 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235450449 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218725418 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215527341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219671431 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.219536214 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219594175 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.217778934 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.220124164 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214891609 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218740695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.221699436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.222468627 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218798983 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.215441021 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222140367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.219488933 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22537631 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.235392473 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22326782 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.227936843 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.228786453 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.249861604 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.242400905 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221069146 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.21956238 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229867355 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.240403671 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227931273 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.234214171 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.21750532 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.220109392 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.227202204 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250587086 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243369436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.220606389 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220158744 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220555629 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22083556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221267257 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227883917 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241171732 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220152991 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222422736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230302889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24109343 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221435036 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221166345 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.220385783 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.221787533 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.222109512 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23190916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238330488 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22195147 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.221750909 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.222085672 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.223062435 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222499346 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221038895 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22257917 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.219940577 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.222425308 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222707642 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224990358 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.230555883 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220883578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.222948423 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.229606685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240281198 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222563006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228539513 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222131479 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222142932 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223891882 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.228950081 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.220236255 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226106314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232478423 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.222935502 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.22598453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223221033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.223522767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231855637 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.247179746 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.223148668 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223284279 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.228446299 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.232688284 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223789348 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227072909 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.224991715 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.221644995 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.22108129 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.226058508 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.223956801 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.225782992 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224179049 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225839492 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222386256 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22442653 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.223751992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225237439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226101378 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.225281731 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.225027027 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.226906865 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225355825 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226064717 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231612818 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.243928788 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2257277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.225161562 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.223326012 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225992729 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.227993298 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.225961382 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.226764636 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225671433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.225502701 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.224799381 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226025677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.226979596 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226748859 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225571589 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229758572 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.227051483 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230558923 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225909402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223434189 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225956519 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.227975266 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.227238478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227024408 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225164379 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.230023424 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233331639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228056748 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.226874953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229588569 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227002918 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226692109 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226517691 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.229515625 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234068052 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226522344 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.235010715 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24535546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226948462 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.228325811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.2282425 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.226884185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227129905 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.230568718 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.235244947 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239731279 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251504564 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.228705105 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23192075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.229775311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.231865702 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232441097 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.227482721 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.229370272 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228221414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227962908 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228424903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.230384042 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227978425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.228940988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229506643 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.229170804 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.228841862 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229212494 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.230098612 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230191105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227990923 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228786279 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228857168 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230625628 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227721969 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.228526334 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.229743503 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23011106 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.228885693 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235455472 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227672897 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231379855 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232161577 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.230560406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.229003172 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.231216415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232288944 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.23136706 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237459358 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.248066906 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.231974408 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237539357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.247674739 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.230722574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234103162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232240855 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228382467 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233392438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.237710418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.231491008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.232037141 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.231642055 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232688699 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231858865 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238126777 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.247171438 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232179816 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232093054 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232372365 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229534625 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.232667178 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.232293713 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232172248 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234585121 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232825212 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.232396464 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234555422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.233299573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.231604654 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.23272079 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23591791 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239980232 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.237476129 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.232468045 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235474555 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.234350118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.236720172 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233839994 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.234332346 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.233372729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243338593 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.257590189 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241227296 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.252518301 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.233826377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239639486 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25252402 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.236630666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234739977 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234180475 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.234264849 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.234359399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.231596522 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234076424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233363776 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236227795 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235257445 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.238179009 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.234224525 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234674975 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235006598 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.234326534 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23567166 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234517311 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.235536979 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.23737321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238126482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.234049188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236364461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241902227 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254040619 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.23581593 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235451794 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.234758791 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236001349 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.236240285 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236394907 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238797688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.242334181 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238445593 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.243284462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.236699135 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245206457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.235771858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.23937246 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242601473 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.233706648 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236065191 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.236748961 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.236921447 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244525213 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.253511561 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.238482925 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.24071062 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237578105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.236748892 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.237520068 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236153586 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238557974 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.238030425 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245924719 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255624994 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.241538759 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239774087 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235928058 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237907307 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238406993 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.236333117 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241903178 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.238045742 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.23848825 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.237855564 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239891378 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.238519996 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.238730683 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23900159 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.235632593 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.239017439 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245134255 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.258324006 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242224648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.239515583 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.245808448 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259322151 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247519842 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257703218 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239217236 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238304161 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.239523984 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.241754116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.238232872 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240630071 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.240229754 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.241042502 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.243129403 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.239804804 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.242262453 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240413322 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241205483 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.239793708 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251403415 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261254265 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241704574 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243826789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.238948825 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24200594 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.244444842 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24151198 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.238745007 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244452005 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249267845 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247662717 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.2404444 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.240139225 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241212911 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241870449 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.241268639 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243161693 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24254096 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.241535366 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.241859693 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.242512966 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243916234 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242036169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.242268797 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242491821 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243232292 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250347595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.260294461 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.241744139 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24138074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.243654657 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243278643 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242381398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241877084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242508051 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242824796 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.243318411 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248190849 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.246630241 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244217457 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242464566 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242159561 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242367862 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243732183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24299063 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.243741107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241992689 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.244410701 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.244591812 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243161119 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242538572 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.24329128 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.243470833 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24256233 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246714409 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.249917464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243765619 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240900481 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244688587 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243920739 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243852042 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244510169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250988963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266509614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.252793674 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252509962 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.247702101 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.245693182 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24730755 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.251312961 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244948078 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245230798 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.245876643 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245816084 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.244968989 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248342253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246061532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.251825576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264196538 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244860573 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254986084 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.263622808 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245201955 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.247037114 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248982923 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245310608 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244065331 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.246502126 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.245828521 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253859689 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.266149833 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247107085 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247563289 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245449756 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.248050556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249422582 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247380331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247593121 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.243211284 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246778667 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246953955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246536159 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.243528003 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.24581246 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.246999051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.250613431 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.252037721 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244552997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247078266 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248141734 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247785169 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246627665 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247701326 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244200774 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.244863175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.246875346 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24771853 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.24850841 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250941165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246512279 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24911542 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249735555 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248542282 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250107666 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256462688 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254123395 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.245802089 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.248765438 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.249527946 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251683902 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248239067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.248174174 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249643402 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.249581229 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248981597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2481826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.24935387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.253367254 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263725599 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266606282 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249964494 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250889068 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252601648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.249656006 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.246606112 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251338798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.251545376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25274051 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.255500994 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249348614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256353198 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267802565 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.250272462 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252664421 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252257339 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.254333202 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.252827135 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24902397 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250600062 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.252899393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.264346954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250218387 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260226717 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276475766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.26831027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.251585689 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250988509 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250344511 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.251449547 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.252045244 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.251057462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.252131134 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251942897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.251686408 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251680607 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255670918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.253254526 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.253913921 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250873467 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.251299079 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.252027913 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248922125 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.251995193 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.251540622 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.2521978 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.251245989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.250906482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250607753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263574001 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276191704 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.253114034 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25207617 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.249889002 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255830591 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.254589278 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262104822 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.258436435 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.253422393 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.251557408 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.253752804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252528968 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25141844 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.253034313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253419669 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252515142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251139187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.264752423 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276687794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.259736239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253791341 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253649699 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253984338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255069836 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254697369 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253063697 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.254508179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256340233 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255917505 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.254253826 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.253684999 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.257530612 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.261012617 seconds)
  done (took 738.914047821 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251140627 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251578535 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.252816702 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25158644 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252379639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252320841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252100437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251724443 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251821778 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252204167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251829085 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252306159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251462672 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252982251 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252076734 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.251825632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251980561 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253436344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.252647737 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25340075 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252828855 seconds)
  done (took 27.464962413 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256032886 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251898664 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.253142289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255501811 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252765739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255717693 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253986426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255754338 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255780381 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253440189 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.256594179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255497329 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254413195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.253963685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253483185 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256363969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.256257903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253851786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.25723559 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254308063 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255786011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254320862 seconds)
  done (took 28.77684919 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.256216272 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.256885652 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.255764519 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25425858 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257636395 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254892171 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256735691 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256902835 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.256838418 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.256764954 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.256566307 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258262702 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.262947939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.260735214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.258251804 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257850183 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.402843632 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.257852229 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256971443 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25782864 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255470881 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264027355 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.275601324 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254382628 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.256221487 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.258574659 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258168817 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.258317374 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257722365 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.259794319 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261471874 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.257869701 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.258966122 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261354855 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.25822447 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.259376994 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261991739 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259318187 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.256842363 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.259015761 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267982068 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.275504771 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.260717121 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.264841496 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.279151924 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.25905426 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261644441 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264902586 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.257492045 seconds)
  done (took 63.048855759 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.259557138 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.259338886 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.257569582 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260485752 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.260359311 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.259911155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.25997303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260804318 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.256916436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.257043949 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.259601687 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.25827748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257302093 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.259912178 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.260259896 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257923817 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257836564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.2587439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.25818031 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257752216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257185258 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.260724633 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.261137851 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260272415 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26167664 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257713839 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.259052576 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261535965 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.258858965 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.258601018 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.261198924 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.260803431 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.262136473 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.259332432 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25908328 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.262268018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262575407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.259238086 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.262100053 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259320334 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.261161094 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261602418 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.262232709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261259911 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260432341 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261159856 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.260768855 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.259691856 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.260332339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262421782 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.262432647 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.261060758 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.262141037 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.260832756 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263209673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.263913336 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.259373226 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.26130834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.262155551 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.260151397 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.260608232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.264089813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.261622381 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.264248993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.265681984 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.26109031 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.261795468 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263230326 seconds)
  done (took 86.888201215 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264291497 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263216609 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263335448 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264221712 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263445632 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.263645422 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263617311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.263046825 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263925727 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263293613 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263872361 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264220009 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263954416 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265008346 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26432551 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.263510224 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264059389 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264076554 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264444522 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264448048 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264686897 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264708905 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263539412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264823918 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265952249 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264503176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264041152 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264149501 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265527933 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266446652 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26574376 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.265893117 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264496356 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264816765 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.265587616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.266393674 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264219363 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265710938 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265009263 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265598643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265601243 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265769639 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266137721 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265554948 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265198996 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.265826471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.266137953 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266087881 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.266704904 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266779615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.266200226 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265453739 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266924013 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266769183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.265534981 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266254187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266307125 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267630442 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267068986 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.267211021 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267697804 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.267705247 seconds)
  done (took 79.619708577 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268141515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268567643 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26570751 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.265413211 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267841669 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265503425 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267955948 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268057082 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267681861 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268633508 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267802067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266084955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266302882 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268439498 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26536147 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267048164 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266265377 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266805947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268646347 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266162224 seconds)
  done (took 26.525253147 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.267254981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269737996 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266218352 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266630478 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268936222 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266749226 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.270118909 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270147797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266849542 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270541624 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270011849 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270375899 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267902442 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267435089 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.271179863 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26865516 seconds)
  done (took 21.481359354 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267051035 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.270525 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268773263 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.269548566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267570044 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268413988 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270811714 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268571206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268520832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.271362888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.270861843 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270783086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.270101362 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.270092319 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268987717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27023731 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268221107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269258981 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.270672252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269770975 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270123047 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269474439 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271784865 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271339534 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268655893 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.269925023 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.26877553 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268755006 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269128571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.271854486 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268940392 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270678151 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269720174 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.27054493 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2718857 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.268279244 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.272154965 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.271525378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272673547 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272304771 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.273905665 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.2698429 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27206206 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273060922 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27149569 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.273265694 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270446938 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.270854207 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.271405907 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.271380325 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272644566 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273612812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.273126997 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.274588964 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.272646301 seconds)
  done (took 71.068299776 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274322953 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27418825 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271118925 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274699218 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273388288 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.271212398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274086792 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273215958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271853225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274777331 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273100717 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275190078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271755542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274288553 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272422843 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275818836 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27319734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272182988 seconds)
  done (took 24.107880686 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27283909 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273255187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275601256 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273052277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272245253 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275609859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271838324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274934484 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274713836 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272645141 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272240937 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276278179 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276217269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.275829006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273835415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272786716 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27533483 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274942738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.273765137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274813849 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276615724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275798401 seconds)
  done (took 29.22293243 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.275354374 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.274077012 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.27516107 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.289086161 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.291112172 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.296376902 seconds)
  done (took 8.888570653 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282588071 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276893418 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273046615 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276430619 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276334374 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273519042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274041037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274741976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276950505 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275648312 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274613479 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277514424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27819569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274842918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27734409 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276857001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275654789 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275416778 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274864044 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277656179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274882074 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27779327 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275449424 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275573253 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275732286 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276281535 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278557523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27614552 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274982341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277994649 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278682096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275619013 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278080063 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276965913 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279503884 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278696753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276308915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278545854 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27920995 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275407761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27913122 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278861854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278906481 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277313007 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279430655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277479561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276515229 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276855485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276389947 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279724932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2794808 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277827082 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280158631 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279898979 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279744044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279885599 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277902214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27706699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280847327 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279390322 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277150524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280706416 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277068501 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278946111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280713656 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278225423 seconds)
  done (took 85.520285868 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276830303 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27881986 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277493008 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2795995 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278163796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278070358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278131816 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278537924 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278430218 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278032202 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282118876 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277536264 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279177434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278763356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278502451 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278530431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279069331 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279820659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279189385 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280950878 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279340576 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278766817 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279393256 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278745678 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279578288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282316974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280446868 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279753187 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279343039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28045676 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279751667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279465422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278779702 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280211166 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279974791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28002935 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279369844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281145597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279425491 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283278657 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280469598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283541886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281129307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280683537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281370472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280715175 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281328322 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280988326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281479967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281002666 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281531096 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281937455 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281284708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28021193 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281548078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279647142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281436545 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282381289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281531687 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283457261 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281809645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280660444 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284072436 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281187993 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282494462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282234941 seconds)
  done (took 85.689245549 seconds)
done (took 1723.383562691 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444599948 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.400299795 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281785701 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287970388 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282239501 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.294948903 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.303961471 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282991465 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282636664 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.282402889 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282850437 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.472300973 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.278420661 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283951619 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28417804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377041937 seconds)
  done (took 42.319536029 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.31086679 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290638883 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394372316 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306001305 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310487928 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.463904595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338687287 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288717879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.447690775 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328888797 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.744293881 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311051372 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.289860429 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.324816185 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.30527744 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464697812 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521720624 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.749755848 seconds)
  done (took 29.388352036 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.705204655 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.30070397 seconds)
  done (took 9.203832725 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306225688 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.290601775 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.289135578 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289359181 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.281249967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296227969 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.28781325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285314469 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.717654663 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.406222949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.290189015 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298389915 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307023246 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289908648 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.287942333 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.326147157 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453408228 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288220072 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285722848 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.294831337 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289442736 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.371558779 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.327513486 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.287757308 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.405919754 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.72278385 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.291904441 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.29595686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.437572117 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.288897315 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289341533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291336016 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.290613037 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.886808469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.814563492 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.30088018 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311951287 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.298461606 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.288440052 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436479824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291604939 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.296564244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.287397567 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.79605414 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.415254682 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.40269716 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.445110403 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.307396487 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292638851 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349260704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.290507721 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292046301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318584786 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.031729049 seconds)
  done (took 108.526146281 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341402337 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.674376786 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450509439 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.304155125 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900138896 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95744928 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300133866 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.553625238 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319136774 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284535988 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.57441507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770527355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306382868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.336141765 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.287970055 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.295596151 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.285353822 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.994210261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303189213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.288469178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.771119875 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.286528016 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.285691833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.322956689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323845588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722603651 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.586379881 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.583768893 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.301955363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.285102007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.730337801 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301667258 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.343841376 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287897279 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.53902379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625230755 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618331748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.307223769 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307379745 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.287300867 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.316410946 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7166947 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.624585503 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303312682 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.288018618 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.721158429 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302657758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294250636 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.288495284 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486670721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.004823287 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287391282 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.579199555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288374616 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.580368987 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293987092 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353383923 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751775906 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315036006 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.252650827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316115207 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.289649653 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293823542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288614359 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292849286 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.615215266 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.664657298 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.294567901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.615253832 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.744008189 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315094823 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789839425 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.10620743 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306344024 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.334681671 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297832503 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.854463192 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760061104 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305948737 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289820774 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.602410188 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.308123982 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562116724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.306243327 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289318132 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806262243 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.294963412 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.315227485 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.288746133 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313016443 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.940871272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290818887 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.549109882 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.352208349 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.28930098 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.288693372 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.335271342 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297630277 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.290148409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.295542933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791258578 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.313566715 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.389997955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30556783 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291287482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307451237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.293379238 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291542449 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504869644 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.756363125 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.314696621 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291580928 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.29145094 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.309520083 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.302830085 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.292515415 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.579319234 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.308161002 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291584024 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318286256 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987136104 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.327791202 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305059081 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.296319728 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.165984972 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.4954027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309909189 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.307896139 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290833129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307993631 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.466294663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317761375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342432326 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.292797822 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976247594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336151784 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.30610508 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.667852161 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.299093953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.113720687 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316543238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.294204063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.574418846 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.550380493 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.609521164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292826932 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.308882984 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.970369392 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.358566994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430895802 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312993571 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331328288 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49013991 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.444609859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293446623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.905330781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293311508 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504841103 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.293516581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588731668 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762911947 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.310614687 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298960648 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974040748 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.008792194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.967917391 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.295928209 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.56226921 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.240446675 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773769015 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.294488246 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.294183715 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.771340796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.296837053 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29864718 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.295549028 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.296753886 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.444038278 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468042326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.849095189 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298197094 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726904842 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.357890801 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296214278 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.301770805 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.298030852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.643856565 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391442485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.295891794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351779528 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.297004342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.30163992 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.749640357 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.149380362 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.296730304 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445603274 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903994236 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.313473019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297566332 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.889542684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.627896409 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789403427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355995238 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.586030061 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.318215517 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.333577427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.854726914 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365956167 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750126834 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31603334 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.297542204 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875190803 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.313897978 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.356898601 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296994275 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296484978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809000546 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.315102328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.29743217 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.448929282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32960406 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542181728 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.300060409 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332865644 seconds)
  done (took 1099.240630014 seconds)
done (took 1289.874687202 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.299009079 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.298062388 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.283744216 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301731994 seconds)
  done (took 26.397601978 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304766526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300724119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301693622 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29980425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303951003 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300734613 seconds)
  done (took 9.023629841 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.376825863 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.296405438 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301817277 seconds)
  done (took 19.187219708 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.494324384 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.522970117 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.614953831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.357290004 seconds)
  done (took 10.202472511 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303280194 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.303066796 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.301693912 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.306273361 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305715814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307768919 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.305195829 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.305011944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.30697378 seconds)
  done (took 12.957603686 seconds)
done (took 78.98442151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.347228802 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.826464534 seconds)
    (3/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.276134828 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.632697265 seconds)
    (5/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352632781 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324850893 seconds)
    (7/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.322629232 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 6.296864833 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.180760883 seconds)
    (10/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.289232233 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345595623 seconds)
    (12/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.074501206 seconds)
    (13/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.390114719 seconds)
    (14/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.110191489 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.424494074 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.298063059 seconds)
    (17/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.329842475 seconds)
    (18/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.651803741 seconds)
    (19/286) benchmarking ("sort", Int64, true)...
    done (took 6.317994658 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.728527229 seconds)
    (21/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.779602166 seconds)
    (22/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.283419171 seconds)
    (23/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.419826639 seconds)
    (24/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.500460992 seconds)
    (25/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.300528649 seconds)
    (26/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.305711277 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.921303885 seconds)
    (28/286) benchmarking ("sort", Float32, false)...
    done (took 5.288603515 seconds)
    (29/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.518627241 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.305876698 seconds)
    (31/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334806355 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.732161164 seconds)
    (33/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.410296889 seconds)
    (34/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.437199349 seconds)
    (35/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.576506269 seconds)
    (36/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.347966311 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.286472995 seconds)
    (38/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.345960722 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.306075473 seconds)
    (40/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.365638454 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.402367507 seconds)
    (42/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.279292268 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.27906823 seconds)
    (44/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.300300314 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.286411718 seconds)
    (46/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.358687563 seconds)
    (47/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.325699821 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.668873458 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 6.300249001 seconds)
    (50/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.279574528 seconds)
    (51/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.296595825 seconds)
    (52/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.323966135 seconds)
    (53/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.11236021 seconds)
    (54/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.280595062 seconds)
    (55/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.281076094 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.61905218 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.696845526 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.388746333 seconds)
    (59/286) benchmarking ("sort", Int64, false)...
    done (took 5.433857482 seconds)
    (60/286) benchmarking ("sort", Int8, false)...
    done (took 4.353409784 seconds)
    (61/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.133876139 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.713342001 seconds)
    (63/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.059555997 seconds)
    (64/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.023530453 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.310281631 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.345065002 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.406410311 seconds)
    (68/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.280901805 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.537071647 seconds)
    (70/286) benchmarking ("sort", Int8, true)...
    done (took 6.31883003 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.199680034 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.407432592 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.287951225 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036451058 seconds)
    (75/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38724455 seconds)
    (76/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.64490083 seconds)
    (77/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.239099489 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.300663572 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.279848046 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.953103206 seconds)
    (81/286) benchmarking ("sort", BigInt, true)...
    done (took 6.317461055 seconds)
    (82/286) benchmarking ("sort", BigInt, false)...
    done (took 6.301928648 seconds)
    (83/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.34783795 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.134435686 seconds)
    (85/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.657381214 seconds)
    (86/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.565726986 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.657342967 seconds)
    (88/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.309306105 seconds)
    (89/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320125466 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.302841553 seconds)
    (91/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136784305 seconds)
    (92/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.334161816 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.525552872 seconds)
    (94/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320796311 seconds)
    (95/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.29650021 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.283329549 seconds)
    (97/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.646908283 seconds)
    (98/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.318059973 seconds)
    (99/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.366185112 seconds)
    (100/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.303350506 seconds)
    (101/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.300239494 seconds)
    (102/286) benchmarking ("sort", Bool, false)...
    done (took 1.815063361 seconds)
    (103/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.342891292 seconds)
    (104/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.459726094 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.750107946 seconds)
    (106/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.3245559 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589454165 seconds)
    (108/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.569767988 seconds)
    (109/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.673170859 seconds)
    (110/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389078825 seconds)
    (111/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.427732236 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.035662752 seconds)
    (113/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.261679438 seconds)
    (114/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.688880811 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572990005 seconds)
    (116/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.490679091 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.337850265 seconds)
    (118/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.40160774 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.319851005 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.284686408 seconds)
    (121/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.447581936 seconds)
    (122/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.464214411 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.909309721 seconds)
    (124/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.284198031 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.330551367 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434763498 seconds)
    (127/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.296140033 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.295329021 seconds)
    (129/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374173907 seconds)
    (130/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.563619721 seconds)
    (131/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.995645512 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.67054202 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.964150942 seconds)
    (134/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.712134934 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072623678 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.339849401 seconds)
    (137/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.058725947 seconds)
    (138/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.332256511 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.284928937 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869013072 seconds)
    (141/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.308065446 seconds)
    (142/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461064717 seconds)
    (143/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.780959873 seconds)
    (144/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369617648 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.328655168 seconds)
    (146/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.803760624 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.324579872 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.284379648 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.31350673 seconds)
    (150/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.314058686 seconds)
    (151/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.077294511 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.487654602 seconds)
    (153/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.484794038 seconds)
    (154/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.904669041 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.293424077 seconds)
    (156/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.751872302 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.108065561 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.293218762 seconds)
    (159/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.294615753 seconds)
    (160/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.335641434 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.799745642 seconds)
    (162/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.290005273 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.447659496 seconds)
    (164/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.40478158 seconds)
    (165/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.664361951 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.085966868 seconds)
    (167/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.89463446 seconds)
    (168/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340366969 seconds)
    (169/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.332197063 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.342914296 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.296583514 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.312260784 seconds)
    (173/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.506615343 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355733309 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.194709516 seconds)
    (176/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.420589163 seconds)
    (177/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.299636856 seconds)
    (178/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.395990881 seconds)
    (179/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.144442589 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389825151 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.394105505 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.008872328 seconds)
    (183/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.610218153 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.331243853 seconds)
    (185/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316378823 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.435305539 seconds)
    (187/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.803986355 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.364985122 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.309260341 seconds)
    (190/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.618261023 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.389513925 seconds)
    (192/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.120541881 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.648556132 seconds)
    (194/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.421587206 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96751996 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.51040333 seconds)
    (197/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.474386749 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.315825535 seconds)
    (199/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319611882 seconds)
    (200/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.247868995 seconds)
    (201/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351201455 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.308221994 seconds)
    (203/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.404792894 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019272163 seconds)
    (205/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332237375 seconds)
    (206/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.289955425 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.435677562 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.525884671 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.35878369 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.206766881 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.091818593 seconds)
    (212/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.655161708 seconds)
    (213/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.514112596 seconds)
    (214/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.511330636 seconds)
    (215/286) benchmarking ("sort", Float64, false)...
    done (took 5.614444297 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.718565849 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.673245729 seconds)
    (218/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.306215841 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.362336408 seconds)
    (220/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.302294804 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334926305 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.714096852 seconds)
    (223/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353149108 seconds)
    (224/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.322828249 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.302098796 seconds)
    (226/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.29171936 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.148347679 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.011907125 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.443064665 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.596112285 seconds)
    (231/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298637729 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.737803147 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.341662937 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.925229557 seconds)
    (235/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.418612291 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.31451611 seconds)
    (237/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.337117375 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.529286396 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.209403353 seconds)
    (240/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.334396848 seconds)
    (241/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.317132362 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.355283247 seconds)
    (243/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044106837 seconds)
    (244/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550930806 seconds)
    (245/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121751973 seconds)
    (246/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416140279 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.705137209 seconds)
    (248/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.39566172 seconds)
    (249/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.397649346 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.663173076 seconds)
    (251/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.317244549 seconds)
    (252/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.655530404 seconds)
    (253/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.321497896 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.669423458 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.348811811 seconds)
    (256/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.124864194 seconds)
    (257/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.329655828 seconds)
    (258/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.299301501 seconds)
    (259/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.316066399 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.411611669 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396918877 seconds)
    (262/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.868145224 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45290132 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.945104634 seconds)
    (265/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.485715221 seconds)
    (266/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.820048845 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173796684 seconds)
    (268/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.313309555 seconds)
    (269/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.824402897 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.355941062 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341586444 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.718747418 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.327798999 seconds)
    (274/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.810392502 seconds)
    (275/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.914362839 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.398932751 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.2957992 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.344597002 seconds)
    (279/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.293537149 seconds)
    (280/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.929823528 seconds)
    (281/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.699597103 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.320852421 seconds)
    (283/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.173085465 seconds)
    (284/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406317427 seconds)
    (285/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.823507765 seconds)
    (286/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.495871881 seconds)
  done (took 927.325377621 seconds)
done (took 928.539383728 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.347454153 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343666811 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.324835745 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.346331853 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437256595 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349471726 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.336340021 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.327075976 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.373351886 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.37445729 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.324471807 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.347659968 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328114665 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32576204 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.325427149 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342184427 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.333119837 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.326362008 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.344187375 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.335127289 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.341598052 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325835458 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375396216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.347753339 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329826721 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328731866 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.329867674 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.346118712 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.437736977 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.330358003 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.328907045 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.33719421 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332769018 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.327302282 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.321443715 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345057856 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338612966 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337046913 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.331110829 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.359704328 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.725699291 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.34276048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.328167968 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328671947 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.3283759 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333101381 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329438162 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.33542932 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342352827 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343793257 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.710521679 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.359265654 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.331686383 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.3303504 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340290107 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329116862 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.332715751 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347394935 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.347868582 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347825084 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.320983507 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333928274 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.331510405 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346524464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336398975 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.746136057 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.341943414 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.334253297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.721832576 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350787966 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.745131392 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35415658 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.330573511 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343966291 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361291167 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.328506325 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.324900157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.32957596 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338641893 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329795159 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.339559779 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345310135 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.334806337 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.330177569 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346389811 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.354187146 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341969691 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332725455 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.340777178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350231491 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.339306122 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.342442793 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334961831 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326920693 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341031531 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.336002574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.336429491 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334523858 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.337268905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343167385 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.720912024 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368107277 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329183519 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329178044 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331491293 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346814069 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.719551542 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.350361392 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355395406 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.379787294 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334078322 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320287922 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335837063 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350820483 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342559664 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337232319 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329246156 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.322885616 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.712001628 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364923154 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334662251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.33299762 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35335906 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335478537 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330782453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.337934435 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.334561131 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350315951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.456163314 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.343697497 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.366174153 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.33328824 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.335834633 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.35808922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351969239 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365577212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336803564 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352308452 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.351085949 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330943304 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346481286 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.345202115 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335970255 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340300246 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328763205 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.357314996 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348259825 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349184813 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.356809843 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456373705 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.333080463 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.326895507 seconds)
done (took 224.433483356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393749981 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.330949405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.416498227 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331526268 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.430665733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432629188 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.329609478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.330384998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330468471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.712150477 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331140006 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.330426715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.325398521 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.330202158 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415001487 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332343306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.330074391 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.674133813 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.33333133 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408044527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.334130878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331050549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333766333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.714219343 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.330874062 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.333251809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403678034 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333036562 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.677865104 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.330520947 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.332820813 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678222192 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.423380157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351336101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344595219 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340247376 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.434026074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352291607 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.414428504 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416025969 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.418944085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372547808 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.32978202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.3362119 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335243573 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.334919285 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332223985 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362136331 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.333068596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332749384 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.676904201 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344768552 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.33389415 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.334565649 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333094111 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364033329 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.333816986 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336607856 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432174731 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.336404097 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.39821207 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.716745141 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.715438404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.335810438 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.334551921 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334638282 seconds)
  done (took 148.450898845 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402390164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416788876 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.446739015 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.352885725 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390158046 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449956218 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.353903744 seconds)
  done (took 11.056323201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342849048 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337280038 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386350793 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386645356 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.336865609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515611899 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339996485 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34865014 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336550197 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389543338 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.339972327 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339192342 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343906812 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.332618907 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386242743 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347849463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451897938 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.339691619 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336704901 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.494177192 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336383647 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.344595663 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389981947 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349804327 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.339767653 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343777816 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.158476474 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338284154 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335535804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33772578 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335854466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.413448365 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.338707238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.340460156 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337144336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454756556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339384557 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336427846 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.339977782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.336247228 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339338208 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.338970588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340456093 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.337122341 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339535703 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363792764 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.33961718 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.34076402 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.339349074 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341020682 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390388838 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341756767 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.338619899 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.337070873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.396059797 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348444359 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33953612 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.337892791 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341885507 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.337710727 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.498381524 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38984486 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340388799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.38851813 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.341499179 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342989306 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3408497 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34014659 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393995851 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341137138 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390453334 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338773308 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.527951493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.364193827 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342530483 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344792138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.343129995 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342065414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.337160592 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.349242918 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.338700127 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.34246644 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348094069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339061552 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339440748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526230735 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450714681 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340496724 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355420639 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.349956241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.33998922 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.396139237 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342643825 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339256678 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394958372 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457120202 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.396085371 seconds)
  done (took 154.250578466 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.347818981 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350380764 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.344017439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.360967467 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342041265 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343640061 seconds)
  done (took 9.338948969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34547507 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.344654764 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344163779 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343769191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.343270808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.345210625 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.343894507 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344656356 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.346692978 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.344489473 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.345661202 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.346177228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.346280094 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.344149084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.345065968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343670974 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.345806608 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.343318532 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.343889848 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345460471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.44046507 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.344871375 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344110908 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345861388 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.351432846 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344922505 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354115646 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.345156722 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.346041549 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349774178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.365199333 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347636691 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347200271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352212696 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.349323842 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347582565 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349394422 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.34887294 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.34297354 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347666747 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347558587 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346452756 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.346734867 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346968534 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346864717 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351082045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352217902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354573717 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.345278362 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.347794526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.348089815 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.347252573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.349663656 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.348631744 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.349167163 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36765787 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353054336 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.347719453 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.347606297 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348945186 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.350400751 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349355856 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349495055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.350267274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.354807395 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349307764 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349549616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351452891 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347498327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.349031238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349844013 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.346635559 seconds)
  done (took 99.404760557 seconds)
done (took 423.74226818 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.695103475 seconds)
  done (took 7.950075866 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.376547778 seconds)
  done (took 7.633743124 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.295386381 seconds)
  done (took 21.556307282 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.36094659 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.360358416 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.371317551 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.368163548 seconds)
  done (took 26.718220258 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.536194139 seconds)
  done (took 7.791153354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.342431274 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.356653091 seconds)
  done (took 13.957578114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.896933909 seconds)
  done (took 8.152426773 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.981312861 seconds)
  done (took 8.244130712 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.342043136 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.36873244 seconds)
  done (took 14.233073787 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.322207492 seconds)
  done (took 7.578145112 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.68120114 seconds)
  done (took 11.938040921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.355635271 seconds)
  done (took 7.612780499 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.372395418 seconds)
  done (took 7.62765869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.156671445 seconds)
  done (took 9.412819393 seconds)
done (took 161.661838652 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.341957436 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342179283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.342602138 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.342073952 seconds)
  done (took 26.625022134 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.38343828 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383822235 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384676122 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.394960098 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.386788223 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384216421 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.375903582 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.376581269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.395444237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.387188213 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385272571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.386161577 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383313437 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376109732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.387635973 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386157604 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39590514 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.385663227 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376907299 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.387323923 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351719888 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.396981445 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.392312075 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.352640245 seconds)
  done (took 34.455343532 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872889067 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.422649221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.506362573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.404551491 seconds)
  done (took 7.465718895 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404366729 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.405427738 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.417068696 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456142149 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.482141715 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.414276076 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379420386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373612893 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360568143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.406968867 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.485553497 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.416980448 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.501485702 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.352741145 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579211212 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353477816 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353516479 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.404631931 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.456887858 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470676498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354219638 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.405765589 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.408420855 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421626141 seconds)
  done (took 35.326447133 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.354721994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371876229 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.352812923 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.351957657 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.361321988 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353199271 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.351802656 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353828036 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.35247954 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358176105 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.353523825 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.365604542 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352694328 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352732303 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.360228699 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.355478829 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.359568759 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.354295122 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.353108625 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.360020246 seconds)
  done (took 28.390277687 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.347624665 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.20071477 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.698896192 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.603815335 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.348099929 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.355576743 seconds)
  done (took 27.815842635 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.42272596 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.575041365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354030105 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.703131487 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.802571584 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.371248681 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.354645502 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.590325742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.900869215 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.898439193 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.419429472 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.421118902 seconds)
  done (took 20.075767543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.364858271 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.358738511 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.370587229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.371758751 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.407352308 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375745898 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.362459548 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.349941981 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416992037 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428692679 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375440479 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410309895 seconds)
  done (took 37.855684259 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437539506 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393872175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.276513465 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384486159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075527654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56192311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383051463 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081722118 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.381554992 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625672714 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354129065 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447438176 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608117344 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353596999 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359225281 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.315445269 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602311768 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818049515 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353069966 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.334064613 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384019976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35539561 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.355257008 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584748264 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589101199 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.329696447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.615819035 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.128932319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633455128 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373826958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36361228 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3521149 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629084338 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998834643 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476103889 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560806238 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391946609 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.900228087 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.336124086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.273033172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362680653 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380060489 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363798965 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352939969 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288144182 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353228669 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092465999 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.387064937 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.067274127 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355694459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609224162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458144412 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.359071767 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.92449769 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381349378 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.386658705 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.3589933 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446368746 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939263305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.737869647 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365144733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.297949749 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366240462 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.339164039 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988491174 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.378067462 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357630966 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360136751 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289901191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.342772018 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379359015 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502253108 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.381423293 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00577184 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034509903 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374335107 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293843265 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892339713 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362384786 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.297899895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583761685 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136384377 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292021544 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.302426654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29122744 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040250365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37168866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.738447122 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387893892 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071141088 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585357791 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400680336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381042628 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579934999 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.237751188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356696855 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.360022565 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4927284 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37966424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.078799081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319930955 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.361541866 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612123564 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568270845 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357788281 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334968309 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860967886 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386772817 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385266473 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360118049 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575251657 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.951834187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391523932 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.748116979 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382831881 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.134914453 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075082865 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371696823 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.369550922 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364802376 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611095476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.10798192 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.525680303 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426884567 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364309862 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35936762 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.363223666 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216528059 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.516669912 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.552840172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384787777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.376492528 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.361058029 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303745384 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.359158554 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389067539 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.144532828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583719002 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372700738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643238777 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295844539 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508277296 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369343689 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.583148411 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.538905542 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.381671432 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620461488 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36894003 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381230089 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379174444 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379796028 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460417381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383397677 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.361104017 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640960334 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365742919 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.364891237 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.387214364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.146671102 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361499239 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367308092 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373660945 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938870252 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3554126 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366827972 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249084264 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.3757865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431398766 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367803294 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572835944 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.175102823 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388114272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.384783634 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.373418729 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58407886 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372320369 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.284759244 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448713349 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.838689112 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964287249 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391804323 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.29588614 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.074702209 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.056538539 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365465799 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560134264 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364496251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572570792 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403890624 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375083048 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938291687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382695365 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.28947825 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.377370734 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376814355 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.370715187 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364039009 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.135800378 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.791746402 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374126452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384334123 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508193896 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37810339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299336297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881417233 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37022037 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365112953 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.140438888 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401238784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.290867744 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169223072 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643978904 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365454058 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620721208 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.470763416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40378307 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.364137744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381641487 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387487332 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.375667605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37309015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.381016466 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.358527118 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.812926546 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932729211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065374827 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915639866 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699728022 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.405754915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256917517 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.097105721 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32628381 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.024731261 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555102195 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111277226 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331881424 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848860565 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587502925 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148094551 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62507257 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602557577 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681785301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.407528306 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633055572 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586579919 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402690239 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.368076416 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318531022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.886130831 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916577548 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399339215 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453231376 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095574546 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404965139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153565995 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.40534763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.056102662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776858821 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940099079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.756469377 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376401955 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376301058 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181543581 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390649154 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894692005 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98963162 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396422337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.85497425 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331324447 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578978462 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.405523182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.365251681 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.647744808 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.379703124 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630840195 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62508025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312489359 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376252123 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895928505 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.240871523 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375888454 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369770761 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095637711 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384016479 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661561987 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.386453379 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.138387976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398466273 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30446964 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306136216 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.065230884 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370369265 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346709514 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855924354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.376766461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374920166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38859125 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220834915 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628187874 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385509125 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948807239 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613618319 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376527752 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418672955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374917386 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378842409 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.361108153 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.255221949 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608239028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414144579 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604390093 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.311342179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.282738179 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.872360449 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60961412 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270035758 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376278457 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621050144 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.109672352 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.391299954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051661304 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41628577 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37287344 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415718973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388539083 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394574877 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461965542 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584846481 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410467419 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.384232674 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774105141 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399891162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383488164 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.388677516 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468602233 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.806296924 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.150559274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.147967818 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960627655 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109121481 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.969179546 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650077525 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383727453 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377266552 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307860858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522041364 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900624224 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647039286 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506742032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.375222727 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42221673 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387327121 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384787431 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609899828 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649495376 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245728774 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375651028 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041471158 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.263858548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385045148 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.585895944 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865121306 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933889748 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757929975 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377270451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.114575759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677424426 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465726276 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376946118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966038162 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.38526699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.084011303 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39013875 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376811118 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547293993 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631807292 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048779958 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.413649294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537663971 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.150049174 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.420301849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64011771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837797441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597560741 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986177511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092512966 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639890916 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448002836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589576149 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.504935779 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525341198 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.384695822 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.266018948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377123126 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223381692 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.089424385 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.387597476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959190939 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65888058 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381191271 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.386950006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409412346 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.386834382 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601593975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072606647 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610332764 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388006497 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388634536 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.948686744 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964997213 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655646981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321825535 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382896733 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619031718 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641985146 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404093489 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.845688068 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.09259892 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929158137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.36931839 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40046471 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386752601 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0833282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960788011 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.172599701 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877864545 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037921843 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380385095 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662705826 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385185573 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393586923 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665809019 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.383360794 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382696804 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604594474 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.986918352 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163974904 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.38843185 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.44902304 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.32620332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.606844562 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46101763 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327373659 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381623038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.788094278 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410601263 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513271196 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394256431 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.382838423 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398322878 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.123315235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665297982 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.385669711 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.379511073 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.37422755 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406743781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48233197 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937136207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405859206 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.056522564 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.733038402 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637447695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394672055 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.371643014 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386201578 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382279252 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.100556582 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.35188896 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397874326 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939856975 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.399819876 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.399743981 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387109367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.599680885 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595794475 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394815427 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607080448 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409938356 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406748309 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.284898396 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.151316693 seconds)
  done (took 1654.059479719 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431649932 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.410254425 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.432263141 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.422463114 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415016067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464843721 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.491423278 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.500399684 seconds)
  done (took 52.863083667 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.383897722 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.554452504 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.415261279 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.385019833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.401086624 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.39374174 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.844482151 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.414177769 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.395144384 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.395454445 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.389931039 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.396728186 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.040219153 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.402478578 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.385921783 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.377817175 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.394174418 seconds)
  done (took 66.270861879 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.509801545 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.785896461 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.210891814 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.44863101 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.409740778 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385074363 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.950206269 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.408238273 seconds)
  done (took 59.405754726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.404224698 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.403213687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.403861109 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.406725603 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.403922953 seconds)
  done (took 8.317766714 seconds)
done (took 2060.18554189 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.390247245 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392898396 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.390192247 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.392514714 seconds)
  done (took 6.861784155 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365494533 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.063275901 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.36894822 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387878759 seconds)
  done (took 18.481079357 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.397488215 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.387123922 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.076729116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.002977721 seconds)
  done (took 5.379434097 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.136783566 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.147819793 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.132747766 seconds)
  done (took 7.713362372 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.384565312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.393882417 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.393385809 seconds)
  done (took 20.469766575 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.673757481 seconds)
  done (took 2.970217941 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.533592042 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.581994446 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.704576014 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.708850459 seconds)
  done (took 7.825084766 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.773663028 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.766105959 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.577800889 seconds)
  done (took 6.413906692 seconds)
done (took 90.196323792 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.167384052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393687006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.591960899 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.134389519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.618108794 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592088222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.604330385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.103770006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.693887514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.64378869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.135931273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.619169667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.552380081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393716412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.551709691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391629663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.618789451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.205824601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.820765093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.01927594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.603621741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.769620435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.964144833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.788252907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.620634562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.54310783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.370599161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.393238825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.995277863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.383977276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542657152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.191667539 seconds)
  done (took 190.317394595 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.388347888 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405428928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.405739503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.388468381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.389765474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405275568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.389486938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.404895184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415009343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.396893169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398543343 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395874202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.389040004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388738667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406856753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398123424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.391221795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.400616341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40071806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397190652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389331197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.405754306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.403617229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414495471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390561618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.390843125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391058455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.406317239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.389645128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.390828015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390488492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.390821501 seconds)
  done (took 206.009330141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39025413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407983825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408089789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.390191919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.401672378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392372076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.393505788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.391946999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.390284032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.389758962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.391054614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395990307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.392153799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.391819433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.392572244 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.391218699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390883133 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418766208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404195179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389858075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393519019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.391509442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.408348059 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.392629961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407421406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39397461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.391647873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40846989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399876087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.39226903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393152994 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392150793 seconds)
  done (took 205.995605389 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593457457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.398672618 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400732536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353320448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399115886 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.399647568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.395259841 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.59051962 seconds)
  done (took 14.831950944 seconds)
done (took 618.450261644 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.6819791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.400369121 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.60491631 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420157653 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182548344 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43706097 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.420440886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.588812537 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.314186511 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.594474376 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.665966692 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.4351943 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.812892684 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.418909161 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.672930405 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.527622033 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.268236039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.386455482 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.731278309 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.958747525 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.685998813 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.881651954 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606927089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.312057602 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.825628892 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.882363306 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.14370411 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.26638602 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.436054268 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.73813907 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.063461745 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.395621344 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489358281 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.480202286 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.537205678 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.515809272 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.374225888 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.484909061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.626045395 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.654266047 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.963351097 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.138063919 seconds)
  done (took 94.328150721 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.384637413 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.384587613 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.386127403 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.384300465 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.384856562 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.385330903 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.383129885 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.384660792 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.383258109 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.383906604 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384662057 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.387311637 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.385040512 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.387160495 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.384225556 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.38431453 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.387046926 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.387712046 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.385807652 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.385281241 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.386138121 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384374103 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.386126343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.384850092 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.385962591 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.386484358 seconds)
  done (took 37.325010131 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.404270501 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.648579791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.811170508 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41125651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404910516 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.4094552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.483494886 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.406457199 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.409002093 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.409027381 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.576695693 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.408632169 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440329138 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.838929515 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.407526759 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.405011936 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.406433286 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.406605531 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.65865468 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.414973349 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.50490958 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407582246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.484033623 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416658487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430529312 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.407330439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.411595732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.969356895 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.426766033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.574882681 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.198472056 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.489276311 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.921844841 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.840466961 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.195525821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.415995828 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.406840249 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.580751177 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.408457578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.407464726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.485029287 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.408153376 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.822940985 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.062976014 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.426456434 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.408321182 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.988301352 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.598140159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.649905725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415697444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846214558 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411917374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.410169194 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410025562 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.650921995 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.415483617 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.407798687 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.975951867 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.432986806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.487156584 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.409926947 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409962309 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.667179435 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.408925731 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.654332624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411813051 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.418282736 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.429864219 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.826861682 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.411323271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.089672778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.428499868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410645846 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.579728675 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.65559022 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.0229389 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.431222674 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.670874706 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.938022042 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.501371517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.413726397 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.962191079 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.507129618 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.413314548 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.412921378 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.413271695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411498387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.457467875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.4835676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.025477943 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097506838 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.998557764 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.506967792 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.424387557 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.412153804 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.976705809 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.430512448 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.411911201 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.820402016 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.094774308 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.429314309 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.419116991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.091278826 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431132888 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.488616357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.41973639 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.832741814 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.411807468 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.459167754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.411827515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.417955955 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435907916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.490656814 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.420502484 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.412209963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.061743706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.606905132 seconds)
  done (took 185.378685174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.407830469 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.406341271 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.404565732 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.407379476 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.405119725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.414024296 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.406245151 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.407430987 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.413293599 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.405722035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.406126609 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.407700776 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.407857006 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.41169478 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.438661404 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414352655 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.033580644 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.407002606 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.406766295 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.408203236 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.20523232 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.411666397 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.415178614 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.408537668 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.408492618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.407532212 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.409236429 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429244178 seconds)
  done (took 154.231618938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.415166864 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967555896 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.43190085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.544135694 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.440308242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.413346846 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.542524352 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472172238 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.433294284 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.412811617 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413647363 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.710261609 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.41663679 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.924364363 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.612512664 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.568384198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.919767294 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.433432955 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.415195738 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.413535935 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.546598483 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.421126474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.712100903 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.969788065 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435737757 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.973257833 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.402619783 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.417225214 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.415560865 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.981213998 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.4391606 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.719229356 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.501389674 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.474832409 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000470345 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.947398763 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.943242574 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.567920008 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.415876347 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.414723336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.413394976 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.399146228 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985928264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.442706843 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.418123234 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.973369518 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443442839 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.418422717 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.422005226 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.413967751 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.476076991 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.493588393 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.74142516 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.997151153 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.51883686 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.428759197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.546764107 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.803323716 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.419365348 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.924311883 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.399931423 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.987913961 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.445789146 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.400313953 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.416780214 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42252793 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.564904076 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.556559987 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.92548583 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.435918431 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92440644 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.584455085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.426865236 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.416925593 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.420112946 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.988510891 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.951866966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.583062031 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.561605604 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616454935 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411687156 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.418456242 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.402379664 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.496018304 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.421233691 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.990740949 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95191825 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.437638868 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.420702672 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.420811508 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.421009793 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.594177542 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.016183737 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.523536972 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.916433259 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.744978816 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.736503832 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430530028 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.479490798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.436117936 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.7294501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.430821485 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.477339833 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.871463336 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.729469285 seconds)
  done (took 168.540120073 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.658061 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.634556975 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.512561694 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.571456494 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.025960338 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.99597997 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.699071647 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.56055339 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.52961204 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.682865563 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.568786251 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.516751081 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.633569782 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517658094 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.170259197 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51526866 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.529579878 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.570641288 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.576854851 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.437855033 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.094709639 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.702914148 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.612865481 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.331640295 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.52207074 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.166326346 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.98000804 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.958512501 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.599043025 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.747827575 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.965359843 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.553233442 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.371491485 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.102322335 seconds)
  done (took 67.940839034 seconds)
done (took 709.047850396 seconds)
SAVING RESULT...
DONE!
