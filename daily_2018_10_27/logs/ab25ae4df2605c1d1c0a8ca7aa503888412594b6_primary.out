cset: moving following pidspec: 711
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.256132006 seconds)
loading group "string"... done (took 0.468405458 seconds)
loading group "linalg"... done (took 7.640369804 seconds)
loading group "parallel"... done (took 0.173816072 seconds)
loading group "find"... done (took 1.18872327 seconds)
loading group "tuple"... done (took 2.130822653 seconds)
loading group "dates"... done (took 1.348187456 seconds)
loading group "micro"... done (took 0.247955445 seconds)
loading group "io"... done (took 0.667912012 seconds)
loading group "scalar"... done (took 42.227057938 seconds)
loading group "sparse"... done (took 13.158630873 seconds)
loading group "broadcast"... done (took 1.180913359 seconds)
loading group "union"... done (took 14.524911592 seconds)
loading group "simd"... done (took 5.184549235 seconds)
loading group "random"... done (took 10.419851507 seconds)
loading group "problem"... done (took 2.056252362 seconds)
loading group "array"... done (took 24.141053685 seconds)
loading group "misc"... done (took 1.486259358 seconds)
loading group "sort"... done (took 3.77379915 seconds)
loading group "collection"... done (took 20.22372024 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52805359 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141014377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135550503 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151293327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209163924 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146694752 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160372391 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11686082 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.998679276 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181504541 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15795444 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523312696 seconds)
done (took 5.207186965 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.240763815 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097152331 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105327722 seconds)
  done (took 0.878736373 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078298909 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148992265 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09553896 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079976289 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096740077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079333167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097159906 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078660288 seconds)
  done (took 1.359278562 seconds)
done (took 3.249155175 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.750095488 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286035815 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203961403 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.475968096 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201270984 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219286609 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687138772 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342797848 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253306227 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103529598 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147821442 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396229298 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139215738 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.703275137 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092517702 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126927583 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181509085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447035442 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082672667 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111269889 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118090109 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143078236 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131728627 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09368329 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.190269853 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081683108 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199261197 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111457125 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081971512 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.296320129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203320603 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690942306 seconds)
  done (took 11.015829668 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113962906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136772048 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099548425 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140386086 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135750082 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10164794 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088504281 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098508008 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12410103 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178563893 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116589836 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139344959 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097182618 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083624231 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117351905 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246463327 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12276577 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106018044 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103026686 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105746941 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123316547 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114090711 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11166942 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094836962 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170258928 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223653216 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114357521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128023124 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099668772 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115453887 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147026202 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144923706 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097391842 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081680261 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173285366 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12679994 seconds)
  done (took 5.219254516 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192005548 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123601358 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171858138 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167148804 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143641996 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163349966 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11577002 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251038524 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113951019 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158494904 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077683055 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182261798 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144771942 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118577699 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083982779 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099835849 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081799039 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.687241087 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166772925 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137326678 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098912372 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10839528 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102958357 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367123 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088844101 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098935101 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083575108 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084104768 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163755384 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082507768 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.17019307 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10127705 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101366806 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136806417 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200605642 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127415104 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117632886 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097508651 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077692067 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194378947 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088405312 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097099393 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105752098 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138459947 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136850646 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099511937 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082129342 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224310141 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084607157 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116694965 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.95060688 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181557525 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091837575 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098079385 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326157927 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099210776 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098527799 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078664871 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282167448 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188157195 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101163185 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081883625 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100471268 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083181737 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401904074 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082718806 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.742898451 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084201063 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.113562237 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083861152 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099402862 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106979522 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089757331 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118095549 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082052723 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101025345 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081283079 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098500065 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083708589 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111494073 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10508192 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082143464 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166992827 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082076195 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117440699 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129702279 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08661087 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098249615 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133085965 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085572683 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099666811 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135935661 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083971838 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110902963 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09414973 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083238485 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143148124 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099121895 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.176407775 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080698466 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128778568 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101255794 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115235712 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112413357 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099710307 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084999141 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096960267 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079008739 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166995002 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082227704 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095471993 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082604135 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101347601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113188639 seconds)
  done (took 22.889686225 seconds)
done (took 39.807938701 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338190438 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105559691 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105814036 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105918115 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103818732 seconds)
  done (took 1.516263477 seconds)
done (took 2.24604621 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296807872 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176532528 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096297336 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172818946 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095914624 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179903271 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162139116 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11381266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221042123 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077303167 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.16671198 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095666007 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07940329 seconds)
  done (took 2.692743679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097215252 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117572991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084359794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113247584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078234381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113937944 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094296869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120362304 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111159278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087372129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095936418 seconds)
  done (took 1.840704846 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096005862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115448082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08423292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112808254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077362288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112989502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094151031 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117749577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112112419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087489583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096342552 seconds)
  done (took 1.830992286 seconds)
done (took 7.084151088 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092701832 seconds)
  done (took 0.814218789 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.94248996 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.929184907 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112394661 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150056709 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301136905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198684959 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485165509 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128760961 seconds)
  done (took 11.185603966 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.14943378 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086092716 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103757622 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088052323 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104192667 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085108052 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104736447 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101215083 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085059422 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104515404 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086319113 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104186789 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104188883 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086063515 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101618266 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08433317 seconds)
  done (took 2.368222712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121927919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120862189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110010817 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111241244 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088841016 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108604294 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107965676 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089876987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103592774 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107050638 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091942896 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107729953 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106276243 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0813348 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108243629 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110195455 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088105594 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108303858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.1092961 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09164478 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10914892 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098266527 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088955412 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108811529 seconds)
  done (took 3.31731704 seconds)
done (took 18.413221097 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163982318 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112003272 seconds)
  done (took 1.003095486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097420669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115513933 seconds)
  done (took 0.948991019 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099987499 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09787964 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124767201 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112362472 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082489138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099042808 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122586599 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082237483 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098013096 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081818797 seconds)
  done (took 1.739160393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084524087 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111986928 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103243126 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096607209 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106934482 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097091017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090326338 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101607779 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112632975 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078966731 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104719826 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117130417 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087855554 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119058387 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107381582 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085538779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1045775 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100848427 seconds)
  done (took 2.550641478 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081459411 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099170049 seconds)
  done (took 0.919013926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083748501 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096121157 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083330833 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099647138 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096816382 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078761356 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097238032 seconds)
  done (took 1.373822136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476502536 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138394719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261035118 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087383892 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123961259 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310461973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100915129 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086875271 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105400424 seconds)
  done (took 2.489290574 seconds)
done (took 11.757737564 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094848465 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120219159 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115393609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.473098863 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108841227 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097194359 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160875915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25490435 seconds)
done (took 2.170469241 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151733115 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328553025 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115637063 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068249822 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097791365 seconds)
  done (took 1.353017085 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081546269 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102839554 seconds)
  done (took 0.927467786 seconds)
done (took 3.175551897 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082614364 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099394415 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.115833291 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09848904 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081720758 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099187589 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079480213 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098952955 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082674801 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099174807 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098759288 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081169252 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.099465261 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081944643 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096480162 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07915891 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096938837 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082148832 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096820536 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080074046 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09681927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081687102 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098013998 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080237427 seconds)
  done (took 2.969142239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102160049 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100057777 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105732706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087393816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104441764 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088698685 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104953827 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099585526 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087625176 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102281729 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103008122 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08654669 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102628161 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086774391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101957771 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103731074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088124126 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09961079 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084419774 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104134141 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104914786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082341982 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104249996 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105556936 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085807855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103526752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084282282 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099494606 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105548241 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086266958 seconds)
  done (took 3.655283263 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087510949 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096880638 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080594052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104258947 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079492483 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099787471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079439952 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098528423 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080957385 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097159551 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080841033 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097068312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079648722 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09915031 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08088639 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100885089 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111340482 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080763414 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097885626 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080218957 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100963085 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07970953 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09814927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078823555 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098027704 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079976716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098744796 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08007957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098184723 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080115395 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100657619 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083191671 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097015298 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087236053 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101121368 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079815533 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102085796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07984337 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098329807 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097056416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07996786 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098105415 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080111473 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104302973 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079547658 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100074037 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080455531 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099427115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080727467 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10147916 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079385897 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097042507 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082037147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098648762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.101813415 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079726719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098546283 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079187576 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09889768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079184202 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097869042 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079271571 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099994156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080488031 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113903163 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08669112 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097368017 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081314325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098894901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083199862 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099557711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112645557 seconds)
  done (took 7.315539483 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085993503 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109373986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082773157 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099718735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07906975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098670125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101796253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080407189 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100280117 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087400724 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098577383 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083002482 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09962795 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110971885 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081049062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100219284 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087168091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09629284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080309157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102334239 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098470363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083896507 seconds)
  done (took 2.802235087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210260816 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104993522 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142204131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107624469 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085323372 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107306756 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103034135 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087740484 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103708696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084935483 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103525479 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106357299 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084867527 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10263702 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103541471 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086602867 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104364557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08723249 seconds)
  done (took 2.67530934 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095581579 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101628061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104728192 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101600884 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101704882 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085893586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107565265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112162783 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086144896 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101165284 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092966005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102275722 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103982321 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083847247 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103768976 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083142701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103927871 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08357494 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111280869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107262063 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105764749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092281494 seconds)
  done (took 2.934104871 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098455017 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101083994 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119019293 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08467295 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097907406 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081062669 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10818821 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083578955 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10939831 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102819057 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083277653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099772 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090485231 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100774158 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106886981 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083278212 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103928159 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083772797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103259534 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080814468 seconds)
  done (took 2.682139247 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105578723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102775053 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103178173 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094465614 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103213815 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085329318 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111767655 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103246483 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084797347 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127690062 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10326619 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084825076 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112207198 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108739564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102542317 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093920816 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111762361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11209029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085142551 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102679564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128523781 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085729842 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112055913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103541124 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.197649271 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103028828 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103726142 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091602474 seconds)
  done (took 3.729809633 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082462555 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100798002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08051083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099481361 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080604881 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099502719 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080765584 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099339236 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083129061 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098870693 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083621502 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101164737 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08380987 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101962379 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086716081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102042287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08296646 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099444126 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081188853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099764275 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083788971 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101744447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083548953 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099519866 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08122045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102019256 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081117012 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098867758 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084302998 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099219934 seconds)
  done (took 3.509834234 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094336108 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109357293 seconds)
  done (took 0.970793175 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081558577 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117970918 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081064409 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105800585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088321193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102123267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110990216 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088886895 seconds)
  done (took 1.541733428 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098747537 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113459507 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085925949 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116149306 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113085093 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098087132 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169366182 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103751466 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090811049 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101027584 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116284899 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082856769 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1088354 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084846756 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108759207 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090479718 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100806263 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091446982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105884579 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10114146 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086361201 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113765854 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087271004 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099033058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086312369 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114132777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112679248 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086505233 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106297313 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112485906 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089600971 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096036325 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08440942 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104218709 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082236931 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112277814 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115318911 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087461999 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112177228 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085485663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114153016 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097549568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090017148 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109532685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095109626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103529179 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085431423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097443892 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100216867 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086577515 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098110883 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084161397 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096796644 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091630764 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107618578 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115735614 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083056944 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104018738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088577571 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106419788 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090625297 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104805981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086987726 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10193736 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109541604 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088411234 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111014441 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079494535 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097131692 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082930342 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111914386 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125665208 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0927836 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104279398 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086471589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101339824 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105996897 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086532716 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111139344 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092221636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103124203 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110396421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092967336 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103161441 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087514289 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111321391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100927259 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086552653 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101085394 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099254528 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100924235 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100411386 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081094935 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112426227 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08778958 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102810619 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081795677 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114180533 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077932663 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104350014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086023719 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103995277 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112311725 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09120998 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110411287 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110514018 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09226082 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103749275 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088010628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099616832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086833977 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105750923 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110492269 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078344024 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106232356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086965254 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104761431 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092194947 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101914672 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085547662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111298535 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11043656 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082639437 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099452796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087638903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10342951 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088426561 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109975539 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102112421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079555776 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098955378 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089594509 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103831348 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090304317 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108934478 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106058363 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079180316 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101989257 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090400385 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110818628 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103611943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085127992 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107628042 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085403629 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102978522 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090189893 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.10553419 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083529141 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108060762 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105991243 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079887937 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10729986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087389088 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102597921 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088356874 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108051342 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106302285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086555591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102179452 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091001527 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10534467 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083792245 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10351297 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083216531 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113468266 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105952614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080057204 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101781003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092407199 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101338221 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085100422 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102624535 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10683873 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087546467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101942386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084803634 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104910268 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116523189 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090310605 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105375321 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090579983 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113677503 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084430994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106047261 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104251514 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086409153 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106149338 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093052039 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109157371 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110246233 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087616444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100068659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092224335 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112401003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084079058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101525648 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083524888 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107582071 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110480662 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08837241 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105065744 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083425674 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104887881 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108159183 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087292707 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104391478 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084890933 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109009749 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084422065 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112122428 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105354563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095104472 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10873346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081658988 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108234779 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10231581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092304697 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099703156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083530856 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103565566 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086985871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103469861 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088185355 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098255592 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093379596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112571881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103387324 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084411735 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104712374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094376122 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106241776 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08953643 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107542717 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110038927 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098847357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103517963 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089027526 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113469672 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104211255 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080061658 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110897097 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084521367 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103679852 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083813079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103235488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089479318 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113416088 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109102996 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078993814 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106737644 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083792704 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102716215 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080815985 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111202654 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107772534 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086559817 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113104402 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086613357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105042957 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108412455 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084949476 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10601293 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087009231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108079462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087260609 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106791624 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085358754 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106896607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103667801 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083797704 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106727963 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.088048431 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104726358 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092171221 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105189931 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085902557 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107634391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106237876 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087000197 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105844863 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086379794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108166412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086973122 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105152569 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088704075 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100417075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112566924 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086332331 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113361234 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085884324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101543884 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091333245 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108134977 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110331867 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086735509 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106160861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088276852 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10460906 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087869429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113489689 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102018285 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095869089 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111415157 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086458491 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107536662 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085848292 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10662392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104615904 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087338972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106273663 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08658446 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104727835 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091187772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.1081917 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085704782 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106912697 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106041948 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085657996 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106959192 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079807814 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103662751 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085643692 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105911661 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092917105 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106181208 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107134362 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084301238 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106403992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085111286 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101558303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094454371 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115655666 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106339513 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094325359 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10471408 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087240376 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115921212 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099106235 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084441698 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103282231 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083545676 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112975659 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087130904 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113502724 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085573904 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104724986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102655776 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086822798 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10411379 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080284021 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103094624 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089047909 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107461719 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084527264 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105911945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088924564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107062976 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112841227 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085204627 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107338635 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087177418 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102552613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084445931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104782923 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08919365 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106220346 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101142736 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081858443 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102038006 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086395308 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10321797 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083636658 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104137648 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099278129 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102467225 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105517452 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089284899 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097077318 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087595398 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103380032 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086166558 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105507985 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109118691 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089591836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105175102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091240452 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103903852 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084975421 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103554219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10079498 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085281089 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105631611 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086129938 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104587168 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087890052 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114156005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084008508 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108147757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10506542 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0872028 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109870043 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087032864 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105325145 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091317768 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106152593 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104281721 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090124903 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106571699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087181142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103875613 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084494334 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108694331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101903561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092895417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104026836 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085997974 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104545014 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080918954 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102926752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102617802 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084851435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110071442 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085217197 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102319953 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08287385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103408603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08844325 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110142883 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112798714 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088061375 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106322612 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078755581 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100071891 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087260716 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10106582 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086703903 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107210098 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108907728 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085958022 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103682108 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082941102 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110509058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090982476 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107924858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101028333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088669843 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104943943 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086663924 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105454263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084765613 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10509472 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108302616 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085783185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102483742 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091803264 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10709821 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085097205 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104841534 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102817077 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085096969 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098684152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087083359 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105808082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089795177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106345762 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083069484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112830534 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102515015 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083228762 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107420939 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085018361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112235648 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082206744 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107962649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107043891 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087754829 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101215095 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086120001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10405348 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088910766 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105638775 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082482548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11606887 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113057461 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088398773 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101999775 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082689704 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098664109 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081453569 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105033755 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088063556 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108384148 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115786865 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085622665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106028655 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082478643 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107434939 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089803174 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110126928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083773311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102008005 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085132674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109648832 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.113037569 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086069677 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106174063 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090757644 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10920302 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084691066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110816074 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103467853 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09118441 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117254082 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087508876 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107574802 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11184735 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095548089 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.107711974 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082389466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107652361 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089103403 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107434444 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088329435 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10648925 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11687016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087293953 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103167254 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083479555 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106127813 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083372759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11011893 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103546718 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085505674 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107559286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086136004 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113556403 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106361699 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090220707 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105672299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087933834 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105120774 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087340485 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105073229 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084848208 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108964337 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107692881 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092360218 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115617482 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106366241 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097263364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113500601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092249523 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102818613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086158987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105706635 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082098612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108362017 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104850304 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085684283 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103737414 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084693774 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103243658 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090653433 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105555413 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085548599 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104536226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081006887 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109402781 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108535524 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089834164 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101554485 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087011724 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105310101 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090103172 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107972363 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084292373 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105624122 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104882727 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085286391 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099095117 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090612076 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102721035 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087451385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103285291 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084768381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107655266 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108725314 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091444939 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105106664 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088211385 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119482276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109778589 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085355893 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104704988 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093636606 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10526005 seconds)
  done (took 59.328644053 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149066839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080607576 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099159675 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080208638 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114187856 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099661284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079742979 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099949505 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081018652 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102762204 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080282948 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100181662 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111292928 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124824142 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093591219 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103351698 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098433479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082267815 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098272574 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080788148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110040267 seconds)
  done (took 2.878843255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106099675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117498141 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115596171 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119784484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090330564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116013135 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115117681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116539813 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101532987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111549979 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120728197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116735953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093042559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111131436 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111462178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09391446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119428159 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110248802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117210503 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095010104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114781959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114796966 seconds)
  done (took 3.237712918 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085711923 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102638965 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087244685 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099125856 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085658599 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09825457 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089767091 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101941343 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088348107 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101907626 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082058096 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102119382 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104415692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07907407 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102609153 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08105205 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152289713 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107546238 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083194285 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105057273 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098387077 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085808236 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098855096 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080425862 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102447398 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087816814 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104604175 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084391972 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10670961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085303031 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107660588 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08422741 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109402162 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10763729 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085182368 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102449499 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084382666 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103153801 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080443665 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102195828 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086610603 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099271887 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086440129 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107696636 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083705264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104731033 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086033964 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103411621 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097839733 seconds)
  done (took 5.508232391 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105818326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161577323 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088075361 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144401677 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123417559 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114269788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089705788 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144114673 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102506039 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085711455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128344684 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124667664 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108341938 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093435614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112347784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108104462 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089693126 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107567893 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092456859 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108921676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112953755 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09402981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125100839 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.122222466 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113321785 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088215092 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107772515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112924299 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101975365 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11514522 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113374702 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09442953 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125340748 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109767718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086784109 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111875512 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125542513 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087317357 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109279117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102270346 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088671328 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1103953 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111359139 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104078395 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104818213 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109719243 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086278156 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102262141 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119159188 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087397833 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113924986 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121663774 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090476426 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10531104 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109834584 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120842926 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085275431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102550909 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090161973 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119323536 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102377142 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091150458 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123776753 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11090717 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096507989 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.124530814 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113534889 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111904782 seconds)
  done (took 8.303557775 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096827148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112236965 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122382908 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122167133 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091867916 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111315938 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11129041 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091406692 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111485368 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118253868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111537651 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135865125 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087872409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115816053 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110945986 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093092562 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112567949 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111622484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091281448 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11194906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111432979 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12160896 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092309116 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121055666 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142263454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106337739 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092179284 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111609129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12148061 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110381425 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124757255 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091780152 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111588106 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121040591 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126059901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093951457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10618498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111133011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092339211 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113457175 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106413197 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102656315 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111801001 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106287391 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093065955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111965316 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122654723 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12539361 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116719929 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097221876 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114496081 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122419488 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112282505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094794453 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125685409 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153328422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126282348 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126615948 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116094156 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102586922 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121329502 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129110989 seconds)
  done (took 7.752517318 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110790995 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117645354 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117853945 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10016252 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08573172 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110604341 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086478919 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103347995 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116358535 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097598191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117202436 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109175369 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113361432 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098702015 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109511862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113568786 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089446103 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109984516 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114699576 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109624429 seconds)
  done (took 2.958470732 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095930078 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125202928 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08618039 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115722746 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109169431 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093116193 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108776821 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10845702 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088572273 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11005565 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100132981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120496968 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106119754 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094402788 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119932835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112242575 seconds)
  done (took 2.520340079 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099366155 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11804159 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121661107 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086238922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104823946 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081237016 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106169573 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101411208 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082055904 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121400344 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085535589 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109756934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105848212 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086586343 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102100739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090647112 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104039934 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085489996 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10668848 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119557736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096040539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105082364 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106965713 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08934329 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105877121 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091471093 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106934748 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103678536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084935787 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106192621 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088216964 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116949856 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101766383 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084086605 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104128453 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083720306 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10604391 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08582067 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109541802 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105711161 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085903594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105366298 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085872506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107642264 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081520533 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105712277 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101705829 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093503197 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104048329 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088619927 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107497704 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108423192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089750941 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117860131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089912569 seconds)
  done (took 6.305451425 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101872048 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109591938 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083443118 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105265916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091499289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111612204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110235609 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090523267 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10765634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086518684 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.11038015 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09191476 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11121973 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111675671 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089674727 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111032195 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08383401 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109635536 seconds)
  done (took 2.655723279 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094436723 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107255228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093092062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106823881 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088093613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112164454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082757735 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105388345 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104738083 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086210798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105642861 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087806542 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104967439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089512765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105974148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086028128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108409033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104142475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087815339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101696544 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088350177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104316916 seconds)
  done (took 2.991299127 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122104379 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128927564 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096217437 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233388426 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105037749 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13342463 seconds)
  done (took 1.655382086 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110155267 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12164878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107425022 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109935313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115988488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109113784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09030506 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108750684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121909028 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10467036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108491174 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118558578 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118696755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097223264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115580945 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114039689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108931362 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088282369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106373252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130238943 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088653471 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118833058 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108168061 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088566542 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109050327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117986679 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11882453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123413632 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088278719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118614166 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11475196 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088936042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119813218 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12372701 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110073903 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098133524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108787808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129504894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115365548 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098015759 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109833517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11467078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09844791 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114796299 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118825027 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109087644 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094285942 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109259495 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109295409 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137441592 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094966932 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118242964 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116245537 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119350413 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119544966 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135732519 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102939286 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117615028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116558185 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124296753 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119428478 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09527761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11828089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123710045 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117003573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118161499 seconds)
  done (took 8.20850258 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102431365 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127083614 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108521186 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122923296 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09739821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109092903 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108474268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089312318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109206393 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108712087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154181553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089327057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117780008 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119654907 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109505465 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090559378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109450124 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120321396 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087961331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136935393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109065355 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118631955 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118137257 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097903033 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123557426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116124608 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108582302 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089758857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10853507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110716867 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096536183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110502963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118951217 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088316541 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120000543 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109284181 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115381143 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108713512 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117301765 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097919134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128837433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108875598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10898941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123565886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090109364 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108825822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088685674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109976014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108111914 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103786357 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124169204 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124069213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119477055 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109877164 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08883846 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108736026 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109427622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090409167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115634061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11835156 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109283701 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137109163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089374124 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108691537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119953372 seconds)
  done (took 8.085952431 seconds)
done (took 157.921005371 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098948558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136945439 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099518249 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169429584 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107142242 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119639473 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139194664 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097781884 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107036645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086220487 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106453071 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087861839 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172967545 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085320756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107771246 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108545633 seconds)
  done (took 2.672591644 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200060389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255663677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104706643 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106887199 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090734549 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111905519 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10530198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091790808 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110975679 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086393502 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10968801 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087830825 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105905975 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087717148 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111165334 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088580667 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106939568 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08837895 seconds)
  done (took 2.897164116 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113191312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15206484 seconds)
  done (took 1.114838325 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119355234 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180922987 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320806345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157354763 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107126976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12862045 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157842318 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131396674 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197988935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125607275 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123373104 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098256015 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1407528 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116003976 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094954327 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118808763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142910645 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093047723 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116447742 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116538746 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117624451 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106552176 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116326782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093855574 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181839604 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120895507 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085823253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107246984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117458506 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095460005 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114614341 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125619559 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098902774 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178017635 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102969459 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179093774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099109244 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115162024 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115635318 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092168475 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119787626 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119206825 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10494408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120273386 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085351764 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119418174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107082697 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086488445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115646513 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098131831 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11638371 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113881385 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157679676 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120309259 seconds)
  done (took 7.583260839 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.797316305 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157834329 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091769914 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891607089 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139604076 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104148945 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788116299 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137574398 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234554497 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766186239 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135314375 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122410617 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230254058 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239480769 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956340202 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31424289 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.676922584 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103032456 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153308084 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15458539 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12007777 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139376268 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132460232 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430238622 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096087722 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11314481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118146258 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10077911 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160518768 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126404967 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115415553 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179372064 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250747727 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208788318 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117635041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089893758 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112740336 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171130297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270226898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218794055 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182086325 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08835906 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111976295 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123877275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114394453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110043053 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167386208 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175808258 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195933712 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093544745 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12230541 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121870896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122838548 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166300549 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12258497 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301441775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311938354 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112594341 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121966731 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10632132 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266666192 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124649552 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226660884 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118561284 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215414486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111991279 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776313522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192713101 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090786766 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118454939 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120566964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095441365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12336736 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1690912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393291731 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125148689 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093647946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112146186 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206776175 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12660962 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111648306 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163279757 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117005154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100295006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126660639 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124073212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173588281 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229245646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125966168 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12014185 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094143078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126742965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117000018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212662712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220633355 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163594792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208577005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124246912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165540095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191758654 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099160173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196231369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098490932 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126869861 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123384612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218966811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14753161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101151935 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117386942 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119612592 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148874828 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128176236 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098950367 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192065608 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459205528 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170003788 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110619191 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128954892 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099613808 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16185736 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119401176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259319253 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122771318 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171790655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12037204 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088570451 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12157533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165342776 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124191059 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122327437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101863608 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120237968 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235769246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221028859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124078185 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221633971 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184826581 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120338518 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172875226 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12305076 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16913858 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122092519 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121995685 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095660753 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799658221 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125266505 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099851698 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117436665 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189000002 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112191807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103174312 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1259219 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108998836 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754940337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128882293 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121963962 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103070897 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119998537 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122022489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096285272 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117866486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162595576 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231972192 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122662033 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121375705 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103291228 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183496621 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095758127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126996908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124996232 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12647256 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101075573 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116592453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125168551 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171672894 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163529478 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223799443 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590821063 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092145236 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125800759 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230532425 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090914595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289666125 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121590083 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227530441 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165835015 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122077096 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315064637 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167618076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189356423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128251033 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175694626 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0882602 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119992172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166695434 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113010339 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118898483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164002785 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125706583 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104067356 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962880946 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113425531 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226550281 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109143817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173613196 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094380805 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122446096 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297621352 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11393218 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108594621 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186575103 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094316126 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125863608 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.726345493 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105273248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123343162 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120071914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224070293 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16616379 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097606715 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120720945 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122857971 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165582587 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20890474 seconds)
  done (took 44.308745964 seconds)
done (took 59.425300816 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27806972 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215587855 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261947244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17410778 seconds)
  done (took 1.879587858 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171747037 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149893031 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121159121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108578918 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149970471 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085508481 seconds)
  done (took 1.665274151 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355027814 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274259817 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241390213 seconds)
  done (took 1.74929761 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287969009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249624592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358663219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.400919255 seconds)
  done (took 2.299217497 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211572657 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138842114 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113418992 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10658837 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201031886 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255767471 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143229383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205520323 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12416979 seconds)
  done (took 2.424101731 seconds)
done (took 10.896779288 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.262657507 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.291852044 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.18787795 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.160272509 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.152066252 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.254001575 seconds)
    (7/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098470889 seconds)
    (8/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121180665 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21691953 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.237320236 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09651156 seconds)
    (12/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152125574 seconds)
    (13/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.135264249 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.159519618 seconds)
    (15/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.22359993 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127868314 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.177787742 seconds)
    (18/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.131966366 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120729356 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103548592 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.172083041 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141044969 seconds)
    (23/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09438853 seconds)
    (24/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.231554166 seconds)
    (25/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.170360776 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177650002 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.119573581 seconds)
    (28/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.254989802 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201922417 seconds)
    (30/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078230074 seconds)
    (31/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.103399588 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215777597 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11562921 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.19846624 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141103887 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202752558 seconds)
    (37/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160397111 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116851265 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.227191395 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119543061 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094234039 seconds)
    (42/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.234783962 seconds)
    (43/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.207072861 seconds)
    (44/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117907192 seconds)
    (45/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184947802 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148062624 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117139833 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089164216 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14082579 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122796917 seconds)
    (51/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.129973345 seconds)
    (52/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121339004 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099632847 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138202603 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087972478 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110213464 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.175468729 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163424684 seconds)
    (59/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.157367752 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172500228 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097915715 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112941766 seconds)
    (63/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070402607 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095046502 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.121949089 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120626356 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089634907 seconds)
    (68/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067065621 seconds)
    (69/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118457118 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136824856 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084212023 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140286739 seconds)
    (73/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130901977 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.168707036 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115641062 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099521004 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119514948 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18605469 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.087753993 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116662695 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.140891298 seconds)
    (82/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070265531 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097926188 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118877745 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141879126 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.130080336 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137153377 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169091749 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144430487 seconds)
    (90/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.20281722 seconds)
    (91/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114377036 seconds)
    (92/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076995669 seconds)
    (93/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174916353 seconds)
    (94/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087115664 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165558458 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.124366529 seconds)
    (97/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096604708 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101819591 seconds)
    (99/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.12765302 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155774449 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067004262 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126329163 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119629656 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090971855 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186876331 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186664253 seconds)
    (107/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238386873 seconds)
    (108/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068614212 seconds)
    (109/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.156175624 seconds)
    (110/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.165252641 seconds)
    (111/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.15441587 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.133196867 seconds)
    (113/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.123186911 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121867385 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098896085 seconds)
    (116/286) benchmarking ("sort", Float64, true)...
    done (took 0.234615737 seconds)
    (117/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12598939 seconds)
    (118/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23913056 seconds)
    (119/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072887805 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.183826131 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122441462 seconds)
    (122/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.085265433 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119632423 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090694172 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090509806 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069779263 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092491125 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118890004 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070008442 seconds)
    (130/286) benchmarking ("sort", Float32, false)...
    done (took 0.176299669 seconds)
    (131/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112853436 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088971894 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120114731 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.095462353 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.193467113 seconds)
    (136/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160871048 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101948078 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111185744 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088956033 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110945874 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097378873 seconds)
    (142/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123389562 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0951942 seconds)
    (144/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114590579 seconds)
    (145/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069219593 seconds)
    (146/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117655569 seconds)
    (147/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06836636 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174153503 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09502151 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120023864 seconds)
    (151/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088361919 seconds)
    (152/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118331316 seconds)
    (153/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136332519 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097567267 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091381145 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069041318 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130590011 seconds)
    (158/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120455022 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141079259 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07120632 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.144008451 seconds)
    (162/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070961421 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08661331 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113523474 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090082308 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176128257 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11149395 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104780468 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093229096 seconds)
    (170/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089531721 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11200603 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089902976 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112548371 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09567449 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109177867 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070932426 seconds)
    (177/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.09165952 seconds)
    (178/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099647856 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068390534 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121741421 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111432919 seconds)
    (182/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.082440019 seconds)
    (183/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174810728 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109715825 seconds)
    (185/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091929714 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.118627956 seconds)
    (187/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118613806 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09042839 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092011366 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067527676 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.225094419 seconds)
    (192/286) benchmarking ("sort", Int8, false)...
    done (took 0.196941955 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.113664002 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.155098998 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128045471 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069650992 seconds)
    (197/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113176105 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141533977 seconds)
    (199/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169556113 seconds)
    (200/286) benchmarking ("sort", Float32, true)...
    done (took 0.242760881 seconds)
    (201/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183850722 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120773468 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099464633 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121187531 seconds)
    (205/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091082645 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066892996 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.127954259 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066973471 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125766653 seconds)
    (210/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.186650224 seconds)
    (211/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080734269 seconds)
    (212/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123950907 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070235439 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067935489 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.125231466 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.31733092 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093209304 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088391896 seconds)
    (219/286) benchmarking ("sort", Int8, true)...
    done (took 0.224942345 seconds)
    (220/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.152125677 seconds)
    (221/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098330775 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.112102706 seconds)
    (223/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09316813 seconds)
    (224/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118878408 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.0697596 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067250543 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137797619 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122547693 seconds)
    (229/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069487265 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068681441 seconds)
    (231/286) benchmarking ("sort", BigInt, false)...
    done (took 0.248659505 seconds)
    (232/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113665586 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183086412 seconds)
    (234/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114199349 seconds)
    (235/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071019996 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067452911 seconds)
    (237/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09291733 seconds)
    (238/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.098559052 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118194648 seconds)
    (240/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067562247 seconds)
    (241/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067601192 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114931016 seconds)
    (243/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067846218 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118564521 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099481475 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.092057393 seconds)
    (247/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069958594 seconds)
    (248/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067288326 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111731877 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088570709 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111887621 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069604368 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116304289 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095721103 seconds)
    (255/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090869061 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068257255 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115704142 seconds)
    (258/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070050078 seconds)
    (259/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182078283 seconds)
    (260/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090247468 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091049991 seconds)
    (262/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144948224 seconds)
    (263/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092713949 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096718322 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067777232 seconds)
    (266/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092265506 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086096298 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112961971 seconds)
    (269/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.078361387 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11135851 seconds)
    (271/286) benchmarking ("sort", Float64, false)...
    done (took 0.152929455 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120753134 seconds)
    (273/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088667466 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119447001 seconds)
    (275/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126481215 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095353847 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11339617 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092003089 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111281921 seconds)
    (280/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071953398 seconds)
    (281/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.069385629 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117440186 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08774979 seconds)
    (284/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.0930624 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087018891 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125306789 seconds)
  done (took 36.752868108 seconds)
done (took 37.635964636 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103487307 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150240425 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096493619 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137345889 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126310087 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092897468 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120450303 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101720073 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125407335 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127971459 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103159698 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094700468 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097802726 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121435685 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097590441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140120655 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125755088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.097620476 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12002066 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088918792 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120727562 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091244576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113083764 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070957403 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123298551 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.096864351 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118154101 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122369936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.090925868 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111416555 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092518641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11924728 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087303091 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126427206 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095547704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.1203477 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101477187 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122670342 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112932216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089362773 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120432384 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091183173 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118335957 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.097818269 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11660765 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096033204 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121052139 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102072419 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140939543 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117582268 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097428562 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122851333 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.10198654 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118934904 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093209781 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12166614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095396298 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141041656 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124000859 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097658158 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120541642 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097279271 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117570948 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097270692 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120488226 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122583318 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098448655 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118083552 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099587868 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117531792 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087082685 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119635797 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090393039 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111735284 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09606063 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123161402 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08541661 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118844457 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118606404 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094922559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111691059 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09162772 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114242143 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095695559 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114886334 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073890988 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115983746 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098086016 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111356443 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099379304 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117729425 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09767081 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114847963 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10390126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112320042 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096772218 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112606103 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088632207 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115892859 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095886233 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111932175 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090645038 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121915883 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089268474 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119062499 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12552277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088859215 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118937261 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088608682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112478917 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10580588 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122330662 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087994192 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11820012 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088691281 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120616535 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089328067 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112613081 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088139017 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113313674 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093524574 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112889354 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114654648 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098384408 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126707639 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089278454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115944581 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092847721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112105701 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.095333114 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112731264 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089271117 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114447505 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078236382 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115598664 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090840387 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120730898 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092412937 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121296442 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089312208 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121940535 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092638381 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11860239 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093269053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112249242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075004317 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118919025 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091581628 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114461764 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088008711 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114546932 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089725102 seconds)
done (took 17.234753013 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089903088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185694011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15297306 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142877551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107236255 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113461857 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123725684 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118835124 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114439137 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144834386 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111078428 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133498236 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150254105 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08925846 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113871511 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091328769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114392409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103210673 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147033087 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133838219 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165468778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087251871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148240677 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135675448 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122694575 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106749504 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113891896 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093328969 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116672542 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113120377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133773723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116678462 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088621781 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136048374 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105260627 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121064025 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087512073 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119754203 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087454491 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11462768 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141775133 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134658861 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092835503 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119100089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091606938 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115971992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090390092 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122395684 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099265403 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117420738 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12846751 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158777672 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090786508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122261416 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087068996 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123005991 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123650549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090992884 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113928397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090918092 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11309558 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091215072 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128128616 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.1421458 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092981469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122989409 seconds)
  done (took 8.680705385 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106828552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141145204 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105300146 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132322197 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112568194 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089271094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113560866 seconds)
  done (took 1.750801177 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091243874 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136437948 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112468904 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137240122 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134493814 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114520854 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125302897 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090217529 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133011357 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090373781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135951031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152281756 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092355249 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122392991 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139067257 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089419022 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139860767 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091342116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116366378 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112915655 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119301198 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136836036 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091766862 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115486132 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103306933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115583062 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162846221 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094564091 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115480528 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092518198 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113391226 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152649229 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104293421 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125840424 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089247964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130129443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130114013 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087697638 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127135034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095183972 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128902865 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091708559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115638015 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087482964 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119297312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100344985 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119592173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089965226 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118703508 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136256197 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093063629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128932821 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109964702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119972433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095389184 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121274636 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101395452 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115278506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135022277 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094014604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132065151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.108684817 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12878787 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13172766 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092774719 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128760927 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103812562 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118218764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096439237 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118824144 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108148574 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11287983 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090669197 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125798432 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118208677 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114393345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138510085 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092744015 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125544246 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088898985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115753628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11602793 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116703482 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120140963 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092650186 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119675309 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093072165 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114114513 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090533353 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118051471 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087567486 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116402204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095539384 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116136149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092130127 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131627792 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115577638 seconds)
  done (took 11.963131924 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092801332 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116168226 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092456564 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116353936 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090835595 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116411996 seconds)
  done (took 1.582388939 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117450876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118132879 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104124477 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121098019 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15757612 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104176856 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131213856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125274632 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109727296 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128023515 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130358772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107557075 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136474117 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123061551 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10500968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121788197 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104251463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126270936 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12819479 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097348758 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137616839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121879134 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097846607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132318711 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118894868 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097256401 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126566491 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103216633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129004941 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124741803 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097050172 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118681756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097363722 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126135576 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131402724 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09709982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121957731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119813102 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102699344 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119489948 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106136008 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122065556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12846951 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094396217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124114034 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121643975 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094793443 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125753869 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103197194 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120392575 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119480527 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09676146 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121382096 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094766237 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124336593 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127230183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09535001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129903032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122442916 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097736859 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118865281 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093729145 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124995567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119069664 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105663725 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120572042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122922617 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097202494 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123305719 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096555402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119994338 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09328228 seconds)
  done (took 9.284779079 seconds)
done (took 34.212460671 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698092262 seconds)
  done (took 1.654108352 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824497811 seconds)
  done (took 1.784373895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.363139639 seconds)
  done (took 18.352028919 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.494696743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577674795 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998029963 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179431496 seconds)
  done (took 3.208764172 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948867635 seconds)
  done (took 1.92774652 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286576416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236828489 seconds)
  done (took 1.488076557 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772602287 seconds)
  done (took 1.747104701 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.376859381 seconds)
  done (took 2.337558189 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326522282 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185409126 seconds)
  done (took 1.480194227 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557287424 seconds)
  done (took 1.529519236 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.032172657 seconds)
  done (took 11.009254822 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269601913 seconds)
  done (took 1.254408262 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304562973 seconds)
  done (took 1.280543552 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.531771077 seconds)
  done (took 4.505159851 seconds)
done (took 54.531366034 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100209557 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127702274 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103475185 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125655609 seconds)
  done (took 1.422764204 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102712042 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121863052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101040113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122179433 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127343787 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096644786 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124414921 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.1013192 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121555233 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097330077 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121760095 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120916308 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099993251 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124523449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09441058 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125214659 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100550036 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122020215 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125114471 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097411969 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119413209 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098822789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125949546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094567604 seconds)
  done (took 3.671362107 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101000532 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119995023 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097061975 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120004493 seconds)
  done (took 1.42287022 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100765776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132948299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106661877 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126795299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132664382 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106882343 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118630374 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093199102 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120773747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100392726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116811538 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140566182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108313676 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125978744 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102315769 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115065914 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09184796 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132645445 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126035392 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101628615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12048653 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099843413 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116056363 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110278841 seconds)
  done (took 3.728063456 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171195802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12844872 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139352293 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095934119 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161405863 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142205235 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088942907 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142136488 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088480823 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132170832 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119349563 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133572276 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130455753 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08892016 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114428458 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088680165 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130042846 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129544337 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091686053 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12833728 seconds)
  done (took 3.434873582 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099089155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11874852 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089031766 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11749503 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09979766 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122075053 seconds)
  done (took 1.629454962 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0915853 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115586894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091733251 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115425034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095109325 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116380556 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089303867 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115769937 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090883654 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11669011 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090116331 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114661349 seconds)
  done (took 2.225566546 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507399204 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120465006 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120765383 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089203708 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125499499 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08996317 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130418051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093515303 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142169684 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089238071 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116016593 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091606553 seconds)
  done (took 2.697972829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236530715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126225662 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284981935 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36796317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156357517 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166186051 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279850842 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161954207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198649755 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151006128 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232502771 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197249812 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153062377 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193196584 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13882603 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145800737 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189651618 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253318656 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153896114 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212497277 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208068122 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168032946 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18061804 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151782808 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112827525 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193746315 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096066466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130641472 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235022682 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179806528 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191387322 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162661378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148476886 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238766114 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250092297 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19782343 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280738641 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133913798 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167329947 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142363834 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266135801 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140031383 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236145067 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157430757 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105344384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222637659 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167346714 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179183451 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147349037 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139787794 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199504607 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243076496 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194149507 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14078817 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299529451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149448324 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158861104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190951193 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252794821 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22833523 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190812088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122060288 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189146458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192102092 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213433498 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153173658 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184574913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147834711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18482405 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189740892 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166986585 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206682841 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181339799 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14026909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171428813 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174478963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174070662 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261106042 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186457324 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124255619 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170249212 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149017219 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105090597 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196655089 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126253527 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216278308 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144723491 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164717586 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210254864 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160135915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163328005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22227934 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185365531 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150117934 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084517896 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154527412 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156833879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176649285 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141477965 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160257425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15895577 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13045172 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171160663 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098416406 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212160227 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092203122 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175812432 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185340805 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128881851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162625641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154840238 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150340646 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177949217 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201222497 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14161047 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134264711 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2100037 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178563609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142729771 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178595924 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229397007 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11801782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150498102 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228864163 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21897899 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141406009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229359934 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153803353 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108492899 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134481442 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182608677 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157066182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163293836 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133329449 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185427477 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236000527 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099353471 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139843295 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197855864 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135149274 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134361581 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15582838 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147884054 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111776861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144570646 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14602573 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177432909 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179828422 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15550153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168116356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152270534 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251043978 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141312336 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152469905 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123056263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122802484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195418766 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227562908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104162553 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234404933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173289558 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225386456 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170671907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108619968 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178526783 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131446837 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093468785 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222136101 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170269771 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163268811 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197349625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224803818 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180350251 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211410545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166880699 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176795727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165902633 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156808718 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11182277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161918414 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159824617 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124564435 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139264672 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108064156 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150845273 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14431192 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133731531 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199660392 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170876357 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217887324 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158909548 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149378451 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182633787 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102294911 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178110061 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207308435 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147507288 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200419289 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195016271 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213560228 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117230011 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23216245 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09577396 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126270022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14295536 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171221411 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134066704 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108958953 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163722104 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181074863 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209921669 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171665546 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233013638 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177504603 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192388257 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09620369 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169820603 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184796565 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204490773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154173142 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140272168 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15299993 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179183808 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156079164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25782449 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172078819 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176247601 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234789971 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123598483 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133990372 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150806164 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179741459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155350095 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176696538 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148415361 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140947799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161296447 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10303975 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188644399 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186694759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163331711 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188276551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151480344 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215781183 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102003188 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163853306 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16204584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166798456 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109116076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177126987 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203558848 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149801138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792595 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217071702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104984767 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309692967 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236894903 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196842465 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139005971 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156486002 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161552592 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164030915 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172527549 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179690849 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15901634 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188248004 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160073778 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136890769 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139251004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123327793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153686973 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13383779 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14916288 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179048823 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138935627 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190720528 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156638265 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160050526 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173519624 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150712054 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116914516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150715454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245957331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184493766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24206601 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151771886 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179421043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207113503 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127364098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132396247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10770427 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179595308 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136972395 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191371183 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.216628782 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201865683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208809792 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179863834 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112459611 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121544872 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159877742 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17006378 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204761875 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150143639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148018347 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232411293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109611699 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133744411 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167329229 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289974088 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146794024 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19593385 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109576342 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280763834 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126493461 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106866811 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165064779 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236442045 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137615465 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15109585 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170126156 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162539592 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164732704 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151272224 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218812054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212275351 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201521542 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212606822 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106043273 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157886391 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176881318 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22124998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157900175 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111119302 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234777678 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196734864 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196027916 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143098118 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168493351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169049454 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15865333 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215096462 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107311207 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236754979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134402381 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193030969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153992256 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138957781 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178679184 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190342038 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142588221 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214702905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183799459 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107885085 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134496936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166615279 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205941722 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126725375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128538432 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182450665 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12669495 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196035372 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263693587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134217276 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155244818 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118923522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138369523 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155873034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158762688 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140910785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141979338 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228671686 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136282201 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192846004 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22992016 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172649947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174556796 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14566902 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695268889 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102764955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224650673 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148180811 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208765423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152898233 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175286255 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160200839 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169651052 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194349577 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190400734 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203305395 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222074346 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179973408 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133918681 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158684865 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157363443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145270786 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127100331 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197576006 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132515465 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146271167 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20733486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166147895 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106619954 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142498402 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198407393 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150101467 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18613813 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180539002 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140339079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173429018 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219074184 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109352773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210475929 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209259133 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142869776 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150945424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135532842 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150022315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233590142 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125754973 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188739242 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21335868 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160958556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169174573 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148039508 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194987932 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159275431 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186589361 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144026275 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159931514 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157931482 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139348657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103463426 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156864355 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16859022 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151391557 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161295707 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166047937 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195932536 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12497143 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116276997 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312443355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178212714 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216904937 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137342298 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137157746 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163546487 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150134229 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177700778 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180344471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136041518 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107964681 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137885925 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15492524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112329657 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160393127 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198964769 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166699449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238904135 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110392603 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280989739 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143207683 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159438382 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08953225 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133712325 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152010267 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146625657 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157193682 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193707174 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264617558 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150351092 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107169752 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152087233 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131578778 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108640012 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165993453 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166822088 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211926359 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118948105 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110281876 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157422295 seconds)
  done (took 82.951450481 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169276806 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133014668 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147759957 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202070987 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177867203 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271004148 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210310598 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255522439 seconds)
  done (took 2.645817734 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096965492 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14694773 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158116007 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134752972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093551747 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12091935 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346769377 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13537409 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117169638 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121960652 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174826901 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094944001 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550939573 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091929446 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120774277 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107958824 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092247546 seconds)
  done (took 3.774734649 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.228776099 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499868039 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.009414444 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195567061 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161100161 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118299364 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.710111517 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095092408 seconds)
  done (took 12.097547603 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118073114 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137284003 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123877121 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153597865 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141435199 seconds)
  done (took 1.765525886 seconds)
done (took 124.433063079 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100782367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128488749 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098045083 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13034137 seconds)
  done (took 1.526321684 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097784492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070614882 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101132341 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074956873 seconds)
  done (took 1.422827253 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191195695 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170095109 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409029647 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071663544 seconds)
  done (took 1.596747614 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118310815 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133348553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105766802 seconds)
  done (took 1.451152807 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109731574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129606495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105234564 seconds)
  done (took 1.43323165 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108056735 seconds)
  done (took 1.196524055 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110723925 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137755014 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109419868 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137492846 seconds)
  done (took 1.584857384 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103290136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127566779 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109991065 seconds)
  done (took 1.428332701 seconds)
done (took 13.083355777 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107230939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423442965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413348518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117015795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72289457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380403973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043398541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146580354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166055084 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093037956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139855966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673649554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.035153653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378677329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992325763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471855636 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677490946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121972827 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119574044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094140362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026235221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092491742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122455472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092169649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70425223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427261005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094975163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471265146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092248373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126899339 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383739211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123087254 seconds)
  done (took 17.150989206 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097449656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174653347 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101098686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137599676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123983349 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094660828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127412709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093605099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179203665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122733259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110322562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122729013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125920613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09569919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142423496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092304468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125328069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092878994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122297387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121238372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112099743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120413061 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09415969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122170865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093867922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135692218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122681647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093382128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121491987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098713379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127881513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095826127 seconds)
  done (took 4.826821415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143524687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182696015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128761475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12657973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169059247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12449923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200258327 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119594585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183748484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122701242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141636245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094390884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157758883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125428549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115388713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121830916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097366838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122955891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09325998 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123685173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139389074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093190202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122186097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093732385 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123133831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108366135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12495321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120715159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092761641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127151631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099679254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123912224 seconds)
  done (took 5.153613053 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099473732 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125482833 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108719238 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138582778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095745041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125491127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097006157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124855564 seconds)
  done (took 2.004460409 seconds)
done (took 30.227294855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112220043 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126887055 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107692874 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135676222 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102945393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132544099 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091746604 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133669717 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136977949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102261698 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137244108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092666293 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123023878 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092757532 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134706103 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098053891 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132716268 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10249778 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134460834 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132150215 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09489165 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133009108 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103497192 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13344668 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104866043 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13336443 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137526077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100683265 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122699366 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094405283 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124590613 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10424089 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124398705 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105892245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128639176 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097871786 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124409997 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094580032 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133802837 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132846984 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099869284 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133117526 seconds)
  done (took 6.006219684 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110831182 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139456041 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10503625 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081308245 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116815008 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080592504 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137790537 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078913225 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109899709 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108180013 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074364859 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106215892 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078339179 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101584026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077294804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074965666 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108420224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075582726 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076195168 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105676302 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080559193 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073170813 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10783969 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078625957 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075083799 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110556786 seconds)
  done (took 3.569323967 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102640129 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134358712 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113292377 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184407288 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160626796 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10004981 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131997729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139779589 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108517629 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120126855 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096639946 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150037128 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110808131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130351614 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092708048 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137770088 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136116986 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094921176 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128840443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113502729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139666074 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10379815 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142980157 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13341032 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092809852 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123092662 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09704404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135075865 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097764803 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130944414 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097136585 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125564401 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122801851 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105227507 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126391641 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094566424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142715693 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103044795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131180997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092972424 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129927974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122562382 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113911743 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162465372 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091905756 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128936256 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095140129 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133195028 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120858973 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111541669 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131765491 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091849429 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125226983 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09219189 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12269314 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106923525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124218666 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094821167 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131916964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126716176 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106162309 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124920477 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109846746 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121510687 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100098854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121639393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093822168 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120678358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143425829 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098354287 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161928713 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096229079 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124612187 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102314866 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130525344 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128668195 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094100781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137826769 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102346286 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125907177 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102635344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125940195 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09548069 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140564202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123422944 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095256057 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123547094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100353312 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123966033 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094390312 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136988322 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092822406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125904075 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111165002 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122376354 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124038422 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100641586 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126538236 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092764133 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136016096 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099088255 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123593469 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102744645 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123028413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125316239 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104078542 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12685229 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09311701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128369912 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100371564 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123822568 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094089726 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126297262 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094895206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133153106 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128529481 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098391976 seconds)
  done (took 14.856705872 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230375298 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215401766 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205715038 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292525497 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136257557 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114822641 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.245207634 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125954564 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124902029 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161057936 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172427875 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181452941 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169966615 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182344703 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170960639 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09339652 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143156511 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165669753 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215865943 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258775888 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144654326 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101368681 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162708336 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160484255 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137769829 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133281602 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110341292 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134725429 seconds)
  done (took 5.80913075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110823052 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15544254 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099117464 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14602847 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150413286 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093967305 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129035846 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094799663 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136397221 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1364141 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094008921 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130017187 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100759666 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13284492 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124310301 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103701963 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132184735 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095842026 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126608251 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097548931 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13421093 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102443934 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127455308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12209606 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103375299 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122000065 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086638719 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142964922 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123195483 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116244443 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121783772 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102366931 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137456921 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093715814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124130586 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096207623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126536635 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09539268 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125904342 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092743262 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123542634 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078135614 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122777096 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137896119 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099804037 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081070068 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131454245 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128352933 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095396399 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12125129 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097133728 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12622917 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097742028 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131211649 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095836067 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125226667 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097079194 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11640029 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100573104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125944284 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085267673 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122504826 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099171198 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118182854 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102334074 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128275249 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093024935 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126415251 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097699429 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130068961 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095320843 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130178799 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090530216 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127403801 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095859533 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129052826 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126518805 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093412857 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122638317 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094674849 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075068364 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124543963 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074257622 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126909589 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092378005 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122579819 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095287771 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129975581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138523945 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095963073 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132200279 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094938208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123748374 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096334013 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11418321 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09689589 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140706322 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141027303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094051008 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12238415 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108724313 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126729652 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093546428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106999237 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102918644 seconds)
  done (took 13.01717641 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132959867 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155184369 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125811206 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112610402 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157500185 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159330433 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101569374 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132128222 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096081478 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142891561 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094034264 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133009441 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094575179 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138687879 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158540741 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104585239 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126670957 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10853264 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129443473 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17091405 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111719977 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144193292 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112239768 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124994276 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129414796 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110760706 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162212319 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107897273 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138173524 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143820439 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108450318 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161573169 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143664439 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098500001 seconds)
  done (took 5.504620642 seconds)
done (took 49.853235945 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208641641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425142878 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197239197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.167883031 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.211241775 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215184403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209377958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202667618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.218415622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202027851 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.471049758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.780892933 seconds)
done (took 58.632359745 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.238688126 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359890592 seconds)
    (2/2) benchmarking "String"...
    done (took 1.487473806 seconds)
  done (took 3.973798012 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.778219078 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.15502039 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461544534 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.214536378 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202692865 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497705661 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.899925339 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.560661777 seconds)
  done (took 28.116758094 seconds)
done (took 42.228646061 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.223465002 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222035262 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240648351 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178328975 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312707753 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.237357429 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.545081328 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.25186874 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.229600838 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183417106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227422093 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.216492238 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.202110846 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.59222336 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209753863 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.20671521 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.268373646 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.752853006 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.628129708 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217927878 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.239784158 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.255040371 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225871586 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.224391085 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.220243705 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202529031 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217974335 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.201723821 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.797650168 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.204272092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213881096 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.735993187 seconds)
  done (took 191.011812046 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205860269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.364015215 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.44101869 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246155 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.514124933 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406955924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.355701426 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.729238197 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.224849844 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.223894125 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.455759432 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.20599247 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.539986996 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180998627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236653108 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.270741432 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.42906644 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.532138023 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244140626 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.370559728 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.213118737 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.639764393 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.565858611 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41195272 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.245895668 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.304806348 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219112749 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.229514399 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396869345 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.362653541 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.200529086 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.22756379 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824034597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05913209 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21646026 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.242986105 seconds)
  done (took 150.666102521 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207201246 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210021499 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209248576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24071992 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207887135 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791924238 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795548702 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.71678913 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.252808313 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207197558 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209257988 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.632988197 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.518207787 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208998882 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303787478 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216213042 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203712657 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224503742 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251582531 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210122479 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208323941 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797884811 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223416666 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.357415952 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386197407 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220040034 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242332754 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601695806 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20367965 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242991024 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543078475 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253571923 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204860274 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60942574 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.847849868 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318871282 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20590911 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243952682 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21116392 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.492679067 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204329318 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208530018 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212017886 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902593313 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209893616 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.786982222 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20546002 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178698578 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206077512 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201896609 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.720078586 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.895422026 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219856739 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197463811 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199554529 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197748147 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199401003 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233463158 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.803582223 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.294555472 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213835841 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.201808378 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234595691 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198277422 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.24189467 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198643961 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.684332228 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274706602 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304665994 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.768753715 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203273945 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298056127 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318328331 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201342491 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200245031 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199156391 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195577926 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309090639 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199113626 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598753589 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372417504 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.214475248 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.582189997 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301984717 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198409706 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607193198 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202703471 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199194083 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987514962 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299481902 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201355112 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.201542401 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198964748 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.599809147 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198682997 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768329302 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460944995 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205190665 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.813896074 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.202779051 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.616304707 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.738619503 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87543143 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203285693 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31174574 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.372881 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217565891 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198994227 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.576028161 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206202167 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201391488 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200356641 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259550851 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596605081 seconds)
  done (took 367.084588597 seconds)
done (took 709.886732899 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.810672974 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.807185339 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.920057599 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.803175992 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765605267 seconds)
  done (took 10.231958072 seconds)
done (took 11.355025955 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386264642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388828728 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264953332 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388917413 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237102609 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409720027 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37109083 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227811422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302345491 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285566084 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299273113 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252840768 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23327028 seconds)
  done (took 18.174519767 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527047515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505299845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264562075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516062185 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24269182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541360391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401562251 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418350269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427549694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236537567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215511714 seconds)
  done (took 16.426057755 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550656646 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.517095954 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266178809 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511554679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246627389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51522235 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409762494 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.426592907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420616158 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236236301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216578929 seconds)
  done (took 16.44656828 seconds)
done (took 52.172990966 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209320432 seconds)
  done (took 2.336982324 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246480342 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411526411 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232768082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219184143 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214555543 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217002938 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221576298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213048258 seconds)
  done (took 11.107220882 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213853999 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212377827 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208614492 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214043929 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211741247 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212434476 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212079262 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213407645 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214253713 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212907276 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212283052 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214393105 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.214725457 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211151701 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21051401 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210538167 seconds)
  done (took 20.529397682 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212069404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21071161 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211440653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211108965 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211464222 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21126539 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211867994 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211802957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211737308 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211423332 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212885048 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.20963738 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211063851 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209269858 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212208158 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211969757 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209993625 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210241188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214890001 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208196262 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.210702546 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213746345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211289007 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213180819 seconds)
  done (took 30.206064367 seconds)
done (took 65.305706365 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.836233237 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.913468165 seconds)
  done (took 6.882818641 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.215315406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212167029 seconds)
  done (took 3.561351945 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.21579959 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213407837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214992172 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219102003 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214409794 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.215660593 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216670476 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219605856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219755723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213649214 seconds)
  done (took 13.296103728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21405814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216278662 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210451841 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214223432 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215915649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21240438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214570016 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214073158 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21653456 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.213348749 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216987652 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217063303 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219203813 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.211211034 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215263302 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213156248 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215461102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.211948038 seconds)
  done (took 22.994996356 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214703036 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214241196 seconds)
  done (took 3.565705898 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214846824 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21383591 seconds)
    (3/7) benchmarking "month"...
    done (took 1.214584946 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213120268 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215132442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.213001326 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.211560045 seconds)
  done (took 9.628288673 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219371683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394943373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.482409685 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821883006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21460731 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.218845525 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.103851579 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225121443 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226841082 seconds)
  done (took 14.03886897 seconds)
done (took 75.097810427 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.229970963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.221003702 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.479563926 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217439283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.22744635 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.509695225 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.236665777 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.336408526 seconds)
done (took 37.591468401 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.216489319 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202922922 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.982536162 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204735278 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287548904 seconds)
  done (took 18.810052451 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243569609 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552650932 seconds)
  done (took 4.928576668 seconds)
done (took 31.083911688 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21758069 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218655846 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220147063 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.216517563 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217980708 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216370335 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.216205966 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219923555 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220824602 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220090874 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221992279 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.222060381 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.219028084 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217983015 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.216597197 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216348194 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218640078 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217012616 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219897639 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217737627 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215853938 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217762017 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21840871 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216332752 seconds)
  done (took 30.376614941 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.220280756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219343031 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223893809 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222003394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222472117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22192939 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219786746 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222578473 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224073978 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223246288 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220839546 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221809423 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223059218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218923395 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221779982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218533078 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.225563777 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217467564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222744031 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.222259489 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223796404 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221842026 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221675257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222578687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22015821 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220455836 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21984208 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221032452 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226536817 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21961115 seconds)
  done (took 37.7843503 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227133907 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232192335 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223611659 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226566294 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222255821 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228008624 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223839905 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227285128 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227180374 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22605949 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22723609 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224460006 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225623618 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22593985 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227984357 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226299651 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.229672045 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226766696 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226345686 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228286442 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229472465 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227215419 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227589759 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226393609 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226812363 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224720258 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226944653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226490125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22378865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229042147 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228168511 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228667878 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226213757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.227010973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224067931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226983429 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231804195 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.23452699 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230447677 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225870631 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229862267 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227703324 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.228024916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228935497 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223958617 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228245492 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229361855 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227624404 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228101193 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228874998 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225876055 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227090126 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227056048 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226402035 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.229238954 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229182825 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226208486 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232460531 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229336126 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228834055 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228376099 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230515859 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228379365 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227834644 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229220857 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229789281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22943088 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227369918 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22809797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229520109 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229995643 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.229703193 seconds)
  done (took 89.53681787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228159292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226715999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226393114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225548009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225091415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226753959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226215342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230042556 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226585889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230508968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22857723 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229021178 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229345583 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23318003 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231999518 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226766875 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229159526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225582711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229464758 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23037196 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231945348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225982387 seconds)
  done (took 28.162203676 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229881234 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232247443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.228431904 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229454243 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226562302 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229427999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223218549 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228514296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227076278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225421469 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224919418 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228132213 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226919854 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230028677 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228698645 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230667929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227129387 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231608652 seconds)
  done (took 23.252276904 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22428086 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227522178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229134053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227830192 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226190492 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228977529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227402762 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233055552 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230643939 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227266545 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232390189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229017435 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229590834 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227838924 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232990347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229593248 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231159682 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227196388 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228702306 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224746085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228437864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229887734 seconds)
  done (took 28.177881364 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228530101 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228705978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228664243 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.231509818 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231335429 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232356174 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230205975 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230530548 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232022541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231363193 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226141546 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230542097 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229181791 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.233134408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229608461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230414338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233680793 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232490987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235445613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229360944 seconds)
  done (took 25.758798143 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235298279 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231444389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233515757 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235549509 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230815614 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233707333 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235906677 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233747163 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23884288 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233655527 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23490945 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235206618 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237074468 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232651383 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234944221 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234630495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237197261 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233035078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233173007 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231832719 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238121996 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237944162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238231192 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233060053 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23594768 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235834543 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236913987 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231479611 seconds)
  done (took 35.721729433 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236444478 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23562005 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230681567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233349253 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232994132 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230919496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231702648 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232396833 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236016428 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230776684 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234757498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239720654 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234233707 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235642199 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232649458 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236807626 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236937315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234509873 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229431061 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233530169 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23709905 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232648966 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234483038 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230008273 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232581118 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233294265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233499566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232775324 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237414564 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235246442 seconds)
  done (took 38.167493113 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252854981 seconds)
    (2/2) benchmarking "in"...
    done (took 1.256551537 seconds)
  done (took 3.659622235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239798812 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236235631 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23229766 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234951952 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235788523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23586695 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233735383 seconds)
  done (took 11.031342677 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232631809 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237604528 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238233985 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236663631 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242117539 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239941721 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243063557 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25953538 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239398333 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238284572 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248614545 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.244658849 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240589283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237523014 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.236753613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237925214 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237909282 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237976201 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237624493 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237386123 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239034935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240310788 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242436468 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240806819 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.238456705 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246666543 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266115423 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239567691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240275872 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243799406 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236342015 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234253088 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239440304 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240526216 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241907335 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239380648 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245436657 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256797346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243672613 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260054483 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2389684 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237003861 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240060999 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.24132347 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238651382 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240428921 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239732825 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236555027 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240523431 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.244413307 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245902607 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242872894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240988338 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247865402 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243397516 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247039298 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263780198 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24408816 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246259968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251922525 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.27011572 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2643754 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242889311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.242809886 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251434149 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266476514 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25084428 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264229728 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239854932 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24274715 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247214335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272534024 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26675197 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239947789 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24024015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241200524 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243779988 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241511773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248362833 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265438489 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.243004498 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246783442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249361369 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267581776 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248345434 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243975341 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244545185 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242592275 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24288802 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256041077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263644904 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242525885 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244149542 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24355082 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244205353 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.243946031 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242360585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243712844 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243005109 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247222302 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244597485 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247249311 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253668395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249244045 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244882658 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250759325 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264099687 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243976398 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250003763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244262094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242976867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245966182 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253376955 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247944363 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250929222 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.249681479 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242951473 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248182604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24633354 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245826615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255416382 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272466615 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252142551 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.246504754 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254187826 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.25916958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24364598 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247869879 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249411941 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246390499 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250016735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.250860059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248665847 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251030953 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250240904 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248844887 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248390028 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253084843 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250422612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247117651 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.251978402 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25127711 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252083145 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.2523529 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25058603 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247570939 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25686421 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265322723 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250535012 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250876642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243893288 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252242076 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25296318 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252511539 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250221539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250830217 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249835001 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250223191 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252630447 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253013789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252094776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25010094 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254092832 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250185764 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251838629 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.251348209 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249630997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252473165 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255341831 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249763563 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254838308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252652472 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255754756 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257969674 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248206717 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252576321 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251253177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255556916 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249174747 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251572206 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255938879 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261787461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25193133 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.260280236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275657307 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253013153 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255700966 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255234209 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.252602144 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254762295 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255897542 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260292138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266726884 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274769988 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252203859 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255058186 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254906917 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260265166 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25860618 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255310106 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253028683 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256069649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252008715 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258299099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255689706 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257097363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254747767 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256499061 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25554346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255663267 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256024039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.254511732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255745281 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255346092 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256062386 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256998321 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253732177 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.254147798 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25531231 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.253207441 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.256751587 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256579092 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259364945 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250500248 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256874711 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257382149 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.257503749 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253133021 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257245194 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260269798 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256479913 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262064412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278078538 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257798266 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26347984 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276399477 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255429867 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259437701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259186257 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256593397 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.259414755 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267373103 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25815997 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.260294663 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258964281 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258956432 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259898809 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263669363 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274018234 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259503969 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260607083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259912704 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255394121 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26013017 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.259347498 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255859432 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259400692 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258157912 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259436254 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256737029 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260028966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260796327 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255833824 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260391482 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268117137 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261058482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256717207 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258990282 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.259144793 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265477201 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259783106 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261529384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260401524 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272102172 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.288906129 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266511956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280855047 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261269108 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265561293 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.280515122 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263206329 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26136879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260399572 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259692037 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259454004 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258803946 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260962756 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262487971 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262231858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.263185006 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262873722 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262119671 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259207196 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261308188 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262429573 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263703768 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261497114 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26205458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264424133 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262375638 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261643976 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26078238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267413179 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283521819 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264732666 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262377303 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.262331124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260294907 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263581887 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264917918 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266408583 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272647168 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265129252 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270826688 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265041193 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270031297 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261687124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264790764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273450293 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260320861 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261410337 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258403472 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264779987 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26969284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284027399 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264414983 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268869423 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264993481 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262209388 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.26170745 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266340439 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266610607 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.265773589 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269704514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.285357883 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266856399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266012005 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262256221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264948643 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263954983 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264726371 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265170582 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266106337 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266605979 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26413541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263166058 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263359279 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265780504 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263747437 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263796075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.2674767 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273217894 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.289402161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269412227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267251462 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273321357 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285864322 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271912928 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.289413887 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266266093 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265623829 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264174825 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266679148 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266143172 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.265349808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266669231 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266645388 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270340789 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.269464536 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269222289 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266871105 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268996423 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265872519 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27466599 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.292227593 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268244866 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270468312 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265045341 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268463936 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272687226 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.268522846 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263838422 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267082551 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276698857 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274137959 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26847749 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.268593492 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267197547 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268732909 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269015033 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269945408 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267904936 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269460923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270557331 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270061736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269859977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271072293 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269214699 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267535099 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269347045 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278124708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287671122 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267796159 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269294019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271917991 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.27033898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270694058 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271701272 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268376096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270941978 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271350123 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276798762 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276886381 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.27315477 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270300805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272335777 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268923958 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271360523 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271136897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.27254046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272148648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.271201049 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272418094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270237895 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269605688 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27318665 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272048382 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272214492 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273117417 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.278782077 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271829907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.270525202 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.27228487 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271684522 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270227004 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269293697 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27338283 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293702585 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278558362 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280249165 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276440003 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270625236 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275069462 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.27966729 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269578308 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269931971 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272268272 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.267822414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272601176 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275676602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269719423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277622625 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289991285 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.2714551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280163527 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293783304 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272891669 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.272102599 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276072045 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272554449 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266317541 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273839812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273298863 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278609235 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295449584 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272077753 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274242965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.271648464 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271294822 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278419169 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269952957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274302438 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273002795 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275984799 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273713277 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273790831 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273911085 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273150438 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268773613 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276398847 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278572207 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271633922 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276954515 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273932774 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274158537 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274262749 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27295379 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.272765198 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273296448 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.275687748 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274809162 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272467351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276397646 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270628766 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277670939 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.27923519 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275728646 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274932791 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.281362656 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.285096678 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273150503 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273484993 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269558094 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277712422 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275393395 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275414301 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274704044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273667147 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27396701 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274848031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275207686 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.280278643 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287197032 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298691098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276424547 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273489338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277812535 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.279053308 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274190901 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277614155 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.277463106 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27970559 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284148037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276780956 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28360506 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294360341 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276005753 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281375775 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280723422 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283525159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275947721 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278876464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278333271 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279881245 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293016139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278432809 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289875468 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304913857 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29932105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278970805 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.279150175 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274811332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.278501134 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278113117 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277761896 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279225898 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278130348 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28045191 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278358781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282823927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279579469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281527609 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279764962 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278157065 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274566276 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273496805 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281852029 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.279160401 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279749719 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280486195 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279807019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278459054 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289566517 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302363539 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278405656 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27936992 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275782826 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283387933 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280922246 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289878318 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288702992 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282483273 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278482123 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280302899 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282235843 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279406959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279897504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279764936 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278768907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274950492 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291243315 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300390242 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282748703 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27466952 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280847844 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284513624 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281643723 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279108155 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280722447 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280166203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277655989 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281246427 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277474274 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280198969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280158664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286083392 seconds)
  done (took 754.221882999 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275277281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280799905 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280273907 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280966027 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280185143 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284670491 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28082832 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281101981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278944732 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280022485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.281344114 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280463889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285225562 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288274168 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281576733 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281098533 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280991324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279576487 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280349315 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280305616 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280829698 seconds)
  done (took 28.093479582 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283239268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281783809 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281662279 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284563646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281180672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28605083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28064282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28563195 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285931684 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283289356 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282905556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282387698 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280929201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.281495453 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280845568 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283772249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284533826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280923372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285040749 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280656605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284882638 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281496601 seconds)
  done (took 29.416577952 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28219194 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285573484 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280882178 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28206827 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285653759 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.281134613 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286186784 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.287303269 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285560896 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.2865109 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.283526896 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.283957436 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292924107 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290309568 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.288079287 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285551677 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427260911 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284698767 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285655106 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283400179 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.283447527 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291127897 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.303610657 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.283595451 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283669381 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287344267 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288445915 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287046039 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.289262986 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.286845121 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291538146 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.28868977 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285756488 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289662687 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.284037405 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288645057 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.290641298 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286083353 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.282818292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.287074231 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296256167 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308348501 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288320956 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.291201723 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.31024046 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288467194 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292565566 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295826977 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286861444 seconds)
  done (took 64.460927351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286741526 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289479513 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285136152 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289757961 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288144307 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.287498477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289293291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288593087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286346952 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285065375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288015909 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286462034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287330022 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288639512 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.289373808 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288121409 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283970525 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285959442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285177011 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285751953 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285410973 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.287623425 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289152056 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287706667 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289253669 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286550552 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288173104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.289476595 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285563869 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287644985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289734784 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.2889746 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.287419735 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287463818 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288841021 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.28900381 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289132224 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286374237 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291281923 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.284427917 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289157074 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287299181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288923649 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287060533 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288292938 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.285648852 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286625492 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287454447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.28728789 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292586354 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.289981392 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285239702 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290549509 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288072051 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291802106 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286853617 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288041979 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285076296 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285995895 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287245189 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.286238851 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288417265 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285675043 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291720567 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288915769 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285007854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285530267 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293189292 seconds)
  done (took 88.76604559 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287192144 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.29151265 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288338858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290530987 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28788728 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284117347 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289852053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28775052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288693839 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290633796 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289169546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290299596 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2869689 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290796897 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291464429 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291679686 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288107506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290501446 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292860747 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289925936 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291216021 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291989855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287971833 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290858019 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293181482 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288427721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291267978 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288856325 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290728843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290470861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294857148 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29315932 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289866166 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290179164 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291120014 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.292349533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290687248 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293118159 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291222942 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293139817 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292457973 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291735894 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290389105 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290105927 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289271323 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289735925 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293833339 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292361238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293007969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29471166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291324443 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292325263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292644111 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289511974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295758992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291209512 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292491527 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29169558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295968027 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291224482 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293758263 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292473069 seconds)
  done (took 81.24109544 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293651551 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293259154 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288800401 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293733459 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29658075 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291558132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296790328 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29460921 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294932117 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29827209 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295457839 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294746791 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293033675 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294585568 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295432065 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294931135 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294596564 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295649217 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298947809 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294734915 seconds)
  done (took 27.098878278 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.293282901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296460965 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294267857 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29548194 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298894002 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297146507 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295746421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295277142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295431584 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295411555 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297332116 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295732707 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296894644 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295768238 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298880293 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293773544 seconds)
  done (took 21.937906265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293858222 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296530329 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29890385 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295536245 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29573228 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.297595812 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293797247 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295911792 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294736721 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297222463 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300670155 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297337056 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299711416 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296011856 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294440386 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298992179 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.297676138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296825842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299287059 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.30052547 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293821173 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293077437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301165225 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298023311 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294294487 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.299778795 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297548456 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.297948772 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298443548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298115953 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297203804 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293050438 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295809147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297203886 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.300521988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.295050967 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296175284 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300270489 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298827448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299568524 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298325289 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297583818 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298346356 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297459344 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296846073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30003762 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297894272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299930301 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.299121132 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.29930334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.30262107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301397272 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.302302097 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301241367 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299496187 seconds)
  done (took 72.585401514 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298581258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301900737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299636296 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304101848 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300396318 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298658446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302714807 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30141486 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30133875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301501308 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300677572 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302699382 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300037049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301634254 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301512698 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301645151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299435911 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300131671 seconds)
  done (took 24.62636264 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299564351 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3022221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30274016 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298392259 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30020378 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308424444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306198569 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.307559692 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308438703 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303760626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303189766 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.305798296 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30487841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303820449 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303037616 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301948359 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.304754257 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303146043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302530101 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302315211 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306254375 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308028754 seconds)
  done (took 29.896796165 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299405156 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303960348 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.302618188 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316800384 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.322835429 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.324054153 seconds)
  done (took 9.080799507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310623242 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305889031 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304436051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307119662 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305424418 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304556822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301401639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302875719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306360484 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302198896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301990062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305636135 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305928231 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305374947 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306417868 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303958243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303343781 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30423224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303223781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306380767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304916932 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305949713 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301088484 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303790721 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304104459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304961418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306003285 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303760336 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304048881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306191971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305764331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305403535 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306384656 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305369153 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305800714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30389522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307224981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307592334 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30426422 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308036654 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308580533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307147347 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305274138 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307659425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306626779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306233213 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306439617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305940867 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3087367 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309179604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307453998 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309213887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308983782 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307739312 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307853797 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305894589 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305215352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308704833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306874108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306809945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306603545 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307575908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307241215 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310942113 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305296013 seconds)
  done (took 87.430927281 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306625131 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306888102 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307085776 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308629014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308072891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306733294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308157806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305690661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307652794 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307512677 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309457266 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306871482 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307241749 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307646502 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306009166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306578328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30663614 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306662594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30694953 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311144142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309176981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309077616 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310360283 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308277308 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309001614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30986705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307795135 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306825522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30660046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307247512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308371736 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307710994 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307781927 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307825369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308904044 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307736696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307208129 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309149954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309970686 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312665512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310608277 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313394388 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309231102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30765966 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309206889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309721313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310016166 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309640522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310075346 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310867512 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310234396 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312551127 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312961279 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309722444 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312929026 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31157588 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312300448 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31275576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308900846 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313206743 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311018261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311134437 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315091471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311981311 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310758677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310113919 seconds)
  done (took 87.623870018 seconds)
done (took 1759.245786088 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.476303927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42680427 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.310180218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313071181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.306489403 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332517201 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.313397495 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30536672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310503595 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311334088 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312525513 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498718011 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.30755828 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305965854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311591782 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.406124512 seconds)
  done (took 42.767759453 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.338600548 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.316909163 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433698142 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32996756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339565795 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504400512 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371173176 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.317559402 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489934653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.355319078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.937371559 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335839284 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31621415 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.46780434 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331456454 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51170589 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570978893 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.936634632 seconds)
  done (took 30.424411333 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793062638 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.348416959 seconds)
  done (took 9.362867302 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.335937827 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319352069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317480545 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317089619 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.311490756 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.305172696 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.316013769 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.304221868 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.172837576 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450454387 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319432961 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.326002647 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336395783 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319089785 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.315536829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355515736 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.474718995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317601465 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.314265024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324353949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317728278 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430723324 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362055822 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315714567 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.450916625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.18054735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.323156082 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.325471454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456031812 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319347886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318584629 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.318071773 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320610788 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.956415332 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.85251888 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.331623009 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.338437762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328391621 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318110164 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.483538518 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321303802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327061674 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.311968122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.841122863 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.476689071 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449412796 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.635144163 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.337476944 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.319649191 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383894467 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32225005 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318819007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350049146 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.119917427 seconds)
  done (took 111.349889278 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.362519985 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697104863 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.484697508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.33023912 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055542267 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020293454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330847508 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624478683 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.3536018 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308991251 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.650894854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848187155 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334039148 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.376174464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800222286 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.312271725 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31553479 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.203310091 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.333120154 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.312715737 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822218668 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311391163 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.331888242 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445844163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350625857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806909888 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.752538505 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.748915753 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332848862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.310491039 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808177546 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342325998 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.350690621 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.311157651 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58902707 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690168603 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673810825 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.326951924 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355741439 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312396868 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328097988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781821635 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685948048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.327819513 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316148068 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78909028 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328315406 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.317200271 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316909553 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524177661 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.013761395 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318273425 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.803535454 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.316947017 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.603530249 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367205331 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370352088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812070889 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326804696 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.408739494 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372424204 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311207058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319295215 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317389935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320288914 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676341618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683535181 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313014051 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686834012 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818114235 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336109214 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86636032 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.160975301 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332309057 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.36843534 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319140199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.995014929 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.829060136 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330191785 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312929942 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667835333 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329206971 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.648869129 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337698634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338841127 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836676378 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31519221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.382381413 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31615646 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.323634847 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.079303653 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3235902 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.616872884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.356800423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318738394 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320052937 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356889033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314841965 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.339460953 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323716999 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869658994 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.341150075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.30070086 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336965165 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319008811 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31532307 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.321787354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320270835 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543716973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.773074906 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.344781007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321044989 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.316970851 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.334545297 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.47945535 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.324780292 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.640651631 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332149332 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31630653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317885509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028882556 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38606384 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315046834 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.319934943 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.246587278 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.5274998 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340682343 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.319995071 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318557803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339323613 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.64918744 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337682958 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.347473315 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317906407 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040486115 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.37468997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.317382754 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.671600924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.332110257 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319905395 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.348037196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319672779 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613631423 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.605360569 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.596464407 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318433059 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318966266 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029924511 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347547949 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.466474052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.343133867 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317866523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52161547 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449138693 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317695079 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.921831304 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.319757457 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542012114 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326781134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623209122 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8431749 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.341508707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324158507 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.064759517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035035034 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.154537522 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.324518451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.654471875 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.300957629 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789077171 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.32454655 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.324328068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.876413829 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.328063988 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323443638 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.320025169 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.32455161 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391279846 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49856393 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.601635077 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324104751 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801801144 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.397887844 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325092773 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327056066 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325063524 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.669644422 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365233507 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321968159 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.335597262 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323290782 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319403129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816788248 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.21055267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326383305 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480300361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985639781 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.342195431 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.325665732 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.929265362 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.583733818 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908045433 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377731887 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.661039291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.345383513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.360166318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.096521432 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.422953557 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.857833734 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341842903 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328807419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96233769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.34530253 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405901607 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.321518748 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.326129797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905764967 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.341465589 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325723022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.619911125 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343510332 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605338132 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329891599 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.36144127 seconds)
  done (took 1109.382173432 seconds)
done (took 1304.503541177 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.326473657 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323630462 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.310650415 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.336391484 seconds)
  done (took 26.5350503 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340794286 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334720773 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335877245 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.334310469 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339034958 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.335638921 seconds)
  done (took 9.262122337 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.548831021 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324022477 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330685228 seconds)
  done (took 19.444480935 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554685762 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.676588799 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.701707966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.629659845 seconds)
  done (took 10.804737358 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334526944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337531545 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.334454726 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.339164077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.341229959 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340091091 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338213565 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.339842701 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.341874929 seconds)
  done (took 13.287852218 seconds)
done (took 80.568441023 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.320301578 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.949449838 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.280270531 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353279879 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752723053 seconds)
    (6/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.873374542 seconds)
    (7/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.359536671 seconds)
    (8/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458949355 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.34236506 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.309018312 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596002745 seconds)
    (12/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.38660766 seconds)
    (13/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.427463129 seconds)
    (14/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.747206212 seconds)
    (15/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.72372892 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.386280744 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.313540228 seconds)
    (18/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.812331774 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352955234 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.34888223 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.323204212 seconds)
    (22/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.996919142 seconds)
    (23/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.399620644 seconds)
    (24/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.520353487 seconds)
    (25/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.352272046 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.322427813 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.910775465 seconds)
    (28/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.964548067 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318062373 seconds)
    (30/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.199047209 seconds)
    (31/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.132410542 seconds)
    (32/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.921667827 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.258767367 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30856433 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.345222909 seconds)
    (36/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.328735261 seconds)
    (37/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.307908991 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.360857047 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 6.340531814 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.345035001 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.468193057 seconds)
    (42/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.31445034 seconds)
    (43/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.172374325 seconds)
    (44/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437208744 seconds)
    (45/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.313604513 seconds)
    (46/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.623153812 seconds)
    (47/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.853867974 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.102573887 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.026955867 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330715552 seconds)
    (51/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.743080336 seconds)
    (52/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.264227272 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.455571928 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.589573318 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304477103 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.300709359 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.42836246 seconds)
    (58/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151619745 seconds)
    (59/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.001142598 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.315859168 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.776705731 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410240491 seconds)
    (63/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.320105401 seconds)
    (64/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.312500137 seconds)
    (65/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.726936673 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45452569 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.107059346 seconds)
    (68/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.207154365 seconds)
    (69/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.444695296 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.997323256 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.309523551 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.204746407 seconds)
    (73/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.730232735 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.43506121 seconds)
    (75/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.35196836 seconds)
    (76/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.448317206 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363951185 seconds)
    (78/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.316232431 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.58855188 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20856082 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.010716294 seconds)
    (82/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.183846863 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.358850067 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364043989 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.885305881 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.870378325 seconds)
    (87/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.368384077 seconds)
    (88/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.320622385 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358497943 seconds)
    (90/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.350309951 seconds)
    (91/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.403247548 seconds)
    (92/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.180425046 seconds)
    (93/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.310734785 seconds)
    (94/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.332944398 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.321508442 seconds)
    (96/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.518328348 seconds)
    (97/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.365493406 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328361349 seconds)
    (99/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.215913662 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.788934052 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.319389181 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.088763381 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.561975704 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.945108834 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.311294849 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.441638312 seconds)
    (107/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.344539496 seconds)
    (108/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.606184444 seconds)
    (109/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.708073994 seconds)
    (110/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.527008287 seconds)
    (111/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.863977623 seconds)
    (112/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.787019966 seconds)
    (113/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.383443289 seconds)
    (114/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.427975514 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.347802314 seconds)
    (116/286) benchmarking ("sort", Float64, true)...
    done (took 6.356029114 seconds)
    (117/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.345449523 seconds)
    (118/286) benchmarking ("sort", BigInt, true)...
    done (took 6.352471327 seconds)
    (119/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.332121669 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.863709562 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.379204984 seconds)
    (122/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.318334823 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.62712579 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.250334292 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.984045494 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.858952128 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.136281237 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.592260842 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204032758 seconds)
    (130/286) benchmarking ("sort", Float32, false)...
    done (took 5.351793755 seconds)
    (131/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.349233236 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.745437186 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.461483926 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.604387392 seconds)
    (135/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.413024797 seconds)
    (136/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.110040286 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.451602771 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.772185367 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.111471275 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.145826858 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361890653 seconds)
    (142/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.341060392 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.408161096 seconds)
    (144/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426583546 seconds)
    (145/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.320527962 seconds)
    (146/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371819999 seconds)
    (147/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.850851394 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.355085975 seconds)
    (149/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.385644998 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.366939464 seconds)
    (151/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.390425348 seconds)
    (152/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368828086 seconds)
    (153/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.367676075 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.444350611 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.331342093 seconds)
    (156/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.368441853 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325484515 seconds)
    (158/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.383373686 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.870074299 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.420480924 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.551723405 seconds)
    (162/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.039767525 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.76589522 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.438412468 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.341889096 seconds)
    (166/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.327435817 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.369109788 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.438300851 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.293949757 seconds)
    (170/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.436596532 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.342165671 seconds)
    (172/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.347882455 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.396709981 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373517486 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.42683071 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.346212905 seconds)
    (177/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.32100144 seconds)
    (178/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368993539 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.330379981 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.390351114 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.311755974 seconds)
    (182/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.727451671 seconds)
    (183/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.33956318 seconds)
    (184/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.976420667 seconds)
    (185/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.833796807 seconds)
    (186/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.910838629 seconds)
    (187/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.367518363 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.838344493 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323257888 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.800961051 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.451371312 seconds)
    (192/286) benchmarking ("sort", Int8, false)...
    done (took 4.376865497 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.401806495 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32334628 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.780960222 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.135909084 seconds)
    (197/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.374296894 seconds)
    (198/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.362819928 seconds)
    (199/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.863135393 seconds)
    (200/286) benchmarking ("sort", Float32, true)...
    done (took 6.33921666 seconds)
    (201/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.318886084 seconds)
    (202/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140000536 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.975024644 seconds)
    (204/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559378268 seconds)
    (205/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.47290251 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.325237478 seconds)
    (207/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.474965957 seconds)
    (208/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.652098682 seconds)
    (209/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.805637027 seconds)
    (210/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.162433274 seconds)
    (211/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.724740619 seconds)
    (212/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.367420712 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.633341566 seconds)
    (214/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.873172768 seconds)
    (215/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.351190064 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.3708891 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.018063908 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.706504352 seconds)
    (219/286) benchmarking ("sort", Int8, true)...
    done (took 6.355237271 seconds)
    (220/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.759834732 seconds)
    (221/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.375958103 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.389816876 seconds)
    (223/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451067272 seconds)
    (224/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4913178 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.589031803 seconds)
    (226/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.347450812 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.340556006 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361076066 seconds)
    (229/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.598147747 seconds)
    (230/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.33142496 seconds)
    (231/286) benchmarking ("sort", BigInt, false)...
    done (took 6.350647314 seconds)
    (232/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426691161 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.364439911 seconds)
    (234/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461991351 seconds)
    (235/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.203698899 seconds)
    (236/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.3481583 seconds)
    (237/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.393332629 seconds)
    (238/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.402259059 seconds)
    (239/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.352172403 seconds)
    (240/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.044015817 seconds)
    (241/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.330401981 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.585425176 seconds)
    (243/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.348300503 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369827417 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.725722509 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.938247626 seconds)
    (247/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.324290963 seconds)
    (248/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.530241403 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.365733393 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230977826 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.127015161 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405609191 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.361832939 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.159755838 seconds)
    (255/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.789106516 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.329698572 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.432039503 seconds)
    (258/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.024730351 seconds)
    (259/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.442793208 seconds)
    (260/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.846767348 seconds)
    (261/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.32397643 seconds)
    (262/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.238286484 seconds)
    (263/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.590512985 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.449805607 seconds)
    (265/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.620584515 seconds)
    (266/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.562619814 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.444367648 seconds)
    (268/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.349763203 seconds)
    (269/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.752495275 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.46729859 seconds)
    (271/286) benchmarking ("sort", Float64, false)...
    done (took 5.706062662 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177454759 seconds)
    (273/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572532157 seconds)
    (274/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.458111013 seconds)
    (275/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.979762297 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.396128714 seconds)
    (277/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411558116 seconds)
    (278/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.500252731 seconds)
    (279/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.359414945 seconds)
    (280/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.339982606 seconds)
    (281/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.64007177 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373425758 seconds)
    (283/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.186790175 seconds)
    (284/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.331979304 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.038011053 seconds)
    (286/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.08329487 seconds)
  done (took 948.481938528 seconds)
done (took 949.719647308 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384381242 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379913935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.361816154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383425531 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473013608 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386641279 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372146898 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364545738 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.409775173 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411045846 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.361400155 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385308962 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.365199681 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364226768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.361745096 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377890138 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.523997623 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.364331868 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377190391 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372827431 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380037617 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36012647 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411440859 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.385140013 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.36806924 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365362291 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.367665751 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.382998276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474550501 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36675431 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.3674915 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.37239591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.522375012 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362696353 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.360745452 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382580839 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.375546124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.373363446 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.367518024 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393384428 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.970020894 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381193552 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.36392683 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365252532 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365039795 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.368671423 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.365471234 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.372398387 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378672167 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380633878 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.976238821 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.395293746 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366572227 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.364991416 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.375378482 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364170798 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.368624034 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384406037 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.383152049 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382367046 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.511959648 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.37417765 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368224581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.382729655 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.373508132 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.025194226 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.37794393 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.374559029 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.972400176 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.388257682 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.02278685 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392021869 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367032776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378826217 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397215589 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.516665265 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.358593537 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367915089 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373349266 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364719341 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375397411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378974487 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371355176 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.365266534 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382724663 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.389844737 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.376078166 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368227548 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.37493465 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.383610656 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374502176 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377181387 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370973231 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.362022953 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377313189 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372128075 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369216662 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369125272 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.372290741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378417909 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.970187557 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401679448 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365597699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364700993 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369695565 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.38269709 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.972642822 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384660778 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.389478949 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415531801 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36873148 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.516597275 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372567304 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385369113 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.381009856 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.371938644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365097819 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.521319733 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.989727095 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.399981285 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370203214 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366747651 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385754297 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372272039 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367604046 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.530977133 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.372222827 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385510161 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.489697822 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.383402265 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401747701 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368811769 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.372447703 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394291751 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387970056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.402025597 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373736753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388110586 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385685673 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366038098 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379575761 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.379673842 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.371017684 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.377025544 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364563222 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395105816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38396731 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384048665 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393086221 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.490471364 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367721479 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.523926009 seconds)
done (took 232.999998507 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.429519014 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367328696 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451201685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36885806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.470190118 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.469703717 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366187973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367999291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366591776 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.745934349 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.367913837 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.368742974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.367771117 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366892044 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449843147 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.367826876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364101933 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.706766052 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.36829331 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438381726 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.366427583 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367494248 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369390474 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.750912194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.364019925 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.363794252 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440160513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.367299479 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.716154985 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.362964411 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.368030866 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715930877 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45761419 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385429738 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.379000098 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378441515 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470735369 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.386862175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.450301867 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449326573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451522671 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.406570378 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.36632175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363100775 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371083426 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371404703 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368300281 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.395569894 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.366020807 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.36985186 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.710622275 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378201052 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378472853 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.37098859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367409574 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.391907159 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368094906 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373179474 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460139107 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373738901 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.430586151 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.794784072 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.744929232 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370897963 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.366265241 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.372736335 seconds)
  done (took 150.831973728 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436244435 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.441896043 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488603057 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.379712412 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421837892 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495631647 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381591234 seconds)
  done (took 11.316598454 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377830652 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374136251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42186525 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423123982 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371723962 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.552227638 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372610954 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.38352205 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370238882 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425985931 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375703915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374641987 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380107887 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.374313103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42068233 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383915177 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487072656 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.373457698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372624791 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5288153 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369956525 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38115024 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.425313722 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.382706855 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.376556727 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376773775 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.182910406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374146189 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370687137 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.37506325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371487028 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448794536 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.373446552 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.370856574 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.3716505 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48853001 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.373130019 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372379462 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.376274409 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370377868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374726825 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.373525816 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.37353729 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369641497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374046468 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.395594019 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.375054563 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374095016 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.376674995 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375508273 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.424103847 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375599313 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371538328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374141939 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.429239107 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382088084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376364384 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370661289 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374491895 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372198261 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.531548306 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.421381139 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376741495 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.420252658 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37483863 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37600621 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374698112 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.37380813 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4301387 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373804745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42200127 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37277398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.562402258 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.396709984 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378903526 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376557987 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378319301 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37706404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372167097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.380169666 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372257291 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377235314 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.380113719 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37440547 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374862036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544102741 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484235927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37554262 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387051824 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382678822 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.372695855 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427767032 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37563167 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.373732514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428022544 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489299937 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429067519 seconds)
  done (took 157.584384931 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380165999 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383534444 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377678069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39148917 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376040868 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.374447989 seconds)
  done (took 9.559177148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.377258264 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380473454 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377137131 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.377849525 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376032489 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.379998648 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.376300096 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377008824 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.382264221 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.377525061 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.377615981 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380249923 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379396768 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378125469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.378348069 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.377815676 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379797796 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375104913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379166848 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378177218 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.479650036 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.377671622 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379288616 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381164931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384245366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380422648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386121578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378990269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.381214744 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387210449 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397777143 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381237949 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380772212 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386084565 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383552443 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379828518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385524329 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381534432 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.377715917 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.383476641 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381681644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379331604 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38131078 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380653718 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382330039 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386165939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.385224489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387810536 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.381697213 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.380779144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.3804282 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380326287 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.380628051 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380993366 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381827875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402127001 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.387331323 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380480178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381952084 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.381220303 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383817457 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.382464373 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383860093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387127995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390707713 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383631069 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.381524959 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386819752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383667853 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.382490149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.383335324 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379646621 seconds)
  done (took 101.870493685 seconds)
done (took 432.426948506 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.478692444 seconds)
  done (took 7.759836822 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.542382372 seconds)
  done (took 7.827480065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.276853311 seconds)
  done (took 24.569452175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.429228764 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.44649714 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.400621367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.371476694 seconds)
  done (took 26.932316406 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.875295137 seconds)
  done (took 8.159636549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377417942 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.388960312 seconds)
  done (took 14.052657919 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.50785823 seconds)
  done (took 7.790662972 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.455441026 seconds)
  done (took 7.744887077 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.387310621 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389436429 seconds)
  done (took 14.075044758 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.354130726 seconds)
  done (took 7.639552765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.878519424 seconds)
  done (took 12.162433493 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.382714569 seconds)
  done (took 7.670603168 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.444352161 seconds)
  done (took 7.728948922 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.141938394 seconds)
  done (took 10.427881193 seconds)
done (took 165.820240055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.377302936 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.377384802 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372189454 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.37214572 seconds)
  done (took 26.782725883 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418621964 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420837323 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.420929041 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.431742543 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.421540303 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.418296618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.410884556 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411802905 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428744085 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.424274109 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422337085 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421313737 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418960019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411611793 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420992135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421775408 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431004309 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.42046011 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41256775 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423363842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388036629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.433392836 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.421261857 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386818827 seconds)
  done (took 35.326169305 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906481162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456560027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.54084712 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439493415 seconds)
  done (took 7.627448642 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439319901 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.441175498 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452575085 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.493574382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517718365 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4530848 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.414971729 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400616567 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393907415 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441648395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515457877 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45579074 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.528753648 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38904793 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.573530618 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38816797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388240501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.442158757 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.4932112 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508664553 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386762833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440639765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.448347499 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456669726 seconds)
  done (took 36.149488417 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.390056125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.408133902 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388460372 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387070057 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.395387261 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.386507351 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387755619 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388357281 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388358083 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.39114413 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.384665359 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.398540174 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388157226 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386090945 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392956945 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388137456 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394326036 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388011659 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389879194 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.392187298 seconds)
  done (took 29.102146857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.379376151 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.587233979 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73428496 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636821896 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.377503858 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.383499586 seconds)
  done (took 29.387012289 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463265579 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.634166494 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390281305 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.791452349 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.888522571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.405239293 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390834106 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.660301441 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013649482 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988230061 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.453983434 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464166588 seconds)
  done (took 20.833611794 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.396145752 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.38503519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391685236 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398455766 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.451492261 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.409101159 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.396055133 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.383658813 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.453168722 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.470615762 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410642611 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.452635265 seconds)
  done (took 38.290387518 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472904042 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435883616 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.447650129 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424902431 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104956357 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590691084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378359152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128750212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400890364 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659567977 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385571752 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477297319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64355868 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385640564 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386843227 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.466289201 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630548076 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918667324 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387950551 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712203992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412137275 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38544508 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.82917568 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639522211 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618394441 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369433576 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647031272 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.161055128 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69822833 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403198764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39831297 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387428828 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661499629 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083581853 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502911893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61998767 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403259507 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.945456341 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.373607352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.703839198 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388159961 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387397053 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398760084 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387729629 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321813906 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394175814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179058125 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412723786 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.098602545 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386486551 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671806399 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485453994 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.3920911 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.962576493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407417518 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.404424938 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392747797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481563523 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975769021 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206262689 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393875624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323394946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386884594 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.617664149 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064637413 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.404149606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.394375131 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393639778 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325317509 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.681588741 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407215651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528736926 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408612628 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051134521 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179399965 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417506948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320852463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970374182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39934142 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325592014 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620910889 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162914992 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329661121 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.345844271 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324397367 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136271608 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391769265 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.842297518 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402667903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157545643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.64068201 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426657208 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413821655 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614766518 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.268234904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389568651 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.402650056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509502834 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406647642 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.180311509 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343651314 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389563837 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65008607 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60262979 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396365733 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.489940624 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916723277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401941064 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409546088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403395128 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630764914 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.045698561 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425379468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21316415 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411208926 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17322417 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172636791 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393593534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395820797 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39258506 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66105186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19803888 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27048968 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461311908 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400069023 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390029298 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.743203228 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245331679 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.275757896 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.614799863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414147284 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405180283 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.39487722 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352182396 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385074314 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426184749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.174240116 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618730791 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403304318 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670444659 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328418415 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531119001 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406006668 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.610520144 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.719285465 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.416713977 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656668202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402872171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404967628 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407665048 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413937516 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495033467 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417986785 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396236847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655118397 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399592645 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400296668 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.759434002 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17654742 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407740049 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400568663 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40615221 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039588021 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385126621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393406811 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380109624 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409512536 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464845729 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402951158 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632814036 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.421572371 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420564621 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394427266 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.402196028 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615410357 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406547402 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.751916941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478807842 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903125531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05087352 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426621714 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331454812 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.108490207 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.090397756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397153419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587493152 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399931885 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632223639 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430731799 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399988454 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048028066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417530402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.670215479 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404633471 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410503188 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.404589488 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400261506 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.365407775 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251574582 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411862476 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.411128996 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543228419 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412102585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333670725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916180181 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405156212 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398647068 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.17658305 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435876563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.660791465 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244980389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673367197 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401111402 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680800934 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.794351147 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433676297 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403289642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406971684 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4046822 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.413326432 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409231613 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.411101463 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.680864307 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.850898465 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959085485 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185795861 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014935633 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.88651173 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.427191106 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303823654 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145904919 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34746677 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060006379 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614582753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162354784 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371475183 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904231495 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.745436251 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26864533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690318516 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632636079 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86626737 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.431571145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693298806 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615214648 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430604102 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410129849 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333069164 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.675276876 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997240283 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422949002 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484840747 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164010711 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415931096 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.185570267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.471019125 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.229341629 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855419531 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.969881686 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.79744342 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402158797 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407518706 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275579455 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417726974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93171304 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082545169 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428008129 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.916181451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35444599 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637591184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.434092515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401865789 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.921682358 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.402565031 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673930715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686932025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340589392 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410239931 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99235239 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.280162361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412438414 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40403864 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21285939 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405858634 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738760878 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.422315315 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.400015273 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425714766 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.33945608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340015946 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.098815149 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410830558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376373077 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945911358 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.41520707 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418754619 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413337157 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257626297 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663363591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421983682 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051393514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653045389 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427336948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431409325 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.411390952 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423516523 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.389285445 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.287899244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645032826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428925999 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642645997 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.491130021 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.575321861 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43616283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613922271 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306635892 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419376449 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679106708 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.135438258 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.431753415 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655910301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440779161 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423806203 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428356106 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404530781 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420158128 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495419226 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643074464 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.437154774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418001415 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85719759 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440752073 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40949433 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422041344 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502372437 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110912051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.38392587 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179754586 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047787695 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205552767 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051863787 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708090856 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409381608 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409359605 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343430317 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550493247 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937236703 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682578977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52900759 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.401712341 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425371948 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409441012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414915071 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622870032 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684937846 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285848018 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425703141 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074190665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.571081062 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420616614 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62278025 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94158838 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004288427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518364429 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419104878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203146154 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702931844 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501627157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410394758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005560209 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.432326478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.243705242 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417047121 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424389277 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560007761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697569828 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116251968 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.439214323 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.571561103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.183251422 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.772374831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66869363 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.93050754 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645731864 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064535765 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188192273 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670259901 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481587207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649034714 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.539810896 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559645873 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.420483922 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287259459 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412047862 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264925177 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12215176 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421942002 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061223448 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695720431 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416797917 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.416128462 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429685925 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422952541 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637841069 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185862443 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639427847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422802481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417463692 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.362873835 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063996388 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71972308 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349917984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411756278 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677855237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67065539 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438396281 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.866374372 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.124485172 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019799224 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.389310723 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43355673 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423024406 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190293616 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064993499 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.425776069 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962416621 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07560687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417330262 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687320831 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.419632305 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414114562 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692047282 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417905417 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417382295 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655285667 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.080850058 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280967869 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.437580255 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.817194367 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.352202623 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643464053 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416450673 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345072577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411833858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.875606294 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440273697 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538476048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419507866 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.417946752 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422420249 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.149504461 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696618126 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.413565271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.403199322 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.412588281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424115378 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511720909 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017713635 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431234267 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.091692086 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.771935997 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675648678 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428508276 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396921378 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419219063 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41735196 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144053069 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38686959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42844059 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042128029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.431815739 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427820388 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.422789081 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.636153175 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630811702 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417450257 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660461477 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441874442 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433158604 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317331383 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192652022 seconds)
  done (took 1682.393802079 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460070249 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.426694039 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.445226934 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.507119234 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.431752124 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.536090208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.501131787 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4543729 seconds)
  done (took 53.084199648 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.426707633 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.579090221 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.45097123 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426209765 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.428517882 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422967686 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.928918301 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.447036671 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419819543 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.428188268 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.421760115 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.422015867 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.133235882 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428281909 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.436540834 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.413972555 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.41899402 seconds)
  done (took 66.960770974 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.947064674 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.800882631 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.771621684 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.417107721 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.427184225 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.427110556 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.828657291 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445612644 seconds)
  done (took 55.386788293 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436833221 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438183517 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43640595 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438081681 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437416572 seconds)
  done (took 8.508401251 seconds)
done (took 2091.113092414 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.424878853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427497966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42439162 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42679174 seconds)
  done (took 7.024096217 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.400929611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135926892 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.401695647 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415665557 seconds)
  done (took 18.67529399 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.424149484 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.428341848 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.199219837 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.10896467 seconds)
  done (took 5.631381911 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.174494139 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.185095095 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.169467172 seconds)
  done (took 7.853691791 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.422882545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.421667706 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.423617849 seconds)
  done (took 20.59058778 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.731310083 seconds)
  done (took 3.055126223 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.569460259 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.624528685 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.768903161 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774290713 seconds)
  done (took 8.063192132 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804731607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.807392892 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.614795162 seconds)
  done (took 6.551376519 seconds)
done (took 91.616053441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.530455515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437117518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624303956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.542991764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.645040214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62169221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.754910496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.510019431 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.005345174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.990748498 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.49683669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.640809328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.705943966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447359883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.707750138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826244313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649406421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.578398243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.188428572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386520341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.74811587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.140513889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.322255506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.154711605 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.642224281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.574864127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.728484358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817364704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.368811905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.742525855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.568578866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.434536976 seconds)
  done (took 197.856900004 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423920578 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432722029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.431655283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450725424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416337793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428431515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420299616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.418670522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.41617156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.433730094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419204754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.430367783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416102706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442755432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.418898252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431327583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.442738633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.430335208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416548675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418356771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.432706275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449327554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417227042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.440834836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423536892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417285464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.451460627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424431329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417311165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436390592 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.417844859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435747029 seconds)
  done (took 207.03015886 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.424510779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.427690887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.4196536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.433683759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420184952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419654351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437440181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434434742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.445021201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417595977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417597612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.435548543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41946347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434175863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436435075 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41935109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437254628 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420080314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419308136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434816921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419113603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445514019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417711433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434806005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418301764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441224995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436035895 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422068521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426024343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418519659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438221748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436878548 seconds)
  done (took 207.037413587 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631844718 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435984483 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437786924 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3930036 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436055532 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.435597834 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.433771628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.626877484 seconds)
  done (took 15.162068942 seconds)
done (took 628.406290563 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.935422657 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.637214577 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.649583139 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454084094 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.323310552 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47301738 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.455716511 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.646960629 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.405289894 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647214971 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.845681799 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.470912878 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.000192032 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455259746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.735853429 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.563050147 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.421881763 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.56200326 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.801575867 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.082957005 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.737470188 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.984378477 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.657208099 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.411926342 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.00964992 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.026676476 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.291570569 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.421241337 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.474197813 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.80876973 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.304139548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.554565975 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.52594504 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.522344193 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.580687511 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.562350221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.538568889 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.522156772 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.669944349 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.76203017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07814168 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.217172163 seconds)
  done (took 98.557547766 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.422261194 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.420034729 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.419924882 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422090798 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422472676 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.42181417 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.420477844 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.421791297 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.419804809 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.420399106 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.420865853 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.423295934 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.422451602 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.423499762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421414388 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.420792951 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420689714 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.423865373 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421719484 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.421704357 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.42140649 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.418799691 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.42134717 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.42107589 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422781157 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.421374133 seconds)
  done (took 38.293610585 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.440192269 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.701358642 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.888476974 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447444594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440178925 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.444066618 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.529122634 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442244404 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.443874038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.443739272 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.623706534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.444297381 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479595456 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.905751576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436531211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442805968 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442440395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.440526188 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.712633694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450398856 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551298602 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443245903 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.529870127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.452022511 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467606628 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441476025 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447622073 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.017271427 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461997066 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.624693528 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.316344199 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.52607244 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.968600516 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.920506686 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.316514452 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44524994 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.443828047 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629862676 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44610837 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.444316399 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.529405715 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444193586 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.90018454 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127579031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.462925471 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44677155 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.041063598 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648707377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.721423197 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452481168 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92445362 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446685089 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446441157 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444524195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.721680599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.451595798 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445036659 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040418955 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470789882 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533885601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446374073 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.445466246 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.721779359 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.445280947 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711732929 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445767217 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.454647464 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.4642104 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.902929265 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449230809 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.153791721 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.465262923 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448921138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.626981259 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712812082 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075436787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.466792594 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.729283925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981855361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.550031668 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449904719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.006160507 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.554645259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451578115 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.449928708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.44832815 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.448712655 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.494100291 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.53196009 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.092735136 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.15832478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068459768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.555559393 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459462455 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.448223256 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.043799834 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.469477638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447765456 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.900158576 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144851656 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459048257 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455841807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.154179397 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469578745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.536462987 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453508435 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.913252712 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.449123165 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495165765 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.447564331 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.45581555 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469988658 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.53576324 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452055332 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449565186 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.122863734 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64842688 seconds)
  done (took 190.822815606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.4443255 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.450981127 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.456852303 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.434324385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.440714081 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.452062661 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443256386 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.442973448 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.447785875 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.441875151 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.441913625 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.443978439 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.443676546 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.446477672 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.465535754 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.449204209 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.055125845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.444732177 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443445059 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434732232 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.264768418 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.446045906 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.44473209 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434887981 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.443866474 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.445713436 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.471229765 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437947549 seconds)
  done (took 155.257076839 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.451810858 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09674069 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.467726398 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.597055084 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472149122 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449743781 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.596135133 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.515452183 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.466913471 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.450973304 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449586888 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.796000831 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.445321843 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.021806383 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.654389206 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.615120626 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.025135701 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461597114 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450365128 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.451145229 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.598545034 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.455137682 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.787777489 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.064952473 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.463038602 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.098279563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437009028 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452638527 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.450302215 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.100921791 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.466819518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.801653369 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538899417 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.518819068 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.117252616 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062727257 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.062872476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.617894488 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.443804106 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45053662 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.450445548 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434720046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.099783731 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.473380037 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.453487343 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.090507486 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.473788904 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.455130537 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458158204 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.450847679 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.519220666 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.537997561 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.82162377 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109681743 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.557860938 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465606018 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.597822407 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.867670139 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.457750425 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045980755 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436573392 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.108033765 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.47275196 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.436106962 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.453839096 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459975332 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.62289553 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.597354073 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.041853476 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.472847009 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04888113 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.638796399 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.453341447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.453434695 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456137144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.107523525 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067086724 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.641230882 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.606335865 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.669862847 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438373655 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.452741741 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438426849 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.541045096 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.455646593 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.110215368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.066170901 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.472521728 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457040086 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.455941974 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456632624 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.650221608 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125266802 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.558978909 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0408864 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.824122072 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.806579455 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.457163811 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.521641561 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471610717 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.808001624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.457691983 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.520167866 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.949391787 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.809722691 seconds)
  done (took 174.685381644 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724955442 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.74764644 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542963337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613804839 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.107491083 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.049202205 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8406574 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.613701891 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.575599152 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734725904 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.689737247 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535509501 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.694347807 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.540157288 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.252992577 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.551049604 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.571525647 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.612226807 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.621529321 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.550133245 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188088279 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.75207021 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654648288 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.456884458 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.549969929 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.282527193 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.030621309 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993465784 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.653187381 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.852454448 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.018868024 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625472399 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.510192318 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.216748972 seconds)
  done (took 70.30561531 seconds)
done (took 729.247683763 seconds)
SAVING RESULT...
DONE!
