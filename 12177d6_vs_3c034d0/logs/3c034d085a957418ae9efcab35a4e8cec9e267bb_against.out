cset: moving following pidspec: 2980
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.385316387 seconds)
loading group "string"... done (took 0.566811782 seconds)
loading group "linalg"... done (took 7.217042925 seconds)
loading group "parallel"... done (took 0.158406819 seconds)
loading group "find"... done (took 1.141831067 seconds)
loading group "tuple"... done (took 1.797215065 seconds)
loading group "dates"... done (took 1.310479244 seconds)
loading group "micro"... done (took 0.222060417 seconds)
loading group "io"... done (took 0.957046998 seconds)
loading group "scalar"... done (took 37.715266066 seconds)
loading group "sparse"... done (took 11.867063641 seconds)
loading group "broadcast"... done (took 0.944882018 seconds)
loading group "union"... done (took 11.924278612 seconds)
loading group "simd"... done (took 4.458602552 seconds)
loading group "random"... done (took 9.255269519 seconds)
loading group "problem"... done (took 1.85489282 seconds)
loading group "array"... done (took 20.952321127 seconds)
loading group "misc"... done (took 1.690471908 seconds)
loading group "sort"... done (took 3.461361126 seconds)
loading group "collection"... done (took 16.971452014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543812133 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130303481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123742976 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123812746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151861599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116362611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130116176 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089078318 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.896525419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152152959 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119342211 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439055744 seconds)
done (took 5.494027193 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178249148 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08625927 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084460202 seconds)
  done (took 1.46456833 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066680529 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127163831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068118622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068222272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068722605 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07037034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067313964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066568743 seconds)
  done (took 1.830350143 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075968244 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069628662 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067453474 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069610159 seconds)
  done (took 1.576334803 seconds)
done (took 6.424343532 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801424037 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205672096 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188885673 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418214125 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133021456 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160767202 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638128491 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305926164 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196597118 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081436437 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110749916 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.331669572 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112447003 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643257726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078414359 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091346858 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136829397 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425580225 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067946659 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082719077 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088971143 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128586935 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088979205 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074714591 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14572429 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067658283 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137185557 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081329992 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066536743 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214649629 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17281893 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646428695 seconds)
  done (took 10.456064152 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098956999 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09845107 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06934556 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12300411 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096829769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070060139 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07191747 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067761381 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087253821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127589226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088672467 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101540644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066618712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068949524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085216943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205529354 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08325396 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082466931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071701255 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075485683 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104985895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078743303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077462229 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077738523 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130196477 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181370014 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099613126 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098137311 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066636531 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080519048 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115435752 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125013897 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065721706 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066260732 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124961727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096076897 seconds)
  done (took 4.765473343 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.012698329 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143990344 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091152136 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135390701 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065407295 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109723255 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065662332 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081151004 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112235991 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209536879 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.384299903 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.600107979 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111596132 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104363994 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067770668 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069134096 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067182554 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517197814 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097088978 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108023269 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082209398 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071010947 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069851634 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354883931 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068333146 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065045197 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070414288 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058240965 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126613455 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069882498 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961360558 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127361641 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067222184 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102075998 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166996224 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091642442 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.278156625 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069435569 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064260659 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153346296 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065630084 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070740005 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066823594 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084560647 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104474626 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113203142 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065909767 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067044297 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165480018 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06584642 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08065558 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.646871248 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153283478 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07878619 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064594593 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065331836 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255296362 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088542356 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069880925 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065070442 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175591487 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135616472 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069658033 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067243235 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069497959 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065251984 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069892855 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361171422 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066422895 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.872318253 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071328204 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07876935 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069465381 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069732928 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073830359 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07267316 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088367124 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067110815 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075539671 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067095181 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066352738 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067584655 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08394259 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379245609 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067776772 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069025714 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065636826 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089246035 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09767665 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067124678 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066013237 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100959594 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068943954 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06732213 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10782269 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066557442 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083721372 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069913406 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114176983 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068115223 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.193104891 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068926282 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097068164 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069943771 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099496884 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081709087 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071445167 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420479618 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065412725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064635542 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068811643 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066584952 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06789095 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067038645 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080231021 seconds)
  done (took 21.302212336 seconds)
done (took 38.828538152 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237114138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079265139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074252069 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077115825 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074971805 seconds)
  done (took 1.923753944 seconds)
done (took 3.285903874 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123624244 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100762714 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065289831 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097720753 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064996274 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102928739 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101391376 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082496349 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101292967 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064593111 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097906702 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065279391 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064616193 seconds)
  done (took 2.518589273 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08520944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085851677 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071247815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083829338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063396158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083129415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082413811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089771126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081692625 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074071264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064227231 seconds)
  done (took 2.2224959 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083890425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084678101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070752226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083014965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06458121 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083030482 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082581374 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087168476 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082269694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074486691 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064077827 seconds)
  done (took 2.214913444 seconds)
done (took 8.3074994 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079885453 seconds)
  done (took 1.423175523 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593167735 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.096954258 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082522995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112197288 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192799605 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119530385 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273531301 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088114633 seconds)
  done (took 9.084908063 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103246242 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069806995 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068645847 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069830136 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072241457 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069845632 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071224655 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069211024 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071898553 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07140011 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069975212 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07254389 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070110101 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071071245 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069216762 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072448254 seconds)
  done (took 2.58097935 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091716177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092044659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074271199 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075426664 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072730824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072658716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074617917 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074211432 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070979921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072537628 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07536052 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0739187 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07190952 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064820155 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074289741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075431824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071365713 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074468245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074386656 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076061659 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074870148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064890844 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07211305 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074408896 seconds)
  done (took 3.244842412 seconds)
done (took 17.690246478 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114591546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071615277 seconds)
  done (took 1.536520739 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081628444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083113235 seconds)
  done (took 1.522234529 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082541094 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065539928 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091230109 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077952888 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066286901 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065477163 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087912281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066270938 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065888856 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066189594 seconds)
  done (took 2.093973282 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068925415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077463443 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069988046 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081277315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073729911 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064120161 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071814021 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067611593 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077549755 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062859467 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071424436 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083075454 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071103326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084912825 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071916779 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068254571 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070848205 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067765404 seconds)
  done (took 2.665852156 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066122923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066889688 seconds)
  done (took 1.498956702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068267689 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064305025 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066539555 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067290489 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064184233 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062491417 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063711771 seconds)
  done (took 1.818383705 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385591871 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114255421 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312545692 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071715822 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082631148 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256535171 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06584145 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070777571 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071211999 seconds)
  done (took 2.836974793 seconds)
done (took 15.338977219 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080717895 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087099838 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096859142 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375814695 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091952864 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066674466 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113920943 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191119367 seconds)
done (took 2.481088383 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21456454 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638060576 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403571306 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205250539 seconds)
  done (took 2.619140532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346208231 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088817371 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05927041 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067707636 seconds)
  done (took 1.943127036 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066800878 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069998937 seconds)
  done (took 1.518984657 seconds)
done (took 7.670963065 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067867337 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066405043 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064056519 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067216699 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063994049 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06386665 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066330508 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066208793 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.066278544 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.067402398 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068965482 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064084562 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063731562 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08589254 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065861252 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072542961 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06375872 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063493198 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063898585 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063951559 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066582464 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063688216 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063751471 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063592517 seconds)
  done (took 3.007622714 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084488705 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066002964 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072140502 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071614084 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069656084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071574525 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0713619 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066262303 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071213155 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068728591 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069470602 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069730809 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068277456 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069602076 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069096166 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069852445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071557963 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066509588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068937465 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069222321 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071133204 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066605689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069806723 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071393406 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06970912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070911549 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06821093 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066007956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071183513 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069570152 seconds)
  done (took 3.485290699 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070290295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063694334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064632541 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070856877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064290124 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064382437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063611792 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063766058 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064198576 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06362941 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064723604 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063507217 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064024456 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064753061 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064915645 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067726153 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079421775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064054725 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063903969 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064330889 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06761783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063770646 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063675736 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063421426 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064197598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063490551 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064093858 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064343665 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064489232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063938035 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068754644 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067928426 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063503138 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070920077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067402745 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063584903 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067816468 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063311179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064811486 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063297506 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063757366 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064064568 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063619511 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071066475 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063625948 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065358672 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064341458 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065701377 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064508708 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.179458138 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062821991 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063882691 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065313405 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065569243 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068103859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063679832 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064513635 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062942748 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065055893 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063355394 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06326602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063086384 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06626527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064224503 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078869836 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070440201 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063437574 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065141219 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064288257 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066408377 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065275235 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076920832 seconds)
  done (took 6.227184032 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08962613 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086758189 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065411901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065308479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061677355 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064195118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0697262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064763275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065344514 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081627283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064462387 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066035876 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065021732 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06757018 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063890211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065313741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072605307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061542543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063926766 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067856844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064258833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069736881 seconds)
  done (took 2.908162318 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157116392 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07091039 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10554742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075394241 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069683228 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075630755 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069962173 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069973911 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069527314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06741302 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068038891 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06989981 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070208819 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067616728 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067529566 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067351415 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07014717 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06741717 seconds)
  done (took 2.777137019 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078676786 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066488662 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087350357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066456306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0664416 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06838743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070424989 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074408612 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068264619 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066111665 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074122987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068557852 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068267452 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066060395 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068391833 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065908994 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068334358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066275688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073927782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070372599 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070108333 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073778923 seconds)
  done (took 2.945737634 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08153719 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068562268 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081383891 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06898127 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06169745 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064242996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070037797 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066134539 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07023054 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068259954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065762237 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06443219 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068609704 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065472206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068702611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065522219 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067303718 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065379482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067840424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061826371 seconds)
  done (took 2.76190805 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088495958 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068529391 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068575913 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075213587 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068057124 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067583407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075370124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067876829 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067933554 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088053922 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067631075 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067253905 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075243338 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072584543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067716813 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07525562 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074827639 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074794251 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068348903 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068037523 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089112907 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067450108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075261285 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067899318 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067372977 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068036511 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067723777 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073190273 seconds)
  done (took 3.42431591 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067489208 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065859486 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06331843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064023116 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063413402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063336198 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064097066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063649067 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066132262 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064209025 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066338249 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066435099 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065975725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066125349 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066307151 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066472838 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065890838 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064055899 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063630552 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063682425 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066648001 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066288748 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065932231 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064247802 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064181741 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066861511 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063523026 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063890115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065769206 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063556132 seconds)
  done (took 3.356983835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077638253 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074494407 seconds)
  done (took 1.558355944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064598608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080571787 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063485654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070495158 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069995043 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066898934 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073619229 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069346854 seconds)
  done (took 1.959707406 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083993754 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077411508 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068056055 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07862052 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07791004 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084042476 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13619973 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067052819 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073688937 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064929966 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080041731 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066001337 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072997348 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066739253 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072960422 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073409523 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064311846 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072295925 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068631159 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06496509 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06765369 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075019793 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069287281 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061729826 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068801407 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088911284 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077496945 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066100657 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069987277 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073933007 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072194254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060299185 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066558538 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066847707 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064231907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076959391 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082170292 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07017504 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075061217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066886954 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075991228 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061622534 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071395202 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073264141 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076638963 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06670724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067222479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061513399 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064787585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068785409 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061791358 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069490598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061182878 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073499909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070408827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077212687 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065932381 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068728758 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06941788 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070729837 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073654035 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068553775 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06931345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066336504 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076714073 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071434218 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07534001 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062221244 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060576304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06471775 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07674873 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090049209 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073050971 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067029373 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06806832 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064492511 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069836358 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067176038 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072320412 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072605281 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066613618 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071756743 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073845646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067588934 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069315755 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074051839 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064904669 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069103944 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064859844 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08282678 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065109537 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064407782 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064056118 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076543558 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070774879 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066988166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064401808 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073636582 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060154727 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066822409 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067230406 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067942897 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077371205 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071045119 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071409501 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07557806 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074438562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067685898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069582434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063517087 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067653714 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065347861 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074072248 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061206686 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069429251 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067806418 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067083161 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075350824 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064883212 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066214326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074388734 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07241119 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190895032 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064249462 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070579441 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066940158 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070649383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075398898 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065466894 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062439143 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062132211 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070491789 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066036587 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071283983 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071345675 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070207613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061756721 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064980417 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072953398 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075887696 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067615598 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068134581 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07339254 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068505544 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066677653 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074041492 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06888488 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066753376 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072748718 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067493332 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062067313 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070268638 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070113506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06580377 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071012047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070111919 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068984418 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067784394 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06545289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073482163 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067560755 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065636156 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067259533 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066618682 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077172881 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069796596 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061595323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064455882 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075251907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065435992 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066302974 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066289266 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068435173 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067848151 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065275656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065646901 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068806132 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076927792 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071022315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067122265 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072434782 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078614273 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066561467 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069593346 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067042631 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068193322 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066866931 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076057116 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072362587 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071846122 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070434433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063413477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072725276 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074128364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066459482 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063559925 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065722251 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070583753 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07237297 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070592352 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066857003 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064424322 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067665435 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069847306 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069091181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065995134 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065387564 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072311602 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064440685 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072881445 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066821726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076843874 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069511678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061238991 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069065721 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064539147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072793975 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061218162 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064240295 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06622189 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06728936 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065323067 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068658228 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060665846 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07365664 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073759738 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067281382 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066353529 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065649558 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073451372 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067672738 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07082287 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070001976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072740216 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078014223 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065597335 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070025351 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076861108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066256778 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060265344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071766506 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065028404 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065581321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065726844 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064812904 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06959891 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074983995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073588892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188613043 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069130979 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065328035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066546085 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062307449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071223476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069793226 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06786428 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07416335 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067723368 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067142531 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070856419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066897576 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06760277 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068228924 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071515823 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068699066 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069482731 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066621912 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070322308 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066532977 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064615292 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069294897 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067334446 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06697545 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072385205 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066796281 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067664529 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070275417 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067106269 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067468585 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066573073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066491235 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070364473 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068218449 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067214589 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069881684 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061937771 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074228339 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066823418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074547454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067741104 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063438324 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073134231 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069696869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071296276 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067984561 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067471282 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068231708 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066728477 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069895786 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073306871 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065935578 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077954568 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075275844 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068288786 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069449421 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066348357 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069041574 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065989038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068246065 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067695994 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067263612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066548109 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072265868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070475656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067894513 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068664846 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068044779 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067329209 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068354876 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060743583 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065610463 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067363944 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066584122 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076122275 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0669536 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066335062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065277665 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06771694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066120329 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063241433 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074412595 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074894917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06723518 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073715865 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065680992 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06815956 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077030889 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060627143 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06450222 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064603474 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064639563 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073916418 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067974587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076443066 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066591422 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066161718 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064062561 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067515133 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064992329 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060664595 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064043713 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070004036 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065579502 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065756454 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066208592 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069519075 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06805242 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076186736 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065844546 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067672594 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066569112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064099132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065706398 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06563393 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070248317 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067250043 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064620457 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063788869 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066070701 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067640118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068474404 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069035086 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068300533 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074113233 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066622488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069551183 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069547633 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061672547 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.201190624 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066624081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066318417 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066996533 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071187746 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070063841 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067710483 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076766619 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066278043 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068163185 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067067589 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064053761 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066535372 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067818678 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067735555 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066213987 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068647598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075993245 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065743932 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069885795 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067650955 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067584084 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073439952 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067552344 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070387881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073795507 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067545468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068352817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075166441 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071169794 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07108384 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068164071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068901819 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072388492 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066233782 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073209325 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068123033 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067260379 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068464635 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066034124 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066527604 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067279917 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066861763 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072719756 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067891559 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066148279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065768607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064803889 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067308896 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069241257 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074572705 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069577225 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070161706 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061665473 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063593252 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06762216 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06571784 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06854598 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069700515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071985637 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068976295 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067790102 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065725076 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075299303 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072632745 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071187906 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064870972 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070401955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068318615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06890661 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068503679 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066885106 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068246712 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070314563 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068656045 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06647933 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0734643 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070073019 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067401211 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067782757 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067856622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066760939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061591248 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067129942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068622461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071626538 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068486728 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066736652 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076776121 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065193703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066909715 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06956056 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065674999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071043259 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061823165 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068179963 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066971572 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067091636 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061693949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06576478 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064583192 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069035062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065599874 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061305897 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076836094 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07592949 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069299477 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065556708 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065635734 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061618961 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061283339 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065705641 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068198112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068975138 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076848474 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065996263 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066187495 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061992697 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06737428 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069522283 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070147926 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063477193 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062389534 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066413167 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069695407 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071998913 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065307496 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066427608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070028352 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069072269 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.196009823 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070013499 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064136933 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070575507 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079151815 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067218102 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068575179 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074335543 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074216397 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066811596 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061989077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066572385 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070434194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0679458 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06843872 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068204811 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082596755 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070632046 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066640882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065344794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068880876 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065991412 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075300685 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067669798 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068164067 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071082156 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068686158 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075073484 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070058372 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073888175 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069799095 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070367367 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065988309 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066953373 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065249388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066017643 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068102644 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066816137 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071869879 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075050476 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066454344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077988082 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076154847 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069289755 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063965102 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066949921 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066563717 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062253783 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068704792 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065313034 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064879097 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06520463 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066205473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068119521 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071530091 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067938699 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067195404 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067332801 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061213997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070145028 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069334357 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067541335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063671922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066634058 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068064218 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070932251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069838819 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064482169 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068368881 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06858934 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067720088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06158027 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07320629 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06568474 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068723208 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06579946 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06634424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066642954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069699115 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071080992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068129519 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068952526 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070210015 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068298495 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06353346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063454258 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071809637 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064209618 seconds)
  done (took 42.970837245 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10071118 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062815147 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062386088 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061543055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073153142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062709884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061759228 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06302062 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062567143 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064895893 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061675204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062140734 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070085935 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077614377 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073172818 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066312137 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061639384 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062768364 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06176274 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062761805 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070235665 seconds)
  done (took 2.886528827 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075099834 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077404837 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075814895 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081964232 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070872112 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069926513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074979217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070773019 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077645524 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07210217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078219657 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070226449 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072285937 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071886169 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072033236 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070608795 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078038877 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070460948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070588481 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075291606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07081447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075254162 seconds)
  done (took 3.083538751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06757943 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065884923 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067987057 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061510304 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065825768 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061089108 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069237229 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063923201 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069192845 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065904702 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065257416 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065560766 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068183207 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061201016 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066406008 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064925427 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106950149 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068886067 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065781919 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067095754 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061657585 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068212801 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06099408 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061499827 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065291972 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069307208 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066169647 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063627806 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065684814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064814326 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066206192 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063875997 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067655839 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066434876 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064804488 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065341269 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06523751 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065826615 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061844967 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064004821 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066523901 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062170664 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065949875 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067188159 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06363472 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063949305 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067574866 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066286448 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061001768 seconds)
  done (took 4.705984733 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080426014 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108526602 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09079256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080262512 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07249175 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069514386 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089370732 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062845562 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063887606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080532031 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079811418 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065467456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070857396 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071922772 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065141098 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066674431 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064076977 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068843676 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06562808 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069094297 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071969523 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079716262 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077870202 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069258852 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064534169 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064866271 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069433596 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077090019 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069343845 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069674564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070298506 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079954097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066699991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064286316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066968434 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080794785 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065281271 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067633873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063004945 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067584118 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069078588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072069376 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081298181 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065644089 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070573275 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065299735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062791606 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077811696 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067757482 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072959265 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078641488 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069458833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065895294 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069487813 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080287512 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06490899 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063535412 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06784053 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076844993 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063055542 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068910323 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078562185 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067247395 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07229699 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078349651 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070673504 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069137619 seconds)
  done (took 6.475779144 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077173695 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093870024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083816365 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082683726 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075395455 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075267478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075160123 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075061821 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075376288 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079755893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07565234 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11532172 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070859235 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077838596 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075383149 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075319804 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075454338 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07545293 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075282156 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07529751 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07532049 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083062064 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0754931 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083447837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079175246 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070583042 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074699165 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075438635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082967023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083429695 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079348685 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075571175 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075149084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082781842 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079125376 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074941985 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065814427 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074855361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075260243 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075119077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071329727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082793119 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074736632 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070835831 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075041019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074995538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082508112 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079639705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078028139 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079383966 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075050127 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082549319 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075039851 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075458616 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082993246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085696888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082278959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083180127 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075160423 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082878152 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082870379 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085504086 seconds)
  done (took 6.352249423 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083333857 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07372092 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081129965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061436518 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064273636 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071235016 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064459806 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064642131 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073350997 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074363567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075718363 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071735374 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074266824 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076128844 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072300843 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074546841 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071750385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071596761 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073268524 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071822305 seconds)
  done (took 2.931628096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075667973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083717738 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066504505 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071542325 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068733663 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071047203 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068377725 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068801534 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06666433 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068645693 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076140882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075797563 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066810528 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071351156 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075346227 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071777846 seconds)
  done (took 2.625648988 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085236082 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072593316 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079881111 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066805957 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06658752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062819359 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065906673 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061520907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062202476 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078075242 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065542753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076032352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065977459 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064681644 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063036184 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070862573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06206632 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062857248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065631681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078451364 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069325252 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063980516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068683317 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065341771 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067934965 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070300134 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065198546 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065957548 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063081657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065845007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068719606 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069201353 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062505951 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063602753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06443148 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062934559 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065862547 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065988351 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070650481 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0653949 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063692434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067453527 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06495296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066140791 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061875056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065654073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061787192 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067654793 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063739736 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068410247 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065886495 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06806067 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066347536 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073172524 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068531742 seconds)
  done (took 5.17699921 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080487009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069606001 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061466448 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063782169 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069097377 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066846434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069039268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066883605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067238761 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064632179 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067059487 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069114167 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06715591 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070023628 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066840438 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069269988 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061586845 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066966589 seconds)
  done (took 2.709492715 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072726033 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066078466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073019486 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066050839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06597987 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068658961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062129729 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06448361 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064744941 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065530762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065580083 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068432293 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064490247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06857659 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065716026 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0657113 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068126514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064237122 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066191715 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061976803 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06870874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064578077 seconds)
  done (took 2.946135901 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095993993 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083691284 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140690221 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078968735 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08553926 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071398122 seconds)
  done (took 2.042596397 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091043813 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099331782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066487051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069827958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074953663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069733894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069373804 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069913591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078183135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075815096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069603874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078089376 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077903623 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077854099 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075633174 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075188112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069823663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069522396 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066022846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082869566 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06965449 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077610039 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07024048 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069387353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06985612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077121054 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078051818 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075655016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069850371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078638952 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075198683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070113097 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077722623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075912246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068647449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077842287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070304552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08356343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075580259 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07721675 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068948516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076262182 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078457084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074389103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079087952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070687804 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074569411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070070902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070748819 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086194415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076154772 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077678382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078820269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078999465 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077984952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085577479 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075870293 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077296213 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075448018 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076040356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077384163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076380637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076985194 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076881285 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075697879 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077680615 seconds)
  done (took 6.472521237 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103989015 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066556629 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069715326 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07680418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077844746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070302276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070520139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070127638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070171041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067322575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108360823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070705659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077575999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077296312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070321729 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070515448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0703335 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077695461 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066464849 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085799363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069872244 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077393982 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076898894 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078297075 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076916199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075801867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070079435 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070166805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069866967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070208493 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074440258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070228442 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078422826 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066828917 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077161329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069949056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069959172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074585103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069796595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075193375 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077894778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083011817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070451242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069777909 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075902544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069850306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070046543 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066682066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0701032 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066892772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075810779 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075670319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076100336 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07795285 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070369383 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070422945 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070496584 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070487781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070458251 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075729059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07835804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070541358 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085988655 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071103362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070223741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077782966 seconds)
  done (took 6.392617601 seconds)
done (took 133.564003285 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187429534 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165753498 seconds)
  done (took 1.834742506 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069462099 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098789748 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077723311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128418948 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066949386 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100741219 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099649228 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078314515 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06687486 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066418119 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066211605 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068993379 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131909632 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06627347 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066625453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068727782 seconds)
  done (took 2.816598777 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09896674 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16295901 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10332021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064937653 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099698231 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072559786 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065585728 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075479798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070822983 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065619535 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073450925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070956858 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065098538 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07051985 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071709107 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073855801 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065365695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072844639 seconds)
  done (took 2.94225228 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099395724 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091747332 seconds)
  done (took 1.696170912 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156734467 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10580078 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145914917 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.357623901 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164952464 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148732386 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14389136 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142806092 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116955542 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13956514 seconds)
  done (took 3.125986559 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100092984 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154630726 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268143025 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118428308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073216845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094344112 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119643252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079147625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080369708 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079922585 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080206802 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076819391 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100066095 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074128782 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073730866 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076464437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104555306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073424142 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074909798 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076546444 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100925199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066747323 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074328059 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072925842 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077565787 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077489851 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066375427 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066491821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077294573 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075128157 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077611576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094992783 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077416639 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106259014 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070960729 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107175362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077420808 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074563749 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075126247 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07401897 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078508177 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078657022 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073188028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076214269 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065738656 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076640672 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065923385 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065743875 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078764884 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066892698 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078079596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076795269 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105975818 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067859844 seconds)
  done (took 6.146049691 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103936564 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106639156 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071714037 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113586139 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103305785 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07296708 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103320858 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095799886 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.1042328 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070283185 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068781145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070783135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081910717 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082688102 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115391722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10751385 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074462935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071321451 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1068619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105346791 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068626316 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098139045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092033769 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104418899 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068585518 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070313428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068451873 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071100253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077119747 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079120188 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070130108 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080848597 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085338659 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078546691 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067939945 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069043859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068183636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07976131 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079543576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078926009 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078142092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067990123 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068297997 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07097891 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070217764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068182002 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079067086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08050807 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078922804 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070005286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07112576 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068848795 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069975144 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080187272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077820709 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081187599 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080375077 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069319073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069452198 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072657352 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081164484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079449093 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079835171 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069474489 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079037832 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068591415 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080395027 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084542255 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069138447 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07019372 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068677457 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069502088 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069931297 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077516276 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077523616 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070354797 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06958805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068909319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079649288 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07812448 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067956037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076907725 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067967734 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068800778 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070428912 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06974683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077580483 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080387521 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06998334 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068657445 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069262477 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068754239 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067343078 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07690763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079895766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080339593 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07859127 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069828575 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.0794315 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078769371 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070358079 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079583581 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069041562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070884662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069823621 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078936158 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077836444 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079840686 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.19820486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06979618 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078906063 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080707525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069447362 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078906144 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080944872 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079131851 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069790602 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082204275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068982316 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079930351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070662347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080617065 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069742691 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079752287 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069477224 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069131285 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069682961 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079217603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073594045 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069691809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06989348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070355357 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078786006 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082848512 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070839961 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078857428 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079542023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071301397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079840208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069276739 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079503691 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069599699 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070573194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067458181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082055394 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069512459 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069210033 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070345837 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080690467 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06904711 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081793305 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0788055 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069139181 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082619014 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080693325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07731078 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08101958 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071314327 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069461472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069959344 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070530761 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077741633 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079396405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071837364 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070160347 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078176645 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079149732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068534631 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07883228 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079007646 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078953935 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069094351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070079861 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081033741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08113427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07878469 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078599276 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078308641 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06862976 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077434503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078273969 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068450036 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084661451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068850932 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083533952 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079179441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076702505 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078471269 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080211739 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07959084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080227063 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08327396 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067984716 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067829939 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079975755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068543991 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069485343 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078117186 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069675237 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069423309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082717812 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068583366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079404034 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068124637 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078727751 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067364827 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07030404 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084060576 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068339663 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070117023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079661145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069799233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078276769 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08028705 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079001614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068522939 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0703956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210851587 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079579581 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068770653 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068983249 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071636838 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078911277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078084838 seconds)
  done (took 18.898625848 seconds)
done (took 38.966289879 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209979146 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152860901 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182532537 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118775627 seconds)
  done (took 2.254408606 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11891534 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102298322 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093119234 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06553865 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099223195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064892433 seconds)
  done (took 2.079352069 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312171602 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210716061 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188637777 seconds)
  done (took 2.245696169 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202196734 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189125679 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417487914 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262762653 seconds)
  done (took 2.720610864 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144166431 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088619195 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067188803 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084158479 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133917208 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160608836 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100610091 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125793456 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078758611 seconds)
  done (took 2.571786321 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149873088 seconds)
done (took 13.553279857 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.256266361 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22473934 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.199623973 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095802753 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090685547 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227186753 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076612628 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083053892 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144590141 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078487979 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073346304 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217759941 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113849436 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.189554574 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104796164 seconds)
    (16/309) benchmarking ("sort", Int8, false)...
    done (took 0.152817856 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081257843 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076200577 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149553618 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097539759 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073499897 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13344166 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072987795 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081593131 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.166850808 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.104100094 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166870251 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089515164 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074766351 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075994252 seconds)
    (31/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139120642 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072695595 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.172329182 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086508483 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.113156953 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051732447 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076611536 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111437199 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093847326 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087876237 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.228582216 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069264744 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071634739 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169374419 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092777494 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071763032 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156187609 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073563084 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159010281 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067020632 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182547397 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085759296 seconds)
    (53/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081336645 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063576618 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068558975 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081225557 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068219806 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.156106931 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067753104 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093003095 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.205276786 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068963763 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073874671 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159159688 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18124479 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052215133 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07719409 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069203682 seconds)
    (69/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099460566 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073227764 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067405467 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162044242 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076209266 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072923311 seconds)
    (75/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062681431 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050814443 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163890349 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054105063 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090877473 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052607652 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092797636 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094454004 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198192641 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072658934 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066816142 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074816039 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205708561 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065616371 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.318283307 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166699261 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187540225 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078715537 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075443221 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051813573 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065501955 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073952457 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076980998 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051698986 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078138969 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092034265 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070876678 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091834515 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187357836 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.11009249 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182606844 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087039066 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144713088 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074113348 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181277302 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05182865 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077890512 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164042553 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074066572 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123886071 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148776886 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074608979 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082619848 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051640932 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.131932084 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073541142 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0519756 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184048092 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.172123286 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155773832 seconds)
    (125/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051293021 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072518365 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077865897 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.138572414 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074866535 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141451499 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053209975 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073492316 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113889153 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07313895 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079732149 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073276716 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089561974 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073769367 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073251017 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205284574 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089489494 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.063719326 seconds)
    (143/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117433761 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072512507 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156392198 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065859505 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065751638 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073564763 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078509357 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066193968 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079493138 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154086741 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068868499 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075300222 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071618761 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07355619 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 0.132651504 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149339437 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172955733 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094304305 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073732516 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089067465 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.287465954 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089040208 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065055544 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062225951 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194660705 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060719637 seconds)
    (169/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10045822 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052326586 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051891303 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05076368 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09383023 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187919063 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073711076 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061289416 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072340098 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065855746 seconds)
    (179/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09820558 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05076857 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088210848 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050821871 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19490314 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075072817 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068090367 seconds)
    (186/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101911427 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095432597 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076046035 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090389238 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064265178 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07579155 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094411256 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072579036 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095075713 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088839747 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052445719 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100096132 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184817274 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051861988 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087620888 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061976481 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051238362 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111775402 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087063237 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073018817 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051748623 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090197444 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070753974 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072004007 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052096842 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06480082 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066737718 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065591875 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069731971 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077858935 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06703281 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051272597 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070615523 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052046023 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065548494 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138010944 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063649812 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05171904 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064863624 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088315566 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142039639 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052571073 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065902755 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065290145 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064042451 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050743683 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100552605 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17665441 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066752083 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153059846 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087228028 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051296601 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053292195 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15066556 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100392132 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.078180778 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064705823 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049917611 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095446232 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193105448 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064464766 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065702889 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080427482 seconds)
    (249/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050556652 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064665495 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051388581 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051797668 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114185467 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065848331 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05094666 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064938706 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05051624 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120308175 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0709283 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050338448 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07302286 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064339895 seconds)
    (263/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051757846 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095842619 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064349559 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049967873 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064709396 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064520131 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072612952 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065521789 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061483131 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051087018 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067193722 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050346193 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100429311 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050483387 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149185886 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087394046 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066525886 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064796476 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065489553 seconds)
    (282/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052666859 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051969061 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072603486 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091017682 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049921188 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065523099 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170535309 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063030111 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062852499 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065354089 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061439381 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050638207 seconds)
    (294/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059853438 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071746876 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060495107 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064139992 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071225785 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065035205 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051982456 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05171222 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071695208 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070422894 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050341433 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127499874 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123515214 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071100522 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050515019 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050263838 seconds)
  done (took 30.945100685 seconds)
done (took 32.490246592 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09356472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094798589 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077434383 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095435961 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08319562 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078493047 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074771721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080900316 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08215845 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083724446 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079672938 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055681577 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076329695 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076254506 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076610798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093106774 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080504822 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075151081 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07413316 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06577429 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074442042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066279201 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067934532 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055085458 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079370665 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073219728 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073325965 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075188006 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066485903 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066437253 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070002002 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074877058 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06623626 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079778825 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072998292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074471406 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075670177 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077709115 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068147382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066550517 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07564175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066431796 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073359041 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074328647 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072246535 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072515562 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074141098 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078205871 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092461161 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069018956 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075831383 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076750918 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076623845 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073942336 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070091553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073510921 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071521428 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09225562 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074087501 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06826559 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074952824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075052365 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071955798 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073533834 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074218657 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076284033 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076604259 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072293814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075727627 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072092506 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065659266 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073645839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069655912 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065951459 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076777011 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078598685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064959933 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072120174 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073868749 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072213317 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065423363 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067684909 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067927581 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072809032 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068396039 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054621363 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069865992 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072543142 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065544965 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073955906 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073372381 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073745457 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067525035 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077211375 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06541877 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071641118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065923053 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066053542 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067811104 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07073908 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065808926 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068006446 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075354483 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067532777 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072575184 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079703429 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066057819 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073765485 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065178895 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065060532 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079999396 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076134221 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066130012 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067617471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064931712 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073693946 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06472338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065607214 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066205036 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066251736 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071746815 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066567009 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068309602 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073595195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079060807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065730837 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070177484 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067839055 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065817635 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072303934 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066026093 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065670388 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067716195 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062721293 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068161796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066464767 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073360414 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067924039 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.208668347 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067880924 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074268262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070979096 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071661967 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072346682 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065569761 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059622499 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068546624 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067717774 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068523573 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066201667 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066986856 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065856489 seconds)
done (took 12.868306723 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069417465 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141133457 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098230038 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096741135 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086964308 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067245795 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07716526 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101682326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068268064 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102107456 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088786338 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086140347 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115019677 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065043377 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066281257 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070087271 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06730576 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082429594 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101222542 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087536415 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115719374 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065386458 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093598004 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090213919 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088901025 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10432562 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069549244 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070310323 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069700317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09313635 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08918761 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070274893 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06689689 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099001708 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094001204 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084599551 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06640147 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084284955 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067205854 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066714861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067780679 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100032768 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080651442 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081391061 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071544006 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069828601 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067328447 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084233841 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090355202 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07959502 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087056631 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101981805 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068995234 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065622228 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064920768 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087130427 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065740413 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06996561 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066373243 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069214195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067001409 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070336373 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081314894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080833064 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070283016 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080097247 seconds)
  done (took 7.005241963 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086387614 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09157383 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084013021 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084788958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065741133 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066270749 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06706381 seconds)
  done (took 2.209957564 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068850952 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088771606 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089786341 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09032526 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082611556 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088462205 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076242595 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0667471 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088735217 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068012052 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08780688 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100976252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070423965 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074428632 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091412341 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066423183 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090987291 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067209602 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069742315 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091022123 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069458183 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096054043 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070428932 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066861517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080974229 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06689373 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114495891 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071126282 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068754629 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070050686 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06513846 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107893739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080791583 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075451474 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067794664 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081745766 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081257051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065496734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083953622 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075607052 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080436958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067171206 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067493213 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065482302 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071042454 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077683865 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067785157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067161808 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069592158 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086743428 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067351884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080549633 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069835228 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07320708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069110305 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073384433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07705331 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06840751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087249498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068289959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083954166 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083259481 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08149526 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083032805 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069143866 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080826187 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080773422 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069841635 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068983025 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070157572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084089006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06500187 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068701292 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077935421 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068569689 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090529411 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090430723 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068624129 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080206099 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06740753 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067040664 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067838365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089722414 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072614575 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066850048 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071046137 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070506174 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06550329 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066345526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071076732 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064785906 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068632536 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069797357 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069674923 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070042332 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083713014 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069539063 seconds)
  done (took 9.023918438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070805064 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068541782 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069523852 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069235408 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068447393 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068064673 seconds)
  done (took 2.100291355 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096287844 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069165755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08122143 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072237712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105220537 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087151812 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087594959 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07834923 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083681268 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079080232 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087681983 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088455643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092550904 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072778451 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087208718 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071797674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08720696 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075296585 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079183846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072706653 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086913329 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07286609 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072967209 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082203069 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076147196 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071881832 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067449934 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078567469 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078530704 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07863124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072133032 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076056756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071100134 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078649172 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087576697 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071246244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072046782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077950366 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071906871 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076171438 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088156602 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072305499 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074029024 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077288128 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078368384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070564956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077282292 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07562423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086420053 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077175266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077955524 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071264328 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075905118 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077018664 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070454167 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077823254 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076972558 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086333887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071837808 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070036243 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068578626 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075385026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077483544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07628033 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078447541 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076995998 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070777714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072547718 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072347181 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071702238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0774381 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068585947 seconds)
  done (took 7.256673295 seconds)
done (took 29.247568915 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538442711 seconds)
  done (took 2.192023418 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620771657 seconds)
  done (took 2.299852464 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.432237866 seconds)
  done (took 8.096494779 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40609907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526168749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722502549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13160708 seconds)
  done (took 3.488417723 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702109398 seconds)
  done (took 2.378238018 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216449732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202724547 seconds)
  done (took 2.099914609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380981177 seconds)
  done (took 2.057943471 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141975807 seconds)
  done (took 2.814283601 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262117618 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176005806 seconds)
  done (took 2.114321957 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.479427501 seconds)
  done (took 2.155896726 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.875706702 seconds)
  done (took 6.552772141 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214823027 seconds)
  done (took 1.933025312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244888085 seconds)
  done (took 1.92019246 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72975181 seconds)
  done (took 3.406972854 seconds)
done (took 45.194795467 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083878433 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081882796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081793525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079010126 seconds)
  done (took 1.988165613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080567118 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073141358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077200355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073466873 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077145356 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073173325 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075099846 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075893087 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073795702 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073946507 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073247861 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073633328 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07563529 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074839335 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07219035 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075772974 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076763748 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073259187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076446284 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073282972 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070827556 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075201186 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075752898 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072152402 seconds)
  done (took 3.473829281 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081109485 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074031146 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075889724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073128896 seconds)
  done (took 1.993200569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08215947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096818557 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090503373 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079276685 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093761166 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086932868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069866277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069560929 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071656875 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078575715 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069070966 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097396562 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08881891 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077669196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080344703 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066130448 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068608317 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08887695 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078418239 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078860331 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07056488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07866333 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069066566 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089228018 seconds)
  done (took 3.602039837 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090171554 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1065556 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081606999 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090034247 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091986855 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065745129 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088727101 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091517653 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127996793 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066058007 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070867865 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065679754 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073380769 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065679549 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081392461 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108466031 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111866397 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06964734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098239465 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065774953 seconds)
  done (took 3.408483097 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073695923 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071008276 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066464796 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069727159 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078083629 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073984269 seconds)
  done (took 2.131306914 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071254903 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067949665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068169399 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06813852 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072690424 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068934255 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066466927 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068358691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068290035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06814567 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067912347 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066371557 seconds)
  done (took 2.513351499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206886084 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069803653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070215186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066985331 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071294828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066795133 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082214497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068562616 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092848085 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066966024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06694436 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068856533 seconds)
  done (took 2.690546037 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210595113 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077166918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240349096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15142128 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11166539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115933924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113297402 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11542514 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142824087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102098087 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169707412 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167967045 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108238792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138500859 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089411453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101803139 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154480271 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164170275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105349661 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167879399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146247365 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12732719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153807355 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10292195 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106761403 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122218692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072115465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080710614 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171219104 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133609205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145212631 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111882735 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092761631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17755152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172534862 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14159613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148076316 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085238247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106270233 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136815279 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204047347 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090600684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164964587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110358935 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220768735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133924921 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121470053 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121458775 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106159257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091230348 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148232185 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185911758 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137434639 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088816727 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125502728 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113557655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115135714 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11433362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184156409 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16393765 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128293142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071803439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108825906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155530026 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134784836 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108976666 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126106498 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092017814 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136562685 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1566276 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1207945 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146269764 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118552219 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08977701 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12036805 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141221767 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128433329 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161973475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125402659 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073740953 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124435701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102405884 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081503283 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14636435 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075975186 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176849203 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099870991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109962164 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126484026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111445279 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110737483 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161707953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146790012 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104200781 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065790424 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24866294 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122810725 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148006408 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089277801 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110636861 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11769121 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078053228 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137002597 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075836283 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123955893 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078908761 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129612772 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131429717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078184403 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123030873 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105231326 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101534969 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133707546 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162551187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088976351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082502249 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169732967 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123391859 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10480292 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145372984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158118071 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1027381 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101841015 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150426267 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180402468 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090039791 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164061843 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106928322 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084115216 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088699514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12433303 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112330534 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124233054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082573678 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118435942 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169765338 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075453658 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096068234 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134544093 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079706812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081111796 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10645241 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105898664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09696957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101024946 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104584037 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138066822 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12528213 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107037211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125721348 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099280934 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318054488 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089064125 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103054212 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104424443 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07048908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136447209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158976518 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08076964 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164707763 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124819312 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118016947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120087416 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084187729 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141540385 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080093035 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071730473 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144815495 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112275429 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111561547 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152309185 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117344639 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127310323 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121279957 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134234406 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132114906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132399825 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106616245 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089230662 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112638233 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127478681 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073381802 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091472204 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081021662 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105516829 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096305411 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083257536 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141692567 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124736936 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110235286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113214109 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097337754 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148597065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07678598 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129018445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120108678 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096816698 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153705383 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154193272 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133362688 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10028336 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13920768 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071236407 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07472286 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089193274 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124089592 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0831238 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084062383 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262445713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150204946 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131879442 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137554952 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124420526 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121652676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157758325 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070861223 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117811446 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150247561 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121816453 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105061139 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090897471 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099746633 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144076632 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10884033 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183290254 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118481655 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124714209 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154687699 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102444813 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080331778 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10422852 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137224749 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104005717 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145064575 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100899487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08921073 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11069862 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07485077 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0990862 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127589348 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119263384 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135685058 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116510117 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133239308 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078474199 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116341557 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122386371 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122171703 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064321019 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121476752 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162722258 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09579516 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120232728 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155700674 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080391943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13595147 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17804984 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145974626 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085975 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255693185 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121457353 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130325013 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121860755 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141787769 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107814162 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137626767 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110630744 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086783522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088835249 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099348911 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105477291 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096459433 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10596804 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114381029 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096747662 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132461677 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103737802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111294735 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119164717 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098747082 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091693769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096479234 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177864118 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119689669 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171198204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100581785 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14524859 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164646248 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07576538 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079564094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078170409 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141166212 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084558527 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130690319 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107837354 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118453024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124825286 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143607608 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096201811 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069155122 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110067422 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133428167 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124914279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099093145 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103784746 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165019707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10198177 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079687616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114268835 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116635077 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103919313 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174276745 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062249348 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107355276 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077261312 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081383722 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129292981 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297419057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08211725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104388262 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122228861 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113519603 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12920436 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101590905 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10929611 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127842073 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151815212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129725115 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09097247 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112275817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128669247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159514595 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106600891 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096955507 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174035501 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153153571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161921161 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088062277 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116056379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115558652 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110860702 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138514022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084442412 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164721749 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083492376 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137925709 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104275896 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090012154 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129123229 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109029262 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088851557 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14914212 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117813576 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0833025 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078150529 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11819506 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121290692 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106379056 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076128557 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139425572 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074296128 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13325552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16193504 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081571251 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109161597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098334637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080308083 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107379503 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103012827 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088202121 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241964076 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177567952 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088981481 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151626655 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134466037 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114860589 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13785853 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103205477 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640350024 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079412191 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154321262 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117311701 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177986285 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100645251 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120253325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111833796 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123613581 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145722331 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105614753 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183047663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133738142 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117254686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081215398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103727199 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104572404 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088203498 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108240575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115122146 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115922872 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093371504 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116853632 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12447466 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08267092 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096711288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15764163 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11715268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144465444 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141485065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086451927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118661604 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141460023 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08056727 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121195173 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152702365 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107202989 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100651814 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08184747 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101484636 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160728201 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074301489 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16009108 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12016451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256958227 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114349419 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114397506 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132398687 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108186404 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123151479 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092940994 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110736851 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114528269 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083739576 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078417837 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10762672 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111165379 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100360047 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097906406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100189016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154165849 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072278802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098772289 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115761239 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145089393 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175515711 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089637748 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083054471 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119419483 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114431852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113309726 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122042465 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080073102 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082103156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08135561 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078801266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110234456 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114290059 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116100876 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112771478 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163460618 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083515644 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232322888 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096286415 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106136479 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070428667 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078953659 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097076634 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099151077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108043528 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110297632 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159844914 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096246859 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090310488 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091807106 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074712111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084132353 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129994109 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111095378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119842753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099995797 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063069379 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109171503 seconds)
  done (took 59.598230812 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112828944 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084632948 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095087483 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145781447 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1232178 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203976155 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154868069 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189666917 seconds)
  done (took 2.920738725 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068538505 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09717739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103315462 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084293455 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067587756 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070237092 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234387627 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082278938 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067137975 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099214621 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079500491 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069838256 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429707523 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066931813 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068231654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062022219 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068862701 seconds)
  done (took 3.606700928 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394922542 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613084644 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353929753 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073137377 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.507883298 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085793893 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.17075603 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129102674 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073724098 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541150435 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406858628 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12630175 seconds)
  done (took 18.270627703 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078503597 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070690807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084651838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085499447 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073130381 seconds)
  done (took 2.184565396 seconds)
done (took 110.112006551 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084564795 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.605724834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054091956 seconds)
  done (took 2.478306872 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087171113 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086051833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087326996 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084760642 seconds)
  done (took 2.145144404 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077970212 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07712123 seconds)
  done (took 1.947907783 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233959653 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165285948 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097127566 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087876553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080165579 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081101175 seconds)
  done (took 2.045103278 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075072208 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07534293 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073536517 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077256745 seconds)
  done (took 2.090754632 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0797393 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053309899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055041992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058818082 seconds)
  done (took 2.038016347 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090191573 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080626982 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080096843 seconds)
  done (took 2.041463174 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106589512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086783074 seconds)
  done (took 1.986237859 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085732074 seconds)
  done (took 1.877919338 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10335962 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102972933 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133893182 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112106764 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142034274 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110624337 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086140984 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086422828 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077581558 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087060344 seconds)
  done (took 2.833849713 seconds)
done (took 23.853997666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083362172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463779666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360666605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090747447 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670600304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357507864 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028822639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093525407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116188321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068728508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085784706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649173227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98624067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.420059898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969343761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324436658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649301535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06880594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068564161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068673072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012835896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068611786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06871048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069171572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64895441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373291555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069577773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324204252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068729447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070185002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356270653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068941887 seconds)
  done (took 16.601762971 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073739251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12210206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074150825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086226199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071400737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070156309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072464338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070361399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123980896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068693885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086045502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068801557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090518052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069265666 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08897944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069400645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069440883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069900996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06915584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069120871 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088187361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069012648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068843487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069535293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068931909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081575453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06980983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069139442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069622051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071463251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072059105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069628394 seconds)
  done (took 4.26122302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122860394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129374672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075424055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106184862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115472128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070607087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149468509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094743408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131296671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068769558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086060372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069012148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103545193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069271111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089509806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068845854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069860697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069602518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069622318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069053057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088480179 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068998773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069049862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070036792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069671192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08253125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069398224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069071042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069635277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071129743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072017131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069252552 seconds)
  done (took 4.511460954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075918181 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077595266 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084675006 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085298918 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07098976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073115524 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074125735 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070651166 seconds)
  done (took 2.427675564 seconds)
done (took 29.604437392 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08222463 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070204682 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073067304 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083134023 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073595548 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079728543 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068546016 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077056418 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073946249 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.0742063 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076225009 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068499094 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071763724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06785746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075559366 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068855939 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080396957 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072569284 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079856085 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080204802 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070811303 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073704123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075750058 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07982664 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080297564 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080729581 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078788319 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073603522 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069740598 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071623337 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077584867 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085669714 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069214691 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080586582 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068543991 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068242811 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072415895 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068145285 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080254199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077755822 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070817791 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077611205 seconds)
  done (took 4.939094782 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091606862 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094848911 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085489257 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062690402 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067670904 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066974747 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090152953 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060664052 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059923582 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089867246 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056141265 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060360652 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066867441 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054282237 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061346144 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057611072 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062673728 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056305203 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061309787 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060457991 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089936327 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054458585 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078543778 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06416882 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056643348 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062211626 seconds)
  done (took 3.594037654 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077615437 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08686978 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091519498 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13318096 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107094433 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080666244 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080544688 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096087294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090177821 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068621788 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072358435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094175507 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090378311 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07441894 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068282867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087779631 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084407467 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070636201 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075301047 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096738877 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088504664 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087033772 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098539843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085025122 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068040248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071155193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072918476 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082650776 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074091201 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077975695 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072615901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072704112 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070809694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081034647 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072989226 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07089759 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094107911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079255207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080716943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070003714 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077224042 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070711955 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094739367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128913883 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068475821 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0757818 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072501738 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078811087 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069028689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090225751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081057721 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068563358 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071768698 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068424182 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068812249 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082819864 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071289096 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071299027 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078100985 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075822511 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094456289 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073902533 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084933751 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068443522 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077666936 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068355191 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070170339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06817014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097829153 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070821504 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113499143 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070299944 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069987423 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078102465 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077765705 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075194522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069801364 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085409558 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07960704 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07301939 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078956668 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072200138 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072314835 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093269508 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071153038 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070380973 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070023379 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07453373 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071973394 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070186078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082199972 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069846283 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072396479 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086537979 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068322056 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070120633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07439196 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073265934 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068021046 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079963471 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073366504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069914879 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078281405 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068554719 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071496028 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081636181 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074698869 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068172826 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072485414 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073924411 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069651079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070262948 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071198808 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070803535 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078020032 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075907272 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073526392 seconds)
  done (took 10.985016697 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.172155588 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159792757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071647065 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150612082 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077821778 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080568812 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152725409 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097380145 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069845432 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06988574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069332413 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111885262 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107703174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117227898 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080192548 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068698165 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086563932 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116336947 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154569247 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148784657 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086820128 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078373222 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071007143 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06984111 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07142663 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079580163 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086835085 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077604113 seconds)
  done (took 4.635203681 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084651454 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106415918 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076308622 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092048617 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092355939 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069249503 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071264903 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07092642 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082680208 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079629269 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068336066 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074531045 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075132089 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072448791 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069879534 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07579858 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07577391 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070483528 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072913513 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074464765 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079384365 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093150131 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072582835 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068282028 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073973008 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068100259 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064332182 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085124877 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069122732 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097711256 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066565066 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074232897 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082999756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07047825 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070181925 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069023805 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068360319 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068342015 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071690597 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06705525 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067581888 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057869702 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067998879 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079834965 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075966076 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056970578 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073365497 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073729384 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074159343 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06634637 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071776025 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071687178 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072130445 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076499753 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072640005 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073600565 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069609759 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075042837 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077972685 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068937897 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065729971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067054899 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072881603 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066384948 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07771936 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07361434 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067409904 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068064474 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070749834 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075501857 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068935071 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072715881 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066550142 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071126041 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073386458 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070553344 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070500268 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067340117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06860906 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069938378 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056109254 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069170154 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053999642 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071996349 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067008359 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067119911 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069254315 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074421569 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080538497 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0701388 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075001115 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070530697 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068395412 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071980605 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061343604 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071459226 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084523392 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0833849 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068753728 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066542206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082670686 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073713328 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068110861 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05676864 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074415463 seconds)
  done (took 9.466191143 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094515354 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07129581 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086074513 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092491081 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088617818 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077443926 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079069213 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070569446 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084114253 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074664403 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077970123 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069294408 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080272415 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07973667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071188682 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07945961 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073244969 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086460026 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084041952 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069728348 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078059476 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081749832 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091533821 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083300227 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082250499 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083502756 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09181166 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078792694 seconds)
  done (took 4.120835998 seconds)
done (took 39.549752012 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.912070454 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.074652204 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.900077721 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.275191774 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.208792426 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.02100792 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.93339374 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.892123822 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.094983306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.930849398 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.093705796 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.019859286 seconds)
done (took 67.18143716 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.956130726 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.029733746 seconds)
    (2/2) benchmarking "String"...
    done (took 2.119523971 seconds)
  done (took 5.97403721 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.19383261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.520733735 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.139344703 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.886502768 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.892569974 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.228622752 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.677405163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.39666472 seconds)
  done (took 31.566450965 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.065829096 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.130834289 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.592683154 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.62761712 seconds)
  done (took 16.295928221 seconds)
done (took 66.01021942 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.890976262 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.924066572 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.89568725 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.872959787 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.948028325 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.901681985 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.277620782 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.922418091 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.888759474 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.881734981 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.889468835 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.334187404 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.887868263 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.387341533 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.88961699 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.899016907 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.938770797 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.495346242 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.047928522 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.900148348 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.902245268 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.932679736 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.894306357 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.899457627 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.912699972 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.889475257 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.324458365 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.903685591 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.515197814 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.892359866 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.918683593 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.424523465 seconds)
  done (took 208.306929915 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.889885355 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.064644551 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.082373194 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.919437645 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.563770119 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.070502302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.001376083 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.582138268 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.891326773 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.913055876 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.170683663 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.88740712 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.17851549 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.838991411 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.922914344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.892270317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.032379073 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.166561434 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.92276628 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.054472972 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.891147064 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.110157369 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.064452678 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.123486607 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.903630988 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.981887302 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.906628174 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.896406933 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.25009919 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.026941319 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.891296008 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.935701185 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.122790875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.766240511 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.903405454 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.916531952 seconds)
  done (took 175.563546064 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.285706592 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.892417031 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.890217542 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.891353974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.903553146 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.888619827 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.013422005 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.015231092 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.889074877 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.492864989 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.509651708 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.942630678 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.730300256 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.891537977 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.961246047 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.905018193 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.890310639 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.91044327 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.91894624 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.894169579 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.893164604 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.017437261 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.905027208 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.958407499 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.898302035 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.892403944 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.898523761 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.264413041 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.890710693 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.898286292 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.151650346 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.89136224 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.892371529 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786916061 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.705344859 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.983943143 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.892861395 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.898832029 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.891097753 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.111900919 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.891607242 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.893129566 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.893773671 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.897258899 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.068954758 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.892475946 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.018035083 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.892935046 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.404859316 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.89240027 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.892649926 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.623064155 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.582534541 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.894926571 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.89301375 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.891424261 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.895336326 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.895096592 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.894210654 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.899369789 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.539844071 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.968115463 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.893263756 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.896974024 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.899552574 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.892030478 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.894330861 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.914025948 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.892932013 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.97931392 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.954891371 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.023339892 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.01598709 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.894885198 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.96255427 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.988358436 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.894091747 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.894487124 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.895222976 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.894121042 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.97529559 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.893444942 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.018484955 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.901108096 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.895779792 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.946483721 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.966195688 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.894695072 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.779246674 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.894762302 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.896080947 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.23651815 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.961872873 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.894217815 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.896504619 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.895516088 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.027474869 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.016995484 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.685321092 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.895297884 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.648699334 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.897314844 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.072414438 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.894851239 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.076018986 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.897342576 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.977351734 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.899289212 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.899280536 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.896600908 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.928985331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.896763156 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.957150244 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.894972135 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.270291786 seconds)
  done (took 415.967690238 seconds)
done (took 804.008922191 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.593061966 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.54668661 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.647488182 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.572393103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.538004281 seconds)
  done (took 14.728387872 seconds)
done (took 16.55967395 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.986125563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990320067 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.920633951 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.987171277 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.917705553 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985810166 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969332149 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.922249286 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.954650173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.921771042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.957604765 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.921844313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.910888292 seconds)
  done (took 27.17840238 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.131672717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.127599249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.971088879 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.125517355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.946397318 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.12402129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.059623065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.048442788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.048491357 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.915552961 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.911023911 seconds)
  done (took 24.243704467 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.134401695 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.137500046 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.97728074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.153539876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.95050425 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.140293035 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.059517365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.051437783 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.054317843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.915491039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.914874564 seconds)
  done (took 24.323256217 seconds)
done (took 77.577486872 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.909238087 seconds)
  done (took 3.742120651 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.934120383 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.091607416 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.914242879 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.91401914 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.909944572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.910144842 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.915192922 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.90979136 seconds)
  done (took 17.334951693 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.908270765 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.905725007 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.907946689 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.905739155 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.908628366 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.907275732 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.909676792 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.906528309 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.909551188 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.909150501 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.906554233 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.909231315 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.906599196 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.908803677 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.907362728 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.909060355 seconds)
  done (took 32.362120921 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.906589871 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.907423917 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.905852295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.906315749 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.906553419 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.90708305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.906747334 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.905002422 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.905399319 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.906598461 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.907515146 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.907304125 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.908600748 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.906785221 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.905827649 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.908289679 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.90789768 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.907889808 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.912220522 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.906930278 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.90734498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.908232369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.909332301 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.907925545 seconds)
  done (took 47.613999448 seconds)
done (took 102.8865799 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.814336939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.284932365 seconds)
  done (took 8.934209128 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.912830476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.911335416 seconds)
  done (took 5.693882342 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.909548921 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.91220799 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.909939131 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.911825294 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.911097044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.911034424 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.910962429 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.911197028 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.911636498 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.911908223 seconds)
  done (took 20.949305497 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.910054145 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.912535802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.910694433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.913194817 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.911795387 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.909846093 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.911946324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.91205757 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.912166437 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.909737384 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.911523655 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.910423245 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.912884188 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.910056453 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.911057593 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.90933356 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.910626605 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.909758072 seconds)
  done (took 36.238280294 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.911921925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.91357336 seconds)
  done (took 5.665507933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.908502846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.909167393 seconds)
    (3/7) benchmarking "month"...
    done (took 1.908500488 seconds)
    (4/7) benchmarking "year"...
    done (took 1.909465911 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.909439899 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.90982652 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.908519631 seconds)
  done (took 15.201765299 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.912228748 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.07139757 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.141649827 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.544904885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.914461242 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.917103638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.827788334 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.916777485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.918038115 seconds)
  done (took 21.003618673 seconds)
done (took 115.520086794 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.728552492 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.910508409 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.256401155 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.964575804 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.95998838 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.256965611 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.908104232 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.217348891 seconds)
done (took 44.041447709 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.999882931 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.479973175 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.510378748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.438625243 seconds)
  done (took 13.268587733 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.897576876 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.444614715 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.943998034 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.491314439 seconds)
  done (took 20.640679601 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.275172022 seconds)
    (2/2) benchmarking "read"...
    done (took 2.25169035 seconds)
  done (took 6.371981853 seconds)
done (took 49.121795835 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913168498 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.914608903 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.912092277 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.913873804 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.910592847 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.911507841 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.915817698 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.914774311 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.914683789 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.913790685 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914631051 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.911806157 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.912470445 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.914861558 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914559503 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.914056764 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.911251455 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.913564218 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.911170301 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.912847299 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.913943641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.913671641 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.911999808 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.913471989 seconds)
  done (took 47.760146535 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.914823054 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.912679519 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.915977746 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.915663249 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.914506778 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.916073317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.915329468 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.913640794 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.917015082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.915495681 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.912845823 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.91237099 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.916010864 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.915555073 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.917988465 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.914440749 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.918303347 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.914702182 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.91588586 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.915795868 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.916902255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.914475516 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.915293421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.918014482 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.915506802 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.917023038 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.916404827 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.916121119 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.918735156 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.915767792 seconds)
  done (took 59.312061177 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.921895205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.926116894 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.917118258 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.916693004 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.916534961 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.915726024 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.917392358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.918147329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.916706695 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.916685536 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.916292187 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.917349036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.918450191 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.916753311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.917646365 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.918664773 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.91709798 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.91639579 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.917965054 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.9184822 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.918512458 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.918210681 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.916958276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.918878792 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.917421564 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.918113786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.919777398 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.918246271 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.919653192 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.917938925 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.919087592 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.91765203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.918313298 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.917940807 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.918529839 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.918946454 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.926140745 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.926892966 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.918405656 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.918928188 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.918986869 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.919416266 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.917466838 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.919328488 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.918555668 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.919045515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.919284213 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.920747342 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.919295132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.919104021 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.919498964 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.918916592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.919222685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.919861956 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.92092891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.919793749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.918922942 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.91918746 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.91980824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.921089218 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.920013536 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.919601129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.920955964 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.921433084 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.920425755 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.920646498 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.9210682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.92207094 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.920526151 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.920513068 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.921349211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.920532119 seconds)
  done (took 140.026734866 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.919720969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.918495172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.917705615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.918568676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.916731668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.922097665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.919532965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921150412 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918539212 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.920917244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921670785 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.919070593 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917879868 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.922713245 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921539329 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.918259956 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.920179454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.92031492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.92153892 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.921964605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.922240097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.919197778 seconds)
  done (took 44.087430843 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921932634 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.922031672 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.919306378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.922898593 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.919061553 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.921916408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.923050447 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.923536949 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923615723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.919503473 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.920617155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924793614 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.91920555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921190927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.919738174 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.920595074 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.924213005 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.921383688 seconds)
  done (took 36.436727993 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.920553198 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.920279667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.92322738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.920562949 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.920993376 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.923780621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.921208897 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.925026143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.924054424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.919897853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.924109018 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.924389133 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.923252834 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92024039 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923091076 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.920957272 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.922959373 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92233308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924245251 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.922908332 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.921233078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.924172647 seconds)
  done (took 44.143241111 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924750885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.925095135 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.922298395 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.920916087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.921898937 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.924829321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.923935082 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.921968382 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.923737171 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.924177611 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.921847111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.92520092 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.922325674 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922499462 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.922327745 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922361706 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.925732149 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.922678795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.925378359 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.922928988 seconds)
  done (took 40.317387989 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926701388 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.927129851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.927074172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.924818153 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.926336935 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.926414108 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92650886 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.925675214 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.926157763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.927012968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.927137189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.927365218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927895595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.927402785 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.926384337 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930425545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.927595656 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.928363256 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.928297444 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.926515432 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.928760301 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926171876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.927176802 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.92714895 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930542851 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.927028027 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.927482089 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.92654302 seconds)
  done (took 55.81353049 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.926377746 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.928414007 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.925029619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.924457658 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.924159946 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.923568699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.9232066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.924345245 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.927287022 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.924427937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.927863571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.928320676 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.927251991 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.92816823 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.928880691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.928312318 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92772946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.925792879 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925227999 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.924202544 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.928766509 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.928273801 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.927316378 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.92493369 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.924153292 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.927531429 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925300985 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.925268159 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.928318897 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.925268513 seconds)
  done (took 59.641149677 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.946903699 seconds)
    (2/2) benchmarking "in"...
    done (took 1.947493253 seconds)
  done (took 5.748984945 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.926578647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.929046093 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.927180938 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.923993399 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.926183099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.928899285 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.929180523 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.925793178 seconds)
  done (took 17.271853544 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.928722912 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.931050404 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.929102275 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.930138296 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.930817958 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.92914542 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.934720095 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.930471604 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.930048528 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.930433428 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.936432397 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.938415834 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.932817803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929768808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.929656469 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.930005241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.92857637 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.932458269 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.930462597 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.929640678 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.932070566 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.932812618 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.930430439 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.925762231 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.930515026 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.940856353 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.933644193 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.928633084 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.929326883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.933665739 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.92863904 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.92625664 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.932628317 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.931158599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.930092523 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.932566913 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.936357588 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.929960088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.934700042 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.932528556 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.929080851 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.927179688 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.932152441 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.931467304 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.93221768 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.932214677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.930307727 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.928986615 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.932147679 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.934107213 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.936297055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.931154496 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.92933109 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.935408445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.931705056 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.937928758 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.932660583 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.933834899 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.941154355 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.940940521 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.945097221 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.94018235 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.933917573 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.932279343 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.940256805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.957876521 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.937867038 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.929086233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.929506011 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.931729226 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.938838298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.945664076 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.942958154 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.93538975 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.933132515 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.933236959 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.93173589 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.932705937 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.938727608 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.934835151 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.933113913 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.934829903 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.942607727 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.956781694 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.93317712 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.933683887 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.933097835 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.935425564 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.934743673 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.9438283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.936874237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.933104483 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.932557696 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.934397229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.933098456 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.937210376 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.933867081 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.935415424 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.930914125 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.933629458 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.934247861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.937675705 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.943963523 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.934868455 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.93563058 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.939954589 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.934062775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.934354138 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.939859988 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.936425238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.936979099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.93470336 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.942148064 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.931901854 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.937227576 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.943810278 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.937681596 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.935368302 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.935387955 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.936123815 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.94490054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.963758191 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.935511313 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.935961852 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.941231371 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.949721095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.937249442 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.939413196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.934930165 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.932634921 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.932860321 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.936315912 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.936188036 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.935979099 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.936119883 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.936015097 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.932510905 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.936314811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.937680515 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.936386732 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.938132762 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.935867914 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.936333625 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.939763811 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.937586485 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.935922819 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.94163948 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.935285441 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.937795192 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.935530949 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.934145818 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.936779554 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.93641347 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.938348283 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.93752829 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.938299797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.934633365 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.938952581 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.936978146 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.937012316 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.937085848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.938605244 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.941793307 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.938955926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.941362981 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.935514355 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.933577474 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.935748946 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.936146783 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.936794662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.937159288 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.936798686 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.942188675 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.946921637 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.936607035 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.939561813 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.938665146 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.938678137 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.93898241 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.938955845 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.939745177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.947197084 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.939295182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.942559436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.938605806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.938598428 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.938206866 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.938803614 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.939311653 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.939863454 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.94025611 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.947270037 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.95212454 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.948512825 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.940418986 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.943214464 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.940477586 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.944449551 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.941895354 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.940835816 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.939883035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.940058421 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.938654163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.940387412 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.940314129 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.940381336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.937981205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.938803271 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.939456151 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.940501532 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.938760224 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.937726144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.941336324 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.936193461 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.939925907 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.94105778 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.937997668 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.937563094 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.938170776 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.939925314 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.939000366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.940415777 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.945749494 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.935924501 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.94152682 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.940295573 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.938460876 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.937517853 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.938903119 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.941094133 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.938431595 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.946807039 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.941219797 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.942122444 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.946932175 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.940190707 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.939646653 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.943434559 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.941686809 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.937501184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.942207384 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.947729131 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.940071715 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.942559351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.94051617 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.939395366 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.942631495 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.949469885 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.939025201 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.941859486 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.94147948 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.942968542 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.939973287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.94370138 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.942589256 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.940568798 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.943458561 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.940880142 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.942229874 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.942260919 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.943124185 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.942472035 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.94269113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.94527933 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.952070871 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.946786955 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.941671186 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.945578647 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.942700907 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.946372504 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.940577377 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.942446663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.943137115 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.956477427 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.953228811 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.947938121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.942696003 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.941553136 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.947272429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.942394803 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.947331738 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.941828193 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.942170035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.945311336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.942404038 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.940343003 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.943239972 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.942241571 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.94381806 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.943806304 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.947390978 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.942941526 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.94203823 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.944293736 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.943825004 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.944244947 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.9448304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.944330068 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.944229504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.944820813 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.943294959 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.943717735 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.951897367 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.943800078 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.949283979 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.946988417 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.945954159 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.945068769 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.946761036 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.948106846 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.948759979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.955786649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.947998839 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.95533809 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.945574276 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.953925914 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.946484053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.946629035 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.955628907 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.94124845 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.943108234 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.944483127 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.94620517 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.9497525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.944757193 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.945512488 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.948963563 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.946250152 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.945841009 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.946441684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.946116535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.945888277 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.9483261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.951702345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.946985821 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.948595345 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.947419199 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.941720421 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.947066561 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.94496797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.944399154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.949771608 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.947376529 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.945587301 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.946000572 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.947631182 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.947612147 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.946850705 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.944746756 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.943502641 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.947354802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952825624 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.947273502 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.95293214 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.946111115 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.953264227 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.948078938 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.952059324 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.948052414 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.946503855 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.948536151 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.947328537 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.949239469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.947404211 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.949958084 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.94866865 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.948780713 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.952712002 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.949813631 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.951111917 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.9468563 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.94871091 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.948481256 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.956940254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.975661518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.948077543 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.952755525 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.945860657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.950376147 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.954960688 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.94787411 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.946296516 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.951582962 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.960086494 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.955911344 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.94767017 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.949640361 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.945907747 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.950663644 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.948223725 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.9491499 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.950941686 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.949156571 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.950090399 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.949427905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.952046387 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.948488865 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.950331782 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.949528758 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.950159593 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.959475949 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.948908795 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.949884023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.9517038 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.947707588 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.949927303 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.948718421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.951486771 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.94988627 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.949942939 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.951445065 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.956668443 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.957200192 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.953812454 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.950276815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.953610014 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.951630856 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.950959561 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.952077162 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.95219114 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.952761275 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.951737612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.952096751 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.952013197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.951448097 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.951749663 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.951749444 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.951153571 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.955833172 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.958398979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.952596225 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.95134622 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.954278175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.952939773 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.949689862 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.950613229 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.959167296 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.953967508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.963014914 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.961656955 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.958240323 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.9535249 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.954521428 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.958733917 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.950375245 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.953784712 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.953238142 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.952680967 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.952969439 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.954949865 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.953856377 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.959071813 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.953688834 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.956876113 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.958618139 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.953252737 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.952233151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.95247082 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.958132618 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.955418867 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.952887393 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.952426604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.954543593 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.958030627 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.954280584 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.954025265 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.954610446 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.952199073 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.961398175 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.960873344 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.953129955 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.954344126 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.949437369 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.952883535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.954994966 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.953342756 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.950255154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.953002553 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.954463262 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.957651657 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.962602031 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.95063997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.956610707 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.956859468 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.958159275 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.955304228 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.952098672 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.950894161 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.951352823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.955378212 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.955554761 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.955804189 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.959599225 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.955964937 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.955519588 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.956071689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.954906931 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.958489434 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.965481296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.963754711 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.951694488 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.955236936 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.95666628 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.957496319 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.956987064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.957010266 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.957702297 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.957879279 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.955529932 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.955476301 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.954261548 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.958692243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.971216391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.955286108 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.958361609 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.959670339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.958178612 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.955229439 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.953109452 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.954473159 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.957619214 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.95819569 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.965597984 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.958128497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.961865931 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.954949032 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.957105389 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.961180545 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.958814768 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.964673913 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.960401368 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.956983352 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.958433144 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.962506999 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.974481376 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.957502005 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.966722158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.987231837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.956100932 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.95752131 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.960908751 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.955505201 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.959285483 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.959326441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.958756048 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.957649262 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.957962563 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.956136298 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.958209979 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.96516035 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.958458478 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.957226098 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.958447135 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.95782357 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.959960576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.955880863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.959302298 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.957469514 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.958988578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.958914825 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.959856276 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.958720109 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.970843328 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.970716048 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.957291685 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.960678706 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.955274341 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.962197609 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.963073706 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.970799057 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.967178295 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.959283188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.956761078 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.959863334 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.960527838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.955225404 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.95922909 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.957885411 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.95838178 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.956600981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.971783099 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.970211705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.963987918 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.959288618 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.959919488 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.959322496 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.960491234 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.959819883 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.959891568 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.960219105 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.961002874 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.965121339 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.959519851 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.95966675 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.962703237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.968570036 seconds)
  done (took 1161.835538852 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.958736902 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.95766733 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.956072557 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.956456441 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.956694722 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.95890236 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.956761572 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.957287493 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.960060629 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.958917426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.958754496 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.956510729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.957593244 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.959280395 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.957603079 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.958758815 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.958414413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.958239359 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.958882675 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.959030208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.95758816 seconds)
  done (took 43.00332772 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.962382527 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.959485165 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.959046262 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.96289573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.958681089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.962097016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.958391232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.961446219 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.961280496 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.959495848 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.961300834 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.962155428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.959186736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.959696271 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.95934857 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.962305326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.962120833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.95863677 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.96341508 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.959635276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.962550798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.958368907 seconds)
  done (took 45.019798682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.962894113 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.964078179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.960031956 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.958859115 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.961998493 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.958873768 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.964594066 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.962091381 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.961905446 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.963163263 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.96137717 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.9642352 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.97042326 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.968165411 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.963621843 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.96365702 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.10458798 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.962735248 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.964025873 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.962600515 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.960458342 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.967648241 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.960883796 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.960542366 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.964039845 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.964346032 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.963791806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.96267447 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.964185756 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.963980748 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.97036134 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.963457746 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.962771032 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.966540145 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.963375851 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.965464827 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.970987351 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.966356958 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.96014717 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.964185229 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.974265338 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.988212954 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.966888484 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.970621057 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.962890592 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.965351552 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.968128692 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.973988696 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.961609205 seconds)
  done (took 98.310104774 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.964879616 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.96513733 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.963037895 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.965673848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.964374537 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.963710972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.96404254 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.966192527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.962148509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.962131233 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.96521879 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.964317702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.963419346 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.964603072 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.965973366 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.962845105 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.963010744 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.963464212 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.963392179 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.963812117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.962184828 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.964958323 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.968341623 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.964463682 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.967557985 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.964132449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.963262027 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.96850992 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.965410934 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.964244564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.966487782 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.966236284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.967187097 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.965067689 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.964019762 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.966888949 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.965844099 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.966475627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.968094269 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.965058824 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.968304638 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.967151284 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.968475888 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.968259684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.964982426 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.964491662 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.966379943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.963821924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.96544959 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.968807905 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.968589823 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.965532585 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.967504464 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.965469864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.96646806 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.966066279 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.965477813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.965553645 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.967841196 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.964723922 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.963892719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.968434692 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.964544809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.968335988 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.966621523 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.966018687 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.965379237 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.968795483 seconds)
  done (took 135.54927415 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.968979067 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.969320286 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.970694012 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.970501928 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.970115673 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.970631451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.967928935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.968805067 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.970392966 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.96984044 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.971207766 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.969231264 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.969874871 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.968684579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.971522875 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.971089167 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.970489115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.970359944 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.970824985 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.969628246 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.972330775 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.972092861 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.971924685 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.9705946 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.972883905 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.970528623 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.970142752 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.970328758 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.971962469 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.971586511 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.971771577 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.970815652 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.969349124 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.971247114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.971316732 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.972400679 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.971188786 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.971176517 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.971380564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.970611611 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.971005078 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.972067768 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.972520557 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.971643516 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.971196705 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.972151107 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.973267675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.971797041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.972513012 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.971498629 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.971228246 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.971773534 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.971184289 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.972834843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.972271976 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.971432318 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.973126281 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.97210179 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.972739791 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.97408623 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.974523004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.971940371 seconds)
  done (took 124.110350655 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.971231846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.972578375 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.96908114 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.969297274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.971898853 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.96968915 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.97265714 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.973027789 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.970413919 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.973135567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.972442043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.970488508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.971048276 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.971557281 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.969034289 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.970720413 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.969788257 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.970137061 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.972494113 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.968378345 seconds)
  done (took 41.315829313 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.968355774 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.972711648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.968426814 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.969015621 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.972523739 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.969713082 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.973963175 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.973903739 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.971364671 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.973156001 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.971780921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.973267383 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.96971359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.97064606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.972471765 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.971348752 seconds)
  done (took 33.438846774 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.968847855 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.971905582 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.973207317 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.974327243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.971375233 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.970964594 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.972918688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.971064858 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.971894824 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.974225592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.975244913 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.973964683 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.974988491 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.974243052 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.972308055 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.974429731 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.971485103 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.971694371 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.974641758 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.977185075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.971687782 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.973377245 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.97459884 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.973975776 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.971856689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.973587288 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.972255765 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.972391482 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.971383146 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.97484683 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.972357178 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.973433315 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.972319378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.973754616 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.977786948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.972105114 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.975773504 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.976265641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.974554893 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.974960709 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.973649261 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.973152239 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.975134929 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.975911157 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.972927625 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.975721771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.973464483 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.973649414 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.972299018 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.973017772 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.976533926 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.977074823 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.975407172 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.976790065 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.975456053 seconds)
  done (took 110.453460673 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.975781417 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.976400756 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.973590955 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.977836249 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.978021004 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.972907246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.9767298 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.972799479 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.97427476 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.979007944 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.975455539 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.977115107 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.974397044 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.977777043 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.976369597 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.978407818 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.973361663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.974207102 seconds)
  done (took 37.464038675 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.974736625 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.976243391 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.977192289 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.976007257 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.974358037 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.978003914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.973614938 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.97599417 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.977833212 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.97350426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.975396177 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.97777955 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.977583099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.977739565 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.974379158 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.974951508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.97822649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.978559479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.974940313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.975107801 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.978849099 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.977148986 seconds)
  done (took 45.380331919 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.976951969 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.978005099 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.994135447 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.001540331 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.999473893 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.01690906 seconds)
  done (took 13.869730431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975145709 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.978720331 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.976962059 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979153647 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979527302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976508078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97740537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976347714 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978618687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976340777 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976480683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978366677 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979831125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.977976538 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978931994 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.977922943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.975747134 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976304979 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976411964 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97928528 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976685951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.979274667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97638115 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977705117 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.975542635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977020108 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979734244 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.97780181 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976990138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979083919 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.980780846 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981061242 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.982740623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981290651 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984638905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.985544727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982257308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98658942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986432707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978249655 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.978576713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980181364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97936453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977263668 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981045629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976109088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978559694 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978795817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977060516 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98038254 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980251308 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978779116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982076928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981592375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980984682 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982057654 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979941793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979398989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9814244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979346391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980473896 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983256879 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.980186049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981568717 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.982217278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.980089538 seconds)
  done (took 132.540719994 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980596581 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.978772905 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980147914 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978340093 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981847368 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980490808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980826099 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979812732 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979356214 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981715579 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982994124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981276433 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980309897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981329878 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978530001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981484223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.980112763 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981706908 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978801331 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.98297379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981069042 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.979045892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980443359 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98025282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.980063791 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982431589 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.979030227 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980519793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980251488 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982002306 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981090508 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.981706734 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981814862 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.980544817 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980773391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979590927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981025322 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981261817 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.980364327 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985500742 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.982975841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984853016 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982041724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.983264198 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.983241096 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.983341941 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983822926 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.982729862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983909471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982612276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983712013 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984212279 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.983613992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981908226 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981767337 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98284154 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.98340357 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.98328145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981346259 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.985952359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.98314215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.982656955 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.985870231 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.98318939 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9829622 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981945571 seconds)
  done (took 132.703638338 seconds)
done (took 2707.392853617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.068980902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.981057526 seconds)
  done (took 15.958380844 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.148383611 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.09995874 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.985851021 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.990963743 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.982128459 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.99331483 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.998682521 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.983233332 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.985891443 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.985057874 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.985932659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.174946802 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.033325928 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.981704502 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.987077202 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.080804205 seconds)
  done (took 54.517339572 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.987524372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.990968286 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.002109782 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.992448656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.990828034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.009948557 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.023553326 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.992987348 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.051510123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.000436662 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.112067018 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.000779735 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.988720611 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.061240462 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.000091585 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.004779889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.083511653 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.065089559 seconds)
  done (took 38.270769353 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.070172312 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.991424605 seconds)
  done (took 10.983000735 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.984404484 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.010536226 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.988649307 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.999261079 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.004062536 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.980258908 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.999889 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.017052588 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 7.010431937 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.994970382 seconds)
  done (took 71.906818933 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.996257322 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.989763352 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.990201069 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.987831353 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.982102123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.984447142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.988631574 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.988601304 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.695717091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.026542128 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.995346375 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.995868778 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.990219082 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.993829905 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.986861206 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.013527462 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.133005246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.986721242 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.986387772 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.997224159 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.990108878 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.060294782 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.00251622 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.991691127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.021898026 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.693779982 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.99890943 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.997874106 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.106283786 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.989373045 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.99166094 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.991816275 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.993026965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.36994842 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.2737999 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.988634665 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.997560196 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.998241394 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.988867997 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.127645395 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.990498848 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.996666833 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.925108619 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.246443266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.103555196 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.035820948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.364049637 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.992967864 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.99122579 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.021982632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.996316473 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.996068561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.00657396 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.502457934 seconds)
  done (took 139.371411955 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.984728054 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.25101569 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.143733858 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.988426044 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275908075 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194829572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.985689327 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037417704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.984140281 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.22273834 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.150758287 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.097714195 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.986872413 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.98417849 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.985674294 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.983136014 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.14993474 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.06245773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.986662631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.981763157 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016968228 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237995318 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.113395261 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.986175199 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.01431522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.209385347 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.112754097 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.09615602 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.506114994 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.984643192 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.053026094 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.985515568 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.985053364 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.981659808 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.140942837 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.077068539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071553592 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.980669324 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.976288857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.9736018 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.658408181 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.175830167 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.073521605 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.123460828 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.225806478 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.185376822 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.861752721 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.976268499 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.7137267 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.13871289 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.211760717 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.215239405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.102868363 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.978478435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.296785794 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.97582021 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.977391885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.212224726 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.20737937 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.08122253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.976833609 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.976072856 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.975664448 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224850384 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.9771993 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.071041602 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.97745998 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.975142449 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.075165124 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.082960392 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.209175302 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.192403159 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.010463162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.2924542 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.519069588 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.230536532 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.045763075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.211768009 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.978694175 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.974603866 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.065618882 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.849090449 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141162563 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.229414853 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.235886991 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016364005 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.714375823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.977422464 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.209813762 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.20355491 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.280238574 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.224271894 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.132082223 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.505685493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.977258589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.977945772 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.280116485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11635688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.978466644 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.343449441 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215574455 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.554227642 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.01023661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293678155 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114268598 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.978849628 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.621789227 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.978614857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.206207901 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.024284387 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.981595953 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.979376184 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.202242249 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 3.058314851 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.979727435 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.64909464 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.044739807 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.981872962 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.219347297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.980673652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.245582933 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.978492585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.221969441 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.124963018 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.014614734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.152970033 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.226550463 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.979484884 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245198541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229714953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.100069285 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203853911 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.694652139 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.981915389 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.271257123 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.980745569 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.980451781 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.153921761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.981784397 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.130076366 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.980868818 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318430763 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.006201763 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.137996365 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.981388769 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24083431 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.017711528 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037020372 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.981818142 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.110202202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.983725757 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.892192599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.137280122 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.984015257 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.981584364 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.544198065 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.982181461 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.138413471 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.21929547 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.00683094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.059092682 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.655489932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.983355252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07186292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.007339226 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.331646562 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.982770678 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.140761186 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.981710808 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.516556988 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.981940474 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.227068205 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.166893836 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.983810335 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.981476424 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.891791883 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.980654811 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.982876324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.145731554 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.873397711 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.981636673 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188998682 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.983311234 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115514597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.98632686 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.328205966 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.339101083 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.981176085 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.983039438 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.98435572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.983745651 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.981730135 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.194999086 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.013168211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.512674646 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.124105412 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258605138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.302448949 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.236958691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.030081817 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.985298965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.233759452 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.986210903 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.051441817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.985555168 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.008344068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.221068534 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.988082054 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.19774417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.269604344 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.91971043 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037307887 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.987313749 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.986072435 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.955308693 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.140051974 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.078236008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.986385988 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.984092273 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.104555299 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111516607 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.202237836 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.986891803 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.144536271 seconds)
  done (took 929.361517338 seconds)
done (took 1262.276589718 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.983592068 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.985292308 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.974808252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.985808932 seconds)
  done (took 29.84441462 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.993783747 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.993119625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.99517956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.991255512 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.99475277 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.993060493 seconds)
  done (took 13.878155883 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.113447757 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.986626144 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.986319165 seconds)
  done (took 22.001557777 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.060037597 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.410883421 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.108254229 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.443946558 seconds)
  done (took 10.940138484 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.995395639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.996567528 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.997524573 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.996379098 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.996389734 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.998074152 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.99594472 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.997532659 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.997646844 seconds)
  done (took 19.889574013 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.385493605 seconds)
done (took 102.854182758 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.48081515 seconds)
    (2/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.184110158 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.973294505 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.679132669 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.00270469 seconds)
    (6/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.545177643 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.365693459 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.255220758 seconds)
    (9/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.992689868 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.032122782 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.016658134 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.480061718 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.675804163 seconds)
    (14/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.149694675 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.838454554 seconds)
    (16/309) benchmarking ("sort", Int8, false)...
    done (took 5.006237642 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.563524339 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.109950687 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.181644275 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.023865515 seconds)
    (21/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.579985517 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.23628773 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.076758746 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.068540491 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.945594942 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.3915465 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.122350551 seconds)
    (28/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.001372869 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.098380786 seconds)
    (30/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.001127136 seconds)
    (31/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.2196795 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.207039036 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.993772303 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.982544972 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.16020603 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.490705501 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.014586911 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.070090597 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.238720967 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.009051838 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.976905162 seconds)
    (42/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.06507217 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.401317817 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.033960956 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.638165305 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.326166515 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.981195259 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.109292478 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.278538083 seconds)
    (50/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.078231496 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.186217688 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.255513606 seconds)
    (53/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.925742654 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.155161185 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.060360562 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.135886763 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.154131915 seconds)
    (58/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.978036221 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.058248953 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.800885956 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.304092796 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.060704177 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.502751262 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.288198247 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.161785666 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.998158555 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.996713616 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.117981848 seconds)
    (69/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.124747354 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.326746432 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.054363507 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.250467158 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.993543264 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.185436561 seconds)
    (75/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.307050274 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.300704949 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.0725928 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.983193772 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.220259303 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.980937196 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.251601894 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.048269788 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.459694304 seconds)
    (84/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.217870375 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.654328638 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.521380754 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.692669035 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.266572107 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.940168733 seconds)
    (90/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.466912801 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.999861304 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.235361946 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.010742779 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.419106244 seconds)
    (95/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.120772629 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.021182646 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.364417468 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.099803974 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.120520328 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.323103929 seconds)
    (101/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.102149079 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.373094496 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.000308406 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.167751704 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.187886816 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.204441808 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.995770455 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.026614378 seconds)
    (109/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.994949036 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.375587037 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.338232497 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.195632677 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.023650077 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.985777269 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.045930574 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.083803315 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.512274589 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.114198365 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.767068296 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.01479006 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.371897042 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.315460194 seconds)
    (123/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.581930853 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.203231836 seconds)
    (125/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.306065365 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.146032682 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.080053803 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.442861707 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.017694093 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.998408599 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.336398652 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.259522551 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.073824056 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.214649158 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.686041469 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.267451083 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.933172369 seconds)
    (138/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.034041239 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.106238215 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.888313589 seconds)
    (141/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.176358238 seconds)
    (142/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.98218001 seconds)
    (143/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.6107232 seconds)
    (144/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.082592695 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.091871595 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.572491795 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.332478652 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.026600347 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.702246486 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.707359463 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.23230898 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.098586784 seconds)
    (153/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.974251679 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.179720663 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.022934603 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.02387957 seconds)
    (157/309) benchmarking ("sort", Float32, false)...
    done (took 5.721750311 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.002082966 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.002304447 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.104933446 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.01810352 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.027849211 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.27674138 seconds)
    (164/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.004467689 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.368889554 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.21706495 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.992665988 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.937564736 seconds)
    (169/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.344015843 seconds)
    (170/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.49059682 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.051426197 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.083020019 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.649748635 seconds)
    (174/309) benchmarking ("sort", BigInt, false)...
    done (took 7.00863496 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.01548638 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.507042961 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.026884452 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.257858709 seconds)
    (179/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.134582569 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.384877477 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.925328615 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.253653429 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.992541238 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.095048173 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.523856201 seconds)
    (186/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.281066669 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.001504779 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.089601544 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.120519955 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.065843811 seconds)
    (191/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.002540239 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.696225243 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.037558545 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.104215632 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.940800714 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.360341202 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.155669209 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.004833009 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.13932883 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.021807451 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.293040937 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.217637412 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.289149367 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.640063695 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.206713224 seconds)
    (206/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.250755053 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.681081188 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.118010115 seconds)
    (209/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.111608506 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.998892786 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.305974593 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.092197499 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.304506486 seconds)
    (214/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.11144596 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.516688294 seconds)
    (216/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.093606592 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.315512604 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.031555286 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.570918408 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.390508336 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.101282109 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.043551657 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.95024842 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.191514326 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.994429022 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.011674449 seconds)
    (227/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.994641808 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.674426938 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.325708055 seconds)
    (230/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.128205466 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.397278112 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.357445374 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.009263978 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.121291993 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.106121715 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.987572242 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.407125785 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.057402278 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.026915459 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.079127499 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.003661641 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 4.053182018 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.112475683 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.992574439 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.667420563 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.092329292 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.009213132 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.582246115 seconds)
    (249/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.123777791 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.174697833 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.481896214 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.379242901 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.11182051 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.006105143 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.225091208 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.00604924 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.207513958 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.852817108 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.149111977 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.1917218 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.376957433 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.723530502 seconds)
    (263/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.576598736 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.904938175 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.480348407 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.333252296 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.7094152 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.300267844 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.031786726 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.008524136 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.998163731 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.99804177 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.133027431 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.328722598 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.156556105 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.646952766 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.005761678 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.956491991 seconds)
    (279/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.01400952 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.230217551 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.010604711 seconds)
    (282/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.067134345 seconds)
    (283/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.494859911 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.092237616 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.821340517 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.234447811 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.040148287 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.23787076 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.097616448 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.127358626 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.799084008 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.468003041 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.951815622 seconds)
    (294/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.179273924 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.76430837 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.520494749 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.413390542 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.040577621 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.395178335 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.994737583 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 4.246612237 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.033965653 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.027397635 seconds)
    (304/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.317061941 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.127336599 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.039600604 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.141273437 seconds)
    (308/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.201585262 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.453191177 seconds)
  done (took 1059.685884756 seconds)
done (took 1061.670554171 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.049038589 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.03896786 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.026092598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.048389387 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.135499256 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.053113222 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.036337054 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.028054824 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.073930619 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.075450928 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.023170257 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.052621525 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.024217324 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.023895383 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.026215404 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.036772198 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339386285 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.056446546 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.041685138 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.036492359 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.039528109 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.021893684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.076794743 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.053047892 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.029978093 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.029129749 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.02720401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.043817636 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.137966192 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.028438891 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.028141671 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.03846187 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.337759366 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.058488291 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.025399029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.044545019 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.036834074 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.037594785 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.031613755 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.056695207 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.492888598 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.030561264 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.0265797 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.029508429 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.03074777 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.032421468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.027359403 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.036496855 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.038268546 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.039482818 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.493832307 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.046415984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.030342185 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.028739433 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.038915455 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.027105186 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.036858606 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.042589965 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.04503285 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.043631944 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.334652966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.061766645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.032664586 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.043960259 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.034633337 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.532305478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.03251416 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.035206067 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.497517181 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.03943255 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.531633117 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.044588891 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.033224729 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.0437571 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.059925771 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.340406553 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.055255546 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.03329594 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.03549916 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.028078191 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.043147525 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.042209915 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.036552625 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.033307189 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.041733027 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.060013163 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.044996902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.028289006 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.04280274 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.048084642 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.034338621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.040791775 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.036168179 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.027690377 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.043336411 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.039621919 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.031106698 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.031859999 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.038224655 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.042757206 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.49450787 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.050673212 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.029314341 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.031222901 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.033034468 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.042186346 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.493700718 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.036609856 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.055780768 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.078443564 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.036324647 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.335085294 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.063713342 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.044460541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.041939373 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.038132656 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.028848091 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.342872581 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.526064782 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.050340968 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.036062806 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.029013605 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.046627928 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.036213591 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.028804553 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.342482873 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.064976046 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.042163691 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.152579623 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.045602648 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.061597468 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.029704753 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.036539309 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.060121473 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.046876598 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.063770475 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.037983006 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.044683566 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.04666314 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.02922042 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.042101992 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.04589804 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.035209372 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.041271453 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.026594217 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.06307466 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.044190542 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.0423684 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.055677735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.15365687 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.033175065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.340405912 seconds)
done (took 318.671986522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.096946718 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.022878729 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.124851904 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.024963321 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.108560104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.112421533 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.02224755 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.022875563 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.022834266 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.398366679 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.024847708 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.023490118 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.025233541 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.022955886 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.110397908 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.026750594 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.024573878 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.360109233 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.027377429 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.102707387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.025550216 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.022449802 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.025560811 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.399820273 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.027269117 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.021985616 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.09880053 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.026336924 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.364090118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.018199826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.021932087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.36386517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.118443754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.045103539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.035069096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.03255884 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.107741266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.02973284 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.104706217 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.10940517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.126043938 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.067064513 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.019257596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.026295368 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.031345712 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.029159259 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.024998319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.053135579 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.025023294 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.023417236 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.363593626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.03745177 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.025716763 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.023933402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.025480766 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.062143782 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.027350308 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.029338248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.118394537 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.027540661 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.089689512 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.401646205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.399993491 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.026333607 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.023603448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.02458286 seconds)
  done (took 194.784650918 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.094030845 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.100384838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.093972744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.029821596 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.076231502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.095738656 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.030928985 seconds)
  done (took 16.470674475 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.034860067 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.030053206 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.07772346 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.077574135 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.029853228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.178463021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027695358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.041056796 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.027011543 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.081615419 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032049752 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.029588173 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.033553621 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.029615427 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.078690907 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.037985868 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.145330457 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.032162452 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.033039011 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.180302771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.026300509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.035147605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.084340575 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.041833615 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.03082035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.036706034 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.615318217 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.029645316 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.026077922 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.026768147 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.024608087 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.072234566 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.028660074 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.024742747 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.029402901 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.143983657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.031044624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.025095535 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.02909995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.027142245 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.030558678 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.031336858 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.029930583 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.027699712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.032918192 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.053968523 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.028372569 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.031061688 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.028929767 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.028182537 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.081082639 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.029711895 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.027836597 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.028192244 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.086544099 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.037139955 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.031882353 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.027425879 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.031667787 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.02818581 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.1830242 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.078244177 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.032691363 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.080382821 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.031337848 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.031872655 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.029450125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.029468304 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.12502523 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.031130891 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.078776024 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.028298258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.190170839 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.054931327 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.030475954 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.034000562 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.032049297 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.034512949 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.031915711 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.037797355 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.027371896 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.033408495 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.037576009 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.028332523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.031110233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.142169486 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.139118666 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.028496741 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.045132847 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.038634839 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.029162375 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.085260989 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.033201398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.027336019 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.086797473 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.151292026 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.086212439 seconds)
  done (took 221.570093982 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.038647869 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.041750657 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.033689776 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.049736503 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.031997504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.032313074 seconds)
  done (took 14.181771441 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.035906449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.033239564 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.032707161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.03478932 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.032650337 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.033855814 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.03550223 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.034625379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.038475118 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.035815649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.035548036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.03280963 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.036807155 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.032258512 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.03417606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.03418996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.034414145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.028826546 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.032485585 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.035205828 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.181866364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.033995248 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.03536107 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.035600335 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.042150948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.031887365 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.040420922 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.034568178 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.034282212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.043938459 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.038235105 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.036113873 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.034674284 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.042803471 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.043702762 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.035875846 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.039537799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.03741258 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.0323271 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.036799076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.036826255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.037897985 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.034626004 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.03635031 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.039485701 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.042566978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.041860965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.043755449 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.035287137 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.038293755 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.039488944 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.036683246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.037638738 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.03576229 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.039511258 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.040620281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.042335972 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.038203438 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.037081886 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.037740851 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.039010318 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.038208345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.038476986 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.042015526 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.043974202 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.03589068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.039623027 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.042947321 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.03905544 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.037222338 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.037650885 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.033672557 seconds)
  done (took 149.770955521 seconds)
done (took 598.743432237 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.089417217 seconds)
  done (took 9.045291053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.163709307 seconds)
  done (took 9.202142065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.591629013 seconds)
  done (took 10.548777474 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.050503613 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.044519667 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.038003682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.023551418 seconds)
  done (took 30.124472529 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.089661269 seconds)
  done (took 9.044782418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.042617798 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.023949416 seconds)
  done (took 16.049901554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.100609983 seconds)
  done (took 9.057785668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.153124027 seconds)
  done (took 9.112105171 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.042400002 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.065417484 seconds)
  done (took 16.075143665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.014909644 seconds)
  done (took 8.971078184 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.780057091 seconds)
  done (took 11.740618217 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.036307269 seconds)
  done (took 9.005782504 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.11852955 seconds)
  done (took 9.075397012 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.048994396 seconds)
  done (took 9.005306701 seconds)
done (took 168.016348569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.034986321 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.027056275 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.02488941 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.024949579 seconds)
  done (took 30.066184989 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.068988416 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.067797153 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.069782567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.077883704 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.072909391 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.067010993 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.061140104 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.060601499 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.080582288 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.071887183 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.071310719 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.070573328 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.068640445 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.061165033 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.072961453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.070772319 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.080357206 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.07143445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.062072008 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.073398327 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.036585113 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.079317863 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.07177624 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.036425993 seconds)
  done (took 51.58252475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.239155526 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.110488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.192300185 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.091773963 seconds)
  done (took 10.591257232 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.087204111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.089520578 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.104097402 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.141415443 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.16312394 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.099526098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.062589793 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.058445787 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.043455865 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.090348324 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.165379455 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.085594564 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.181026525 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.037119692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.22283111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.036265234 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.036622174 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.088077296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.140284718 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.157862972 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.037073707 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.088452528 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.096150873 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.087005913 seconds)
  done (took 52.358721431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.035748236 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.044050196 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.042397053 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.036482405 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.036243878 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.036958834 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.044329516 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.037064729 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.058709314 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.038586556 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.037100742 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.035508721 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.036188274 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.03890272 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.0373443 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.049775059 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.050910755 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.041213681 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.042253382 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.043440928 seconds)
  done (took 42.781643417 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.030636658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.885207054 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.38319752 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.290766082 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.030569945 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.030924393 seconds)
  done (took 32.61152565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.050704096 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.042270127 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.038134818 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.095855403 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.176011726 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.044070472 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.038320455 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.05067083 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.085986103 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.101905788 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.061795878 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.066124459 seconds)
  done (took 26.812618043 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.034871563 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.030976182 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.032968566 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.049730044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.051058369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.044680871 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.04560132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.033045859 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.050951764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.05571549 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.04643219 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.052801945 seconds)
  done (took 46.494377052 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122871237 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.923500967 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.09428753 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743522685 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.515077395 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244566746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.566443847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373849018 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.037350204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307994792 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104868424 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139329187 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289553389 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.033940482 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.037644654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.513605022 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323167529 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254004715 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.052989364 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832015322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080274745 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.663322667 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.91243054 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08693718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245915218 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.167234558 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.296305758 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992445321 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166294612 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065771804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045351449 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035270761 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310092763 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404293282 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129226698 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046052044 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691678748 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.752671572 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.027173987 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.811434898 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.8229472 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.152460007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04600111 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037832184 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.971900988 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.661983168 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420962723 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.042773781 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.746682718 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.041121844 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048911773 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124990969 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.039976087 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.856421018 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.046685259 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.313816583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.034737087 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0436107 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.60860907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.148379123 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.689490382 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.01681887 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.2336864 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840534814 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421022101 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.176531065 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.040041617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042147071 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976299633 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779598251 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085336749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645826839 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.055801644 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699994288 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348894898 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.183303947 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983025226 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311773831 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.965361682 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.01800591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266043843 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998058207 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973051959 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.897619166 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.973564629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294319298 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065847848 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.668448342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065300635 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37459497 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049287632 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056612258 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05047833 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262936811 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.605007305 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037265869 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.876982923 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171162596 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058825058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377761905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980103254 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.040787093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293972435 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.250205518 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394578296 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.556206219 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18938759 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.037954089 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.110672785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.04392975 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086369859 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.31597784 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089196654 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.183405628 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093838679 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.00115965 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338346657 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.057335656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.199430081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.11818447 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168049727 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.355118515 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32069135 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106009765 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.040510982 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.041393723 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.897580272 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.588991685 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.306937037 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.044043941 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.642206151 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097333677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.043064831 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.978125632 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.695994976 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116171102 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.014021388 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2652953 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.043087095 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339148534 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.977235096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178304749 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.139525328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.261741233 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.683968694 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.102496675 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29866467 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.645180076 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435005866 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099410679 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062227529 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13339793 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065621287 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.599216985 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341133515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.047205965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.047152825 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.897535151 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.034356127 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041636793 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.047683074 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9098935 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328985269 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054798948 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.043581747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.933868401 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.058890692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111945554 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049693517 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052904088 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.597572271 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.789954162 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.054263429 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.690846015 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266612704 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053468536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.781666939 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152002762 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.127817172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31165632 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093996678 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.978728101 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.758165245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.736238551 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043637496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980291442 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.045308562 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055940529 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055903477 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.435810853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323740724 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.077540004 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.799009829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.082184202 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055075277 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.050130473 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.046687428 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.598578738 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.165940865 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.703347638 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094946819 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181969601 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.058878692 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.979451579 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.048703372 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049996987 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.045427425 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.001847492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099754216 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.859277105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439354879 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302746674 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695460096 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063766132 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.831291845 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.100942123 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.122838904 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.899284831 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.059103192 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.077759506 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064559334 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.05841123 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.813738981 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7540082 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.615208026 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398569277 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34128299 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477153627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.661754574 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.353904462 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385983061 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286472281 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.575979201 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108440093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390817174 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006354472 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131442642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.68941479 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.389856375 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060052294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275804589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434739494 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.965286418 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070451841 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258193677 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082426489 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.046539064 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011240273 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.250137548 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196221625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.879394913 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241270069 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383515666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.938742173 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.01904339 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.046561779 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.732144961 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118780511 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.757929777 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420466186 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.677855962 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160479148 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425299002 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.049222211 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494032114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397823464 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471242196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.175488036 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984910192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059231781 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06081546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.050765144 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.057008885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.941764008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.299098232 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061284695 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285661613 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435944968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35173934 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.946781575 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.055198183 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.049253639 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335143222 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.004934127 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216211716 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.631234406 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.591987153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.054701852 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.988007328 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983567915 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.742349461 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.058299464 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021711781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263284491 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.232104287 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.097698876 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.664584168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295517458 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306046636 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.063523197 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320842356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316483667 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.78464978 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075542135 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.150203136 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.786709314 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.151094894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318301876 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285971837 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913134988 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278061055 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.09011788 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.858384688 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.048086107 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263029036 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319508622 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993416242 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269477883 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.767895182 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.06089094 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394232074 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101147191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984288874 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199562703 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.243530281 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059936531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135449897 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06135414 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.068490042 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061995209 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098649589 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979618375 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.166687654 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.066217788 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142998895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206285188 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.593487216 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.057602571 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326955987 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407710348 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372364599 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100675796 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.051855209 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.051711886 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990028913 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188300939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501883011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325350687 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172747906 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.349943923 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076047248 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785721289 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.539231822 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29842282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332613753 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.946860194 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.122579186 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061248039 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.318203972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065033338 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.265106919 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274018347 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352496068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517247291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416866583 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424913218 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324887237 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.425897581 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.053885502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644282837 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.0580352 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.741494175 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.08108091 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03049767 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310342263 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065429627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422171468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075979739 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.249936219 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.570361482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843480322 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.338537338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.02408432 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097636475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327515512 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426527212 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356800022 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126725707 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06442439 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.764728935 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191358503 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.94317005 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.321264093 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.056396728 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26759079 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.766264658 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.064654471 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334327655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355059792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.051088987 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.94735805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062389497 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.064658458 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279278994 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.319478528 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301120678 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067339759 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.063799327 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.87306838 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334437634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104416226 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993992241 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.059556143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147159201 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298823418 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078037318 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.745311093 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.767237109 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340852263 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.965587193 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079177972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.686839551 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430995931 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374007372 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.60173139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272064194 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.607349608 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.0569022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347346781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.062043053 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.684602746 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373395836 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.061385909 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.793814277 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09942996 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.32643785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.368245152 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.069814318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824351133 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.021836361 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279922096 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654636206 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000332865 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.056786001 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.122145826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.05680286 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.178138061 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067761946 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.947738203 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.055813333 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.803691564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561866657 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.060184945 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.044138392 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.832053858 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.81520749 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095456528 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206539706 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.065224844 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.778316282 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.351724751 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313879065 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.793287483 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.068473587 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.062828536 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.058569314 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989747574 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271634565 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.440754299 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346184554 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.645122086 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.100338999 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064042978 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.276440186 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270441271 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.986614103 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188472953 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677890403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102477591 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.809351681 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.744024568 seconds)
  done (took 1775.38561031 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.085880362 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.089615308 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.067056797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.119303008 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.102886738 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.125450942 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.152495796 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.153136722 seconds)
  done (took 58.883323942 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.058351137 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.255436784 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.070486915 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.059733596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.066060847 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.059259825 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.241625665 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.070560381 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.088271282 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.070842866 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.061662137 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.063395 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.403387807 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.083830558 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.06139584 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.070861202 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.067237149 seconds)
  done (took 77.870379949 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.063343427 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.31832307 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.093954958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.076993705 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.13538224 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.059724818 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.246939563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.101437502 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.066962373 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.315369767 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.39331551 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.107838215 seconds)
  done (took 92.968670119 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.072456246 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.067504664 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.06664076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.067311576 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.067947502 seconds)
  done (took 12.335007521 seconds)
done (took 2312.755578173 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.41399321 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.294307206 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.299217736 seconds)
  done (took 6.582155137 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.211815576 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.259814992 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.380099247 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.383653603 seconds)
  done (took 11.229548753 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.353778378 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.448779833 seconds)
  done (took 6.791463117 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.493320399 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.07232701 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.465941473 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.058045433 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.060542245 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.062040581 seconds)
  done (took 23.175154674 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.066445929 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.069969409 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.067464949 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.069937731 seconds)
  done (took 10.263095131 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.04998761 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.802168788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.049388166 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.062013817 seconds)
  done (took 21.951689317 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.818056436 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.466133514 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.811426529 seconds)
  done (took 10.086507883 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.522160753 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.94900844 seconds)
  done (took 9.460260149 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.349626898 seconds)
  done (took 4.342802895 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.094156051 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.338437674 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.582780651 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.577041491 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.662600207 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.942961139 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.400719921 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.32624012 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.473095219 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.514657471 seconds)
  done (took 26.90676876 seconds)
done (took 147.221451534 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.459349712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.432679572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.30926882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.425431065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.300553502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.273599938 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.468200398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.409183405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.920337586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.914583292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.462904976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.312349466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.208451282 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.43563708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.213895518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.304812992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.299281789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.47721616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.156917255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.314654331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.464120794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.04857927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.301818173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.060716968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.298569022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.222386954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.625911699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.305852699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.312455758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.636107436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.219913168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.470297528 seconds)
  done (took 178.055543723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.818434545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.063614871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.062794964 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.061564287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.274494189 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.062648909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.064869575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.063772804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.365859646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.349092722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.073821284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.287463313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.072096882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.062108038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.069036119 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.064449648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.527973817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.894880869 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.073748608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.075156938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.080039617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.185729848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.07934474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.236933588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.51672674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082570267 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.066019145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.080078737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.068836448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.050088682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070549616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.065646866 seconds)
  done (took 213.964321935 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.069340269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.067447954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.065843083 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.067136442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.067654351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.066051739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.066441286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.065231559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.770418818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.762787785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.072402406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.07261147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.074729519 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.068391673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.077405796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.065005396 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.070981874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.074123887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.07149786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.075648671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.079368307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.885981675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.077335084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.886169877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.072562741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.07215561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.066741625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.07616533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.077473262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.078531929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.075209563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.067488059 seconds)
  done (took 227.309073864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.266251282 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.077166529 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.078844231 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.017340211 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.079537384 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.077127113 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.040757072 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.276539291 seconds)
  done (took 20.926516355 seconds)
done (took 642.258581576 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.530856322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.372260008 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.251885102 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.102244757 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.362419034 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.133389354 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.097904991 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.164103825 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.831021362 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.16734251 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.794715026 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.115353065 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.887526326 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.122221297 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.219418629 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.151854809 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.643246235 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.738700199 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.278099966 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.181354121 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.270212253 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.038218598 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.17650427 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.858362669 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.901339514 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.084131306 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.28153483 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.648325128 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.110522814 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.264952818 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.876184641 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.505511106 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.110038585 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.097509064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.153149646 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.132594884 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.458092539 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.107854378 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.220764437 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.842474674 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.178942891 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.720549129 seconds)
  done (took 112.181933474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.07131587 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.069635682 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.068491817 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.070139591 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.069054387 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.070022707 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.068551651 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.068832116 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.069526583 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.068993378 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.069752736 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.070895617 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.068329363 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.07198152 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.06885429 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.069345835 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.070794124 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.072983593 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.06983259 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.069564933 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.071611681 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.068710129 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.083023909 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.068387732 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.072046943 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.070930405 seconds)
  done (took 55.83994055 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.08040824 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.248637909 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.342307713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098728534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.082156715 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.086435814 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.101106594 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.087234153 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.084000054 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.083451299 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.191879864 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.08672303 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.09842393 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.345218388 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.095228287 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.081507461 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.081643204 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.081277654 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.258334234 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.095376676 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.103234519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.089238742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.099828627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.095486118 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.082779452 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.083701643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.085515455 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.548481287 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.088591151 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.188235395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.123961553 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.101260397 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.505897777 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.352756495 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.135747149 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.090534499 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.082869309 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.191349943 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.086054051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.083266566 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.102197128 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.08511686 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.342949723 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.581723459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.09414978 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.083303988 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.556334088 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.20188981 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.12337424 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.091681191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.3468991 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.098373882 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.086818219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.085038342 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.118481863 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091573272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.080726673 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.402082028 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.091989787 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.103644922 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.088454811 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.085139066 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.263973156 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.092133208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.249981753 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.090368288 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.092649733 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.084228779 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.345603345 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.098354071 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.596967131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.097375833 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.086089712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.192780827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.253341933 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.584391552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.097603983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.264038565 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.525562793 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.110074551 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.092331301 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.539218555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.112014078 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.091160841 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.08887379 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.088312324 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.086456446 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.13261539 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.103622603 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.514737629 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.598784584 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.421687419 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.110963613 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.101964675 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.085814569 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.406579214 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.093614206 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.087190354 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.3428991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.602258473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.098189829 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.096236272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.582477701 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.098473174 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.105556472 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.092563693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.348885426 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.099530895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.133390914 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.088427116 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.092170514 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.08857136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.104602549 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.094861126 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.08822845 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.571832017 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.214582425 seconds)
  done (took 257.699775216 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.082105288 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.078175402 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.081002649 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.079168477 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.076500813 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.087203348 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.078893263 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.078828929 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.087662962 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.081688612 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.079693272 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.080889095 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.08276778 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.079075181 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.541349112 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.087801252 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.690001144 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.081085892 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.08027814 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.078623234 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.767890455 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.083437965 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.08101163 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.079528042 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.079732653 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.083305447 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.084901546 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.114724709 seconds)
  done (took 174.078633642 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.089378311 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.276003446 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.10776899 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.125798233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.096331939 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.086106895 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.11299576 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.108600897 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.088730093 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.085305214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.08421097 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.148471883 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.095225333 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.232501193 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.118038062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.117098506 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.198960992 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.094151413 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.088597549 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.086457907 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.117760625 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.084725054 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.151139924 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.215477055 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.106858172 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.207346246 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.091857446 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.090728696 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.090494869 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.213938983 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.104921485 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.151557264 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.113261864 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.106647896 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.209983702 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.208686443 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.194012955 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.116587185 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.09444566 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.088000433 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.088959196 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.077251831 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.210230071 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.108436139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.091271072 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.201186522 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.107575306 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.092590883 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.100034405 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.085718009 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.103184389 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.105664367 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.155534361 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.223206009 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.119442512 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.114979244 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.11284306 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.372671899 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.098740345 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.192698324 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.082245695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.210004913 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.106201866 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.076495541 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.088654661 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.092567427 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.117210888 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.120619705 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.196500157 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.093990776 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.192309305 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.121825686 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.095155727 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.08751397 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.090982684 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.213289922 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.207569393 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.119298271 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.127108722 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.12100955 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.084808103 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.089404984 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.08039989 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.108454842 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.093738821 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.210874321 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.209856815 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.095412236 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.093680241 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.092344767 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.093553575 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.114333517 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.220373117 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.123171483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.194035332 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.156165135 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.163695238 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.102794353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.105702188 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.092099863 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.15578722 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.104610838 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.103087762 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.419604222 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.162245069 seconds)
  done (took 226.001207205 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.553791474 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.141749287 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.147992226 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.426816107 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.517313448 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.97327976 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.138136283 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.137968092 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.160427872 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.327204287 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.21534149 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.167588344 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.127389427 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.111217618 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.135599065 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.157766838 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.147185075 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.471228948 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.261459956 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.265592902 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.119959874 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.420742063 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.463362306 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.569707221 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.180199668 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.479345517 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.816950198 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.279630877 seconds)
  done (took 67.932921215 seconds)
done (took 895.730360421 seconds)
SAVING RESULT...
DONE!
