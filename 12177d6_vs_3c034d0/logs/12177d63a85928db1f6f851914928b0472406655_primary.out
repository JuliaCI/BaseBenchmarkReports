cset: moving following pidspec: 11584
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.392060886 seconds)
loading group "string"... done (took 0.581414624 seconds)
loading group "linalg"... done (took 7.261747394 seconds)
loading group "parallel"... done (took 0.161010808 seconds)
loading group "find"... done (took 1.15758503 seconds)
loading group "tuple"... done (took 1.77554006 seconds)
loading group "dates"... done (took 1.304417553 seconds)
loading group "micro"... done (took 0.227118055 seconds)
loading group "io"... done (took 1.02777633 seconds)
loading group "scalar"... done (took 39.252825616 seconds)
loading group "sparse"... done (took 12.324743543 seconds)
loading group "broadcast"... done (took 0.945787162 seconds)
loading group "union"... done (took 12.180547584 seconds)
loading group "simd"... done (took 4.504498428 seconds)
loading group "random"... done (took 9.052000581 seconds)
loading group "problem"... done (took 1.831911724 seconds)
loading group "array"... done (took 20.855473434 seconds)
loading group "misc"... done (took 1.687839455 seconds)
loading group "sort"... done (took 3.335050074 seconds)
loading group "collection"... done (took 17.324721614 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533229414 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126081359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118484859 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120303358 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148639794 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112808172 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125721845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086417243 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.810895988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148838419 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116630716 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429447974 seconds)
done (took 5.196829409 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179039872 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087153821 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086578012 seconds)
  done (took 1.315249352 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067125514 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126177572 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067597847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067333058 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066965732 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066022363 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067033554 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066479947 seconds)
  done (took 1.668903995 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075212356 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071636603 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067121227 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068464738 seconds)
  done (took 1.425491058 seconds)
done (took 5.809459989 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796341851 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203861455 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187901139 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41361183 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132702154 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158930919 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643664206 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325770278 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189440519 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080821024 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109994865 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.32856768 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111640847 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.625398286 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077657154 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090754034 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138733052 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431640454 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06790509 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082099223 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088859617 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129352917 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088335276 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074241148 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145165082 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067767792 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137723766 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080003979 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066782305 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213793734 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172751708 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647596737 seconds)
  done (took 10.297735084 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101084578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098133134 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069491615 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123815914 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096765049 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069942221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07125152 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067902689 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087646569 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128333326 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088829323 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101871368 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066138745 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069204264 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085236367 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204395936 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083082442 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082149331 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070662082 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075995899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10588724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078471446 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077309167 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07690002 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129959709 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179898104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096994147 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0979656 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067813741 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079722819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115331231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125084089 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065350025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066902707 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124224556 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094752163 seconds)
  done (took 4.606094032 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002322957 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144951706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090901865 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134877398 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065236066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109523498 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066495298 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081153888 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210407082 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.449908468 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115674236 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594156801 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111295438 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104450156 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067451355 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068403964 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067566815 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.506812183 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096892599 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108121259 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082626592 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071202795 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06961359 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354952068 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068468769 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064620054 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069577472 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058417861 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126861242 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068692255 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950564704 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127363627 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067066948 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10159014 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169107461 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089463257 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274305829 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068871875 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064935517 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154450879 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070774218 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065816217 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084391596 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103463172 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113622031 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066483645 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067074719 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166279377 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065014034 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07976766 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.650390353 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068030307 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154278614 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076396907 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064703799 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254646646 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088761012 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070703462 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064990954 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.215298407 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13561666 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068366057 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067210872 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068467322 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069990347 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360280098 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066476982 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.212670054 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068459697 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077844488 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069409822 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07064987 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074050812 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073340547 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088408144 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06686643 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075291837 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066254338 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066693854 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06725855 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084316823 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378085663 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067262363 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068751628 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065261612 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089650754 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097571219 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067213682 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066696934 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100480843 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064623403 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068902365 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066820059 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107815173 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067276041 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084110828 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070199434 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113721715 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066437659 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217301249 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068479684 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099793959 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070678551 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100173212 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080421244 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064525689 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0682303 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.423445312 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065550163 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06477103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069474587 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065871501 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068630603 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066902006 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07961407 seconds)
  done (took 21.597726632 seconds)
done (took 38.646021341 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244920387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083449829 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078451212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080136168 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074933111 seconds)
  done (took 1.797970368 seconds)
done (took 3.011153561 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126770622 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100766596 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064719852 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098331068 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06426098 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10240132 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101386303 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082086015 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100747936 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064383345 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098101638 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064817364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064108138 seconds)
  done (took 2.368886612 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086840303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086894198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072747993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085015752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063769179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083083536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082367322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090068246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082379012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073315884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065101317 seconds)
  done (took 2.077157549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08608651 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08703044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072482113 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08545843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065866003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085177221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084749111 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088418971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082377323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075241759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0643097 seconds)
  done (took 2.079187131 seconds)
done (took 7.725961078 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08035836 seconds)
  done (took 1.274026273 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.596426215 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.109960909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08235401 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112640124 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193006788 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120111846 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274744697 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087427721 seconds)
  done (took 8.960851079 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106082211 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071238841 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073326538 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069236806 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072519224 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068339523 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068367429 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072426804 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071377447 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068778015 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069875403 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070770085 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070390181 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071457851 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069674218 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072316119 seconds)
  done (took 2.438948213 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09409884 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091825143 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074489374 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075139508 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072436697 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072218116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074699301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073732087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07110966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072942064 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07509542 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073909152 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072490005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065350659 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074146419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076054184 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070999951 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07405231 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07493443 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075682002 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07531228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064462697 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071930846 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074250495 seconds)
  done (took 3.100184778 seconds)
done (took 16.977200011 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118486217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07473156 seconds)
  done (took 1.396223679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084548301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086787263 seconds)
  done (took 1.380431346 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085675766 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067619267 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092485868 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078789744 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066117083 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066558081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088728093 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066464624 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066090115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066250632 seconds)
  done (took 1.955890414 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071234702 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081742005 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071224885 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081888814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073877728 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064185843 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072547438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068284435 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077821118 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062937741 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07152543 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083546961 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071114182 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084745812 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072068095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068791412 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071116885 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068180501 seconds)
  done (took 2.529319235 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068240156 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068778036 seconds)
  done (took 1.355722874 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069581312 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065578426 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06757763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067273933 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063442327 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06322822 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063696394 seconds)
  done (took 1.673775384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389219486 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114111977 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312164331 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071344402 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08179682 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257418024 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065935379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070907478 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071213768 seconds)
  done (took 2.691354362 seconds)
done (took 14.200943383 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083018475 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087383828 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097202761 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376416174 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092624635 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066828279 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11508796 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189860675 seconds)
done (took 2.33687948 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217544136 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.652800745 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405475826 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205539763 seconds)
  done (took 2.481737873 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353833924 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088283229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058971621 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066909104 seconds)
  done (took 1.794964907 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06822895 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071351345 seconds)
  done (took 1.362505117 seconds)
done (took 7.081681877 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069244695 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085305207 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066022966 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063860709 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066999323 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064299804 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064016261 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064098044 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066785957 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066782069 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068686346 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066428984 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067145089 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064189935 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063639137 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06670623 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066315001 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064856507 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063951253 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066494779 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063963415 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066849289 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064419932 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063908086 seconds)
  done (took 2.856900902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08812173 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068460696 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072953382 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072527546 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070385322 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071287162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07153474 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066447228 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071496578 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068872897 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069917205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069643827 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06907723 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069703085 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069273788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070109576 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071800526 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06631754 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068695314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069575411 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071622962 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06684931 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069682874 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07209601 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069410499 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071173936 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069005255 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066753346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072386344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069516003 seconds)
  done (took 3.348890564 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072880581 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065676241 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066439662 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073430761 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066777698 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066122093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065297437 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066045225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064722313 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063797897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065599612 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063307002 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063934386 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064420872 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064513719 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067972236 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080139625 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064286257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063787608 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064902645 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067508246 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06459195 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064352112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064538137 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0648711 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063539854 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064209063 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064225005 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064436562 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063654096 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067526536 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068209128 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063467411 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0709501 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06783919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064180846 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068866817 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063981037 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064827342 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063435161 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063804495 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063760823 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064612208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071269145 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063953513 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065967062 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064099271 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065635844 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064853027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.180018142 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063709108 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063824556 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065690035 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065239806 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06826152 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063532364 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064251475 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063685886 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06461641 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063361983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06386992 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062915073 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066152235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06448931 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078636978 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070639543 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063288132 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064893388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064185663 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066372781 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065081289 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077502062 seconds)
  done (took 6.100596384 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093766384 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089385948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065332561 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065314796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061615883 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06439154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069467056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064027615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066563514 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082183131 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064389021 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065675165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065052751 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067580077 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064322093 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066067693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072695034 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061974258 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064297457 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067657357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064169808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069794273 seconds)
  done (took 2.76256501 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159545815 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071665375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105716068 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075863372 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070027721 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075935637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070569192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070405079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070679537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068016836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067949444 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070200072 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070229975 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067507917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067579927 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06807114 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07018284 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068001048 seconds)
  done (took 2.628100908 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079656313 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067583965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087408241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066760341 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065995004 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068833838 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070731469 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075056209 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069090856 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066173626 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074815608 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068291091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068812236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066743016 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068900166 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066285486 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068927459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065946968 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074096512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070132476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070297409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073803499 seconds)
  done (took 2.794872748 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082403062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069517401 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081987096 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068402695 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061850989 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064147994 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070796437 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065884146 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07006099 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068202859 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065780839 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06524164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068625755 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065537965 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068773735 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06582982 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068392133 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066180338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06829861 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061714342 seconds)
  done (took 2.610605227 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089551767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067563179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068981099 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076515483 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067763577 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068086865 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074909051 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067760928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068226065 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08876602 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067324689 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067963726 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075311001 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072386263 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068121363 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074737653 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07542169 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075402753 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067899344 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067533822 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088563071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067692916 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075246316 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067909558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067736805 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067513549 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067630721 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072215666 seconds)
  done (took 3.268704318 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068608629 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067043438 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064573212 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064081197 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063546436 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063902577 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064422249 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063820899 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066514257 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064122822 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066184725 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066624222 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066965452 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066215108 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066573626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066406333 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066552637 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064268329 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063685797 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063641181 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066178338 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066600486 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066322159 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063399266 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063479626 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066743753 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063664827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063516106 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066324365 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063787431 seconds)
  done (took 3.205099745 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078310964 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076242483 seconds)
  done (took 1.402093722 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065534236 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082159804 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063521752 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070930895 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069786418 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067308322 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074372059 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069948879 seconds)
  done (took 1.806902255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08510558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079629754 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069411948 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080262374 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077191706 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083875122 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135403327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067478943 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074130038 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064853357 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080408419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065825909 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073376421 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066824547 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072844043 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073529549 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064577686 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072689754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068392598 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064704586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067278216 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074759274 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068910736 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061996283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068152256 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088778794 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078339204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065769486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069318092 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073760818 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072184575 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060507029 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067500941 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068295704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06411944 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076582451 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081299546 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069821679 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075410585 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067541594 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076257875 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061665573 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071106503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073417247 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076969711 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066489778 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067242975 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060986548 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063942874 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068460692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061512342 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069351752 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060770341 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073156382 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069854277 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076785818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06512343 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068570332 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069572164 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070086176 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072716368 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068605474 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06868649 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066385927 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076131894 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071071865 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074890202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061398872 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060218654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064621794 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076255147 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090029648 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073033392 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067495321 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067149699 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064643081 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06979406 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067573693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072146337 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072777812 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066784938 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072089851 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073817679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067106702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069135566 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074249066 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065132755 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069462354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06459124 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083689442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065998553 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064324309 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064673537 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077424771 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07051424 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066660214 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064603393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07412499 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060628504 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067481082 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067592082 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067949186 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077789486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071523862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071280169 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074685331 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073608562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066654898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069053369 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062406827 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066464486 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065182521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072683732 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059530678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068340879 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066434724 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06597408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073725709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063604439 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066079155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073897152 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071125997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189842952 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064200652 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071445293 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067275237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071166206 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074862822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065887569 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061852775 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062314627 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070964237 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06714656 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070387723 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071510577 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070261582 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061869928 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064738835 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072413935 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075950082 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068850905 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068894886 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074120441 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068710102 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066705106 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074425553 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069760961 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06635223 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073462449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068542302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062005458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069445479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070085986 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06639047 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070891657 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070633577 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069264491 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068269414 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06622763 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074421657 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067558898 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065963801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067249717 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067088937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077994482 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069595962 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062439788 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06374613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076032841 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065183875 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066564846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066441174 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06947281 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067851477 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065114155 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06635681 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068615533 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077796575 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071087306 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067866446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072059873 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078257173 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067068374 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070193919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06719293 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068030414 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067399095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076000394 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072965843 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071200025 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069512835 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064045832 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072315158 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074022639 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065895578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06392773 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065925229 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070744331 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072760959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070826866 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067483304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065153385 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068028321 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069977713 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069600028 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067118691 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066064154 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07260644 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064901132 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07333215 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068012759 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077165697 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070191541 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061596911 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069363593 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065313563 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073797786 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062071683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064911049 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06609031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068317493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066726773 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069402834 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060746682 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07349288 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074039422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067206699 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066215544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066619354 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073699197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068023735 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070034475 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069182945 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071471605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075769252 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064739677 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068957702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075422491 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065275628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059967823 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070844769 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064531752 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063933009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064489493 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063601295 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068425274 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073083113 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071849163 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.187539317 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070247204 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065988716 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067038374 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063095176 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072186206 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070248239 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068723152 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075992055 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069483259 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069279744 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072748767 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069244611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069918366 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070641544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072171252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069566705 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068638304 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066562078 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070534611 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066625096 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065009903 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068893191 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067751193 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068035735 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072865084 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066534788 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067516423 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070137954 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067688783 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067654451 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067876424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067045463 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070810815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068227288 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068212616 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06927136 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062152342 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074889471 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067380151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074497106 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068453113 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063926225 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073120153 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068908673 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072922511 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067880828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068281905 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069111501 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066943749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070507742 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07417776 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065424998 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077759691 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074345515 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067810348 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070401962 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067921746 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068141728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066712785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068356852 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067894221 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067847139 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06741867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072063004 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070330964 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067428876 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0686366 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068031357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067371763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067934789 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061721169 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066644079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066003806 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066987637 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07607321 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068156721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066521007 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065558907 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067612686 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065520218 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062987046 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074072012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075309514 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066905962 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073700763 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065841881 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068085712 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077213459 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060393028 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064650828 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064212911 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064588178 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073495609 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066976829 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07610078 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06663648 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066406912 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064331613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067037012 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065206484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060683252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064085094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070350679 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065683723 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065509437 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067014007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069139163 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067112079 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076271329 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06589984 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067463567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06679285 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063334432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065192355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06477928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068015268 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066114879 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063166075 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063259363 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065109835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066611976 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066858952 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068157489 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067549797 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072083292 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065963796 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068425796 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067706583 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059902353 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199442351 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067477496 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066941293 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066108461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071399033 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070619788 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067628117 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07639416 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066808272 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067928981 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067375891 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064635401 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066751027 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067102489 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0662586 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066789185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068419995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075076849 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064480881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070701862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068651721 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067318754 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074181465 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06847912 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070494027 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073378446 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067434275 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069075843 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074808643 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071016635 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070686738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068547004 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068809931 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072808747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065849901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074460235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067215193 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067416444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06847429 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064794008 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066577455 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067284788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066246063 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07300861 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067777385 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066381956 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066156607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064905964 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068016094 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06994884 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074187095 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070123414 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069615543 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061659207 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064465166 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067302975 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066026454 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068238697 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070385386 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072853009 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069347232 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067522364 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066325561 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076110059 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072105765 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070911176 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065736782 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070183544 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068665207 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068953668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068099862 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066652209 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067853536 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070875909 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068302763 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0665733 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073523365 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070195334 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067179135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06809543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067539076 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066952997 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061351616 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06726462 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068722712 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071578642 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068836651 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066753878 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077310152 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064027739 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067161397 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069442665 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065781894 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071770373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061377898 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068530466 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067111478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067067866 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061508888 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065704268 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064608574 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068709949 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065786736 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061722111 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077419824 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075603163 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070226232 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065436049 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065060118 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061371884 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061763732 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065891536 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067496867 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068261431 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076536006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065313233 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066151678 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060904569 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065579795 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069209595 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068511935 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062388594 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060444338 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064982854 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068237634 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071612712 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064173064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065093668 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069216291 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06808668 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.193936567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07012671 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06458841 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071116951 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079579757 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067713451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067971069 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074464899 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074593118 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067653449 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061625155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067160513 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070504991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06763264 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068700554 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06762045 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081777892 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071134196 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066055434 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066020949 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069787139 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065975912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075395688 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068745665 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067474866 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071205365 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068429165 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075352981 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070560457 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074566893 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070576196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070254582 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065980632 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067632638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065664892 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065893873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068097409 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067407993 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071825999 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075387149 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065589013 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078649318 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076214003 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069221773 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064086853 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066801053 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067606697 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062064429 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068048424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065340877 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065199157 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065691929 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066282015 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06804946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073038732 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068333132 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067398344 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068016523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061081431 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0696612 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069105642 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067590579 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062899769 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06607923 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06850266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070530235 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071105427 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064158292 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068903466 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068102293 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067989104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062159079 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072720035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066178955 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068303223 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066124254 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066343985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06722271 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069625903 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07190082 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067835171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068641027 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070159805 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068516219 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063673119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063368621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072316893 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064231536 seconds)
  done (took 42.817094789 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10387235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063118895 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061016361 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06149849 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073117932 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062722288 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061442059 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062469767 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063127011 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065207039 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06149956 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062377362 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070434597 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077744439 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073973498 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066278484 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06236041 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062690729 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062175406 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062561715 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070199986 seconds)
  done (took 2.749447185 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075809131 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077651983 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075506411 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081299843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070521956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069763986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075296292 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070316945 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078286171 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072120564 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078771491 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07053212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071962898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072652237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072409432 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070253831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078136437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070586665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070282755 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075245408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070298218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075316993 seconds)
  done (took 2.944052147 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06965327 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067076666 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067993402 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060949586 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065175959 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061597416 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070091047 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063783649 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06923022 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065317483 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064902615 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065606773 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067793024 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060767766 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066306352 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063992999 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107625464 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068953562 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06571559 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067012199 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061000395 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067725437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061691391 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061537423 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065340292 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06921521 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066314075 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063643954 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065950673 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064595783 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065657339 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063549638 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068197349 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066375153 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064931277 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064584405 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065442589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065587475 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061264908 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063405535 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06631433 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061339673 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066218441 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066977247 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06409693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063703268 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067365094 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066074709 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061568974 seconds)
  done (took 4.563263954 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081319103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109472614 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067222907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090723655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079299383 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072573443 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070355911 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089313775 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063378321 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064790362 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081206118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078653245 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065921943 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069886585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072452572 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065193403 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066081018 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064362192 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06895939 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065172574 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069054093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072352641 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079600695 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078013944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069325129 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064441701 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064845675 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06966388 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07766686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069177678 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069896223 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07079708 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07989946 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071306213 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065063868 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068040716 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08084215 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065124045 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067788316 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063020813 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067454882 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069846707 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072033422 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080919269 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066256018 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070154447 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065216065 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06291588 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077474032 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067998072 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072884663 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079386619 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069833433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065896099 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07000546 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080267894 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066054072 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064072033 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068597209 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077299523 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063283958 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069103165 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07870796 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067275299 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072855733 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078611369 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071013441 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068851147 seconds)
  done (took 6.351054529 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078862014 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095442132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08330388 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08345906 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075897127 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075516225 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075477938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075567216 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075556862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080102115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075628204 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116121581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071181904 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078393464 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076136918 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075553615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075621614 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075285378 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075757316 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075692135 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075822984 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082772892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07571039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083137772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079452876 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0714015 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075639967 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075971212 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083068402 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08405471 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079284909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075860431 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075255506 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082897797 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080000501 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074831509 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064902716 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075165088 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075163683 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075072539 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07071555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083239423 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074967786 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070503432 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075258657 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07480528 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083179973 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080135096 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077932261 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080115783 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075232895 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083613033 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074870965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075571457 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083432913 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085734501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082873881 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083525049 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075964657 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082376304 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082704993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085076399 seconds)
  done (took 6.227861362 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085269856 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076272533 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082895592 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062202862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064017216 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071564326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064229752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064298741 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074484438 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074469604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076283025 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071346315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074491011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07588388 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071481945 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074554225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071918675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07192278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074161066 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071764164 seconds)
  done (took 2.800524132 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07697843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083957955 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067363261 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071894884 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068720333 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071400728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068555885 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068932276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067260511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069492184 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076556005 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075701565 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067194353 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071737518 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075613985 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071346841 seconds)
  done (took 2.491074315 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085766222 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073223362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080405138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067416128 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067092784 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06256171 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065914897 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061268206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062400333 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077787897 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066139641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075871889 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066266189 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06546332 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062427214 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071580838 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062857591 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063297628 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065689381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078382415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06933175 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064174704 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068896942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065473346 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068217 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07046185 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065015295 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065900865 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062813618 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065803092 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068514965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069689184 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062452273 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063533617 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064233983 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062997962 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0658315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065902891 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070544704 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065695056 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06371213 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067407272 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065366597 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066416255 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062469479 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066304846 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062043926 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06732398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063341901 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068092236 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0653591 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068499929 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065853424 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072674869 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06886684 seconds)
  done (took 5.04058612 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081679824 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069787039 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0620188 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064671309 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069141492 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066767664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069121062 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067363107 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067392051 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064277298 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067680633 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069387698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067362785 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069280378 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067254199 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069370572 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061136664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067485639 seconds)
  done (took 2.572423092 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073700634 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066791184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073667215 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065473169 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066952228 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068296253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062162774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06515048 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064556408 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066004652 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065712044 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06811719 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064714815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068384567 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06589183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065891298 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068525808 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064416875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06676405 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061728861 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067903274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064476752 seconds)
  done (took 2.809497843 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096985014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084964671 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142146409 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078455342 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085013993 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071399841 seconds)
  done (took 1.904777952 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093678236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103002373 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068236291 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070642893 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075494424 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069701291 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070059238 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07047872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078439783 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077438261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070674349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078624026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078137771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078103984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075769045 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075908453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069890291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069848643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066425612 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083328642 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07047221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078632506 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070202586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069783089 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070128443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077966933 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078852723 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076525342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070167156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078660796 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07583194 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070407452 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078850458 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076144334 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070463401 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078279033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070325302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084031469 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075940648 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077539786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069508777 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076290491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079130779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074943166 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078982562 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070673404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075138184 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070546891 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071116614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086564007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076026734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077718526 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078481723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078942809 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078634465 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08635872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076221523 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078143927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076178287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076583497 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078097268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075770696 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077838344 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076624218 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075739254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077808104 seconds)
  done (took 6.368821337 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107308299 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069752266 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072706837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076884461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077663454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070298491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07066198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071299519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070457935 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068021238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10921137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070529971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079005841 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078326214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070523888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070679254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070531951 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077652284 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067366475 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085865237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070690899 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078428349 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078418956 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078094922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076562517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075872794 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071177074 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070740715 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070632106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070734514 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075186889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071252286 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078255122 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067159811 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078427793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070459417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070073122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075156356 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070292971 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076483999 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077780673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08364685 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070491568 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07039623 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076006755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070171441 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070081316 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066815063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06985604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066964263 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076393888 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075868357 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075973577 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077573531 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06984808 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069881053 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069990918 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070047142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069939134 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075483159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077228686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069539423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085230805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069619085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070096917 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077286984 seconds)
  done (took 6.275969365 seconds)
done (took 129.921831659 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189843864 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166081614 seconds)
  done (took 1.696955776 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072023541 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101946782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080595113 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131085242 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067751861 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100338484 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099357231 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07875672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066725147 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066321849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066926624 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068569307 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132170674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066496274 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065936993 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068944644 seconds)
  done (took 2.688636115 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10372488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171288966 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105465497 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066479462 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099675079 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073149624 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064913297 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075257834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071706567 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066288632 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073891197 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070681061 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065286959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070776258 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071677656 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072952637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065054018 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073088036 seconds)
  done (took 2.818456966 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102196791 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091815023 seconds)
  done (took 1.553660891 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159128516 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106214182 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146056271 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353216202 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165064962 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148690098 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145405693 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143769976 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116958046 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139437862 seconds)
  done (took 2.978084784 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101999652 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156151539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267259681 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117241757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073356727 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094259978 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119280365 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078844302 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080147135 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079992487 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080066301 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076554358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099782934 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07346585 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073808052 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076008126 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104225156 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072635011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074876485 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076038138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100332606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066041032 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073845934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072732377 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077215373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077131721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065773787 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065858289 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076403651 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074874249 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077173275 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092858725 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077050201 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106675551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070988709 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1070665 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076217379 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07382235 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075150397 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073616618 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078410566 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078157984 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072955141 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07627962 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065806971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076570475 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065866931 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065920475 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078157344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066989671 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07833449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077272277 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105588218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067272596 seconds)
  done (took 5.996674261 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10706784 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105528707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071975029 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112680367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104167207 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072807752 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103934929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096261905 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10356608 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070350289 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068518002 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07037816 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082386043 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082742707 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115456969 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106566185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073503054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071542142 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106211091 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106155911 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06839477 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096763642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091130394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102716467 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.0675692 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070682254 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068036739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070484395 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076706978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078359574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070399661 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080834208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085591418 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078231691 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067324078 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068078996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068696405 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079900337 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079530661 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078743822 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077745476 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067906032 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068362683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069355502 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069984487 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067698452 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078786028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080300879 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078418537 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069910559 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070260667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068430364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069352698 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079879462 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078131897 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080688676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079973217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068976303 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06877631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07229956 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080835492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079223334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079858094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069959265 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079307646 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068650856 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080561946 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084667161 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068624369 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070746119 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068925356 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069718568 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07006737 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077808745 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077578254 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069500686 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069744074 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068421335 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07995531 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078048507 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068486259 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077013126 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067741455 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06862717 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069553726 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069564727 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077801329 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080285218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069991357 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068686296 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069356373 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068832209 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068131369 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077410929 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080240805 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079607579 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077503549 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068893617 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077653484 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077564773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069508815 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07808894 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067957297 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069064428 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068349939 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076433601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076036831 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077333892 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.196963461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068691407 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077867175 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081693851 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06922522 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080275899 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081563585 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079686643 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068145263 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081102402 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068767279 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079547305 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070361831 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079432695 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068740389 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080190768 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06963878 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069844004 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068853932 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08017359 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072783198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069655477 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069975609 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069488348 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07987174 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081577958 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071772071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079161246 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078758588 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071148333 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079679347 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068958547 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079895916 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069943846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070322287 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067922192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082117334 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069067791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069309704 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070142489 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080349184 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069636368 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080050826 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078727906 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069335473 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081929644 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079684608 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078207265 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08056272 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070164933 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069524274 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068564685 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070057768 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077842273 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080415186 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070595166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069663946 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077952521 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079857363 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067588764 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078268036 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07837815 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078327683 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06920768 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069927594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080437137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08082972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078455352 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078147842 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07862946 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06956315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0774135 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078269055 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068787332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084433168 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06875346 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082855006 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079369703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07666852 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078547743 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079861523 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0799643 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080289033 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083662743 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069006301 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06820814 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.086140635 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068472043 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069457036 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078212468 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070011854 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070465705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082895288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068806638 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07977194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068259995 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078803178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067186856 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069491625 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082144211 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067453899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068468069 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078096108 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069588032 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076198371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07882703 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076366031 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067068271 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069456337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208277966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079545351 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069139669 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069003293 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0706037 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078031497 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077264519 seconds)
  done (took 18.702134137 seconds)
done (took 37.800707631 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216603822 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154702602 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183887885 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119894731 seconds)
  done (took 2.140308918 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122144845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105924822 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096617016 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066513329 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100281348 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065723968 seconds)
  done (took 1.956636488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321996139 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214125758 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189387533 seconds)
  done (took 2.120675952 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209810078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196895955 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435510851 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.27287718 seconds)
  done (took 2.631602985 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150476584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093065258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070041563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085176367 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134828519 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162762152 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101405688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126645727 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080041613 seconds)
  done (took 2.460816366 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149694034 seconds)
done (took 12.864896404 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.210981412 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102099718 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126685198 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114785243 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10511658 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200680499 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.226651417 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221374935 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.175736456 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075775411 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.189582946 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074604144 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088885274 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186735047 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072315832 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094600865 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066917245 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09188897 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07970092 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077582305 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084502217 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075272067 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.0811183 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163269804 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075218884 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.229289368 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.165885925 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093998543 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200550547 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072527039 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077030342 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110572345 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172049808 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050463154 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.197388426 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070339273 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160323938 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072261967 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072073092 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145351082 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.175090095 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231932132 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073837526 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095660552 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052507675 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068360409 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078866953 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065958627 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066860733 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076213649 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090743677 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053633639 seconds)
    (53/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.111116067 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122932425 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073548279 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079678575 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074177807 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072624642 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051848109 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193649973 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086691215 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.216045381 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078024756 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18594508 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068371073 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097481803 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073209127 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067550654 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075669182 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07270337 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090075055 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140090071 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.14526777 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054013466 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128593979 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088545404 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066891212 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075401874 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067440155 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092239291 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182755732 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148890709 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068643184 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182448834 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052278359 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161720143 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18787042 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066661258 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052218877 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.307020385 seconds)
    (91/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114040384 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128486168 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094261228 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193604239 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143902789 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.102883587 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093468678 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 0.068720445 seconds)
    (99/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191188406 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075048764 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052285678 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063631475 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090298404 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091330258 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090991144 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077396449 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107537908 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066041198 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051282028 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209043528 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052078271 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105560682 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073532868 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.143458448 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114343603 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221966278 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06592206 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081559885 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066778654 seconds)
    (120/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051860768 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11959183 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053026812 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074535345 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.099284298 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051566707 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07644938 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074364167 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061683339 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156724563 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157005893 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052787241 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054394534 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077592335 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067545339 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147609315 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156566578 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148790832 seconds)
    (138/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071151004 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098753659 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067918788 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073518456 seconds)
    (142/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073070204 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089888945 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069043369 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067781514 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112838131 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 0.139099715 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074325842 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101617996 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07333811 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173853341 seconds)
    (152/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080407227 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.156441798 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05263847 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195714804 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071994529 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156451177 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073026694 seconds)
    (159/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052336478 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066341823 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156046112 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154795285 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089935016 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.295130552 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07288425 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 0.14403157 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069692052 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065341171 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065464324 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073370743 seconds)
    (171/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107013694 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073939444 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076912848 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065616996 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100638078 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065659594 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067383146 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094499364 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112977671 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070793862 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073693443 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051402288 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069375834 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073837794 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050516123 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050618887 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052010192 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12011133 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053038153 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075578636 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116966605 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086638665 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093076367 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071773765 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05328217 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.143711806 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071708287 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05224828 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14837624 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.290030114 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05225893 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052126947 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09486312 seconds)
    (204/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078561009 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093619431 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113464176 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053425673 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126805832 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069304868 seconds)
    (210/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072777104 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080368367 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070710991 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051317318 seconds)
    (214/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075718236 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051762049 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066083919 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143175381 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08909677 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052520324 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063326512 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051154709 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051506968 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065012227 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.070900987 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.145379439 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065868249 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05324529 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0666014 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074573074 seconds)
    (230/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071338069 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078908681 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076126581 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093287186 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074431134 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083120397 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065697097 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066083123 seconds)
    (238/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068340487 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052684616 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18507315 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051601225 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052955206 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051975401 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073388739 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066759261 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075104901 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066889779 seconds)
    (248/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072537803 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051229811 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066531694 seconds)
    (251/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064907238 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067652349 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062389248 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091588196 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066262175 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090927386 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067276188 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052708397 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142887591 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.163704892 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128149811 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050939684 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053224547 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076663475 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05312716 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178111917 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089863839 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05123831 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068950078 seconds)
    (270/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061429886 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065847752 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052557366 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05151973 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 0.131248256 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051152901 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072636594 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065860437 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074872058 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050817798 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06600237 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079794717 seconds)
    (282/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081570282 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073295599 seconds)
    (284/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053326982 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065897218 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071783912 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069476735 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 0.133397227 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074729411 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06457659 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173291313 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051379687 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064708408 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066313244 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071913079 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073741726 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089292172 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088176743 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051060258 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072092927 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183010029 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072968318 seconds)
    (303/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062179891 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074248275 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071702198 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052525246 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074085782 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051799525 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066524966 seconds)
  done (took 31.242653133 seconds)
done (took 32.651817614 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086019603 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093591884 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074689166 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093840427 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080320242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076058621 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072541074 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078580823 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07975442 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082284834 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078109589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054602372 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074525195 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074602533 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075434493 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091422732 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079217935 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073957248 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073609602 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065041126 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073358993 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065653533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068445645 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054457181 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079168232 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072149012 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072202223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074603053 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065765657 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066105647 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070125304 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073891276 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065626797 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078706481 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073194048 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073360086 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074975151 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077434614 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068147974 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066325304 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075566153 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065624144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073208771 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074699775 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073082357 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071785015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07388792 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078384163 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092233555 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06780153 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074699745 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076277577 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076420338 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073276595 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070141592 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073452408 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071514575 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091714669 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074194048 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067935297 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074303053 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074851326 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072234311 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073912028 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072972379 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075543313 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076233776 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071837611 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075170081 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072373027 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065273731 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073131818 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069222527 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065744726 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076133201 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07784134 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064785697 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071425467 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073224086 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071275445 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06527724 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067160189 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067052132 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071863947 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067245193 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054585006 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069744519 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072625886 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064888423 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074440827 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072719092 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073382872 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067670583 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075702261 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065515298 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071286022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065717127 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065544643 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067120549 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070094053 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065444938 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067233475 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074824362 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067009819 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072895562 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079852284 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065466875 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072600178 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065063904 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065073061 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080492385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075562741 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066322448 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068025386 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065090715 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073294461 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064724692 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065648923 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065519858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06536254 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07182544 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065049218 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067025737 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072552582 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078870861 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064954826 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068694229 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066947391 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064820182 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070957565 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065588374 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064785286 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066138614 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061467225 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066496515 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064552117 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072250538 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066610967 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205606384 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068801094 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075181674 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071958113 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07256672 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071561094 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065168931 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059173892 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068457164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067633248 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068520504 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065873662 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067195622 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065965456 seconds)
done (took 12.501749655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068459833 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141451841 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097469887 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096664029 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086185486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067418846 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076385135 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102009387 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068091653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101999246 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088494338 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086306463 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114981288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065319048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066389558 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071077271 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06834216 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082258475 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101628774 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087985085 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116090215 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065878231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09381003 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089994149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089364239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094849707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069856599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070786863 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069856786 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103088027 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088173111 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07019819 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067304649 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098885182 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093779934 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084451025 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067099706 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083642112 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067143254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066012194 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068416659 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100251234 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081167886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08184176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070786211 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070396092 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067170507 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084733728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091228283 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08021178 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086975524 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102415475 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069103646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066164894 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065128704 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086729913 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066563454 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069815522 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066941575 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068749885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066407276 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070008595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081398961 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081486414 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070669895 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079762675 seconds)
  done (took 6.850685202 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08752066 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092944636 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083660843 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084435614 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065798198 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066284596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067433969 seconds)
  done (took 2.046920537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070394029 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088695047 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090388166 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090915134 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081886609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088038382 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075969163 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067322022 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08808186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068221024 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08804059 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100634449 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069999614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074280521 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091053058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066768078 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09164596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067479819 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070828619 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091307829 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069781358 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095892991 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070398981 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067283678 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081590162 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066792863 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115057569 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072198431 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068165368 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06940135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064421303 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1076708 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080422195 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074112676 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066582554 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081276048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081829599 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064697794 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083494251 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075386344 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080249404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066895251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067636265 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064553247 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071161926 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077268367 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067764642 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067450969 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069018829 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086842265 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067031106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08031239 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069871671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072208282 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067993031 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07302211 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077002922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067749481 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087210427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068314932 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084046728 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083049151 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080957684 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083927225 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069246536 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080756256 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080454965 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069671756 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068901666 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070817388 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084347487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064898418 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068890254 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077287601 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068737702 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090928592 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089614311 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068214566 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080638823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067608276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067028338 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067045546 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089784901 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072305664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066424479 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070848872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070157726 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065101737 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066551635 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070800148 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064764153 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067894896 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070184604 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069415171 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069812595 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083579342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069130772 seconds)
  done (took 8.848273298 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07096118 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068586673 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070112112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068103525 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068116779 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068625618 seconds)
  done (took 1.935348543 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097043016 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069064826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080655029 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072139744 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10484779 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086725264 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087837455 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078695444 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083318589 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079041571 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086950282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088152484 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092468338 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072254593 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086291947 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071475071 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087319831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074665121 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078227123 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073211196 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086985505 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072368285 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073022956 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081733301 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076521719 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072027674 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067699612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07889288 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078402038 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079046707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072651592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076025801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07086586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07827371 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087236836 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07104141 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071710607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077574427 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072156222 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076583755 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088126882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073061753 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074424215 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077320411 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077822202 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070551276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077333622 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075575273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086277325 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077410337 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077544878 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071363361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076331441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077882803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070910663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078846003 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077585197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087459441 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072720139 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071518685 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068885009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075732148 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078073523 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076696492 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078811035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077513891 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071349557 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072728048 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07270592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071834007 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077532786 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068851799 seconds)
  done (took 7.100397851 seconds)
done (took 28.270721306 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535821641 seconds)
  done (took 2.02180398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620988804 seconds)
  done (took 2.132281401 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.430483817 seconds)
  done (took 7.938558849 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40427548 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525212874 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722643695 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132160796 seconds)
  done (took 3.330418859 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702573526 seconds)
  done (took 2.221028201 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220895052 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202681262 seconds)
  done (took 1.952797457 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379941137 seconds)
  done (took 1.887343877 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141709739 seconds)
  done (took 2.651702164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262948521 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175469263 seconds)
  done (took 1.955334242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478047962 seconds)
  done (took 1.992796418 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861309679 seconds)
  done (took 6.376981988 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2136689 seconds)
  done (took 1.770345645 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244216009 seconds)
  done (took 1.757860037 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.725637664 seconds)
  done (took 3.240223782 seconds)
done (took 42.746422695 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083471631 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082396448 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081271289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079064246 seconds)
  done (took 1.824858756 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080652295 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07416262 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077622574 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073641077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077050339 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07414552 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.0751068 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076432225 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074237551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074659505 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0733844 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073263293 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075865245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07503662 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071825568 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075978865 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07743537 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073527895 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076049535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073989182 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071473807 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07638058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076395206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072207437 seconds)
  done (took 3.318754863 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081843013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075005955 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075635627 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073389452 seconds)
  done (took 1.832634524 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082143845 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096855417 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090172262 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079168524 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093890026 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08783485 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070324957 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069730258 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070868508 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07835202 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069055741 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096689992 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088782698 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078545484 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080882749 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066378588 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068933527 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088170922 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078760955 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078934401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070417836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078559248 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068652252 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089709597 seconds)
  done (took 3.443006311 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09000765 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106300341 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082053374 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089641534 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092288633 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065943047 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088809937 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091727267 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128145949 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066093797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071159565 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066041742 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074319448 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06611771 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082100796 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10860913 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112221447 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06976011 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097764597 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066121191 seconds)
  done (took 3.247830152 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076336869 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071129933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066672716 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069870866 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077552456 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073550521 seconds)
  done (took 1.969103278 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071757266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068469436 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068511682 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067327068 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072692792 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067778759 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067349233 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068230153 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068172032 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06781958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067857709 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066524001 seconds)
  done (took 2.350119181 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210519195 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068577973 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070181701 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066685328 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070893338 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067482966 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081528511 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068313939 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092303325 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06695783 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067221559 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068948052 seconds)
  done (took 2.528288322 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214328653 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078767334 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239997709 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151657374 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111610708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116109621 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113042225 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114354913 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143140317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101088013 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168558505 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168270982 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108968767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138049475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08977478 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101479435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155217007 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16366655 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106095531 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168241774 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147147805 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127326648 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150231404 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107679245 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106504794 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122218427 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07203133 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080700035 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171444339 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133435639 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144581043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112119229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093404569 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177865392 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172687517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141779856 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147757041 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084845383 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105463226 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135150461 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202605143 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092489931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165631315 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108845683 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218997938 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136714866 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121925534 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121678876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106595782 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0912195 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147100972 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185294899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138352829 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088780808 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125593138 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114363617 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114964288 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114559517 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184018178 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16205989 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128793472 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072157258 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108532761 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155031576 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134698884 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10943513 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125417234 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09244805 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136312549 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15654017 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121382173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145420112 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118227711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089685479 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120736401 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141344748 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128266734 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161893784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125464428 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073675754 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125003092 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102464707 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081352726 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146627703 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07605171 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178307219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099610043 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10975212 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125999522 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110090156 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110010347 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159563021 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145107888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102910176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065345001 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245948705 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12248409 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148046469 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087857288 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111347826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118866287 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078995126 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137956776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075454908 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123690401 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078282742 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129407403 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131050478 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078216501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123745319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105460384 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102448393 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133471246 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161753036 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08854823 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082402262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170327237 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123469965 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104750986 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146127514 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158201206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103228392 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100916726 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150062431 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180410101 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090107861 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16385041 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106911636 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083965337 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088829698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124914753 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112643615 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124769523 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082331535 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118805704 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170057576 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075278865 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096428086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135116673 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079857706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082011308 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106404928 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105443062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096281089 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100715212 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10337524 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13672198 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124164543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105949927 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124764183 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099096933 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314394496 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088876926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103517518 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106332973 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071495068 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137459837 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1584846 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080525796 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16611544 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12528542 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117528094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121582698 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08456379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142396297 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080154175 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071668247 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145253223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111554154 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110406291 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153116452 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11689653 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127067532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120485342 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133481228 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132575186 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132116544 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105861827 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089675409 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113184396 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128180443 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073994333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091181505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080128807 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105485131 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096175337 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083567302 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141916364 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124619324 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110138815 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113096084 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09711312 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149033329 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076848882 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129568801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120671128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096403998 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154456582 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154705941 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131925328 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099836468 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137179447 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070833252 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074259285 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088201635 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123072458 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083104187 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083699519 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259235563 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150234277 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132596479 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136769425 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126225843 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121951197 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158014009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070743943 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118926269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149941185 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122350947 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106216514 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090747687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099676192 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144008802 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10813802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184392085 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118149138 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124953054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15468761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102086296 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080447035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10384896 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13658463 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104545756 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144138523 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101109991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08896481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110682672 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075318273 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098948779 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127623774 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119389174 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135667568 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116974738 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133015098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078137716 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116496516 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122396014 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123025402 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064730933 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121781019 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163480248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095406957 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119346064 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153977046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079580869 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135233851 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17592173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144471417 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085380732 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252958184 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121491204 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129844041 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122246622 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142097776 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108658466 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138832927 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111692455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087176555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08938335 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098854502 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106285918 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096171027 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108006815 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115555179 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096584379 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134192325 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104784829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109927548 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119874791 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100016407 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092060413 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097112002 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17723058 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118842957 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171814155 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100676254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146162341 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165605522 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07572828 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07940778 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078494162 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140040304 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084827895 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130593482 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107394556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118532119 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125187291 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143712707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0964732 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069047086 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109884315 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134057394 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125777382 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099408056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1044457 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165765696 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102448053 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080196444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115074826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116405921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103350933 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17219074 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06180327 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107116776 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076555216 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080493544 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127903994 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294306968 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081561135 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104739878 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120989726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113871164 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128951472 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101987802 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112589623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126701 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150851906 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129256262 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090197744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112229129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129995372 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158165933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10622805 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09785159 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176252226 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154107222 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16082549 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088745143 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115234265 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115223049 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109628238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139301072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084330399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164041942 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082783471 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137826509 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104540135 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089401812 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12971277 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109210732 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088956565 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149354958 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118460108 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083436109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07789865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118613513 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120601716 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107257306 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076017987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140321142 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074356696 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133090009 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160300443 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08116802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108502286 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096719025 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079856636 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10657893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102217772 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087497928 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.240481097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177981253 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089268203 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153139991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135649733 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114433851 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138629365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103662186 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640385934 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079140343 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154393633 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117057332 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175432167 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10193098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119497482 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111201723 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123746295 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146844889 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105400998 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182251116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134612641 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116407774 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080562574 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102980091 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104203835 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088476162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108999066 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116550401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093043894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116445677 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125672219 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082733672 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096769556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158101726 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118266916 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144253513 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141152528 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085871017 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119114261 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140260115 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08130786 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12161241 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153480633 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106138772 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100191395 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08099197 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100911701 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159141137 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073790224 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158902025 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118509302 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253266568 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11444421 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114081085 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132447032 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107427264 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123027124 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093452154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111768152 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115083574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083609064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078038901 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107081453 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112283106 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099761278 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098635681 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100344402 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154110383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073077328 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099952372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115880485 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145214643 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175857882 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089960471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083244511 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118561156 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115153514 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11370333 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122144059 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080559166 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082816598 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081085497 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07888764 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110322552 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113811821 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115340113 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111629128 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163796383 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08357534 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231597152 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096522701 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106260275 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07050611 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079013547 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096472882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099252382 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108055252 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110905086 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160438452 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096712685 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09134209 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091911083 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075165813 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084252184 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130285426 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110523534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118589459 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098810122 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062940881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107514629 seconds)
  done (took 59.414180988 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112386708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084573583 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09522487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145313315 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124479618 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203044358 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155305706 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189628792 seconds)
  done (took 2.764383241 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072277244 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097660917 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104470442 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084119756 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068075301 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069766797 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233275231 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081978231 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066843399 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099303107 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079188193 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070051958 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430780643 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066834784 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068723939 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06272744 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068480812 seconds)
  done (took 3.451031674 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394617846 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614193302 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353187213 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073046673 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.479193521 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085829656 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151021041 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129277344 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073620323 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538964601 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409663066 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125170051 seconds)
  done (took 18.061666215 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079370182 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070610864 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084937634 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084163378 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07326999 seconds)
  done (took 2.023598679 seconds)
done (took 107.798619578 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083984032 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.608626434 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053893648 seconds)
  done (took 2.321680562 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086236781 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085719853 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087101296 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084225913 seconds)
  done (took 1.982434903 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07729103 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077106669 seconds)
  done (took 1.785262453 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234473224 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165697043 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096727573 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086191721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081040638 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081498211 seconds)
  done (took 1.887302683 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074736053 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076125466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073788738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077750322 seconds)
  done (took 1.933723657 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080606002 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052880043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055417956 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058832749 seconds)
  done (took 1.880166083 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090434892 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079694666 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079931525 seconds)
  done (took 1.882333542 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105864776 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087305564 seconds)
  done (took 1.825850355 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085055367 seconds)
  done (took 1.718853759 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103539484 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102711262 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133328569 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112084186 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140767573 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112741197 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085890184 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086968805 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077963847 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087471212 seconds)
  done (took 2.675777636 seconds)
done (took 22.102373364 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082211169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371085453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360463913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091072716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670584074 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357996862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999432577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094208395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116595839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068123849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086155506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648275146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987795002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324520005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971250736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320432931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653183091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069592095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068417837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068905326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982568125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068370821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06886855 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06925681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649040731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372688069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069427882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320533424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068923329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070627445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355710974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068862285 seconds)
  done (took 16.193858655 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073675982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122325449 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074222272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086093026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071653425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070630605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072003706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069539374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123284891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068575875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086255383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069164957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090461359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069879534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088991215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068912083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069677394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069439904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069275608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069873504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08852315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068314572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069610573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069643256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068803382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081985622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069325266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068821872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069002963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071736646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071941059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069987752 seconds)
  done (took 4.100376899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122596993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129535006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075836035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107388404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116221942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071087379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149210466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094983276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131840669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069194664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086700895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068773982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104043983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069214356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088747356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069556159 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070235518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069648357 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068747657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068950268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088776189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06854446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069002935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069420206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068927688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082553119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06892072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069237662 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069005292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071005154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072156374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069464039 seconds)
  done (took 4.349410373 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076047524 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076407746 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084962027 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084843337 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070602506 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073445936 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073965661 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070537519 seconds)
  done (took 2.262959155 seconds)
done (took 28.546793657 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082333326 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069597661 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074226369 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0837584 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074260154 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079552606 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068451211 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07659062 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073123445 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073764275 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07587257 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069131199 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072587251 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068033503 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075076365 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068533909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080160624 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072791272 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079573363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080607052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071152142 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073996197 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076319471 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080247574 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079592134 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079607387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078954209 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073643003 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069676183 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071209048 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078147512 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084916315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068761476 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079795275 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067946879 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068940895 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072682576 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068292336 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080153477 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076928887 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070277359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076927917 seconds)
  done (took 4.771357181 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092173258 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09364783 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085443088 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063082407 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067530417 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066494672 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090412847 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060453772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060611167 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089552466 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05647916 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060242961 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066710883 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05503052 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061257396 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0573045 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062480923 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05585913 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061149346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060696361 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090171662 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054212536 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078612148 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0639802 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056802554 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06204936 seconds)
  done (took 3.434688452 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078691783 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086222998 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090913076 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132769157 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106711032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080717746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080273209 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096337354 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090429809 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067707969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071985536 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093720584 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091025294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075007728 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068135551 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087228162 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084704968 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069732527 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074339125 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09585589 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088177791 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087779947 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097720164 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085584568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068003974 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070900641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072260605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082887576 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073502559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078220782 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07266136 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072820377 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071036434 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080921447 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072436694 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070813634 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093862686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079102786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080266562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069661468 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07777556 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069882635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094965178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129387774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067844924 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075890426 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072553695 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079112657 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06877433 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09013564 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080971936 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068658475 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07231799 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068320457 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068945027 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082417579 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071142827 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071073039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078302542 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075316141 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09497739 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074372505 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085402603 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068654851 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07727282 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06793338 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069806619 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067525056 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097715912 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070341588 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113342582 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07009782 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069592159 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078625231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077111054 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075493454 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069544455 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084669281 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079817417 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072820421 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077594897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07205996 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072544304 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093685142 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071294487 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070353085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071924032 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075489043 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072492838 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070413073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082260862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068655844 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072761018 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086814546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068719666 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069679924 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075123786 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073371923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.079585041 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080390155 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074191756 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069708181 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079220661 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068515792 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072289956 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081805323 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076014259 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067954678 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072783078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074841719 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069358163 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070339052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07163092 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070712604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077949788 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076189049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073580698 seconds)
  done (took 10.83591889 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169569603 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159451776 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071525015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150687925 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077675331 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080567274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153254966 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095831668 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068477907 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069599005 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070037717 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111503492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107436977 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117713712 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079538928 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068450198 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086032412 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116401867 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154647855 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149508046 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085876269 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078072492 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070418888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070396002 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071295494 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079376501 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086676615 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077876574 seconds)
  done (took 4.47139589 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083136207 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106505841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07653592 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092770434 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091836872 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069265041 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071847445 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070959765 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082471535 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079577334 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068590406 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07440329 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075964389 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072068446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069698082 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075710404 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076188637 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070699945 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072670374 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074189338 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079574104 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092920162 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072984781 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068017915 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074387416 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068192843 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064199822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085898075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068877381 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.0963966 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067020768 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07392736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083674227 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069515948 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068728524 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068969056 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068688758 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069248006 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070873535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067534465 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067478781 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058635302 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067267611 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079952477 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076037419 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056780248 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073366802 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074609332 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074439393 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066742343 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072572165 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071555789 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07253204 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076358969 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072883264 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074616998 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070558877 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075507684 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077891587 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068908379 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065798158 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066891871 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073748539 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065943157 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078174025 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073678616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067370691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068416395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070205239 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076004487 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068669653 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073518027 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066241114 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071310246 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073404327 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070763614 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07039558 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067430987 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068636688 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069048721 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055850898 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068969193 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053574796 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072368171 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066944636 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067011467 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06829235 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073910997 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081038757 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070521862 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075140043 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069830024 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067723769 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071446504 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060766514 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071294417 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084660318 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083724091 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068611135 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066523953 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08229288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073621441 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067960812 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057343652 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073971839 seconds)
  done (took 9.309423028 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09464378 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071427576 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086558461 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092450347 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089104909 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076679172 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079121128 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070027807 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08440201 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074856181 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078356084 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068464774 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07942868 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07913495 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07120131 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079642075 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073264259 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086944954 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083748167 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069663049 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077830377 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08225578 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091440508 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083670859 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0823387 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083951066 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092218168 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079078605 seconds)
  done (took 3.965146405 seconds)
done (took 38.431643852 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.742479137 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918192063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.735367338 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104968076 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.812292672 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.983531072 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.88539545 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732693789 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.932311382 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.770840765 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.936597805 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.89987733 seconds)
done (took 65.124360158 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.783763866 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873031752 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980639115 seconds)
  done (took 5.528102448 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.031404024 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.292769653 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.979565448 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.732731976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.73581527 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.050025462 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532652779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239071522 seconds)
  done (took 30.23831886 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.830947632 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.963987745 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.394160985 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.428196806 seconds)
  done (took 15.337855818 seconds)
done (took 62.67364161 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.74368104 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.789388088 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.741257708 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.715512751 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.789013467 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.743073435 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.152192049 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.74798818 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.730556583 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.717972414 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.732647432 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.170067049 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.743347329 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.200114338 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.733591585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.738016242 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.768339079 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.25360262 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.890190861 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.748889505 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.737279478 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770656665 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.733988312 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.740504258 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.749444439 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.732717678 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.168664753 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.738866007 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.360813116 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.736006156 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.762611557 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764329339 seconds)
  done (took 202.520023297 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.733908814 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.8013452 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.845575053 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.779580277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.426373102 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.913316068 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851734785 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.436335996 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.733475935 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752084886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.954838068 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.735240765 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.981645574 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.739215061 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.765727883 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.827371938 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.982710751 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.004592788 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.773498198 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.909488254 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.747922771 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.87406888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.855858923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.94598114 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.746024665 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.832159475 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.758547596 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.749389561 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.9242418 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.957859134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.75224423 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.754523637 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.863534127 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.608824017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.758749607 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.748025603 seconds)
  done (took 169.503927114 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.278533105 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738712268 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.737553309 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738487006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.750995133 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.735131837 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.921412407 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.858636255 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.34168873 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.473868019 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.737135738 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.791225879 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565755344 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.73254955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804427235 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.745801057 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.73438407 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.748926155 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.761052237 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736780916 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.736394326 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860750791 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.74609855 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.808397263 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744473956 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.73890707 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743380459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109305563 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733666327 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744684289 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.998173088 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.735646765 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737400475 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64570645 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.991110539 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829776972 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.736880534 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74351932 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.736748504 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.959202094 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735976648 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.739036508 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.741510692 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925500261 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.734757728 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.86263622 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735322689 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.250425307 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.736628112 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738980517 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.381962715 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739450403 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.437464265 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.735056621 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.738495683 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742970406 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.739675741 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738983186 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.745309875 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.426156838 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.815808391 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.739790084 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.743527164 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743335156 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.739609838 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.945728257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739505731 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.879087294 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799432399 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.972944059 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858829683 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738119214 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808801663 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831453909 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.737207513 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.740103519 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741561066 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740712965 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.821212307 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.737837135 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.875632097 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744259738 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.742289901 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793505809 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.810463799 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.737651416 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643750896 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.737737865 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740074154 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.074253121 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.736663743 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.808279533 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.738428329 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741802141 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7402919 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.879447199 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.860790989 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.561583319 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.737551338 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.379406485 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.737973183 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.894426825 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.737013275 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932630337 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.737173642 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.74172398 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8242827 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743508711 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743738832 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.740533807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774387518 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743402527 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.800362451 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.115969865 seconds)
  done (took 399.021170868 seconds)
done (took 775.048808856 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417916864 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.370035681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489033229 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.395128448 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.364109846 seconds)
  done (took 13.718644841 seconds)
done (took 15.395391087 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.830442316 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.831426763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76399054 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.833148139 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.760354767 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.833620347 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811268447 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766027702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.798502395 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.767392571 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.799834521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766517418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755519932 seconds)
  done (took 24.999850727 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96865064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.972401886 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813683763 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.967372816 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788323146 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974811666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901346107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889230748 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889498768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757147218 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.756138404 seconds)
  done (took 22.36475294 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.98004356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978522998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.818515815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.998654348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791006798 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979626008 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.904080681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.89412724 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892640161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755747968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757682524 seconds)
  done (took 22.435635989 seconds)
done (took 71.476749757 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.751618166 seconds)
  done (took 3.436661884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77908129 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.934352884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.755774705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.755227832 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753116783 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.754206069 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.755895493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.75359962 seconds)
  done (took 15.928096158 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75292039 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.752259423 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75094243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.747982778 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.751412505 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.750416074 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.749656886 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753711986 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.751666012 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.751237489 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.749831403 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750834119 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.750890927 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.75345539 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.750208964 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754060968 seconds)
  done (took 29.709410182 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752161433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.750182148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75121333 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751743089 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.751627436 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.750980254 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.751384953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.749886726 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.751309015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.751024751 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.751335529 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751014791 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.75047419 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.750902928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.75087373 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751813824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.751541636 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.751701519 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.75558733 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751049681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752203933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.751217182 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.751888607 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.750614897 seconds)
  done (took 43.722790894 seconds)
done (took 94.474396102 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.64823689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.144774023 seconds)
  done (took 8.479468919 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.755565293 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755573764 seconds)
  done (took 5.236296344 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.7560512 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.753520986 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.754221765 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.753774695 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.75362269 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.753644431 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755875971 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7529291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755269098 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.755375827 seconds)
  done (took 19.232646754 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.754322455 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.755109278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.750868632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.754992425 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756075213 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.750219797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.754100787 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.756307955 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.753981948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.75139957 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.754524187 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.752447058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.755269217 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753964726 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.756336 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.751868396 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.754881119 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.752589604 seconds)
  done (took 33.257976101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.757511897 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.756187059 seconds)
  done (took 5.203420503 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.752492772 seconds)
    (2/7) benchmarking "second"...
    done (took 1.752549021 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752563374 seconds)
    (4/7) benchmarking "year"...
    done (took 1.753863356 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.755101923 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754000191 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753650269 seconds)
  done (took 13.964593235 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.758407792 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.911991405 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979381947 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.402295566 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.757313011 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.759618696 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.67134814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.759304595 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.760083861 seconds)
  done (took 19.451169265 seconds)
done (took 106.506495936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.591115658 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754578177 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.096101325 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.799912482 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.802882026 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096547374 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754515534 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.055575855 seconds)
done (took 42.635082112 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.831421847 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.304524264 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.3416425 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.154222028 seconds)
  done (took 12.488458844 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.734574544 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26689446 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.778926895 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.32602683 seconds)
  done (took 19.816869544 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.113990016 seconds)
    (2/2) benchmarking "read"...
    done (took 2.090484119 seconds)
  done (took 5.897647947 seconds)
done (took 46.719164098 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749709075 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746536524 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750625656 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.744977934 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.747011995 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.744279288 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.7444167 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.743007821 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.750638215 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.745044708 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.743620982 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.744860166 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74571591 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74298776 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746789122 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744184743 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.746264836 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.742296003 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743219285 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.745327228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743925512 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74692425 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.742965157 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.744251756 seconds)
  done (took 43.572002256 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.745861188 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.74270189 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.745418556 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.744558119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.743845903 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.744422116 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.748078909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.741893311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.745037169 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.74636021 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.74232576 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.74407368 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.747427329 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.743717579 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745902581 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.745333298 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.747273857 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74166788 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746654215 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.741829211 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.746660917 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743586211 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.74312066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746229259 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.743865418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743692817 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.745724582 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.743741624 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746521855 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.743916136 seconds)
  done (took 54.022612565 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.751941199 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.75582749 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.747417856 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.745589377 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.746297487 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.746252785 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.746117231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.746678856 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.747484931 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.746247244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.748001091 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.747244933 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.746647794 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.747034691 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.746525881 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.74827268 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.746854761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.746524619 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.747102242 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.747396245 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.748326326 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.748898703 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.745933689 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.746300338 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.746186819 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.748275919 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.748303231 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.751297799 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.746516195 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.746054549 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.747855619 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.747407348 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751000284 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.746351292 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.748824504 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.748551374 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.752952624 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.756740893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.751152343 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.748843139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.747464697 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.748115181 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.748934778 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.748259029 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.747941109 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.747354347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.747532551 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.74680647 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.750073581 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.747627962 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.74882868 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.750450766 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.748346361 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.7498791 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.749860618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.75018903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.745379145 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745570126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.743755208 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.745484563 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.744313898 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.746436067 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.742170547 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.741418134 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.741908374 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.742806962 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.7429052 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.743511541 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.743355872 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.742230839 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.74364168 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.744232349 seconds)
  done (took 127.48796802 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.743930929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.738567513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.740792652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.736931663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73865932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742944559 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.737084689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741411575 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739297233 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741499359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74106755 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.740503929 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737883985 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.741902117 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741738081 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.738971701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.742913692 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739087016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.740537875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741928632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.741142516 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.739531472 seconds)
  done (took 39.96520226 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742747588 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.740830218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.738715455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.741515563 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.738452798 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.741973477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.740669077 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.742689983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740080463 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738784197 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740311179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741884111 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737629405 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739594898 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739784628 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741240131 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741874569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739311384 seconds)
  done (took 33.004964144 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.739978776 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.741491251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.743578273 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739990261 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.74094718 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.74239739 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739686166 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.743074811 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.741222934 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.741394087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.741720058 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742001771 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.743605267 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740538177 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743066858 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.740951144 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.741582459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738276137 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742122578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.739139414 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.739947824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743689106 seconds)
  done (took 39.987098262 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742652879 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741491856 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.739805382 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.738471123 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739427306 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.740505268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.740742625 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.738216318 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.741241243 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.745176758 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738862296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.741701985 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.736575287 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.739451633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.736673894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.739659192 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738867242 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736378615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73841535 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.73488712 seconds)
  done (took 36.465971766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743541998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73852293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.738085027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739006332 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739832375 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.737280401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741901247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.737405003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.735695105 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736915983 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.737250211 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740490029 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734685746 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.73654353 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.735869878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735934542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734792689 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7399254 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.735270918 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.73598947 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.73488844 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.734111257 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.736483157 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.739106491 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.735134021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.735761003 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735342225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.736326359 seconds)
  done (took 50.316352888 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739816582 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.735882664 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.732950639 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.732530842 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.734723696 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.733823598 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.733934411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.735118396 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735643646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.733947956 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.73819812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738388285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.737385691 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.736433054 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.736434695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.736750717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735501926 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.735363226 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733817339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733206476 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.736463231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737486189 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.735950925 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735501018 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733529565 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.736234482 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733886094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.734428511 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736507115 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735378213 seconds)
  done (took 53.736749716 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.754498531 seconds)
    (2/2) benchmarking "in"...
    done (took 1.753311259 seconds)
  done (took 5.177336865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.736961284 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736023372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.736111981 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732581341 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.735645779 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.737108252 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.740174639 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733259031 seconds)
  done (took 15.559322117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.734923619 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.736037951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.736657878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.739819897 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.735999024 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.736631391 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741998125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.735579054 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.736892388 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.737951336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.740629975 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.742059555 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.737966057 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.733961313 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.73573361 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735275918 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.732985885 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.7355088 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.735242969 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.734099508 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736736668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736127792 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735142776 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.732231845 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.737825498 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.743940263 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737898462 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.735012915 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735204688 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.737921828 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.734987124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.732264173 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.735948985 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.734020617 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733072879 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.735096093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.740165637 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736021897 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.7381807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733162565 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.733083283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.729682063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.734376827 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.736398009 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733589557 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.731724803 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.735829701 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.733051409 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.732542228 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.737551699 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.737856109 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.733169701 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.731489418 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737092374 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736655137 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742206075 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.732895031 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.735920156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.741014834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.74361016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.745741996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.739916856 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735140397 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.733207671 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742669741 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.754455923 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742064047 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.731243888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.730381656 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.735456894 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.740872885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746623261 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.743313877 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.734918997 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.734010533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.734605434 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733583312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736306472 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741117772 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.736578688 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.735186116 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735008547 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743757173 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754982151 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.735183028 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.735176312 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.733752401 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.733379335 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.734936999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745809823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.734031233 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.733842998 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.733849207 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.734186874 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.734640485 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.736755192 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.732957062 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735184845 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.731730256 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.734861847 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.732802312 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73679898 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.741719287 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732698291 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733656563 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.738459577 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.733674763 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.734697736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.740845811 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.732970857 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733793375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.734079709 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740261567 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.731180395 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736481982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.741344799 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.734924787 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.73532313 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.733978384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.73483524 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7411027 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.756479186 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.73377713 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.736263301 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.739703752 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.745045828 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734882817 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.736505265 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.736381125 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.731916536 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.734668764 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.737283372 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.7360014 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.735785974 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734999415 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739773525 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.732037744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.734803996 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.734847082 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.73693537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.73676097 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.741178703 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.736945878 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.73679962 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.736300634 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.736978143 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.740159399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.737650811 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.735392764 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.735806751 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.732649961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735884165 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.735917447 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.739143212 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.735857052 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.735223292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.73453482 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.736151955 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739763515 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.735846834 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73546055 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.736242906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740075906 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.734997086 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.742691134 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.735345809 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.733400615 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735769918 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.736934545 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.736101712 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.739629927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.735109275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.736695715 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.742923743 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.736780883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.73610353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.741897909 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736260379 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73577411 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736065432 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.737326375 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.746139659 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.736991687 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742761115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.73696944 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736422086 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.737698046 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.740406772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.737209302 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736172615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.739765796 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.74547216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749525397 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746195744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.737473795 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.740993426 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.738578695 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.741336729 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.740753582 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.740380437 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.737537114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738520366 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737702734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737998624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.74052161 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.738428014 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.737006717 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.738254141 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.738646343 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.738387536 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74142867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.739226851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738813918 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.734717748 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73843316 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737526028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.738406476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.736369022 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.736825203 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.736712058 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.738329727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.738902087 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.748878685 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.735103621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739043289 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739052758 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.738742412 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.740411904 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.739247434 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.740740242 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.738226303 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745198875 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.737260547 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.74157991 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744918382 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.737921343 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.740615332 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.74177522 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.738993049 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.739262222 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.741523094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.744912985 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.739400527 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.739963205 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.739126663 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.743453175 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739602093 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.744758979 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.736555938 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.73935734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742603758 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.74149252 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.737875411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.740953806 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741584168 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.740751477 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748022395 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73998557 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.740605417 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741256826 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.740484933 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.739576197 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742945535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741784794 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.746624749 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.74473618 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.739322942 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.742549614 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.741372833 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.744837721 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.740440752 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.739822483 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.740592578 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754022714 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.747023683 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747881993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.742517645 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741980126 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744404784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.743635778 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.743818794 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742496777 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74148921 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741900206 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.74044073 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.73971909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741407317 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742494656 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741905865 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.742743344 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.745800174 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.742726889 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741701834 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.740876411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.742353401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.742166978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.743227057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.742777219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.744415844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742550557 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.742195948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.743307438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749991349 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741469867 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.7417255 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.742013623 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.742819847 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743281459 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.745311263 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743245184 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.745495318 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748822585 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.745607327 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.750867701 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.742766486 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751190149 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.743563343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.744584489 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.749348867 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.743332777 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.741087502 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.742255094 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.743723771 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.747962174 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.742492046 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.747671733 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.746514202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742133743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743271408 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.744347658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.743092418 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748160573 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.743499999 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751022773 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.742284022 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.747364893 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749894708 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.742278424 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.74349933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.744144116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.742869927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746718858 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.747863173 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.744847174 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.74336166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.744352306 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.744582542 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.745499978 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.749863735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.742046025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.744353781 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749947257 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745769875 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748036825 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.747206299 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.752142746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744631656 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752128933 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.745448298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.746632393 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.746653471 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.745534976 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.747324105 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.745831551 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.746551695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.746559963 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.746461001 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.748712381 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.744417624 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.749091179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.745722437 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.746740692 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.745671076 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752767381 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.765945764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.747632023 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750537587 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.7438133 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.746334345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.749746482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.745747385 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.74579669 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.743492865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748723431 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.746499012 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739235269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.740372872 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740912073 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743358469 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.740089645 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.740232068 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.739673895 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.740793286 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.740495551 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.742742334 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744057639 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.741231981 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740822393 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741287706 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.743822655 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.749051379 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739809865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.742350492 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740111961 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.740522816 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.744186806 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.741151667 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.742061072 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740832186 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741719851 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.742027457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750343222 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746608845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.742948663 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.740314048 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.74178438 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.742362081 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.746593831 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.743053431 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.741633771 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741318603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.74183134 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.743287533 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.742472337 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.739387851 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74154631 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.742463345 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743158985 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.749732266 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747378798 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742608355 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.73926288 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.743564029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74435874 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.744034727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.742893866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.750841043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743629826 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.751739196 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.749307239 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.746132192 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.742647184 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744346414 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.749850401 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.742751405 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.745269203 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.743073632 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.74474896 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.74323053 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.745543399 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.744380101 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.749583039 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.74333588 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.742529061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750648779 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742957059 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.743291983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.744792507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.746221125 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.742779219 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.741338597 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.745838641 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.742928376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750635467 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.744471179 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.743620411 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745603913 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.741111463 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745656814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746857069 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743550319 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743445793 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.741277153 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.74591274 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747273114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744025855 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.74029011 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.742907453 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744532536 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.7474513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.75457284 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.742569199 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74550744 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.744757467 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.74558036 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746137412 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744529358 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.74302096 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.742928798 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.744378349 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744857218 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.748457514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.745409948 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.745262825 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.746284655 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.744789641 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746058621 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752117649 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.753066762 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.752098993 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.742987931 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.744541917 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.746266275 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.753310025 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745657419 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.74589398 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745498362 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.746867504 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.74987688 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746491906 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.745804366 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748594005 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760500174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.746368897 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746530604 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.747275625 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749789225 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.746752377 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.744015198 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.746887172 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.750011543 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.748158453 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.751720478 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.746148232 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.751958674 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745568649 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.747040416 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.750017689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.748670241 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753866999 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749038768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750059268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.748233776 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.750782981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.760902143 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748312837 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755791464 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780922064 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.746916093 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.747965188 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.748987937 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.746594599 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.747150942 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.758778317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.747600412 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.748054996 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748418741 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.747479386 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.757341945 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753631259 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.749981334 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.749462886 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.749559863 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.748152345 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.754427328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.747520445 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.749508046 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.74987722 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.748839042 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.749979273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.75391044 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.750285822 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762303671 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.758392608 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.750838979 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.749954018 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.75362836 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.753175345 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.752768868 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758918677 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.75733762 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.755460404 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.752282904 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.751181893 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.749421897 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.748145995 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.751254917 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.749913052 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750364835 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.748089111 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.762674836 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756812195 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.755144201 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.751118917 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752363247 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.75095985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752285775 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.750519753 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748705497 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.753185675 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.750679296 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754635602 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.75213074 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.752066899 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.754093809 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.759651583 seconds)
  done (took 1040.312839401 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749951274 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74966432 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.749908434 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749223714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.750621591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750017157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.749603208 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749611651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.748685801 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749343103 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.749683488 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748763402 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749888066 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.750581168 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753731764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750602588 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748973048 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.749702424 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749578003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749913145 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756689299 seconds)
  done (took 38.440853497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752317572 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.750182761 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749893866 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752872889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758077626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755878694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.751977597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754194837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.753594447 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758644327 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.753567957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753918047 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.750462283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.751031972 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750653772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759461292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.760689343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753326007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.756099831 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754187335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755739323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758344103 seconds)
  done (took 40.283328564 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.754064719 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.753582448 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.751655128 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.749598295 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.758651465 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.751058563 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.753884077 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.754761122 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.75442192 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758381688 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.75347899 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.755769301 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.759270364 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.758260494 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.755508047 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.760086976 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.898064466 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.75448609 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.755215071 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.75531194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.751926251 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.764043835 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.751330435 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.752575642 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.75420697 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.755592486 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.760064437 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.756528172 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.756802965 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.755347228 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.759322716 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.755314773 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.763245542 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.756858307 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.755875414 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.756851668 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.75913958 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.756936208 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.759884459 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.756169681 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.764657842 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.773518458 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.755525731 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.76827358 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.756355794 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.756963682 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.757935887 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.763072411 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.754375175 seconds)
  done (took 87.926528466 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.756152683 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.757152472 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.754523736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757440584 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.757288976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.760566683 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.757301798 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755958356 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.754210743 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.754684736 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.761619328 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.754177756 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.753305309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.756998899 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.758272067 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.753964024 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.757564389 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753706033 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754060706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754034157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.754418805 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757276776 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.759624098 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.755743533 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.756929328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754370811 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.754597948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.758394832 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.755468567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.754256897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.758427965 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75791612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.757939254 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.756130591 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754905813 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.758580473 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.758075641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.755841902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758023309 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.754825142 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.757802613 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.757585615 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.758648859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.758393243 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.755153857 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.755272974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755896866 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.755121292 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.755771075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.758220741 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.758119004 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.757062916 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.759678435 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.755924073 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.758737029 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.759029303 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.756404736 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.755605371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.759298463 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.756230625 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.75497712 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.758541677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761599826 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.759221478 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.758582525 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.75681916 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.756183571 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.76592317 seconds)
  done (took 121.167087257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.759795666 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.760061163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760880585 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759542895 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763890547 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.759271737 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.759955537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.759164296 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.759704366 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758851674 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762745101 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759967098 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.759626809 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760826902 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.758535816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763294614 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.759943396 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760623613 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760151403 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759463277 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.760485875 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.767549353 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760557622 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.759506943 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76131491 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.760874049 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759570092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.764301856 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759930338 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.759617472 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759987593 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.759593441 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759690605 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.76277381 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.761246437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.759819282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760612226 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760719411 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.760389376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761598128 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760551153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761326551 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760711822 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.760421798 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765329565 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.76044123 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760616638 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.760600037 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.761242974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760299925 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.76121018 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761712714 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76091415 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761529265 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761142183 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.767095536 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.761814078 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762503673 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.761443306 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.761506138 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762251853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.770255832 seconds)
  done (took 110.887927391 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761807648 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761575465 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758614699 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.760628433 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769245211 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760183272 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762784413 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.762005894 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762249408 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.764404558 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763236177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759219348 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760740244 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762225689 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759068154 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766486193 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758996385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760358021 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761857962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760225477 seconds)
  done (took 36.933125868 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.764639723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763823779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.761400676 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760331452 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.763477092 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.769074441 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.762954108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76292881 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760223298 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764309702 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762508989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766337253 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76103182 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760409085 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764985363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760952236 seconds)
  done (took 29.906523947 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.763804187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.764253188 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.764154965 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.764178343 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.76131787 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.767816071 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.764789029 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.761288874 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.760513358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.765401837 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.764039501 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.770403285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764669399 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.764598358 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761113148 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.764322036 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.762323806 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.765012927 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.765103433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.765122376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.763365192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.761602369 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.766511607 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.765808827 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.762480066 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.767386251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.765724992 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.764176897 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763712797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.766122947 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.763251722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763937989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.763452608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.76268276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.766901748 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.762371285 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.766081581 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.765076599 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.765805396 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.76774075 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.766042075 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.763627773 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.766014795 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.765938688 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.763592751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.767862976 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.763280367 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.763772465 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.765018593 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764704883 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.766547143 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.76753047 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.766954119 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.768457177 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766400997 seconds)
  done (took 98.763103241 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766510376 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766786409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763946462 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766632987 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.766458866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.765370343 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767558679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.763882035 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764845386 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767551555 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764569557 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767504213 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765761332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768115602 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766725457 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767081735 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765289621 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.766808765 seconds)
  done (took 33.491481711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765923982 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764667538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.769313063 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764762256 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.770435055 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768933551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765339293 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.768081931 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768175903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765724926 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766765295 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768388028 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769201414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.767794422 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766331981 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767826249 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.768354968 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768496955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7642041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765358653 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768660745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773261688 seconds)
  done (took 40.588928692 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.76785176 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.767934799 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.783091152 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.783905464 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.788225036 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.796242676 seconds)
  done (took 12.388048103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765747773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768883516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765974108 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767970256 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768836027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765752116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766792711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76616756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768696739 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766272599 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767030377 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769321799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768477346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766601963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769037314 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770113393 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767640414 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766360004 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766445343 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771060605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766874312 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771343026 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767080118 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767661616 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76736888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767928548 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769259382 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768139481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768647397 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770076383 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769974835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767409408 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769917053 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767829002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770968603 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770933165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76789888 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770763786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770774026 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767624648 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.771674064 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770742697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770502904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768907454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770501631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768679798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768743863 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768985287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767789112 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772518605 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772403266 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769744629 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771427099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772484357 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772330574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772358836 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769092079 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76910064 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771407664 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76953098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769605041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771938412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770687407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769150164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772178216 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770152795 seconds)
  done (took 118.469417797 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769449524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770638161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768792728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769280078 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770063978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770338268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769499216 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770395893 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769704411 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770271706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773001296 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770577436 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771755925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769853217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770811133 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770619712 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770751042 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77078688 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771622084 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773954021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770781645 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771009369 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771537143 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77130573 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771665326 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773406698 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771658623 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771191487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771026372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772371592 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771111015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769529276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771247146 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770373681 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771390122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772185267 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770983321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770825698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771370591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773349313 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77122034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774124895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771128965 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773007589 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772008024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771310266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772486924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771895932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77091986 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770633959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771904504 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773596769 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772377353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771758587 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772228278 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771559299 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772752168 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772770143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772880698 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775391782 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772389612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772284209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775290248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773069862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772098378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772454454 seconds)
  done (took 118.632568868 seconds)
done (took 2429.164124635 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.782242325 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.061516585 seconds)
  done (took 15.551448282 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.946162304 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.896777584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.782346101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.792167625 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.779537993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.800591559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.796940421 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.779687773 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.782791224 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.782877447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.783341833 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.96935392 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80498457 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.780441689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.783754196 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.876653914 seconds)
  done (took 50.860597866 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.786603824 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.787561733 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.798591058 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.789745647 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.787549871 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.807864003 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.821520756 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.790121641 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.849704838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.801338544 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.899436322 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.79634639 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.78721574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.854366413 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797702363 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.801567064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.887421317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.866444072 seconds)
  done (took 34.4290932 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.867177552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.787644533 seconds)
  done (took 10.381758161 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.802776583 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.790914661 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.779450301 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.796224424 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.779431754 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.786867666 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.794264198 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.785984026 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.806934277 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.787711352 seconds)
  done (took 69.631519072 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.793884354 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.785995095 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.787228691 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.787796825 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.778862659 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.78368587 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.788616149 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.780501037 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.474087555 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.821530622 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.79595394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.795586049 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.788379153 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.790072554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.787448375 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.811611534 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.932186667 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.785823264 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.786117338 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.793945869 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.787437725 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.855736549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.801254043 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.788170204 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.818407133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.478963587 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.793125166 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.794672561 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.899504787 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.785858986 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.789180562 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.787397888 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.79088289 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.172968995 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.083684008 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.789070614 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.795876894 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.796391049 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.786646665 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.921451086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.788245308 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.79329792 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.73754466 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.071139383 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.902823456 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.83098652 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.158867788 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791397681 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.790565982 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.81946484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.793385933 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.790841693 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.802028825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.297795326 seconds)
  done (took 128.25900825 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.783000195 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.047358406 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941934369 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786294952 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072819684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993088807 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.785050915 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833357943 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.786933544 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014981467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947317451 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894802792 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.785986863 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.783625635 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783579189 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.780970928 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.947767879 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85929348 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.786594917 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.782481752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818120976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033195897 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.914965606 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.789125315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.807396217 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003054507 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.915773215 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896895523 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.060823866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.785780309 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852053199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.788694038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784515674 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782654525 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.945401147 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.88556539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875845669 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.789578892 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.785722088 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.78581479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.461540128 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985825337 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.884194807 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.934413336 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035043125 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992514364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572920946 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.786572838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.525175279 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950690742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.023145073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028745384 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.914822859 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.785890766 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.05562922 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.784781987 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786177774 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026097441 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017195903 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889966179 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790262832 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.786890589 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788041519 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.036973659 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.78898597 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.881180843 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793114899 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785237868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.886858974 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896348459 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.021740385 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002764519 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82249534 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.088819241 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265997307 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041710889 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859404075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025128237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788591385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.784183533 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875344104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.633014277 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.950935122 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042728573 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045427161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827198151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.521207065 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.787531324 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.020757504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013242116 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089266935 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035873538 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.942546767 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.993913541 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.78892292 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.788597485 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.029505635 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926214734 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.792726007 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.150457557 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024748974 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.352724786 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823998866 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103845694 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924718977 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790857073 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.434943948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78957539 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018786601 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834824881 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.792800808 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792024335 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.018519571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.86974741 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788838983 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.428084063 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.855671628 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789602496 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02778147 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792888748 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056785274 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79236142 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033801709 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.219487331 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.82256336 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.963874243 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036806135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.791913801 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054502164 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042235518 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.912868736 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013840184 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.418059054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.790357187 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083621625 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.791691768 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.790282141 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.966965797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.792823887 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974081309 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795038142 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128940446 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822164568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949356733 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790620104 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055054223 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.830561783 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846244515 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795144836 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918992242 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795780041 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.826399232 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947671665 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795195833 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.78890063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.337620007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.795157304 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.950069598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.030030574 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817458341 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871103691 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.467051145 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792169065 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884074159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820697215 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.135483587 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.793404173 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.952355636 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.795509958 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.325327955 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.793030745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.040556718 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.976004473 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800370848 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.789878999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.707884746 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.792901661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.792192596 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.957797865 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.136746082 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790561335 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000692229 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793734069 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925472057 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.795988315 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.866114811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148083281 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.790689642 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.793196175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.794016296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.794766552 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794428132 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006113819 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82388108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.326323272 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937525853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068508211 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.111494523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051793034 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839738541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801486692 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043070884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.793061606 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.85881561 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.792849385 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818969139 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034215509 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.796189396 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.008254814 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080797892 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72341212 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846422009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.793921075 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798640796 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.752775722 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95116978 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890386338 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793586151 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.7951164 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916855634 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922393449 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013595866 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.796206564 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.92606632 seconds)
  done (took 885.911603073 seconds)
done (took 1196.726125364 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.796277587 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.791173337 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.782951984 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.797040638 seconds)
  done (took 28.900760192 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.805521092 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.80135957 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.803598404 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801947494 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.804122797 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.805032436 seconds)
  done (took 12.55644557 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.826928313 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.791344516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795812221 seconds)
  done (took 21.149870836 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.872835162 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.210954122 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.914721532 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.248423616 seconds)
  done (took 9.983291924 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.804217191 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.803661227 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.801312302 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.804954477 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.803824947 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.804152871 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.80150769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803654973 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.8042684 seconds)
  done (took 17.967404555 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.205661524 seconds)
done (took 96.489859441 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.871344742 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.800014617 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085341095 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.486451831 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500117094 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.732507245 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.087484903 seconds)
    (8/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.2167688 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.964549189 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.579749014 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.920450715 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.167756647 seconds)
    (13/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.905392959 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.991713782 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.95695606 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.178899762 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.093846277 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.758736734 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852042216 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.808051437 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.065862289 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.824958893 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.935041784 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.988870483 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.929439255 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.58596249 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.816725062 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.795634244 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.64617442 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.01970137 seconds)
    (31/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.906270083 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.828032917 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.981500398 seconds)
    (34/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.993096244 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.800307496 seconds)
    (36/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.901390638 seconds)
    (37/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.033457315 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.302232028 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909655842 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.366420769 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.175270514 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.784690694 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.080911145 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.804056878 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.80584113 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.966800015 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.817242102 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01667369 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.850535298 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.727315727 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.273351504 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.784663484 seconds)
    (53/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.296340328 seconds)
    (54/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.954867669 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.33582445 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.992104129 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.916256907 seconds)
    (58/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.887922096 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.9324787 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.126464249 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.166631217 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.781760396 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.803574846 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.875454383 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.799164024 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.231601903 seconds)
    (67/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.832228412 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.857879662 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.171505789 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.188538722 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.817181675 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.800348434 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.943847222 seconds)
    (74/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.787118608 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.580805771 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.758013627 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.805844276 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.959793042 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.738148199 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.534184601 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.172244307 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.79900096 seconds)
    (83/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.435156701 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.919954688 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.791517284 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.26532955 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.165366437 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.800962182 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.216596287 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.900039459 seconds)
    (91/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.301471402 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.787130126 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.941849758 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112086065 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.808595816 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.933044548 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.104071151 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 5.462785357 seconds)
    (99/309) benchmarking ("sort", BigInt, false)...
    done (took 6.802583137 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.830868002 seconds)
    (101/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.883286429 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.081295272 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.817294816 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.125286563 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.016668091 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.880086269 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642392755 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.151090914 seconds)
    (109/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.410156761 seconds)
    (110/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.787026284 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.100762736 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876319288 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.960633896 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.789351564 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.201165284 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.785426958 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.888283443 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.485213304 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.187998348 seconds)
    (120/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.946355671 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.34774831 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.136047422 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.830394454 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.89033883 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.268866653 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.888777058 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021554774 seconds)
    (128/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.998662132 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.115387543 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.882960224 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.275976362 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.791919842 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.130689011 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.925654106 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.929902071 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.908666247 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.806592841 seconds)
    (138/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.27279312 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.793652448 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.929211515 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.822099242 seconds)
    (142/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.830626765 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.764461608 seconds)
    (144/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.929743886 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855393704 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.090726112 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 2.23715101 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.830253654 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.938867204 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.065023673 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.806455967 seconds)
    (152/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.322736654 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.024633826 seconds)
    (154/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.955126084 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.236933513 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.022719789 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.067770187 seconds)
    (158/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.057816991 seconds)
    (159/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.018022265 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803921555 seconds)
    (161/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.14432118 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.003486498 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.017924639 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.870445716 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.923682029 seconds)
    (166/309) benchmarking ("sort", Int8, false)...
    done (took 4.818559714 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.809436333 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.766216629 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.145037811 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.833731087 seconds)
    (171/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.976870854 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89455516 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.80869737 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.154233166 seconds)
    (175/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.97771919 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.502732737 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.827929837 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.556250492 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.326165202 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.789669601 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.357233184 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.959323909 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.876061942 seconds)
    (184/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83460885 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915774468 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89962163 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.289473739 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.808417554 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.789061891 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.272444608 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.801819877 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.833506885 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.867297793 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.91509315 seconds)
    (195/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.791870524 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.168027101 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.97491375 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.793372299 seconds)
    (199/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.853306364 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.808104671 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005159302 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.004174694 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.909145455 seconds)
    (204/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.818543367 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.616708992 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.891932346 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.152424245 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.837937841 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.872511139 seconds)
    (210/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.835152592 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.507162747 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.922542522 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.905945483 seconds)
    (214/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.842648393 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.186682746 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.184075451 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.828509379 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.742636879 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.796931893 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.026266376 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12422635 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.98576717 seconds)
    (223/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.87217754 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367293139 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.148958618 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.956920091 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.811107825 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.900784707 seconds)
    (229/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.853134034 seconds)
    (230/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292760709 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.337316221 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.615640809 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.907827737 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.017915493 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.679443568 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.91658316 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197089817 seconds)
    (238/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.891965074 seconds)
    (239/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.941006767 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.096347205 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.992924287 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.795839956 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.12836169 seconds)
    (244/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.849021915 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.449518545 seconds)
    (246/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.83073883 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.813170946 seconds)
    (248/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874026665 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.424857006 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.10874488 seconds)
    (251/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.857382916 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.928164519 seconds)
    (253/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.016983994 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619402781 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.908994225 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813272135 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.180780734 seconds)
    (258/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.295663731 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.814318865 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.382060879 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.929571424 seconds)
    (262/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.910095825 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.197613908 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.899418675 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.797287783 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813526617 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.83584456 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.733134053 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.872960685 seconds)
    (270/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.980472549 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.906243845 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.374997386 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.056243617 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 5.609073338 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.104551253 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.841749239 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.213935846 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.173236683 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.995493717 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.117183629 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.384573494 seconds)
    (282/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.751414118 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.842344634 seconds)
    (284/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.379949278 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.139667287 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.837720063 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.831899533 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 5.580141026 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.900015257 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.895541968 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.918032129 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.11153706 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964167647 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.520505627 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.083767487 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.567867576 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.894083725 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.746549386 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.127274041 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.847104901 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.814932022 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.839622082 seconds)
    (303/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.115126536 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.821585093 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.834227518 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285031522 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.831553091 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.438356802 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.140994107 seconds)
  done (took 999.360715199 seconds)
done (took 1001.159655327 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.848493705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842438402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.826943924 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.847485097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.937748124 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.856250234 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.837177548 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.829646787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87346753 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.876780846 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.826082527 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.854842226 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.829479201 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.826994939 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.827001067 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.841989619 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.139987512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.852478214 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.844709291 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.836200552 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.843873171 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.827675546 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.877622692 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.856684534 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.831737216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.829467053 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.831972988 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.848271413 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.94040167 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.831701895 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.830541132 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.839513377 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.140282292 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.851319431 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.821485406 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.847541084 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.839322971 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.837250246 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.83146406 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.860427391 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283623137 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.831972846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.830708159 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.828284227 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.828539399 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.831939684 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.829410784 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.835910318 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84130961 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842347443 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.283654439 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.84733092 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.83139864 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.829030172 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.839124687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.829691984 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.835613888 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845264755 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.851199758 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844732294 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.1321248 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.858584777 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.831119347 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.848004458 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.837516945 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.319164034 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.828906461 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.834344724 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.285028084 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.838732366 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.321027908 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.841503499 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.831733473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.844204926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.863197132 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.144160967 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.850377065 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.829615369 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.839017317 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.829940805 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.839851077 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.844931602 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.835035756 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.831959106 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845889749 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860336215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.840698948 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.832195406 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.838049354 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.850100883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.838604299 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.840756628 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.834545355 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.825002299 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.840014069 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.838128739 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.833084594 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.833354025 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.835244987 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840752788 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.281798382 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85213955 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.827787279 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.827747237 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.830340882 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.846035931 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.282261811 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.835193381 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.852538819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.878437591 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.835303088 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.135078447 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.859464662 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846911127 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.840296045 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.83621106 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.826952655 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.135280295 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.308308945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.853654675 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.83357823 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.829911474 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848104885 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.835082271 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.829151284 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.144701456 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.858369756 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847098756 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.953729574 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.84283228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.863632699 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.832258926 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.836022379 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.864599147 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849744771 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.865514419 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.836338625 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849805388 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.849419498 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.829569709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.843750567 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.844161455 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.835911061 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.840467283 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.827092184 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.865815625 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844400831 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846985487 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.8538253 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9545215 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.830399757 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.13575243 seconds)
done (took 288.050483366 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.902209979 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.829183122 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.932508106 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.832208052 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.915357669 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.920909761 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.829265825 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.83087888 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.827994545 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.205537614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.828619177 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.828220611 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.827615281 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.826642832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.913379431 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.829575938 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.826966619 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.16449289 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.830479046 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.90542783 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.823457601 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.828004869 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.830561908 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.205584621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.828178046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.825148789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.903109637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.831304664 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.169933153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.829679938 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.825037541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.170252545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.921716027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.849608296 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.843004992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837632444 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.913867142 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.836586665 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.913049933 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.913122958 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.932250658 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.874163998 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.83048337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.824043946 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.8370188 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.832257371 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.829120496 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.860825648 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.830055531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.831696959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.167929514 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.842856283 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.832054026 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.831535971 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.829692824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.864706839 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.830473664 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.832325997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.924760591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.833313172 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.896964313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.206788188 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205193662 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.832705352 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.826671388 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.830841669 seconds)
  done (took 181.738815724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898351182 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.911982279 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.900189579 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.838076755 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.883478654 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902515167 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.840947602 seconds)
  done (took 14.939982458 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.840224281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834651642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881843604 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.885980895 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.832873703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.982800145 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.833361193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.84517216 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.832190377 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.888339999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.833671883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832852073 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.840918358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.835382341 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880657057 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.846016559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948295794 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.835867649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.833101511 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.985571406 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831111422 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.840959972 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.890873452 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.846365422 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833442603 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.840827824 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.426821224 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834347857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.8336219 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.834859234 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831370878 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.876763198 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.835140797 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.83224126 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832869522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.954063887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.833566652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832472773 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.835636638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.836923861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.833173065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.835399744 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.835314997 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.832593231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835310653 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.857842388 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.834916025 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.836238064 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.835354354 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.838089865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.886173182 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836246005 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.832979508 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832855445 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.8923272 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840430365 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.836739463 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.832964202 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.83668054 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833991083 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.987523557 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883285316 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.836873688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884782385 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.835791922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.837592197 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.83672666 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.836374193 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931181697 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.837025991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.886652569 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.835781661 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.996537264 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.86086085 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838675738 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.840089531 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.840538784 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839545198 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.832945207 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.844803439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836213081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.84045361 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.845797754 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835529616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83573739 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.949648554 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945227021 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.835604232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.850955477 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.84396466 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.834886227 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.890309969 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.839345597 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.836582302 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893290172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.953883168 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.893593386 seconds)
  done (took 202.531498498 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.843980824 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.846295102 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.838443192 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.854543138 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.838693107 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837730256 seconds)
  done (took 12.82776778 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.841433026 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.840371445 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.839032856 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.838525815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.838375245 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.840373347 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.838866862 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840602578 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.842304939 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.840417557 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.840577293 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.838815598 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.839010329 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.837809063 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839491544 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.839429179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839818308 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.836855704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.837998436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838499061 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.998801072 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.838926538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839396681 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.840283867 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.844474034 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.839591829 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847076119 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.838474164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.839619393 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.846491386 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.843613477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840769753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.83986681 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.845731629 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.844767845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.841142662 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844420303 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.841350752 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.837323939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839565827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.840821041 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839108925 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.840910199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.84028528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.842536503 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.845336679 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.845339996 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.848375728 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.839805938 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.84141158 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.842638266 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.839860478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.841483927 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.841274135 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.843208599 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.847880602 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.844599737 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840387209 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.839386402 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.8417641 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.842761881 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.841832109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842332529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.84544861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.839491915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.842930834 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8425076 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.845778014 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842025858 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.843660238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.844171379 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.839933166 seconds)
  done (took 135.510098902 seconds)
done (took 549.316265701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.944165255 seconds)
  done (took 8.714475104 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.95209463 seconds)
  done (took 8.820741458 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.331697728 seconds)
  done (took 10.103294088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.83873188 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.840729321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.830145893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.842619621 seconds)
  done (took 29.138177342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.900747152 seconds)
  done (took 8.673415734 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.851376048 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.830826239 seconds)
  done (took 15.489958058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.856799709 seconds)
  done (took 8.629777208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.943367786 seconds)
  done (took 8.718265793 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846599623 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876477215 seconds)
  done (took 15.511604164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.822297525 seconds)
  done (took 8.595652674 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.662267616 seconds)
  done (took 11.441777377 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.845195868 seconds)
  done (took 8.633345904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.89362465 seconds)
  done (took 8.66570597 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.841568861 seconds)
  done (took 8.614413409 seconds)
done (took 161.514772886 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.843883541 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832725712 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831723078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.832800361 seconds)
  done (took 29.112747408 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.877524973 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.877388427 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.877989552 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.888839385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.88155952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.878050615 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.869797817 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.870014018 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.887619304 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.881115253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.879429198 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.880223182 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.877872344 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.870290748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.880466439 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.878948058 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.888930493 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.878735187 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.870784493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.880832979 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.844777883 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.889343268 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.880584789 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.846020813 seconds)
  done (took 46.810083405 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.044267472 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.914019965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99747131 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.895456899 seconds)
  done (took 9.625109575 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.894383387 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.896056993 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.909921345 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.946308947 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.970737587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.906504917 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.871210637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.867351339 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.851190747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.896731156 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.973004353 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.890538994 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.984486297 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.844632962 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.024006229 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.8452293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.844687611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.897519662 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.949250967 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.962916632 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.846203012 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.897952397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901155957 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.893063184 seconds)
  done (took 47.540420113 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.845466717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853407536 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.850982884 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.845172079 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.844696669 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.845214552 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.850700768 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84542215 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.866251515 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.845719358 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.844410442 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.845108977 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.844266286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.844345363 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.845110082 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.857742187 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.860048481 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.847391762 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.848330597 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851528305 seconds)
  done (took 38.75739001 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.842903013 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.694901553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.190913268 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.094015669 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.838787066 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.838284028 seconds)
  done (took 31.277137616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.861013816 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.851922898 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.845746105 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.90196399 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983935552 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.851507529 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.84721102 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.857360086 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893140538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.911838272 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.862704907 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.87648694 seconds)
  done (took 24.326123299 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.842323397 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.842049624 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.838657618 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.85716692 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.857825312 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.853580684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.853367652 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.839378972 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859329948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.86520285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856108323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.859241301 seconds)
  done (took 44.00547858 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932590544 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.732797152 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906402116 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565569678 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313119659 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05111531 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373828603 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182898387 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843385519 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116704076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.933498764 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947390828 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09711975 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842079256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861810518 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32374701 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141901151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074742104 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867999042 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627916391 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891579369 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382604908 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.705035482 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901490373 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053449248 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976810219 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.104738137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808351352 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977517111 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881900768 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854031857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843451224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117675851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225981987 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943963526 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854212588 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517285875 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565388215 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.834794368 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.642581301 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.688992889 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.971787238 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853169017 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844767005 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778829898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398953008 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23017825 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848424308 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.555012584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843242004 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854915394 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932628066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.847701979 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.660741685 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835174543 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.121932708 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841694264 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849620994 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415782737 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975322445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422164969 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.819876851 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.039924714 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63896021 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244880034 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.994845134 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.84796601 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848719872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781229469 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.638709238 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345282829 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99103568 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.862706943 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497084976 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176439399 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.980963142 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786781833 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132355619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.667027615 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.81909601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073690251 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802102859 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779729041 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.707383359 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77910929 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116588219 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881464899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.485844555 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884888327 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183794541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852278907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861148457 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854079762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070134824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.725985552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846551726 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.714678597 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998125803 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866529556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.188925309 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779501386 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.84805315 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104096915 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057386776 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.109662422 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366015013 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008318334 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845621208 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.924697054 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.798288434 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896604641 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126838229 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907064437 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982478082 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90653982 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.805385368 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153960548 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874125482 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010861023 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.9460767 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975322142 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17480427 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141508125 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911823582 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846579648 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848646203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654023305 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4005502 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.11443121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.84992126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37698634 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898982005 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.849134736 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783846122 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.470176663 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954042316 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.81384153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073916351 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.818066527 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162870014 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78469944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996014254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.961106791 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.071098675 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.495920628 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.929455355 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107795676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371182308 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.150325837 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903408535 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870644941 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940955717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873035579 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.313872033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.145809318 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.854542504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.854628211 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649256118 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850536352 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850059637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.858327835 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651157607 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135587619 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875760071 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85124893 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741908662 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.867269936 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919115745 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857751531 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8641353 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397414094 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597188504 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.860440879 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.472595549 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074538001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862057591 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.644062351 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963392714 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934427742 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129484186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912380863 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.786830258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.562728285 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543391784 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851390225 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.789480712 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851877096 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861747093 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863143176 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.233465737 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137469914 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896306705 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.63923773 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.896009429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862225398 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.856531167 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852785154 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.392723975 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985586751 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432516119 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903138174 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991773545 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.8671165 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787287754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855974145 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857530829 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854951497 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.810186911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907046244 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.729451804 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243809125 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11038014 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.50563192 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869175685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.665353706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.913063435 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92911336 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.748435166 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823144282 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.980710079 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863040413 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.86691813 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.648694236 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.556320195 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421240291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189324325 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170556459 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302103937 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.370025864 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.164097307 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198342225 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087310925 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384911572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916929043 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20320237 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797896473 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938141893 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499050784 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20868664 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866833719 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085786759 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248675287 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.817456726 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878804364 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069284291 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890635113 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.8057659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8195057 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.059772449 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999417178 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.663187256 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061549883 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195935584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595970695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.980844336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.856990787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563205321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941417236 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.565970512 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218747238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410359873 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865225902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342906162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855196716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30411244 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224126463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.212792066 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.982058438 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79000733 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.868629278 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869606869 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857199574 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.853243072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.730098486 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.107860235 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86700642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093312417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.159707978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165691729 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.765116808 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.862562561 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85923209 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160461494 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.683030597 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024339981 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.341943583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.39020519 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859940691 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.793801008 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792143031 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.549997904 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.866442969 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835023647 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093594194 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.045843057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812717327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393367925 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103181137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113900134 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.871291482 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137078329 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135067124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.593689754 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884315582 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.95788178 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.600204304 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.969414162 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.127624514 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094839114 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659731862 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087104026 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.908964047 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.677571428 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.856927258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072954234 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.128081247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.811623984 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095565552 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.582483437 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.959234653 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186279158 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917768206 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.833670885 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016498202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.052755378 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871454286 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942128231 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868632936 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.870524256 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87027733 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905774322 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853214747 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986645714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.874102847 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947799008 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002975913 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.39491316 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.86483649 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142389618 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246735436 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188154023 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921279876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860691472 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860494664 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796642715 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994580562 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307742066 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133922447 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991042558 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.160095535 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884775229 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598475302 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303665201 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104594938 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136096548 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.757809122 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861534479 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888685809 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.136114363 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871346385 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.073078623 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102100727 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190937956 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33238857 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.146099787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243074228 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13370394 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.238236241 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864964353 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454514395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.975414588 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.572301258 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.907007197 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.874733781 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132407184 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874742007 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253344827 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885177084 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062017351 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.381310713 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648045848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152496803 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.849315472 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928642136 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145730874 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.254763812 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176191287 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933555346 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874910132 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.564976126 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002973198 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.74720391 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.130846366 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865377998 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076585279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.573800388 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874837032 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145699734 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173176437 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861656563 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.733724195 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870884065 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.875444167 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08941625 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140227799 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116768596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874876865 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872473799 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.682503269 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145873081 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928973855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798608269 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.865882902 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962471052 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111064057 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8995005 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.383209394 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575418049 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163041165 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.783753435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887322558 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413266645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244288002 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200045882 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415044432 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091677681 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.42559065 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.863309207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171226313 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.870717835 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411954316 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175807931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.870081381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.525038395 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910611731 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.144742046 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186834457 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.992543367 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654901288 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.836482348 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090589315 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463810245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807801206 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864220411 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.927916 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86505291 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999127212 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876214143 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.790345815 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835646113 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.686693073 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359418074 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.870773895 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.8579397 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.644630417 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5429683 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905961609 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011785951 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877644858 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.579697639 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.161269839 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119137904 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.512798454 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.874406498 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867201741 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864988084 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792099384 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.063256672 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.242777857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168486193 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.357158167 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90539956 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867506829 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.080089725 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075643595 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.811784986 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008891111 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404457664 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911758035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.63960673 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.551401081 seconds)
  done (took 1682.321226632 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879314664 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.915185265 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.997652707 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.920899432 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913696244 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881714451 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.930581454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90135913 seconds)
  done (took 57.146312886 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.868244424 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.061626703 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.87600707 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.866174523 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.876360971 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.867883243 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.043945867 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.885966958 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.875879834 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.881461065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.872009117 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.866604803 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.187591346 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.893319186 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.869429389 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.852227135 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.875702522 seconds)
  done (took 74.369159469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.873163711 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.083162181 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.904625223 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89545491 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.817043674 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.885736692 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.822556897 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.886778794 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.874883049 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.099102857 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.208917931 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.892668882 seconds)
  done (took 90.050933137 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.880316657 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.878015589 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.878105554 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.877119397 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.877250695 seconds)
  done (took 11.203150688 seconds)
done (took 2188.372796288 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.122004309 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100627609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.113360993 seconds)
  done (took 6.022051152 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022033594 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.068154921 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.185425438 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.195810176 seconds)
  done (took 10.282700884 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.164419023 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.261961682 seconds)
  done (took 6.234030848 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.279917723 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.885559989 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.267639106 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.873101329 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.871005032 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.872470212 seconds)
  done (took 22.429964885 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.878246848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.881037366 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.877001076 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.879257434 seconds)
  done (took 9.323988659 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.856471063 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.606597265 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.858078223 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869624243 seconds)
  done (took 20.999374863 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.624401043 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.308453833 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.620253889 seconds)
  done (took 9.361490798 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.43244233 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776221446 seconds)
  done (took 9.017830357 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.139766806 seconds)
  done (took 3.948980994 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.905841431 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.147734406 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398429351 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.409441365 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.52397976 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.741179112 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.194069098 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.121709246 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.295946888 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.324474566 seconds)
  done (took 24.873232442 seconds)
done (took 137.847595008 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.25382178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.116174214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.069659958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.223023174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.124134742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.068757131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.088901181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.21059506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.718347007 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.714978395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.217851824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.09187833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.028611487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.109266327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.032371017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.11420568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09879794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269900015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.916456134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.111661927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.094389153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.851376218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.063983582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.861532958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.095895766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.02407175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.429031341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.113526924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.073020564 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.431872282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.023940116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.268894225 seconds)
  done (took 172.721323769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.780690741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873421686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.87198862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872339432 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.053289325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872622448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875030675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882479764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.09037438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.082353609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.88474842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.095983882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.890138038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874074763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.880502229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873774773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.216374079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.859791225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886750454 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890808844 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.896505214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.007202833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901233878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.050750651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.245079815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896706128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874260991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900894403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879134725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884572685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873988127 seconds)
  done (took 207.712623518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.877435186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873525862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.872705305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873712717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.87538704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874176059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.876157733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87538215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.545621862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.543072975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881525374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.880933962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.885452769 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874274671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885849326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.877629647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.88397001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.883327254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.880361159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.88291212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.886238761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.600390679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884855941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.610003444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.883589999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.88245181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875513115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885370848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887271867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.8871559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888620748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.875868337 seconds)
  done (took 220.776108095 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083643099 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.885333459 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.887162844 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.814747489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.88670847 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.886105661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.833420579 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.077361174 seconds)
  done (took 19.183043566 seconds)
done (took 622.206428201 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.338981795 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.175562891 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.056753453 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.909159189 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.155099436 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.939766376 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.905431549 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.972336008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.637157947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.973652365 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.556176052 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.919343225 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.65463604 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.92682642 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.027714031 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.965810181 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.454322139 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.543697988 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.080226548 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.982064675 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.078217666 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867520692 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.983588921 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.662139809 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.665388629 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.907712333 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.08934313 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457939377 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.913631012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.070332479 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639986218 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.29158111 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.914244034 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.904213126 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.963490963 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941938948 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.251325329 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.914109285 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.031906815 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668008141 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.970005523 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.521338057 seconds)
  done (took 103.697983144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.875627201 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.874673536 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.874558568 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.875339407 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.875490743 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.874794551 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874271405 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.874427406 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.875718357 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.875117574 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.874799226 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.876770704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.875459492 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.876353175 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.875146952 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.874879656 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.876550301 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.878456361 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.875332684 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.875534784 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.876710064 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.875893032 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.890446014 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875024789 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.876599617 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.876972503 seconds)
  done (took 50.608721059 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.890737523 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.055223879 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.146930448 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.905829379 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.88842082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.892845941 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.907011593 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.897593189 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.892385439 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.890449799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995537464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.896234771 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.907636388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147629835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.902812534 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889666428 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.889003609 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.888613627 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.063876179 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90352783 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.908725953 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.894299263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.908906483 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.902666905 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.890940729 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889849508 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.894372111 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.348051022 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.8977561 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.998431493 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.932798469 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.908782881 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.306228693 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158018188 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.939950342 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.895378037 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.891628739 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001359193 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.895741503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.891947347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.910398204 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.896477481 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.147086749 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.384364323 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.902437742 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.891114286 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.359625664 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.010928168 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.929611917 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902859698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.150871986 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.904094044 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.893291709 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.892442255 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.927766315 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.898564887 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.891634108 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.217505912 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.902081973 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.909458509 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.894302706 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.891029967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06857251 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.898281287 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.058190676 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899595759 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.898401482 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.893501735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.153815302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907491522 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.397819229 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.903040347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.893279926 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.998524656 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061323057 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.385702631 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.903038522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075067363 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.322238043 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.916648666 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.899915285 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.33829389 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.921196921 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.901259962 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.896076399 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895740723 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.894657751 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.939363206 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.909303514 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.32403911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398846773 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.232706322 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.920256611 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.909829819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.894441812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219458201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902721783 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.895755077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.156919119 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.400680898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.904871287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.903070353 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.383668997 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.906898946 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.9120142 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.901247698 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1570456 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.905445751 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.938893543 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.896337629 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.901080891 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.895547545 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.912467928 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.900886571 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.894725336 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.372237188 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.015785926 seconds)
  done (took 234.926550088 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.889554095 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.88480786 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.889259238 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.900111693 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.887925255 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.895430692 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.888286533 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888907928 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.894546456 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.887343005 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.888625616 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.889193974 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.890782337 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.896036955 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.932164751 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.894921985 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.501870718 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.888808939 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.888712709 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.887194514 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.537975712 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.897991182 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.889746747 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.886440588 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.889562217 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.890127968 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895695787 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.922416855 seconds)
  done (took 168.102229792 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89721545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012074919 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.908182662 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.923843311 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901725617 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.894763164 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.918889871 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.908853704 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.900811239 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.894127928 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.89485359 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.957341269 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.903726654 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.995805322 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.923258969 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.924876769 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.999698283 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.90301857 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.894854629 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.89475221 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925417478 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.89000381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.958229208 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.016897204 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.910157223 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012684171 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.896916993 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899931975 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.897058995 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.012819821 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.907011767 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.956840144 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.922500116 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.914478582 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.01915697 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.009451583 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.002986849 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.925716228 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.898365276 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.896160646 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.896173131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.885106389 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01409399 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.9130795 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898611949 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002963696 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.912915099 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.900130471 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.908099374 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.895699216 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.910999004 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.915751738 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.963766196 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.025890124 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.927515828 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.921804687 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.923486569 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174836957 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.90666656 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.998398799 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.890489301 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.014827177 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.914867863 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.887372667 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.898658437 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.903680014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.927344269 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.926311705 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.003828084 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.905118301 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.997849001 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.930641911 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.902471974 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.899748494 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.901202703 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01387952 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.014019014 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.932753437 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.932809602 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928215067 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.890762314 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.900295605 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.889566487 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.918104215 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.901280564 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016080579 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.01345255 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.90644202 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.901952743 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.901357033 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.901360288 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.925239514 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022519954 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.931274969 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993834171 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.965233063 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.967403293 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.910648838 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.914076336 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904475907 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.961939371 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.910613855 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.91245902 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223463984 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.969235886 seconds)
  done (took 205.429869018 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.355404363 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.950905524 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.957967374 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.21102024 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.317989937 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.793760242 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.944396118 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950382462 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973018909 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.137622817 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.020845792 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.968995868 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.933941651 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.923373049 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.951100978 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969787259 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.964624036 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.294497669 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.072679263 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029495969 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.927183693 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.211930694 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.273263306 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.351905076 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.982640354 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.298277067 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.62740214 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.087349467 seconds)
  done (took 62.318678149 seconds)
done (took 826.889942133 seconds)
SAVING RESULT...
DONE!
