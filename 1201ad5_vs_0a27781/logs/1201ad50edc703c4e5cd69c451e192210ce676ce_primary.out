cset: moving following pidspec: 18020
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.342896327 seconds)
loading group "string"... done (took 0.626998844 seconds)
loading group "linalg"... done (took 7.294625979 seconds)
loading group "parallel"... done (took 0.157904872 seconds)
loading group "find"... done (took 1.172686562 seconds)
loading group "tuple"... done (took 1.813320197 seconds)
loading group "dates"... done (took 1.251113876 seconds)
loading group "micro"... done (took 0.221662586 seconds)
loading group "io"... done (took 1.027185554 seconds)
loading group "scalar"... done (took 38.147846234 seconds)
loading group "sparse"... done (took 12.537986842 seconds)
loading group "broadcast"... done (took 1.001247219 seconds)
loading group "union"... done (took 13.164624616 seconds)
loading group "simd"... done (took 4.775602886 seconds)
loading group "random"... done (took 9.956900456 seconds)
loading group "problem"... done (took 1.982253977 seconds)
loading group "array"... done (took 23.045731345 seconds)
loading group "misc"... done (took 1.74539133 seconds)
loading group "sort"... done (took 3.78841963 seconds)
loading group "collection"... done (took 18.647910724 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515187031 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125203569 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11835502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119938402 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147231071 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112619821 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124163103 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085235167 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809085859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149067689 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118083283 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432271146 seconds)
done (took 5.160522597 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175803588 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084540121 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084472184 seconds)
  done (took 1.297407311 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067197008 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126795187 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068456267 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068141827 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06846508 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067955986 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067931925 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068168956 seconds)
  done (took 1.659916599 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072751741 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073281862 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070065824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069767704 seconds)
  done (took 1.411327348 seconds)
done (took 5.749465568 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794492893 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202954731 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187635405 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41132116 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132072874 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161443062 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638269105 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301891189 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189074281 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081205547 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105674043 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329325503 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109173279 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6380306 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074425596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090676064 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135518455 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431836278 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066934677 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082565583 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088319543 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127882955 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087877979 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07510614 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14622189 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067124044 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136733053 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07964889 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066389249 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212754205 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171815884 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672130577 seconds)
  done (took 10.260213169 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098312013 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100969003 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070987233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125975965 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100052337 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072327874 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073061805 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069559225 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090071719 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129873066 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089154414 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102565888 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064997105 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068776202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085405033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204126739 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08091545 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081594735 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070627078 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075593152 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107687095 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078516706 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077399652 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077536331 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128420414 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180251863 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099474975 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097947019 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069315067 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082358698 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114776521 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128327109 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067789095 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067595321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124764668 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094521024 seconds)
  done (took 4.617156017 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008069685 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144986484 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091066311 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134784904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06475592 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109770221 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065646804 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080598976 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21074289 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.461775654 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598482758 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114534698 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105440617 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067303442 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068439529 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114640311 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06822421 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373726274 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095863248 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105586409 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080717999 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069644724 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068003246 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359662055 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067064163 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062914216 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067475517 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056672892 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124396812 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067180747 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95156094 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127872194 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066787844 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10117914 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167997919 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066331746 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089438362 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276920609 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07092142 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066273067 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155666859 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070559864 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066038871 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084847087 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103164855 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113009473 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065959209 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066977229 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161370356 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064958797 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079064412 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.638762343 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153073957 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076200561 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064668393 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255429785 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08799683 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069568488 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063751846 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177076235 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136457263 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067936733 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066708799 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068581305 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068662841 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373997284 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066278768 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882574777 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070117943 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078436323 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069279116 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069060003 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07282561 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075517108 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087503202 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066408088 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07466932 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065627465 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065620814 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066717243 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083574496 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374261169 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066763958 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068382203 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064434 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089139413 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09628637 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069524374 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067220922 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101563295 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067992827 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066302668 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106526703 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066263031 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083241543 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063794572 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068057421 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112983315 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066062517 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196831325 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067802156 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065879114 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098797728 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070356462 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103672254 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08004349 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068185564 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417187341 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064980104 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064907525 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068302028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065219768 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06743128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066335966 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078475228 seconds)
  done (took 21.031740906 seconds)
done (took 38.040846399 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247350349 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078478337 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077974312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080080987 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074514609 seconds)
  done (took 1.779602393 seconds)
done (took 2.976302558 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127225431 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103271239 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065867246 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100384582 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06410666 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101963873 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100569277 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082048786 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100160877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063841753 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097803956 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0645584 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064028347 seconds)
  done (took 2.352827014 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084932475 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086810725 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071454551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086351638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065339185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086176379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084060412 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090721674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081593062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075496839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063915114 seconds)
  done (took 2.065485753 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083096872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086968034 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072656835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084818608 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068555638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084268278 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084363499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088491113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083372112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07633018 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065521955 seconds)
  done (took 2.066289544 seconds)
done (took 7.670002596 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078364763 seconds)
  done (took 1.25309815 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603066743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.249520158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081265125 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112429884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18933008 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119681192 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277664338 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086812755 seconds)
  done (took 9.085128421 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106397927 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072853437 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074578742 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067755951 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06887845 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070996249 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069443431 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070697687 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069639153 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068337632 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071370278 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071886734 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068244624 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069737122 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071422661 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069656444 seconds)
  done (took 2.420138413 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094154028 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093898866 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075726461 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076954207 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074178283 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072777091 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074286501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073180502 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070482472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072119358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074198628 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073652771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070980845 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064556042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073498225 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075021713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070346145 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073788822 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074141107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074479033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075057336 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063886217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071201508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073668598 seconds)
  done (took 3.082503842 seconds)
done (took 17.029746355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118917363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073604079 seconds)
  done (took 1.379169765 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083408482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084442762 seconds)
  done (took 1.360903747 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085468328 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065710754 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092018782 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078760844 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065951616 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065684269 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089302083 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066157092 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065379916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065645758 seconds)
  done (took 1.933184243 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068609343 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078296699 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070626688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081127485 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073729316 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063569879 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07227746 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067579724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077582739 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062626068 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071735086 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082605075 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071210894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084473521 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072753769 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06843324 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070324992 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066631092 seconds)
  done (took 2.500335616 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066256621 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06629226 seconds)
  done (took 1.3333414 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067215542 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063516833 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066675088 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066482997 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06324294 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061839306 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063032208 seconds)
  done (took 1.647241205 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382762623 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112027584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310976624 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070266964 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080801089 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256710188 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065384923 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070169143 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069969856 seconds)
  done (took 2.663892321 seconds)
done (took 14.023003274 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080446226 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085541535 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095910068 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375142095 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091413594 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065791644 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11319681 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189625026 seconds)
done (took 2.308658945 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21271862 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.629877217 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401602376 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203546674 seconds)
  done (took 2.437068845 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341713555 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089805142 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060190648 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069428631 seconds)
  done (took 1.767667065 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067463685 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071447607 seconds)
  done (took 1.348261378 seconds)
done (took 6.980078279 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068107879 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086375584 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067892932 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065407522 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06822611 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065272725 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06540968 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068303778 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067252629 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068670877 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069169618 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066129772 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065721474 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063017787 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063427508 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065682707 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063362636 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062982282 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063614296 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063514854 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065843158 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063474885 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063151395 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065553354 seconds)
  done (took 2.839960684 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084659798 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066631506 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072626779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071149946 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06981924 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071098312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071067624 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065877802 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071622959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068038647 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069277204 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070322142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06831122 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069860834 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068085609 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069753128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071433011 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066183147 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068213691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069554701 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071370024 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066039009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070023403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071191562 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069627379 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071414519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068096667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066289686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071175817 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069551511 seconds)
  done (took 3.316734889 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069489835 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063879976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063595113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071036913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063395656 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064325594 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06299768 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064190225 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064592201 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062841811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064817781 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063013978 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063566598 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064018554 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063848594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067266285 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079346128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064138807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063320493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063536003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066734544 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063707072 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063473184 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062843055 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063050435 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062897575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06329088 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062961212 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064067163 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063136845 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06613211 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067072059 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063255035 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069819448 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066599595 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062725838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066853077 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062702638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063298945 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062930442 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062754569 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062559152 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062745827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069969623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062997331 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064041629 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063161502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063783648 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063196892 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065679129 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062564853 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062843495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065505384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064246277 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066944183 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062726856 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063530262 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062284501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.178174064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062888212 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062711401 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062668634 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06656586 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065947175 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080117698 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071914882 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063203719 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064697817 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064038627 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065511238 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064647994 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076878215 seconds)
  done (took 6.015860334 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091763742 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087497295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065580621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064946964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061955918 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063674208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067156909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06358127 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065119359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069353382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063726957 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06467193 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065342059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077005438 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064311512 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06482193 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069574054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061359167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063468658 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067187291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064040349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066628584 seconds)
  done (took 2.726579284 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160074238 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072157017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108377614 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074991897 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06875094 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073670952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069330997 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069590236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06924133 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067924711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068036177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06944098 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066775175 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067991292 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067474026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067744089 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069656568 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067932706 seconds)
  done (took 2.601341847 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07978349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068245848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089076043 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067619431 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06782968 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069376933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070378982 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074057482 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0682697 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065582594 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074253507 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068019711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06820921 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065389771 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067976744 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065441999 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06780774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065233613 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073679662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070125849 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069971993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073438809 seconds)
  done (took 2.772522328 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082357611 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069492741 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085273128 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071001057 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063608985 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066229172 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071933913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067268332 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071848596 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069029461 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065341032 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063960041 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068605283 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065359613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068505671 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065705753 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067595357 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065337226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067340417 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060799057 seconds)
  done (took 2.599901062 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08852647 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069673369 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069556825 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077609364 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069238717 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068573223 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074858825 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067018811 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067423271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087635533 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066907309 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067266971 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07476282 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071897397 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067288143 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074950948 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074530114 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074663391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066658607 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067069312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088015675 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067020183 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074496589 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06688431 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066886922 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066865618 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066745343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071661569 seconds)
  done (took 3.239481369 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068300828 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067872749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065327615 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065368516 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065480043 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065345396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065388003 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064822189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066750122 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063530157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065907153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0659183 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066146207 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065643083 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06618584 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065869318 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065722827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063418152 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06319524 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063140636 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065722846 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065467396 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065922505 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063560671 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063556763 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065563832 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063472425 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063012066 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066178762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063111274 seconds)
  done (took 3.182453622 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077403394 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075088109 seconds)
  done (took 1.381072926 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064716275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082397895 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064676486 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071981839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071351258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066713898 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073224804 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069379142 seconds)
  done (took 1.787859454 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083820447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079336532 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069829686 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082072752 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0794576 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084979343 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137061196 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069410598 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074078869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06553586 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082386799 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066969844 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074107106 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068363757 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07383449 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074012555 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063464264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07163397 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068273528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064829586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067310407 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074639108 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068485195 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061208273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066902643 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088232858 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077303167 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065694666 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069101394 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073545703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071554124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059975709 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06581619 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066411317 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063487641 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075700066 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080658781 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068279942 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074420685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066578236 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07659215 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060724937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070143719 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073016752 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07588218 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066253128 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066458922 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0608678 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063669906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068276083 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06079534 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065904118 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060517325 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075549973 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069581108 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076651855 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064924891 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067146561 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068642039 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069284051 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072402806 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067994072 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068465876 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065667401 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07586884 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070275685 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074925653 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061102254 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059868396 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064396716 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075897139 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088586769 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071842265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066724176 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066516899 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063562464 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069441499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067125044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071214881 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072032118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066053988 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070993106 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07313509 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065873857 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068173884 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073566275 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064077392 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06864488 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064260885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082673019 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064824076 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064471977 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063917186 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07629498 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069068665 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065730575 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063903374 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073148696 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059988179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066338822 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066521618 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066662412 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076337611 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069270293 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069266081 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073342712 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072909958 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065689047 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068065481 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06162239 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065753586 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064059719 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072050252 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05896176 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067855552 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065698308 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065708276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073465377 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063081062 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064752614 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198172551 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073197575 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066794145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064162116 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070531641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066683709 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070847874 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074731765 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065870758 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061817031 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061318829 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069518447 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06723504 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070179829 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071374955 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069346278 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061376647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064244794 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071332285 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075677076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066890353 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068118523 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072602198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067492933 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065303889 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072996997 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068664607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065692364 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072259383 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068397544 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0617809 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070071208 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069593631 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065006497 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070362468 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069818514 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069064899 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067108845 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06532023 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073780696 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067753878 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065812932 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066951714 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064733153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076884015 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068542391 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061408093 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06324955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075599084 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065040427 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065862497 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065642446 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068994754 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068040905 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063974592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066198202 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068480439 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076484782 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070759511 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067877252 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071368047 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077269591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066052338 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068047076 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066225504 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066986014 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066768768 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074631348 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071067517 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071073501 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06827252 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062235675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071117419 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073830552 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064657198 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063506868 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065139736 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070039241 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071614937 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070079922 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066856094 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064363137 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066747784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06998757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068998377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065879657 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065221678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072842839 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064273297 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072969599 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06694596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076268533 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069591167 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061264132 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069370303 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064578446 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07278043 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06187561 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064193448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065422191 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067217569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065707179 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069309998 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060864432 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073116927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074083198 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066822858 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065514654 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066003006 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072128204 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06652553 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068849523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069171157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071196504 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075485823 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0642934 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068605517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075387321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064828252 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058846815 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070304814 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063742525 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064618816 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06424506 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062738957 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.196414426 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076318524 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074660751 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06082566 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070091268 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065576127 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066413154 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062807512 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071952269 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070303223 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067687596 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074143987 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068437107 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067025249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070826429 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067069404 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067328376 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068048782 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07032086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067658852 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068802171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066198519 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07055447 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065748765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065308796 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068767609 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066135919 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066598192 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071850027 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066712454 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066298943 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069108293 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067416408 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067087294 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066970147 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066397078 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069512831 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067369956 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06744779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068522782 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062092135 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073285682 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065876348 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074159487 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06672069 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063196743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073750169 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06910833 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072281126 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06800961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067917305 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067601925 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066356351 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069296799 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073447844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064229064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077234239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073536599 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067698432 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06900937 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067457684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067633687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065328101 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067707947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06744873 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067362502 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066131092 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07048766 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068038706 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067091998 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068177836 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067139589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066364836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067185911 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060734397 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064979509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065132873 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065878215 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075366387 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066572487 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065704201 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06483005 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066612814 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065299328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062774529 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073808892 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074954104 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066341445 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072966056 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065667597 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067603727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076140305 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060251214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064041366 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063411699 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063619503 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073064176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066205898 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074931293 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066176533 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06536264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063309862 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066684264 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064523511 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060465552 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063670632 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069322624 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064950736 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064885936 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0660415 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068629031 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066776977 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075000454 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064577867 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065520491 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064979891 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062062251 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063828218 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06386055 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067268191 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065262665 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062942222 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062386797 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064236173 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066075299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066095131 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064802971 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066196988 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.205570036 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066541181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068870353 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069807129 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060757346 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069636843 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066318174 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066231821 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066088023 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069904485 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070137618 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067516904 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075304885 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066772893 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068348781 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066913726 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064417185 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066532444 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066322432 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066854926 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064926633 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067899817 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074761233 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064698599 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069794453 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066143031 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06679102 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072744915 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067483723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068857479 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073388569 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067335461 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068433846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074498978 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071685623 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069630919 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067763834 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067849341 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072301703 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066030846 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07321904 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067495934 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067196692 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067886908 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064395612 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066668398 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066904161 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066355164 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072446361 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067589662 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066310518 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06551376 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064491796 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067270884 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069757774 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073270628 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068723911 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069553295 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062091145 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063679623 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067640352 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064423209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06754136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068475638 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070857136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06895153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066064774 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065139671 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074539576 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071842436 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069614392 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064860106 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070044031 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066930216 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06823347 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066600377 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066565017 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067021515 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070159578 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067082932 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064943475 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073257317 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069785967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066452562 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06767956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067256864 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065863087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061137023 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066737193 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067570676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071427002 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06798919 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066289372 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076732681 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063783312 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066255132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069077516 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065403931 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071340982 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06189925 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067838057 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067226768 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06735795 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06121839 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065406184 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064263736 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068306186 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065117376 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060875163 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076602642 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075176618 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068889741 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064797873 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06420441 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060890408 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060510881 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064425594 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065889005 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066403901 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074721993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063783673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063893985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060171304 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065103359 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067356194 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067785477 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062102884 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060088581 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063815733 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.200943535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072640927 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066126591 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066638971 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070774688 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068604702 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065110997 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069843738 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063934334 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069621808 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079369468 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067695046 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068757085 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073152937 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075141126 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067259347 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061778297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067896025 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070438496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067568166 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067993464 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068659021 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081562869 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070029655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066082296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066117356 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068971312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066197819 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075411478 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068082073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06738259 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071349114 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06860304 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075831327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070044489 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074060125 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069479665 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069425441 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065189012 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066987796 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064346213 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06591901 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067128914 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067448789 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071757888 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074630015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065913846 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076886845 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074984074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068793092 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064517565 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065795762 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065912396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061613209 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066995812 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064104674 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064237421 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064501467 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066043559 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069320357 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073584354 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069571525 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069277614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068410896 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06221301 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070133426 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069951569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068547273 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065150883 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067341135 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067098869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07081264 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069589523 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063203964 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067082807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068504709 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066771036 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061179939 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072609806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065020677 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068032829 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065604776 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066081016 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066960651 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069586582 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070597748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066963855 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068227971 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06951116 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068027536 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063520181 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063037873 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071226425 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064880948 seconds)
  done (took 42.46949518 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10167798 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062560755 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061703501 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061612521 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073430589 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062389954 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061431809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062917304 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06275276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064551627 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062178037 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061187015 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069996327 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077646457 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073571448 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066346436 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061808183 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06196561 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061719682 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062180673 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070073561 seconds)
  done (took 2.731770013 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07481558 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069335183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071671689 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075083798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066832683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070383008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072795049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071107042 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076003237 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066340841 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075468253 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070609673 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066857143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066527871 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066036808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069920207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075552764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067194927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070446398 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07158675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070168484 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071743234 seconds)
  done (took 2.860666335 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067281964 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065638239 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067684958 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061218053 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06546855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060519464 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068762158 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063278623 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069033052 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073409945 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065051472 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064494014 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067090116 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060672316 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065539116 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063240349 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107831076 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068749939 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065074627 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066061262 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060648907 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067241786 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060537257 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060854243 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064394045 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068816145 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066258694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063586648 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064957989 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064343293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065020681 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06345704 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066542107 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065529788 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064206128 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064201464 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065374934 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064818225 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060625141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063198212 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065888549 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061099186 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065691009 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066494823 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063523531 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062875862 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066778203 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065195417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060657685 seconds)
  done (took 4.530111157 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081860765 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108689947 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068126467 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089133998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079912393 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075112065 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069109199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089367209 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062853192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063662422 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081298469 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079100764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065470593 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069763926 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068869238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065345808 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065952003 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063850907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068907772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064244129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068990676 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071829161 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079942726 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078693094 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069268851 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064642761 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064324326 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069417764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077541962 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069518717 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070045815 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0708536 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080181175 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067061313 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06420528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067419242 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081153143 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065473891 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067559436 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062720655 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067802531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069211154 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071531074 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08131696 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065094767 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070144261 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065038972 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062639463 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077643354 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06740693 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072534112 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079234935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06912786 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064789427 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069421728 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079897787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064987446 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062988781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068995232 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079817803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06438182 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070272799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080720183 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06917696 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074322686 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081655868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07298715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070220091 seconds)
  done (took 6.33863974 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077536083 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073539899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080532685 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079503884 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071595476 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072058368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071814398 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072185204 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071747638 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076816979 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072314421 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092088443 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067252897 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074226176 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07207055 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072265114 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07236621 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07165722 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072097283 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071748878 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07187142 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079273274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071759382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079934158 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099004348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067206476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071717288 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071756235 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080145088 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071649482 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079241723 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071384643 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071744391 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079855353 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078597127 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070978679 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064583552 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071074519 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0718317 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071665134 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066852823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079205827 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071690407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066779067 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071860564 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071431193 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079746447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078708765 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073730074 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076543964 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071741088 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079267627 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071548036 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071467203 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079148067 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105245457 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079053966 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079317107 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071812204 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079249821 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079920273 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087596351 seconds)
  done (took 6.002995606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086782488 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077319693 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077042534 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061691682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064712353 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070345351 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063868778 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06425189 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074242078 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074142912 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076321283 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069317021 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07229738 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076713792 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069220304 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072121258 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069489121 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069050276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074223696 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069784007 seconds)
  done (took 2.764891309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077249987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084739426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068943723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073863381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070714253 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073747576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070244293 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071534257 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068421392 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071657157 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077950723 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077822118 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067244394 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071160158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075942614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071337113 seconds)
  done (took 2.496358535 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076271018 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073525362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082752898 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068311918 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065872351 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063751399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067518463 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063377308 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063810658 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080005503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067588194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069760677 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067451745 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06607241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062744333 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068403744 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061768043 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06279325 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065110047 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078242076 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076837322 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064247572 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066607846 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065683871 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065723059 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071192751 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064821948 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063786815 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063750284 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067913004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068407997 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071653717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064763963 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065663861 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066225194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065145364 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067151002 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068285673 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07051274 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067651692 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065998665 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06735514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06750989 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068598054 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063944808 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067546057 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063797728 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069928401 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065397547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068117445 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067677268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06990631 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068401745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074856659 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070611349 seconds)
  done (took 5.068208272 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081839275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071994004 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063448711 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06614632 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071476208 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069607034 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071761302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069830649 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070367193 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066080255 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070151031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070641959 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070068781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071520196 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069702218 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070910018 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061776566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06784639 seconds)
  done (took 2.590796505 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073072635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068611409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075428062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067947976 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067515329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070471189 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064163978 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065928619 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066854303 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067942364 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067635269 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07031411 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066450995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069931259 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067692369 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067651058 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069269324 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064052034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065220894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061422796 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06949981 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066291897 seconds)
  done (took 2.822389319 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09653547 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084846436 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143871496 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081513661 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086733179 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073169321 seconds)
  done (took 1.897973328 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094889595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080481108 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068402434 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091328106 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075271851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068565464 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068692844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068780739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077239478 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077813034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069230081 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078048136 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076764933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075724131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074464363 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07488072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067738474 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066927283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065867778 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083439218 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067321394 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075634938 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067363923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066664836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067183609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075265886 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075585842 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076245922 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066749661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076164755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072474866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067216869 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075689314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075885182 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068957977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075551816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066722873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083446507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072903506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074682595 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068996139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072865051 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075259985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071541498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075771146 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06838003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074033576 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068855304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069279864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087843987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074683879 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076681768 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075138188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077828978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077618696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0880056 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078022792 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076722414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07506747 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080570845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076783441 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074860832 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076643543 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077790409 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075222438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077369421 seconds)
  done (took 6.258142214 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083649573 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089787 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069090051 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07814244 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077079213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069879889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069382962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069369704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069535381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069296671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110467327 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067432923 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07494882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075236444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067040574 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067403307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066982947 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074958029 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067839835 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086103329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066856344 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074676194 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075033863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075615504 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076532098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07483927 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069669766 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069496509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06904989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068764161 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074390503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069335638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077382671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069140633 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077131426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069127084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069452616 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074362595 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069120143 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075338704 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077297019 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086540851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069467286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06923692 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078250982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069226064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06967811 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069434039 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069530892 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06959548 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078472756 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078632167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078816822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076974303 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069436331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069346444 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069684529 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069219384 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069603456 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07506936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077372436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069688912 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088125642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06971545 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070078739 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07746394 seconds)
  done (took 6.210575112 seconds)
done (took 128.71196881 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188091623 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16532202 seconds)
  done (took 1.673977739 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07111509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101746702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080358476 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131459165 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066681415 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100349054 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099201341 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077812242 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066113982 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066219687 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066108986 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069017884 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13123894 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066285477 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06600731 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068739113 seconds)
  done (took 2.661906897 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101999748 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170594993 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105103577 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067378795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102278904 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075505663 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066893652 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078192319 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074070124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067671361 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075596372 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072972238 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067836116 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072000464 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071234365 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072828328 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065100218 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072484667 seconds)
  done (took 2.817881401 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102720361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093908349 seconds)
  done (took 1.534843629 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163445844 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110424678 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145305225 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352001544 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166697418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.238842199 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128297919 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127826641 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116477341 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123977558 seconds)
  done (took 3.006091312 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103101934 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156309718 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265939052 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117032303 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072414341 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094999837 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117965715 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077846995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080419773 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080469068 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08048528 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076287121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099681189 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072870191 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074154967 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076704879 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103211996 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072204948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074352279 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076271566 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100077439 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065757619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072912307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07256005 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077361466 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077343225 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065332853 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064946319 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076352159 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074670185 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076728018 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093136057 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077400106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106076026 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070655347 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107308941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076162133 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074274948 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074638908 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073636883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078214658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077974217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071909095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075691542 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065222058 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075928379 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065439688 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065366664 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077406876 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06629448 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077252937 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075997565 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106427592 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066568408 seconds)
  done (took 5.959663647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106470176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106471616 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071269854 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113781934 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102044932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071906046 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103836395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096745367 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106169002 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070881562 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069854651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072230276 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084137751 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084468908 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115755706 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107328463 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073608347 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070999438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106309355 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104824158 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06798232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097203089 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091198267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103338028 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067356499 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070288911 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067957551 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069943181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076444518 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07859169 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068950053 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080877537 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084495277 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077674948 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066576856 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067563978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067512136 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079617868 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079451932 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079152415 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077100095 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067137887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067511607 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06937214 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069702492 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067664308 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078769827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080510505 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078518018 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069477669 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069752274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067639044 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069347795 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079833385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077200892 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080857844 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079680316 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068272598 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068674738 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071778111 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080392808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078630036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079463895 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069545306 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078818013 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067789571 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079829031 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08405008 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067843285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069897268 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069444134 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071063633 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071009407 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08060907 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080365174 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07168425 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070743925 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069680484 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082333062 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078257541 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067785178 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076339169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066853986 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0680551 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069097985 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069565891 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.0779393 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080335319 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069724104 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068290663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069368574 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068705389 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066787018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076764295 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079907507 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07844242 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07678529 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068104348 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077548206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077317342 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06837525 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078343775 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067305747 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069000061 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068188259 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077184653 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203080486 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080580207 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070941844 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068894919 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079322425 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08158151 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068262879 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078834444 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080700912 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080350604 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068855732 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082213309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068215714 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079848924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070392875 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079758342 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068356629 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078976567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069041162 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068788749 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069224641 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079198572 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070211289 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068520053 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069907094 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06978333 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079729579 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083432717 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071220186 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081718873 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079130608 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070307772 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078753749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06911464 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080303151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069844927 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070048868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067868824 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082025506 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068045441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068728891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069919987 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081324348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06891973 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079919984 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078408041 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06910354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081395024 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081199563 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078534258 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080080796 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070734116 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068589508 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068624374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069740838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077837608 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080189631 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070504337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06904806 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07784639 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078999969 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067009469 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078612771 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07835696 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078534298 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068156544 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069234348 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080762331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080537778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078425731 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077957801 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078512782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068484544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077237293 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078144362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069968214 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084569078 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068141357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082401483 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078301385 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076712414 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078396062 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080080213 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080353885 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080224586 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08379437 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068259316 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067931698 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079646939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068903851 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069553171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078182607 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069514103 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069519921 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083390524 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068385944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079486792 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067790431 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077680893 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065860695 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068376555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082080245 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067076338 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067897495 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07770494 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068465698 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075688311 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078695475 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.207015436 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069178642 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071281662 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08186385 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079641404 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068567054 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06800532 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070201123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078845116 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078135449 seconds)
  done (took 18.662523834 seconds)
done (took 37.664687764 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216582299 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153057025 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18312926 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120902801 seconds)
  done (took 2.119343991 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123462622 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101305438 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094961667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064503874 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101294731 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064529384 seconds)
  done (took 1.933158272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320447295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211199974 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188599157 seconds)
  done (took 2.100259733 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208798032 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195694053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425535335 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264421068 seconds)
  done (took 2.597077016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14904259 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092194649 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0689405 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086380806 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138165635 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163623111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101290943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125703385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078052785 seconds)
  done (took 2.447908265 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149406643 seconds)
done (took 12.723677791 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.222067169 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.251836875 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.217740273 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221668343 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168054272 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.196502543 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.124759237 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.23293245 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10556962 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160303295 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08466345 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.187517057 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111768065 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080561778 seconds)
    (15/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201682234 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.216136361 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075058787 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.163690206 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075881362 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092023483 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086149208 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07483802 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.167370494 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07012854 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069846159 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088224845 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091826666 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076918338 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176679791 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050502203 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163400823 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081934609 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073669971 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112495838 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11438459 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076080245 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07345259 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.208474827 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072957313 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116933302 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097791715 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12631003 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228327411 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072843421 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.10331817 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15143234 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166338572 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077725716 seconds)
    (49/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053342612 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061964433 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.153987327 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064609123 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095298134 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073273992 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085510618 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154223699 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091218337 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112223313 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080637158 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065945658 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077696003 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077054742 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066803894 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061523915 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14171541 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173852716 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065452876 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08875099 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071441957 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.115958403 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062040104 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072596787 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050342745 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05056151 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064586566 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086741118 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153846383 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108199144 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.065316935 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070475195 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103258122 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109574331 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087850106 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050499226 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091882673 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065788323 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074542272 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151993585 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088222147 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.224318847 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051520729 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096401633 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076628236 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192131819 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184242749 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086982146 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.167136325 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07648657 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08818416 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066648386 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093985378 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140203394 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080938693 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.163357539 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095486617 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090386033 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051819766 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098175578 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089471606 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053557171 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154984369 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 0.138591503 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073521146 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091352203 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088665899 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102985322 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072791227 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071843613 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072632502 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073224987 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123094561 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195584177 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077029509 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07309498 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070901214 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052949485 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095770144 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076773425 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.176362012 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.077446801 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065601559 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.183204283 seconds)
    (133/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073101674 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07697919 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139197807 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05449751 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162005925 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088363301 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.205133981 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050482441 seconds)
    (141/309) benchmarking ("sort", Int8, false)...
    done (took 0.143204498 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051378313 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050476969 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049955185 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066570356 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072107596 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073585798 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183173773 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064667161 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092404696 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19311661 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076145652 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079639993 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073517756 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.155701008 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070220699 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13939344 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050376088 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051120059 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176278347 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06475243 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067115395 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091497717 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050305177 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075123355 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099158882 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085803663 seconds)
    (168/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.334173384 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051851712 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087322011 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050678087 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051212103 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072080193 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073250439 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078765372 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050557283 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074030811 seconds)
    (178/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054210576 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100007446 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065651216 seconds)
    (181/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072373959 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051333214 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 0.130940863 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065102254 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06406476 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073858183 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141057296 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063368301 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066538252 seconds)
    (190/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19376847 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179843099 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050919542 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078655518 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064329118 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062539393 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071800015 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051038281 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065981349 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 0.289462123 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127396719 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100036874 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122483164 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157507948 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05249209 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109866769 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072571163 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066569549 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090236615 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074804588 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073642072 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065564291 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068183074 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065685862 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.163074942 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069360422 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051364991 seconds)
    (217/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06597044 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065296999 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104402132 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0719001 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091978347 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06973164 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064719034 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077443922 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065531469 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050252484 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071877587 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065435097 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124914341 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052687772 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051965591 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053217677 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136642809 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074582028 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050465953 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.0504976 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151613557 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06597643 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052314649 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061392799 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073092918 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080510106 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07040273 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051433729 seconds)
    (245/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067956604 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050609506 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052653422 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067081617 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072072737 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073510069 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06537068 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051078043 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050255397 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05302409 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109427298 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065163656 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070552402 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072808502 seconds)
    (259/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074322799 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156765094 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072238458 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13228327 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088109786 seconds)
    (264/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060970451 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073196169 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050490293 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064393142 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064769337 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064699047 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088198502 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089177431 seconds)
    (272/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061551567 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08909355 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050508542 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050404702 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065744982 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.0521493 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071701506 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07311988 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063705784 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050794176 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063746004 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06633669 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073035594 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064022517 seconds)
    (286/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050831889 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177429689 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161822512 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068388508 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071326748 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067209385 seconds)
    (292/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072366942 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064438194 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078879731 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051283375 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067233684 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051744861 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050624808 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050405503 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136016261 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050917028 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070561621 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073114378 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065471321 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140021633 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171449713 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065259308 seconds)
    (308/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051421553 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051742863 seconds)
  done (took 31.004662362 seconds)
done (took 32.401417185 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087159927 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094008159 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075574851 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094247452 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082103008 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076705241 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073092094 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079107124 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080586929 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082293219 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078320402 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054399338 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074363885 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074355651 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07523797 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0915153 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078903626 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073436592 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073168975 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065382616 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073412796 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065742651 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068041406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054157105 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078852305 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072526898 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072298318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074384009 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066247435 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065965484 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06914233 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074262443 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065369942 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079001658 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073595996 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073521842 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075112334 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077417525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067737326 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065944807 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074848424 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066042217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073513967 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074387237 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072826687 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072240967 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073500742 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078192623 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09190027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067709936 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075520586 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076227464 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076705459 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073349323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070457266 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073394527 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071338843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091903352 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073476652 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067937563 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074279357 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074183308 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07160864 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072971107 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073086834 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075103763 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075645982 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071472691 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074940538 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071765305 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065209617 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072732007 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069487735 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065679777 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076172272 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077086956 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064352458 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071790436 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072634101 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071307772 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06458598 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067148654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067138152 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072289245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067156356 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054142806 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069803768 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071669123 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064389552 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073422123 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071580556 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072370546 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066792704 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075683668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0640162 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070765468 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06508427 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064930801 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066788294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069286979 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064723929 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067175854 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07473309 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066580263 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071189452 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078955782 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064716921 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071827394 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064025808 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064145515 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079796912 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074777738 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065149854 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067692367 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064376022 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072654821 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064669683 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06464065 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064585635 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064876232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071451947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064820039 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067072473 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07231723 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07782109 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064594955 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067996232 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06647335 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06410393 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07051667 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064282736 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06430681 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065593821 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060518926 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065982409 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063772647 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071481259 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201793315 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074046993 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067872634 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07507123 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070968767 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072129279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071633868 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064948588 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059338635 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067981404 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068482915 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067653846 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065509855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06761673 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065872669 seconds)
done (took 12.459899935 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06937186 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146967677 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100925609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095964408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086022904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066529926 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076668457 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101696309 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067826633 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101974594 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08771192 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085501397 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11281708 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065164256 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066302774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070369439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067909281 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08218754 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101668043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086721868 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116744123 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065131905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094685607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089224661 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087377299 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102107577 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066914157 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069834505 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069676321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091833975 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086556555 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069587651 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066442435 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100578693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093517674 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083095421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066144571 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082365193 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066379443 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06575462 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067709351 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097957945 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07928156 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079825964 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069781463 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069166584 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067718829 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082984586 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088653675 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07815996 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087017543 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10256943 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068138878 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065031012 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064134135 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084828982 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065296373 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068581697 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065515689 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068165755 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065436559 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069190729 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080755554 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081500978 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06918389 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079823961 seconds)
  done (took 6.788437816 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087608596 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09225444 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083896968 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085157181 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065649496 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066304289 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066124413 seconds)
  done (took 2.025924062 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069761383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088912634 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089594049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090076357 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085437911 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088368026 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075532478 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066231919 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080990604 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067603394 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08723361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102450126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067122722 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072851776 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091286306 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066663541 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090517779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066921003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070037596 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091348136 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068510566 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082287511 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06965839 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067038781 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080832395 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06705562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114266937 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070671467 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067852927 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06893129 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064411752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108749046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081058955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075826954 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066618897 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080966984 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081306534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065169648 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082941746 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071255701 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08068411 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067409876 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067143236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064093542 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070417432 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07678097 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067028279 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066629684 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068950729 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086521836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06689101 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079959226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069968992 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068657734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067939516 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070380286 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076338548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067067581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086248792 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068782932 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086975238 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086428499 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08340163 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086529694 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071646457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083690973 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083430075 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071538162 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071231417 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072855693 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084993119 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065038733 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067962935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077616777 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068506007 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090140504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089486906 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067718915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075371546 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066426967 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066390407 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065915071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089630683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068706955 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066244893 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07054068 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069291294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064540804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065180291 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070019465 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065105802 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067736574 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069567981 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069254851 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068649392 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083154222 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069040436 seconds)
  done (took 8.78930354 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071521296 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068807658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069544497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067023972 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069077906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067708985 seconds)
  done (took 1.912660406 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096699184 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069965559 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080569685 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072446018 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10567676 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087109197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087314628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07870088 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083666971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078646387 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086961573 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088673658 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093533933 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07255702 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08694378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072233085 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087887488 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076047691 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078934028 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073543398 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087075346 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07299657 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073359223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081659689 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076343611 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072239404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067005931 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078891031 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078999108 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078285396 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072894942 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07622592 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070517193 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077948044 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08717279 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07058648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071592622 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077219162 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072219249 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075335367 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088146302 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072550471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074236353 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077570119 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078071087 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07011326 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077418272 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075369991 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086510202 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076954841 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076931463 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071129822 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075326885 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077441284 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070461588 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078093144 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077287264 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086726447 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072466395 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070373145 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068856096 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07607169 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077975578 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075272209 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078722706 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077050891 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070667141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072474805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073594073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071998249 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077492664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068883491 seconds)
  done (took 7.074085636 seconds)
done (took 28.062297999 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536145846 seconds)
  done (took 1.998323172 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620788604 seconds)
  done (took 2.108539791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.254481051 seconds)
  done (took 8.809230677 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406202092 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499257515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729550635 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132538491 seconds)
  done (took 3.296001056 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720045115 seconds)
  done (took 2.216730592 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218956902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202897406 seconds)
  done (took 1.929243075 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381133044 seconds)
  done (took 1.869932011 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.172266794 seconds)
  done (took 2.661534334 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266809027 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178734308 seconds)
  done (took 1.941275863 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.498195904 seconds)
  done (took 1.988592347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.890422736 seconds)
  done (took 6.386916302 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224128086 seconds)
  done (took 1.76478361 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244856663 seconds)
  done (took 1.74029859 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72694988 seconds)
  done (took 3.221913059 seconds)
done (took 43.427225371 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084176824 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080938119 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080923087 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078466089 seconds)
  done (took 1.802446748 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080063355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075029616 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07748496 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072716969 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07781503 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073572357 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074950309 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077335771 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072782427 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073136621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072987612 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073036632 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07564785 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074810106 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07165498 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07514776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076245213 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072935259 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076410298 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073316201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070937167 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075327838 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075430307 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071785023 seconds)
  done (took 3.285861879 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081353806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073859901 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074855406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072421257 seconds)
  done (took 1.808493521 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081566029 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093804237 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090875408 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078203859 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094177698 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087417082 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069256393 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069140352 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073720439 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077847459 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068237301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096875094 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089113387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077810958 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080001916 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066160415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068531927 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088107038 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078642309 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078684874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070044961 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077948006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068447879 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089396985 seconds)
  done (took 3.41105643 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08088046 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107714423 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078604214 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090182257 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091286227 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065378268 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075087648 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090765683 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126764268 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065382555 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070502759 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065570984 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073165895 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065282861 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076752227 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107447253 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111370423 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069136418 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097663803 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065213196 seconds)
  done (took 3.184708663 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07531379 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070085633 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066003161 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069988315 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077636212 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073398085 seconds)
  done (took 1.943823287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07097127 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069258596 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06796947 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067007018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072822761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066754282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066099223 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067741731 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067423719 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066993446 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066450302 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065634368 seconds)
  done (took 2.320180081 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.204954815 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068248048 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069076321 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06641516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070584396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066512354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080940354 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068052058 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091516214 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066429913 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066528119 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068391369 seconds)
  done (took 2.496868589 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213096357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076821717 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240833499 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141475998 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112995858 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11625288 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105227272 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115006316 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143854567 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102202022 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169889552 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16972317 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108623619 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139118306 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089726965 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100892795 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157025996 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164450978 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106545572 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168531862 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146820167 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127001006 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149556017 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102217402 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106685305 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122728202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07168516 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080257947 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172393496 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135408756 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146570373 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112182699 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093796244 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179584995 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175433762 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143275301 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137976144 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084803869 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105943381 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135526481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202676748 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088640674 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163748701 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10977471 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22167444 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13587652 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12256664 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122537934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107963747 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090770687 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147850348 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187477451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139990243 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087976205 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114601255 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115970847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117286074 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10405435 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185603086 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164231487 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1349387 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071744441 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10135632 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156606062 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135388762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110753886 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127508386 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094572828 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13765519 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157507698 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121661655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14656126 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.131734891 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089507194 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12090645 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141886416 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129497985 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163024047 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125896576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073637443 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126293628 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103297351 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08131432 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147130722 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0754124 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178174056 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099412758 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109635818 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115839886 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11038771 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109772114 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162584248 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146637826 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103683515 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064686026 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249822245 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124140963 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150849696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087851288 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110131496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119432526 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078079882 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140965155 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076605895 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125435633 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078014887 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128193012 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135010542 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078091853 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125546603 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104915696 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102600748 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134955446 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1635836 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089472553 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08242326 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172549696 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12355641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10466511 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145820984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160436897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10306429 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103286636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151574273 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181179067 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089776687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166084968 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108679043 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083706831 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088972817 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125427836 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112989128 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124995285 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082270167 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119396979 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170874181 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075367819 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096538223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135620323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079576039 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081325195 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1066996 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106838309 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096226213 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100936805 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105900826 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139168673 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1264948 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10938034 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12670325 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098060479 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318836827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089222123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102534451 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105831445 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071853274 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138995121 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160465619 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080703433 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166751759 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126076746 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107974644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121145575 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085492048 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142348542 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07980483 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071142218 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146480083 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112784859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110647367 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153797897 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106467029 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127327858 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121411149 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13661427 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132844726 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132106342 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105911292 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089123123 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113401392 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12741096 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073338258 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092791811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080539567 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104544176 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096953051 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083063157 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145737178 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12577961 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10186069 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113073223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097272972 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149839405 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076665301 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129379265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120642204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096584026 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154367051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154752121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132699258 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100155689 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140516071 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073042233 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0762616 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089396727 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123430545 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082682469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082608181 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264418999 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151576255 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131468456 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14133126 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115121723 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121620354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158487184 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071434901 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119206761 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150228443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123881254 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105352462 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092061237 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100239472 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145285205 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109458263 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184937386 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115579928 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128902676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154673045 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101936574 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08059914 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104970092 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138626966 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10562033 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145439663 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10041851 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089370029 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110935918 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074856443 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100201431 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127997713 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120960369 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136635771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116462995 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133941986 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077918421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117758803 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122281584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124392333 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063923013 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12163527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165893101 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095187669 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119097206 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156996644 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081911886 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.126284834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176604184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144867781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085040932 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25711726 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121428646 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13258267 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122630049 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143474925 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109619182 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139958581 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110966706 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087459443 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088959927 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099200842 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105571719 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09593884 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108892502 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116878658 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096272798 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133664481 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105443834 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112013548 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121161092 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099782487 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09100513 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097153284 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179092414 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120750793 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174578465 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101048084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146927119 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166932961 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074998942 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079755057 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07857288 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14047882 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084796634 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132107677 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101854564 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107595637 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125730546 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144596141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096496367 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068777817 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109922675 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135542291 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114434184 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09936124 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10525695 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16597707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101821854 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07950103 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114033795 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10649239 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10365007 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17587659 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063920163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099232764 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076482054 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080623053 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128605853 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296922655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082111261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10476589 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120979088 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115249013 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131268559 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103750548 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101722318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117906981 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153435648 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130429131 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090931731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113953692 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131449953 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159418419 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10816304 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098083554 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175950582 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155816007 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162541126 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090099966 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11606749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116149349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110446486 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143238872 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084082994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165621339 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083135387 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138133178 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105495945 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09081349 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131515203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10071 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089160054 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167255336 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119044668 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083339829 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078354966 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119688189 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121051875 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107487997 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075444836 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140791228 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073868907 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133472987 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160762122 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080916661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105247521 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096785267 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079583726 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107313569 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102250283 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089509171 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239030674 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179133007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089580935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154004179 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135467425 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114197784 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140640025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104714821 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643120921 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078535763 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157267641 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118277912 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177158915 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102529443 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12005505 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111355157 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1254974 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14793913 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105584355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182246232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134873301 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118797536 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080273234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10281782 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105090651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089761015 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108731282 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115332219 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117064355 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094293124 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118103054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127445423 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082260101 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096701746 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158485289 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118508481 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144732665 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141659451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086217976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119331581 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139696135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080676688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123066872 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153385036 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10662863 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099217066 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081154817 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101857426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159760879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072823875 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160525611 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265576609 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112560986 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115977105 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115649147 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132856884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109529771 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122515751 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094165788 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111618567 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115700686 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082650574 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078319051 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106557331 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113087555 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099886812 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099164829 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098761746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154358539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073348802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100614854 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105628178 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146166487 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177014637 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088976535 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083283666 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121150395 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116616929 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113798263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122609703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079248133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082040102 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081823274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078015442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110189341 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113803266 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105830525 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111925311 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16513695 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083295215 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232984087 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096419417 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105824093 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070045665 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07878406 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097274646 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099503446 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1089125 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102589681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161540376 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096054209 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090745828 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093467997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074810771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083852071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130356503 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110081834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118816681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09864618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062127455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108028763 seconds)
  done (took 59.496777114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112844523 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083780925 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096580992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144247114 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124448164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205545211 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153522688 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191086201 seconds)
  done (took 2.742483949 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071912952 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097436057 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106193002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084910001 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066854186 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069972844 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.235049972 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081981574 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066837804 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089795299 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079511524 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069789403 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431728157 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069148879 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071102705 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062146018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067545736 seconds)
  done (took 3.423744626 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389933113 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61405134 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383489315 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073242425 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.5418453 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089428506 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.195358481 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128577432 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073592132 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536780336 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.710624946 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126097001 seconds)
  done (took 18.475772384 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079823442 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072407838 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086995922 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086797133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074962584 seconds)
  done (took 2.012145616 seconds)
done (took 107.9530097 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085528648 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386353925 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053403535 seconds)
  done (took 2.082182766 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086909512 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088480409 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089098664 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087296684 seconds)
  done (took 1.970307514 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077171879 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07993467 seconds)
  done (took 1.772155611 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239545647 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16928973 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090565236 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087079926 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082429073 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083380459 seconds)
  done (took 1.868582453 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076104004 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07677129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074116581 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077248372 seconds)
  done (took 1.915006709 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081211951 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055116731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057294718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0564787 seconds)
  done (took 1.86241496 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090910342 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082474387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078858915 seconds)
  done (took 1.862752042 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106890717 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087693653 seconds)
  done (took 1.805352163 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085657305 seconds)
  done (took 1.696880919 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103189501 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114682229 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13393314 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112871612 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14141863 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110961734 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085615672 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086543928 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077364418 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087914274 seconds)
  done (took 2.666431918 seconds)
done (took 21.697391618 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083078602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377898334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359885458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090003064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669381233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356588796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983142643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093197594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116015662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067572842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085123511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647604939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007781466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32385599 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.995849222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324676259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650567794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068514524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067458916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068226061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968343947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068509471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067956696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068636293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650033166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372884344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068428999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323521432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068562198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069737015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355145115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068519842 seconds)
  done (took 16.181111701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073287282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121137086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073822232 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085379549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070141644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069824778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071823371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069550852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123245748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068203011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085815826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068615391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071750092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068538162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088375449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068267124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069403799 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068729432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068063742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069147016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087285167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068048965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068479754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069236319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068125853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08063692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068630322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068167612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068591516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070258015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070944981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069496763 seconds)
  done (took 4.035956936 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121858931 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127922008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074060512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105952668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114666845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070325775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148725612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093489801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130106089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06870114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085572905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068335334 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102926454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069004993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088911156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069164564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069257185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068779011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069055397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069313669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088318816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068443103 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068772386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069327688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068649594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082767488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068987547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068786055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068528372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070585637 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071627568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069077279 seconds)
  done (took 4.308680689 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076410254 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076616513 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083739948 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085650344 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070496916 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072425446 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073333021 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07006775 seconds)
  done (took 2.240472228 seconds)
done (took 28.384894729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083361776 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070728586 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073867391 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082934311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073450993 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078597281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067700843 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076016609 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073007421 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073828976 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075969791 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068009062 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071296686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067834678 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074478767 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067576866 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079605713 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071940942 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079255392 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079942283 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070202804 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073931388 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075650467 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079547642 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079320205 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079279441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078405846 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073112529 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069673202 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07193141 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077147366 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084505343 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069257439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080158105 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068378555 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069324159 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072884545 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068044937 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079494174 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077554245 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070327026 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077145536 seconds)
  done (took 4.741236471 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091518639 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094134938 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086628259 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061488092 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066615706 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066122875 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090272447 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060027785 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059412742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089141584 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055700069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060122232 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063355474 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053684554 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060500836 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056367643 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062357488 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055762485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060344026 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060078589 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089937087 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053374431 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078321544 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063730411 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058949173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061689635 seconds)
  done (took 3.399685647 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078024374 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088257036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091336721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131153031 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105215349 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07981399 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081254492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09634235 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088987431 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067017344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072362267 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094122696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092212173 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075058188 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067956452 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087750979 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08488064 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069239554 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074127569 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096766656 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087838946 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087680634 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100425958 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084407398 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067655629 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070585938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072558866 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082421998 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0730745 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077820604 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072568757 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071928491 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.081637346 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080401562 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07172606 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070178577 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093575656 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0782801 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079233463 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069108206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072025047 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06941846 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093613905 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134152744 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068427349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074658262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075979718 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07776143 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06764444 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088463634 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079132847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067220878 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070731108 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0664802 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067339036 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080926459 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07009624 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069736875 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077175687 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070417916 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092110272 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072160363 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083486701 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066885687 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074862046 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066677075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068377522 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066773718 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095615452 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068910675 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111632473 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0689887 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068314732 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076310837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074960126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073483181 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067353475 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082951751 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078050008 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070817806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076214449 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070422839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070220168 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091643384 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069809756 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069384834 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068416819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073921856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070825603 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068675915 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080867088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067427313 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070442821 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084949768 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067049677 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068692629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073273145 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072273364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066695803 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078479377 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07210367 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068357118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077148468 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067562943 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070383787 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080606704 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074501011 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066475027 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072091458 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073737463 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068655892 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069089255 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070875452 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069342419 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076441787 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07368681 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072042534 seconds)
  done (took 10.688420573 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169821782 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158441768 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070478023 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150653708 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07681879 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079480852 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151503975 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095621738 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068839689 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068512059 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069471164 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113640081 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10695198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11689383 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079262514 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067757756 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085030448 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115643088 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154043918 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147889955 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085966622 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077476948 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070403331 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069565605 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070306651 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078505828 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085713685 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077467947 seconds)
  done (took 4.434972014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083241482 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10091828 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075568186 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091580528 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091898283 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068247313 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0705084 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069937074 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081406655 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078658627 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067929815 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073454371 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074722061 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072540933 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068792892 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0750524 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075871527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06976594 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071881767 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073830132 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078959908 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092617873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072457144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067326549 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072957183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067203348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063937062 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084536584 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068052175 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095734445 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065846222 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076066729 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082502081 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068938338 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068109635 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06752808 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06836465 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067897507 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069658569 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066248935 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066553798 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057224048 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066599674 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079307281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074507575 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055794581 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072614482 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073097019 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073244174 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065096505 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070501038 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070461301 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070682463 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075398322 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072653303 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073332306 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068939966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074069563 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076551508 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067344355 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064920415 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065828952 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07225939 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065446409 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076718176 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072345319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06668683 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06740969 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069425364 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074414866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06758096 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070481412 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065395813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069572924 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07251565 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069436701 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068816731 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066325798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067907532 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067919424 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055555173 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067479398 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052999564 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07084822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065709464 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066450181 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067382351 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072701214 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079927294 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06877707 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073576301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068673324 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067026427 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070532985 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060001567 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070254347 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083831776 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083085781 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067619908 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065585555 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08264027 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072694122 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066759361 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055775807 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075133508 seconds)
  done (took 9.180858903 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093601355 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071069061 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087085541 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095340847 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088229444 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076007279 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077969043 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070269263 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084194926 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074269706 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077946717 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068258476 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078466929 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078180872 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070962623 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078123684 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073338184 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085373134 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083868 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068953624 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076973318 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081177396 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091553411 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082486004 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082267327 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083183218 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092030928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07318576 seconds)
  done (took 3.919328582 seconds)
done (took 37.986885636 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.720537737 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.877394566 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.704781086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.076338003 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.014226013 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.75814578 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.817053275 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.699665764 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.831798978 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.735114525 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.940507437 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.850012478 seconds)
done (took 64.664256847 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.734624658 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.840683216 seconds)
    (2/2) benchmarking "String"...
    done (took 1.973367652 seconds)
  done (took 5.450906258 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.990477507 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.271359508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.950060775 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.698880255 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.703962929 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.039629924 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.499962444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243128176 seconds)
  done (took 30.042952591 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.799143129 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.924448422 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.372004789 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.400163082 seconds)
  done (took 15.175790567 seconds)
done (took 62.118643027 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.735622598 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.735622951 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.73087882 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.683779227 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.759210971 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.708386216 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.032165044 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.701872569 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.697723359 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.692986579 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.699459528 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.138491744 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.705415916 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.170861985 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.698054341 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.706047516 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.728117806 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.239403755 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.85855558 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.705531896 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.720986024 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.725227916 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.70562579 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.706460992 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.743400438 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.699603516 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13900608 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.714104285 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.32830795 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.700653592 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.72846694 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.292978093 seconds)
  done (took 201.967788153 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.703036136 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.772574308 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.822861488 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.725455192 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.204999598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.886774533 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.823824445 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.243062255 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.706227658 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.706287045 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.018487784 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.696452161 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.979110638 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.648886718 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.738630433 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.797666474 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.99908928 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.985417477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.741564389 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.880784565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729826174 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.923541299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.872011439 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.956161257 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.727214913 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.794723677 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.86435749 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.736286048 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897197738 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.984540357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.731942534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.733664427 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921765042 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.574621171 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.712165288 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.714738332 seconds)
  done (took 168.596428218 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.083286079 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.705879732 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.702530651 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703896974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.715871651 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.705923223 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.828540951 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.830842426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.308733549 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.473336903 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757518462 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536386221 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.702003984 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774780902 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.716395583 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.705054411 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.705756913 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.721075266 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.733844928 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.705399083 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706168962 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830895177 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.716117289 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.788209431 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.712909748 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.70534802 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711423945 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.0790499 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70283776 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712866689 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.969903961 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.701950739 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704616695 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594214505 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.989669508 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.709807388 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790764421 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.703086245 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711365228 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.708581836 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.926099822 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706975178 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.705842671 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.711720921 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879411448 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.702443636 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833438196 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.704886936 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.215244476 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.700050008 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708201501 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.720531853 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.391179782 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.705171575 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.709153429 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.710633295 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.710631882 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706191682 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.712454881 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.476936816 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.780378708 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.711048965 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.714331319 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711213343 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.709325647 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.802693273 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.703155848 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.042236775 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.764004716 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.942650457 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832669202 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706326738 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775740924 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799878218 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.70739364 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.706171706 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707826863 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.710214167 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.788855665 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.70482207 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.833938229 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714142702 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.709637087 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760182655 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.777185427 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.708521202 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599629701 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.7086654 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.707779651 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.025325346 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.774433016 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.705733252 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.706618062 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709646096 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.841651714 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.707454781 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.83124121 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.492336826 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.705664958 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.38368688 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.708945871 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709580825 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.85184471 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.708569358 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.886714095 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.708418933 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795267536 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.711519715 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.712848597 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.710833942 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739735952 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709319526 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.772470398 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.712186932 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.086365748 seconds)
  done (took 394.82426338 seconds)
done (took 769.165137813 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.380896573 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.335332968 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.441651139 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.350743831 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.329658063 seconds)
  done (took 13.481699074 seconds)
done (took 15.126624919 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.798420166 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.802164809 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734941135 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.800390463 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733300653 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.800335267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.783354629 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.733942666 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.767821254 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.7387197 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.765628427 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.731610627 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.724949543 seconds)
  done (took 24.560050697 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.957464404 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.973496901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.785408147 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9513984 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758263924 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947182467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.878521322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868226312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865238424 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.730276687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726759067 seconds)
  done (took 22.090114692 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.95243471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.953588642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789010258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.956233256 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762375194 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.976122331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.880108452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868523749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875271276 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.727600025 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72552528 seconds)
  done (took 22.111470413 seconds)
done (took 70.409963719 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.725133152 seconds)
  done (took 3.368916086 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.748607554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905721936 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.730133402 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.727150615 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.726879781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727490652 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.728107314 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.72123823 seconds)
  done (took 15.666514882 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.72123638 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.722046546 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.722377008 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.71852703 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.718455386 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.721666009 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.720337535 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.724219834 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.721500865 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.717943863 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.721298326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.724427357 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.721946508 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.717403111 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.720564307 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.725580422 seconds)
  done (took 29.185161371 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.722825915 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.722492086 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.721813964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.722955122 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.718307101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.722336424 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.719006732 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.722770205 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.72203762 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.720054715 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.720882947 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.71881343 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.719907419 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.719265981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.720331348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.721018101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.722389227 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.722214896 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.72867962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.721966022 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.719569734 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.720330092 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.722844279 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.722283146 seconds)
  done (took 42.967597666 seconds)
done (took 92.836978069 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.574790665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.114916699 seconds)
  done (took 8.338385952 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.726519469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.727175892 seconds)
  done (took 5.13738629 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.722833605 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.722931606 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.72521057 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.723198289 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.728900325 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.723506825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.724380305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.723627085 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.727025782 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.726204623 seconds)
  done (took 18.898918431 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.728281998 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725042022 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.720921582 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725597613 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.725395653 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.722931846 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.726549354 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.727119865 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.725910349 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.724191388 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.725680824 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.725491342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.725869374 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.720202187 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.72658006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.725013975 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722764211 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.721691141 seconds)
  done (took 32.694639486 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.728771553 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.726941519 seconds)
  done (took 5.106194228 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.723736007 seconds)
    (2/7) benchmarking "second"...
    done (took 1.725730539 seconds)
    (3/7) benchmarking "month"...
    done (took 1.722570545 seconds)
    (4/7) benchmarking "year"...
    done (took 1.724333733 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724404944 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.723855684 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.725303246 seconds)
  done (took 13.720734885 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.727732742 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.882897993 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.956726213 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.380394984 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.726700796 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.728213141 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.694064357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.728989493 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.733285662 seconds)
  done (took 19.210948993 seconds)
done (took 104.759348285 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.541414887 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.719821356 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.091922604 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.759401562 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.781121674 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.060978281 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727350292 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.020092345 seconds)
done (took 42.356987828 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.797356079 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.281491297 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.30753382 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.139495786 seconds)
  done (took 12.38108902 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.710903614 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2404931 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.751313212 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.317331234 seconds)
  done (took 19.695690587 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.091179226 seconds)
    (2/2) benchmarking "read"...
    done (took 2.062528899 seconds)
  done (took 5.812887371 seconds)
done (took 46.342358435 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728097016 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727757215 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.73134619 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.726262159 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.729120894 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.727784368 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.727425511 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.730046034 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.728164466 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.730598984 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.730039564 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.730042207 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726472128 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725130401 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726786925 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728858199 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.724848086 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727152304 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.72683061 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727297316 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730591455 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.726038366 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.7262218 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.732692869 seconds)
  done (took 43.131897189 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.729978497 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.728596528 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.731611035 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.730754156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.72728883 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.728723063 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.73213124 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.72999171 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.732627177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.730478028 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728733113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728145776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.727529403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.725787901 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735418269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.729019872 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.734072405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729637293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730528877 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.728426074 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.735820518 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727702098 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.730684636 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730854061 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.727173907 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732164282 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.731945315 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.731534612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7311831 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.726237368 seconds)
  done (took 53.562016567 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.73578543 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.739603441 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.73216594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.733337415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.733551596 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.733409924 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.73119972 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.732009313 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.734933308 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.732666958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.733424115 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.732507435 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.730564009 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.732965875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.73402273 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.733827662 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.732122536 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.732863618 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.73389656 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.733008493 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.733813643 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.733579785 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.735714485 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.735688947 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733668556 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.732186186 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.732959851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.732235379 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.734119166 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.734897701 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.733699568 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.733160786 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.733608496 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.733982882 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.732148636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.733154168 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.737691934 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.741763869 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.73362528 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.732313093 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.73517209 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.734442595 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.733833046 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.733966923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.735116026 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.731704547 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.734291613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.733763383 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.733941313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.734286184 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.735304392 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.735853739 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.735962818 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.735329601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737852154 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.735398415 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.734589393 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.736616361 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.735062011 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.735842844 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.730984458 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.735557725 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.736260495 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.735855012 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.735686182 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.733514743 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.736713515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.734662276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737056292 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.736096922 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.736986086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.736252378 seconds)
  done (took 126.53476816 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.735642686 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732121449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.73296119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.732642757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.733784303 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.736185497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.730367537 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737110886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731372125 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.735500006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735523211 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7352919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733372658 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.736019236 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737295794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.733515443 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.732038452 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734938858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.734938118 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738508248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736623429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.732518202 seconds)
  done (took 39.820205597 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.735826758 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738566578 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.731887066 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.735937577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.733676147 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736029549 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.737215814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.73674625 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73738355 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731427566 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734069264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738776275 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.732856463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735191884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735427899 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.736438523 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737818942 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737853464 seconds)
  done (took 32.906885427 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.733558462 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.73571501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.73885773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733838947 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.735616207 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736745895 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734873722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.739595926 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.737935852 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.734703841 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.738274675 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738804278 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.738474282 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736156338 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739590479 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737716546 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.739585384 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738122678 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.739077062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.734618684 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.735895309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736427609 seconds)
  done (took 39.879789376 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736793817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736053183 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.73537507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.736426411 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739358512 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.739021503 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.739023323 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.734545259 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.737439471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.73964399 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73346889 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.739519735 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.733846708 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.738290622 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.737741056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736059478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.740617782 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738162082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73929427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.738768449 seconds)
  done (took 36.415873349 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.744057648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748193681 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745064195 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744344729 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748306078 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.746026343 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745500605 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.746482401 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.747354859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746407521 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.74584935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748475589 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743537516 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743140514 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746120151 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74496428 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746575109 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745817839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74669038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745234273 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746317187 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741958425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.746362217 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742667675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747160952 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745602686 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746925763 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.747110026 seconds)
  done (took 50.547511982 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739740736 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741057921 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.738683484 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.737040344 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.739307084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.736484642 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.737976329 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.737917954 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740072339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739548978 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.743349179 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.738819017 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.739411442 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.742519764 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740242975 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.738864317 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746968813 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.738751691 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73959556 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739216049 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.741388661 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744822961 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.741379927 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740110814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742074395 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.742768269 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738713284 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740212101 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745002464 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74063743 seconds)
  done (took 53.878116503 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761008393 seconds)
    (2/2) benchmarking "in"...
    done (took 1.762286912 seconds)
  done (took 5.192040503 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.738987828 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743106355 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.746308655 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.736559619 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.741875621 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742719348 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.741992601 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739676496 seconds)
  done (took 15.602595829 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.742985547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.746267828 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.743030165 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.743814241 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.748491362 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.743994146 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74639815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.743858884 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.742405137 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.742881872 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.749619198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.754509324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.747388208 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74058793 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.742173876 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746980384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.742908443 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.749088724 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.750500128 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.746393769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748228464 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.74627669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746511562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.741743158 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.743599652 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.75278302 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.746697144 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.745141109 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742824384 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.748272376 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.745059625 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.741999922 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.750195162 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.748041602 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.743519745 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.752077354 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750534134 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.744980583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.748571481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.752674402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746230001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.742596281 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.746730625 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.746039364 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7453213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.751789121 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.746434728 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.743353221 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744968816 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.75017346 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.754268978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741957796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744822536 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749369588 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.743225981 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751696864 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.75381061 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.748512875 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.757486112 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753399172 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.758497801 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.755263703 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746224314 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.751273945 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756091252 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.771153413 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754395383 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.743864312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742172165 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.745283012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.754328157 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760540062 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.7585292 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.750376061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750199227 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746365138 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745150267 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746462752 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.754437596 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.750124376 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.751669949 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750927355 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755815152 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772427915 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.749009245 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.754733742 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.754086567 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.752553112 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746280339 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.759329684 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.754678191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.746913701 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.74660428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.748197401 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.749871007 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75823132 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.747602584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747044357 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.745689647 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.750600626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753041022 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751047548 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.759529393 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753749437 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753781894 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753634434 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.748857739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.748076442 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755986638 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.746159774 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753449158 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748126225 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756046004 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.747412736 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75166196 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.757982285 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.75526246 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.750009428 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.754156156 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.748471605 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760098585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.77862625 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.750311377 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.750639794 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.755785164 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769239078 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755865986 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.75240238 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.750439313 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.747739016 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.74648316 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.750780213 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.749030751 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.751377539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754597311 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7499283 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.748421175 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.750674604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.754535677 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.748504356 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751880233 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746943163 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751615454 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.753791689 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.758650051 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.751987855 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.757602629 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.753926681 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.751408836 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.750127786 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.748633478 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75462656 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.75054783 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.758074506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.752022522 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.756236026 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.748307465 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.75866921 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.752430305 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.751707078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751124745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.752594574 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75615763 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.757574454 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75274708 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.748503901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.751737393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.751511734 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752782689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.751851839 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.750597507 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.750939941 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.756366552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.765068211 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753837025 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.758669397 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.752639894 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.75478003 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.753443099 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758040795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.754045963 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.763942469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.75967429 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.757829692 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.756732372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759435481 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.74942391 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.753261284 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.750313342 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755720628 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.7550154 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.760160708 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767181056 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764961198 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753722982 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.7592298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.757877028 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.763030698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.756301832 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.757521706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755357426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.758290328 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756649454 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760495949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.754907563 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.757803542 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.754326382 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.753940538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.756795758 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.76098507 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754892774 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.758257635 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754164298 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.752537135 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753448697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.7592294 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.754205445 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.753750931 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.752474006 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.755447986 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.75524775 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.759466598 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.761770765 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.754542829 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756820452 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755044782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.756242511 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.755217307 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.755293244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756641626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.755583381 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759818465 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.756342263 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.755467505 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.760962445 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.75324924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.755329622 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.758436253 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.758185966 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.753004872 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.758326658 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.76647373 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.755081019 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.7615388 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.762800199 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.75627984 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757303938 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.76211648 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.754263628 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.756107778 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.755506356 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.757154452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.753936998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.758105842 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.755389989 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.756951096 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757434956 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755120236 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.75901741 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.758207079 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.762153257 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.765632522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.762762023 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757820894 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.773477167 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.761083901 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.75757739 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.759563668 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.756761417 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.764063466 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.758430778 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.764689428 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.757384937 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772881559 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.772259207 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764031832 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.759560793 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.757668047 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764676351 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.756896453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.764040394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756925154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757804271 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756881786 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.756553268 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.755180327 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760982211 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.759349752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759881218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.759205052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.762523219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.758711451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.758587249 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.764212165 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.766391076 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.75984906 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.75849858 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.75915159 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.760342732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761154656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.760231738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.757632741 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.76594221 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759437437 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758201107 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.758416483 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.75709602 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.759926451 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.760592877 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.765847858 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.762521903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776513528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.764421105 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.769398114 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.757602263 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767927499 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.765924848 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.763576344 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.776542415 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.75755807 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.757754387 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.758340292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.767273235 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771658649 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.766670682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.76029957 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.769881363 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76749382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.766385387 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.761951404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.76636477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.761079199 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.766384135 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769312594 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.762916286 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.766422538 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762154943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.760409313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.764879415 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.761713235 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.76006953 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761452933 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.765508811 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.761028544 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.761334681 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.760900977 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.764762658 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.767223026 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.762228128 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.75845399 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.762027857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767146726 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.761173695 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772883277 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.76264066 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.770823155 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76971962 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.769225337 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.768459139 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.762702823 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.766282378 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.764750883 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.76695117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.76242942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.764244337 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.766485585 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.764467824 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.767256141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.769904375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.762605509 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.761781587 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.769010201 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.76191794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773333266 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797083667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.763162758 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768690823 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.760174433 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763582652 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.775577693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.76681531 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.760365766 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.769071612 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77923591 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77304187 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.764969839 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.768828727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763993708 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769343708 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.762756349 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.766618259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.770368903 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763466053 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.764292451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.771865138 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767359184 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.766628767 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.764972813 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767575293 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.765127194 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.774270345 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.769105004 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.766315215 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.769482333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.766300499 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.764881485 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.763743737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.769399714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76670212 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.767088526 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764896656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.773581444 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.773165144 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.767984602 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.765830668 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.770651718 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.767162177 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.766336229 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773887396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.76907754 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771263538 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.767223741 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.769936037 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.765852319 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.764306942 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.767391603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.767247785 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.767529407 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770311012 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.776122838 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766270199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.765879213 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.767490311 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765974463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.766139513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.766859646 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.775591346 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773025536 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.779014099 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.776138812 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.776859569 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.766305926 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.770104168 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.776454788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.767064202 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.768069937 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.771133245 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.769806955 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.768504564 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.771053081 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773088687 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.771959777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.767637938 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.763152451 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774440296 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.769760968 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770955101 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.767468102 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.772541792 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.768378426 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.765413591 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767644572 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.768827279 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774479767 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.767523561 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774422998 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769347113 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.767179096 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.770036627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781049883 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.769629878 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.77067041 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765741835 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.771367868 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775676506 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768659399 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765905727 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.771038279 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.769494174 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.773068344 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.777040622 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.767101087 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.771763993 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.769189286 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.770842626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774514282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76987182 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.765575542 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.764967239 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.769689583 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.776930624 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.769768696 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.774217595 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.770662238 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.771223064 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.772112741 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.774568078 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775008524 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.783685328 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.780247614 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.767338422 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.769134692 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.77042741 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.773920224 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773359737 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.773672085 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769661065 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.773271185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.769165597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776448833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.768789552 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.77259847 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.786575029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.773076001 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.770870248 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.772282516 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.770058334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.772534506 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.769930098 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.773243591 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.772218586 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.772137906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.784752307 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.776260795 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775919685 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770545351 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.771246745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.775246373 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.774875109 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.780292311 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.772775996 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776382255 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.775127252 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.777081179 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.788516544 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774856203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.783467896 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80503211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771382437 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.773259295 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.778264092 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77104826 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.777305408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.774661075 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.778033038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.772466464 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771989691 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.778746701 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.773171978 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779234215 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.774855331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.774228119 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.773672756 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.773118058 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.774279717 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.770885703 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.778651219 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.772267682 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.776698927 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.779625535 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.78095517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771677395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78699754 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.784612903 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.774355351 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.778608709 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.773965334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.777677851 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.775183291 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.786098146 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.783140127 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.779522934 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.778825647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.776857479 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778196799 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.771749633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.774722167 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.771953067 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771001472 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.771772796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.786761655 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789481776 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.779661557 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.774637761 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779913981 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.776099358 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.774353596 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.779215214 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781936706 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.776616328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.777480768 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784230856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773267988 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.775221954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.778164685 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.783083863 seconds)
  done (took 1051.938621513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771537252 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772611829 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.773019993 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.772886364 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774190087 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771786388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773244015 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773923387 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.77281428 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772458024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.773105631 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770897304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773745279 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773629205 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773002709 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773144014 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772587376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772302417 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.774404065 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772965218 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77592659 seconds)
  done (took 38.93460785 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.773197579 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.774022168 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774897985 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.775667149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772470885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.777730708 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.772461748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775593313 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777772486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774391276 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776457674 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776683114 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.773607072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.775612881 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776331776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777586881 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.778447394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77160101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.777059935 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774610743 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777945137 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773132787 seconds)
  done (took 40.759821394 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.782631763 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.782017613 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.776178771 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.773879006 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.779300286 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.774106628 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.782719204 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.775925612 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.77673718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777601216 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.777079048 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.777582085 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.785440518 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.78320542 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.778161305 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.779123222 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.920652417 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.781524488 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.782859505 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.781076268 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.774802972 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.783253605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.777464413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.776016709 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.777859643 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78568505 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.779410658 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.778925791 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.78454619 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.781177406 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.788572548 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.779772548 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776144957 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.781510859 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.780702347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.780546833 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.784228963 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.784287253 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.775104869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.779781368 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794103613 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.803029745 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.787221244 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782548206 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.778821509 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.780099482 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.788606284 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795613599 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.778403215 seconds)
  done (took 89.128381753 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.78069726 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.781803749 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.77975886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.778669437 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.780514609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.781535515 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.782401474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.783764308 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.779126776 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.778831088 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.781901946 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.779496036 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.780180992 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.782482114 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.781738658 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.77878718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780704016 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778264831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.783091757 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.779210437 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.77969224 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.781927928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.78199825 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.781446054 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784253517 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778678548 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.776056522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.781919861 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.780258235 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.779903373 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.786890396 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.782037343 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.781828105 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.780931953 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.781778914 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.796646347 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.781903508 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.781127237 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.781199944 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.780105766 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.781492491 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785561643 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774097037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.772709864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.769071711 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.770946771 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.7713805 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.771827925 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.769691377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.771174841 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.770770452 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.77011855 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.773997217 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.766919019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.77088762 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.772491596 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.766233043 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.768269477 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.772252335 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.767478939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.765893394 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.770755327 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.768391643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.772994921 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.768752608 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.76666347 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.767273949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.769819419 seconds)
  done (took 122.548731257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.780236855 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.776474285 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775672184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776590835 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773242894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.774175889 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773102818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.773536346 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77565563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773768308 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775353075 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.769625965 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.776087214 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.767702618 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.773116601 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773995712 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.774263794 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775175075 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776166855 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77586323 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.775184005 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.773944355 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7757946 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.778344406 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776583395 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.775792252 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773367841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.778246407 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776012381 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.775181836 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.775598509 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.778102097 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.776905502 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774910446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.773554789 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.775266425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.775353699 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772459227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.776577236 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774558058 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.77461251 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772763068 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775503129 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.775586832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775169138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77418831 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.773505345 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.77331308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768499976 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774557906 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.77349817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.77675441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.774726607 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.774540536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.774377839 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.77008022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776007488 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77716384 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77604672 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.775346905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776922683 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.771873658 seconds)
  done (took 111.732916811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771145189 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770439005 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.770085059 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.767373583 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770467086 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773460297 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772442846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.770258966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771692979 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.771881118 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771241569 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770164454 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770292953 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771230346 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768286612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768805702 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771284667 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769392477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772986092 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766390639 seconds)
  done (took 37.109005577 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.768783383 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.774693044 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.770175475 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769856643 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.771303851 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.768975912 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.773725363 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773298166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768752496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771393467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.772633246 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771654558 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77047853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767635392 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774224324 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.769910486 seconds)
  done (took 30.036419274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.769621087 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.769711103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.776931201 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.776909111 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.770243153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.769225385 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.773921543 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.768051355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.767644757 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.770445945 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.769760092 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.770289991 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.774476767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.775330975 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.76727916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.768806714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.766035086 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.766257468 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.769599412 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.777067868 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.767254733 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.766027378 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.770334086 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.772112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.766538711 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.765161795 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.764629158 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.765087622 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.765670064 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.768732128 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.765729077 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763330181 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.763973667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.764565874 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.773415447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.768897594 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.768514563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.766205516 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.766854362 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.768059267 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.771154528 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.76500299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.768808544 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.767739442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.764174471 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.770381251 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.764423907 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.764770657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.766085605 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764562639 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.76773855 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.775353967 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.770483735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.767720951 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.76784092 seconds)
  done (took 98.973239784 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768340523 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768972401 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.763325594 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769418643 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.766277565 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.764506876 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767040541 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.763990962 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765779355 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.767806104 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766648526 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.768757702 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764825935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769031424 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766278637 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768099533 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.764359211 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.765400287 seconds)
  done (took 33.491930319 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763825632 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766673752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.768926865 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765533308 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.766806869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773012214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76728118 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76693584 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770179878 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767001545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76596214 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.768842837 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769957363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.768417048 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766081655 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766294525 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.773343416 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767124795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764737445 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764952773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767239656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768060449 seconds)
  done (took 40.579531096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.767486645 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.766200098 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.783946958 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.787803265 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.790489086 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.807380895 seconds)
  done (took 12.399247851 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763800773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766397457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765387843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769903971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766226658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763966462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76352839 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766802272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766955357 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767311839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764721224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767744103 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768482669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76658865 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767459915 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769402517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763894632 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76540776 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763887508 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768136616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766987283 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765798244 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762513194 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764302977 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763521036 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762073263 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767563631 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763208729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763422619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764814809 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76540692 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762552039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766513812 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762295725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763870569 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762764044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761881336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767556035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761466892 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760567607 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764714472 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761986111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764556642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766143326 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760886504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758781936 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75917703 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758386837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759976577 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763452288 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763068892 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757051737 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759966805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760814227 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763425947 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762210377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757692477 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757336056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760621037 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758548035 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75879001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76097355 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759977772 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759804766 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762935624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759578376 seconds)
  done (took 118.079747812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75974273 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755843675 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755806115 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757884953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758530713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758621554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759987244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758340491 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758789182 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759590207 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761984673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757810248 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759533269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755653061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759330536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758137152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759393967 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758846793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76046469 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762372626 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755158659 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759540487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759911722 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75873549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760945697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75894806 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75803476 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759804053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758443376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758630155 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757448054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758954988 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757075501 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.760680426 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756638229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757268242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757146938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75904635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.757286798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762258913 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759765161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763435792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757962632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759121452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760919549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757132795 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756442767 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758010525 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757954808 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759592258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.759871082 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.758018915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755795374 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756537308 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756869797 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75893005 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760463251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757456164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757063362 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759298849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757355144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.760700237 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761005061 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75720361 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758508305 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757180181 seconds)
  done (took 117.761856559 seconds)
done (took 2442.601590547 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.780929794 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.788340247 seconds)
  done (took 15.255828453 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.923256006 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.875160165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.76499689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.768884087 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.757651099 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.778524427 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.774451426 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.758142272 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.760919562 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.757497864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.763891376 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.947125242 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.752483771 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.759890743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.758556075 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.852997248 seconds)
  done (took 50.591511754 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.761196854 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.763071937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.774009005 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.764692363 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.762039612 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.781399495 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.795921457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.764308087 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.821233762 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.770901111 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.89443706 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.772639051 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.761243999 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.814046262 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.770489871 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.775342449 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.852893774 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.833272578 seconds)
  done (took 33.917026894 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.838791678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.767462619 seconds)
  done (took 10.300894074 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.759666792 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.754370897 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.771039733 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.754833935 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.774295374 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.77679087 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.772492188 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.76652884 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.755280203 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.774614808 seconds)
  done (took 69.353675844 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.767551145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.759917175 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.758658627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.757549497 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.751077542 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.753817652 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.759349986 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.751324691 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.443624884 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.791642778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.761252999 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.763491423 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.758427144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.763933783 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.756936818 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.78127225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.876650336 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.755821138 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.756968647 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.766202554 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.760699451 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.816154929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.771384263 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.759781182 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.78880409 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.448541364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.76566751 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.764548015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.875314821 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.757843565 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.759413819 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.759086241 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.761244306 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.138448257 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.030511733 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.760673953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767485539 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.766042624 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.759874736 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.898892588 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.759075903 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.765567939 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.728667143 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.006582513 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.871181169 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.801119987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.138935723 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.760799574 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.75969564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.79078669 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.761505862 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.762681999 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.773841887 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.273625308 seconds)
  done (took 126.589285781 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.756099775 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.015853102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911585655 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.756654389 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047689072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961113868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.757271855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801596587 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.755821054 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986934008 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981219679 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865343994 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.75317032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.755917623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.75263508 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.749621271 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.917118866 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.828242331 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.756572891 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.749923622 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787473202 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999993173 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.885770271 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.752774605 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.773953975 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.969185649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.891663417 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.860113924 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.347500407 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.753614832 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821532584 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.756985187 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.756036892 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.749786373 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.913130537 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.852757992 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844362054 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.757180302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.75752225 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.753280669 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.432507654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951350338 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.854946522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.906402746 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.006682658 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.962149466 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.544838276 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.754810866 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.493183923 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.919941725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994212112 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.995041301 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.878358499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.758202993 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.023740931 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.756629138 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.753015711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989212741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000210196 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.860797756 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.756364766 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.756180952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.753272989 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006004327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.757232933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.848630043 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.754055941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.755050099 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.854173188 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.861138911 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002496689 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970464667 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.789484672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.057116136 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.227254124 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013191877 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.822909038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989688605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.755467651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.754592654 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844125863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.711603324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960058015 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.007143368 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009876274 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793912689 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.477613063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.755898641 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.985633336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980188376 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.010745881 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000404748 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.91751649 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.071384277 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.75582922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.757213218 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.01289948 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.894300252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.758372313 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121270637 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992191828 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.327564964 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.789705432 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106573725 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.890309277 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.759503499 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.401143426 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.756859602 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98679951 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.800198902 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.757737319 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757714977 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982997395 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.738081603 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.758786247 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.381734701 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.819846474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.763108793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993107711 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.758460119 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023493954 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759548622 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99871037 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.936665566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.790418889 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.928320869 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.998578299 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.758654254 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007010111 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.003499795 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.877278352 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98424749 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.374684984 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.761010184 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050474909 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.757229903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.757360796 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935765123 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.758686746 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.994374345 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.761261745 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047631652 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78557196 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920764623 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.760596538 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022851932 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.793260258 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.813359782 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.758977232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.891878194 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.761603701 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.648262588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.913834242 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.761182607 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.757409515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.293703328 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.759463572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918602456 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.994489967 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.783210008 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835745945 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430904925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.759271191 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849319516 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.78821101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.120171494 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.76045725 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.976534978 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.761526175 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302970553 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.759399472 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.003320471 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.944364758 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.762667735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.760309993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.668331374 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.759347892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.762125111 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.923420892 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.494393402 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.758429323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965291672 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760453327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.903301101 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.762406535 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.840842376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.116917131 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.760632457 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.760828862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.761230973 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.760909469 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.762843329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.971086483 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.791319289 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.284198948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901591199 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033068567 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.082949823 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.014026945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.806942795 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.76356523 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006780453 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.7621707 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.82620373 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.761362224 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.788141395 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995368653 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.763880936 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975710786 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043083063 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.691101635 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.812984971 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.762863786 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.760569069 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.67759943 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.921696854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.852860779 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763485911 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.761137457 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889000754 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.89370698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974466687 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.764071848 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.094746928 seconds)
  done (took 878.346128328 seconds)
done (took 1186.038921149 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.761840587 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.761073562 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.75083749 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.762085799 seconds)
  done (took 28.732173499 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.770816777 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.770041961 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.778385032 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.77017006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.771416411 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.769712204 seconds)
  done (took 12.327319077 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.799295031 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.764376881 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.763277041 seconds)
  done (took 21.022036043 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.837554737 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.178440639 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885303558 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.20830089 seconds)
  done (took 9.80672986 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.782134651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.777674021 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.778194731 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.772886017 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.77113824 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.773955185 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.772296357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.773664372 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.774942506 seconds)
  done (took 17.674039641 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.192665196 seconds)
done (took 95.450321722 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.968273374 seconds)
    (2/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.218381805 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.132613858 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.139673399 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.694870438 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.241958726 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.667546205 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.75403744 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.505127228 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.012501885 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.898553113 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.750913258 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.507530571 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.803333103 seconds)
    (15/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.573778075 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.01043854 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.270365006 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.023545146 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.794042763 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.104810964 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.750502824 seconds)
    (22/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.856722253 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.118904175 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.829959368 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.829785386 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.740136837 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.090694464 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.873310579 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.991939758 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.393727885 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.870909308 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.856282206 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.181947235 seconds)
    (34/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.270834922 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.26485978 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.888662007 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.982115728 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.125043543 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.100369037 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.35603086 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.765537208 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.754410374 seconds)
    (43/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.058431073 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.879653614 seconds)
    (45/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.907619802 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.065324195 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.767541718 seconds)
    (48/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.862063654 seconds)
    (49/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.235585759 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.097685044 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.902470051 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.152645825 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.768805866 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.87901255 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.033238626 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.064117146 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.171106698 seconds)
    (58/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.855769173 seconds)
    (59/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.766940531 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.926561364 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.064218317 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.467556272 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.943113414 seconds)
    (64/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.996915049 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.883066245 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.768040879 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.14400409 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.066804877 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.906589892 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.755193246 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.664872004 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.795602461 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.071643109 seconds)
    (74/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.104605984 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.156154093 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.84637514 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.980034402 seconds)
    (78/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.055011378 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.440890586 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.9295445 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.577152583 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.972819254 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.746047014 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.169628428 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.551511948 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.746404068 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.938779091 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.078442726 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.678079571 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.973780549 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.152382193 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.756873031 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.900014492 seconds)
    (94/309) benchmarking ("sort", BigInt, false)...
    done (took 6.768626813 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.772515466 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.600396915 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.103038324 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.769514191 seconds)
    (99/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.042112496 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.769975509 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.447468838 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.773167439 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.681012623 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.336213656 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.416199681 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.756158137 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.909772555 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.83199088 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.786989793 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.757030553 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.360497759 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 2.217903908 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.793321231 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.883643417 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.771705 seconds)
    (116/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.97430355 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.026391108 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987676258 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.023331939 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.340932945 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.940545087 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.758256921 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.925141247 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.875106924 seconds)
    (125/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.854499054 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.074016749 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.835750247 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.791133874 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.694924061 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.108491263 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994991979 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.074518365 seconds)
    (133/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.804616278 seconds)
    (134/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.781016209 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.77213129 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.757128423 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.643887012 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.899132557 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.838575878 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.844139912 seconds)
    (141/309) benchmarking ("sort", Int8, false)...
    done (took 4.786578654 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.759559648 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.955183594 seconds)
    (144/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.875383776 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.892081429 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.105307186 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.794553531 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.770949848 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.991018588 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.774520147 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.969617036 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.865770369 seconds)
    (153/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.31220554 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.803600031 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.760728361 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.337499198 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.77194348 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.883340106 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.920848445 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.776782893 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.045808534 seconds)
    (162/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.226571248 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.57894251 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.397206914 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.77288355 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.897771329 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.789600872 seconds)
    (168/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.056656391 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.795053039 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771582584 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.707824088 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.123497571 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.802446658 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.792581225 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.452204988 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.086354107 seconds)
    (177/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.812744784 seconds)
    (178/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.762284171 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.26544767 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.774483438 seconds)
    (181/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.935293252 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.762308382 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 5.487161865 seconds)
    (184/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.776864645 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112790241 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.803316992 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858055981 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.838420996 seconds)
    (189/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.827617938 seconds)
    (190/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.384708915 seconds)
    (191/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.772489355 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.985857372 seconds)
    (193/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.457264586 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.039451059 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.084160563 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.898719105 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.3493139 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.862622347 seconds)
    (199/309) benchmarking ("sort", Float64, false)...
    done (took 5.570025884 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.874442186 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.90706248 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.777921466 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.060693151 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.921204828 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.480193753 seconds)
    (206/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.899444179 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.776163486 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.058163102 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.579980788 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.98991883 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.074377502 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.889443975 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.468187254 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.259759045 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.846834011 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.762851045 seconds)
    (217/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.806385002 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074389264 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853500184 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.796481641 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.567216169 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.911724454 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.819832698 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.7855651 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.413367581 seconds)
    (226/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.879428078 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.801951597 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.778465538 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.8474336 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.765458554 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.751139762 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.765904538 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.81629371 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.891802595 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.878977187 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.130674557 seconds)
    (237/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.871993231 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.070397094 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.272256311 seconds)
    (240/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.98094046 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.809452749 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.293148235 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.250742679 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.123945646 seconds)
    (245/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.908895568 seconds)
    (246/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.817383986 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.767155157 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.85167074 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.250226928 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.787049109 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.866240389 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.873316993 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.080838973 seconds)
    (254/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.770128399 seconds)
    (255/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.95288056 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.164263202 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.795495803 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.806462971 seconds)
    (259/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.788788943 seconds)
    (260/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.885330241 seconds)
    (261/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.807664176 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.890215812 seconds)
    (263/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.806724733 seconds)
    (264/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.949794243 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.149176463 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.858736667 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.869343311 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.025491109 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.192093833 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.760132998 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.845269297 seconds)
    (272/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.987110711 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.015815199 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.973011469 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.968539172 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.878976408 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.197806939 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.895255596 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.863557063 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.862938241 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.145926799 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.924248534 seconds)
    (283/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.908277666 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.535926517 seconds)
    (285/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.861727325 seconds)
    (286/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.932301626 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.781959971 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.975159421 seconds)
    (289/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.848128193 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.813982641 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.782399137 seconds)
    (292/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.202836458 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.920136003 seconds)
    (294/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.350710055 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.7903421 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.926626125 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338569295 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.083974989 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965063974 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.78269562 seconds)
    (301/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.917676382 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.804616202 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.800504312 seconds)
    (304/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.470213636 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.900130994 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.030601541 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.112140134 seconds)
    (308/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.955236456 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.245681276 seconds)
  done (took 988.272121238 seconds)
done (took 990.044994703 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.817368957 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809544987 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.792028407 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.815747694 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.906176251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.821555754 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.804044546 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.794474235 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.839442961 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.844128685 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.794604819 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.820390166 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.794925272 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793039691 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.793648199 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.809364772 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.100514719 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.816876962 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.810471658 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.802660994 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.81184753 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.79217504 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.843083958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.820529418 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.797659787 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.797027448 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.798364313 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.812937505 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.906627991 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.798577697 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.798386208 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.805123466 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.100926896 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.815193919 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.792393776 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.815760088 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.807268305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.802866662 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.798461531 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.82828665 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.236294074 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.797817134 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.798590166 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.795382414 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.796533033 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.800248726 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.796687101 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.802314924 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809988295 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809906464 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.232837924 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.813048424 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.799589488 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.797869112 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.806961428 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.796896177 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.8030204 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811760143 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.814848972 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811886065 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.091987695 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.82249907 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.799574094 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.814234248 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.805844316 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.267511669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.795071158 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.799906821 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.235097791 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.806007761 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.26944463 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.809553807 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.800222157 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.812581755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.828471344 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.101820388 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.812813677 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.796309968 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.805163779 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.79607594 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.806849886 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.809595169 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.801180463 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.79772038 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.809991384 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.827281568 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.80805466 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.79952997 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.805991372 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.816591916 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.80677674 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.808390492 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.800485297 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.793923038 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.809815227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.806522037 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.801806757 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.802345348 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.803639458 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.809518179 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.233462718 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.819108879 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.796349024 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.797582793 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.799181839 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.812025864 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.235682031 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803218498 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.820515089 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.845743826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.801152051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.093415432 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.824627015 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814899286 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.80755983 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.803751116 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.794391306 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.094656989 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.257106768 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.816564029 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.801197664 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.798477862 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814781665 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.802828238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.79751915 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.105005594 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.822134567 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.812983421 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.921760164 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.809434486 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.832551033 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.797639597 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.80322379 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.829284525 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816312665 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.831838534 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.803745933 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816118468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.816618194 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.797527164 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.812111198 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.810654405 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.80066617 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.80659056 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.79392268 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.828884447 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814340582 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812579514 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.821711496 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.921089225 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.79701495 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.096807523 seconds)
done (took 282.797562701 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.867050251 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.7901078 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.895118339 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.797741724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.879851033 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.883830768 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.796163271 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.795686597 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.793878103 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.172635585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.796812451 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.794381656 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.793167558 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.795610364 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.879645942 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.798388152 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.796752141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.136909576 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.805150537 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.869204353 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.793151092 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.795056804 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.799772129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.16794019 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.792810548 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.795767762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.871508437 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.797586637 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.135152421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.792561396 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.790236571 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.135684555 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.891042646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.817132277 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.809267175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.805236488 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.880545349 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.801749718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.880369208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.881230627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.898543356 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.845971821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.791306296 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.800041723 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.803602599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.806631124 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.797627451 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.828138343 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.792017563 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.797813084 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.140900261 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.810460864 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.799789465 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.797587032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.796847532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.836492767 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.797692471 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.806509395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.892181243 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.806391307 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.861552718 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.173720919 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.176127017 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.799664881 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.792097851 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.798621264 seconds)
  done (took 179.542441521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.867159632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.871539296 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.86828041 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.800964132 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847537488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.866418884 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.801843009 seconds)
  done (took 14.649828485 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.806282704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.802157142 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.852008689 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.849680331 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.806359859 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.949340217 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.800092405 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.813740949 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.807798699 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.853551921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.801999218 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.80229156 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.800162621 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.798467703 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849398228 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.812741724 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917264801 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.801735445 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.807407503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.950947511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.798730805 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.808069273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.855396549 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.814297819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.801927077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.806759854 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.38694729 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806120247 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799470745 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.799238997 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.798964397 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.844011325 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.803079321 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.801782823 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.80055025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916616963 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.807610406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.800148912 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.803116887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.794474851 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.802670643 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.804066964 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.803126401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.80082982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.803529191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.826826997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.802253567 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.802491225 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.803324264 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.803318859 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.853555145 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.80428198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.798955427 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.800704012 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.857906 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.810694011 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.809108561 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.799097247 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.803970497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801739631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.955035477 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.849600645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.804383753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851089994 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.805424142 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.805016707 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.803988802 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.804123372 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897661083 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.804397802 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.85083291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.802108543 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.961244712 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.826532877 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.806483235 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.806278135 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.807137081 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.809968677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.798965857 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.810512104 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.801615087 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.805874873 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.810285062 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803958362 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801898963 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916948631 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912999235 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.80136204 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.817231912 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.812792694 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.802495171 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.856190996 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.804459897 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.803376494 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858515212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.919154513 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.859890477 seconds)
  done (took 199.300658669 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.810967578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.813276924 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.805825363 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.821264908 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.806730491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.804140746 seconds)
  done (took 12.59154379 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.807376903 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.807001991 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.805791559 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.806269841 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.813150676 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.806032796 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.812570947 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807425809 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.816293152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.805813092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.80969578 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.808442835 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.806432146 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.812288965 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81246555 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.806286288 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.812292002 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.803060376 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.806928849 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810821054 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.949915979 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.811006746 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.814611689 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.808045111 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.811656158 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.805757022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.813402231 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.808122028 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.807292205 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.814154147 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.816419335 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.807698304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.806905669 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.811752652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.817127796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.806423736 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810384432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.809469304 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806153765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.809231528 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.808969624 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.813892414 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.807254999 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.810258744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.808698259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.810036834 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.812720425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81572355 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.816137532 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.809886169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.807782667 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.808092473 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.808988526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.808537858 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.810492688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.811708472 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.812142037 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.81516469 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.814726987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.809324552 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.810150202 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.810023528 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.80978457 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.819497305 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.818378694 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.812579412 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.807810556 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.817219556 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.815983989 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.808316881 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.810967528 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.8048306 seconds)
  done (took 133.220059041 seconds)
done (took 541.041251967 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.868641326 seconds)
  done (took 8.601807978 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.965587955 seconds)
  done (took 8.778618919 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.372533233 seconds)
  done (took 10.104680947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.811123702 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.835379033 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.805946305 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.80895951 seconds)
  done (took 29.004170331 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.917723537 seconds)
  done (took 8.651647962 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.814477769 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.801726779 seconds)
  done (took 15.381846145 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.850470053 seconds)
  done (took 8.585441356 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.017896754 seconds)
  done (took 8.759199949 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.823257384 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.840470775 seconds)
  done (took 15.409601272 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.788888401 seconds)
  done (took 8.522660751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.395948687 seconds)
  done (took 11.134897082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.810203684 seconds)
  done (took 8.559464782 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.890672423 seconds)
  done (took 8.624893707 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.84803894 seconds)
  done (took 9.581979198 seconds)
done (took 161.43308943 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.806692097 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.799818449 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.800665665 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.798789921 seconds)
  done (took 28.938786787 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.843588584 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.842862466 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.845357562 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.854550052 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.848400803 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.844671603 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.83706407 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.835698759 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.856468737 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.847854621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.846307525 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.846736217 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.843225333 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.838846788 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.84554147 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.845490075 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.856221809 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.848188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.836425583 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.847230749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.811308704 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.854260347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.847735089 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.811225593 seconds)
  done (took 45.973300328 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.007195983 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.881860585 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.966924581 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.862778059 seconds)
  done (took 9.452449264 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.86562646 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.864889484 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.877756279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.915216693 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.939094234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.876036392 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.83977181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.833878923 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.819851195 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.866345666 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.941297357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.859283501 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.955035603 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.813120311 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.997502977 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.812328909 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.811518976 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.864328412 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.915745138 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.931165996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.811681649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.865916306 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.867864946 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.859480343 seconds)
  done (took 46.739637787 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812012219 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.820077208 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.820283277 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.812826856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.811964889 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.811626347 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.817829927 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.81514508 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.833520395 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.813655613 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.811756598 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.812263366 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.811584581 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.812038039 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.812141321 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.824805959 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.825887957 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.812813474 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.81529635 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.818062746 seconds)
  done (took 38.06136209 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.807960565 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.660565853 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.158375468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.064558639 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.807140518 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.803447991 seconds)
  done (took 31.039020635 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.825521209 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.817969832 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.813781999 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.868792074 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.946056527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.816741068 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.814221846 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.823809713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85472422 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.873492222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830201139 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.83811039 seconds)
  done (took 23.861610975 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.809146822 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.808175457 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.808203705 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.824369613 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.825584843 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.822195897 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.822116789 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.80787573 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.823518112 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.83257982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.82042123 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.824835155 seconds)
  done (took 43.570585912 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899139826 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698156566 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.840832187 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516388855 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27625191 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018432874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32520252 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151190165 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.812600506 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084382144 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.807638679 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91297966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063530705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811750702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830965919 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.276878494 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095652241 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035838182 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831771073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533241851 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853555762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322205166 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.599889955 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.862422714 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020032196 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.938836011 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.072037584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.768510376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940799732 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844085369 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821012307 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810705551 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084993667 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182816153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912579323 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820464762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.430146895 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.522829481 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.804201617 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.56231429 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.535335512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919924503 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819429811 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810507176 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.74880437 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289739802 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183724666 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.817527869 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.521979836 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.811091622 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823343104 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900697361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.816807675 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.628037206 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727662921 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085752717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.810558969 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818862376 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380001381 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8822285 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321178688 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.783594098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006796541 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547029462 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200033747 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.955831465 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.816444982 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816705592 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747735683 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.543959344 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859969167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957610221 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.830710771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464099649 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119768655 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.864114727 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.754175411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093030094 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.58129812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.784364785 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040772848 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.764658584 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747634918 seconds)
    (84/481) benchmarking "5d"...
    done (took 4.096232215 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.74922157 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076116212 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847495441 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.437491504 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850326092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157745258 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.824657839 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82997447 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819393198 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03909633 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.381325926 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816251942 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.541647262 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954663206 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833677182 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149692694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750227859 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.815991037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070312725 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.026862779 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02519069 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.316797347 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965096511 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816045828 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.891088838 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.712491764 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.861567615 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.082524776 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868178896 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893361738 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86982489 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766816279 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113011464 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838573823 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.980040325 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.780414746 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940108681 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.13889886 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099581615 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879857997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824158707 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.815858915 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.621490558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363595055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.084101184 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.819703434 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297655821 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86357607 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.82445111 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751431799 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.412879277 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.805733632 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.783917829 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040483379 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.760959335 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124886478 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752905017 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963917101 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.928040229 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.036941648 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.457897316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.877827915 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073680925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277596625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.071089544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862412949 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834466719 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934722976 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840380124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.215606074 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106853372 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.821117553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.822053234 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.554608475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816951965 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821970557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.822501008 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569248466 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090266018 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833598167 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824707953 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.706819038 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.831689036 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884647131 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824105081 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828697443 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.360552711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.537656105 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.824512507 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.437236384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044034661 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828986907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.525108041 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924791682 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90166008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092859329 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871271646 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.75418077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.529532034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.510621583 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819343064 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755357373 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.820180669 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829260334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830458592 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.200412916 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.092327023 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857936451 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.540377252 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.858213187 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831663582 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.823525938 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819254191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.361643859 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.896289021 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329722923 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.865399714 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957562994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.834276315 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754982171 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823270509 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824468541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819484902 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.786050906 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870933326 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.548293011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203295414 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075522648 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.427135751 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833314833 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.571147379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.874064716 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.840711144 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592182897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.747342505 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.859954711 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847004063 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.83039815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.558631689 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522489225 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382970521 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138520312 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123202865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253928375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.267437238 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.124634664 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15660379 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056639961 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.350934317 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881724771 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165799119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765190462 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914599927 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.461426664 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158954018 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833515787 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05193236 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213399355 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.515174281 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971185679 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034894593 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857500683 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.733817741 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78355517 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.02978754 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965702715 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.530248743 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007215096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165728764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.437616138 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.897636688 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.825207184 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.509842285 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907754718 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.531994865 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188729402 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351797818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.754715398 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283553616 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.834852151 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26883086 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172067166 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.136826828 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945158594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758241409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835658668 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.836179767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.82453927 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.820875658 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.685559462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07497675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834676162 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06180777 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.086834854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116612688 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.721510718 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.830097655 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824816827 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116355415 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.581458672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986175147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.240648366 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.347017976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828380462 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759756457 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761236054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.517524336 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825202449 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.799806248 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054065107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.007924849 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744940555 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313409385 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068448154 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078884353 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.840424484 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095653817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096454686 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.526307703 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851299604 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.927702285 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.450893719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.919031673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.096006404 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063105711 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577982163 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050570821 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875827637 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.638096767 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.823419721 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040425226 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097130459 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.712676394 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039048073 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.547115601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.833605252 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153079167 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878497151 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.710100705 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961734972 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.019001086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837241948 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912548141 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836263403 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.839005189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837649163 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873950294 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.700882596 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93502635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842299954 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917829025 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911987494 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.352116091 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.83022263 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102149667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182274032 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145968121 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883231161 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.829411957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83545287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762241438 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962256966 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275345134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102651457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.959222431 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.126582317 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85237307 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.451095591 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176686163 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066711753 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103325281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.722205971 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82951127 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.853781153 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.097259191 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840809457 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.039770765 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058921308 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144787847 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298307399 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.047669504 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.192863719 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104177028 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.202430214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830819563 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41829481 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.842457699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523696192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.866441034 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723300995 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079304836 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840810672 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208174034 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850603713 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.028232102 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.348833344 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56348849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113147444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.81636809 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88157368 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104034874 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217188486 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1368241 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900743877 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842163864 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.56034128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968922209 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.695148799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097489457 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831471807 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041070018 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.541871148 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839536181 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104399268 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134444308 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.826888953 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.698095047 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836312515 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.839579978 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055579346 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095406042 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080793458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840852954 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833262349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.647270628 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103392361 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886813373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765530058 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.832489491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929321003 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079426007 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852905792 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.34911588 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.544656624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127061268 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.750027455 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85449291 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312516021 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191113332 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149488251 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.367948023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054828804 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.39012338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.787918063 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131506341 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.838312654 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317946761 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134736602 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.837739583 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4353127 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868841286 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.104118332 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147273061 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.841668952 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564880545 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.796801922 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056587174 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391816689 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772146814 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841992324 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.8969218 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.832056811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.964975041 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844382526 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.706625431 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.74925543 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.579051652 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324726616 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.835992241 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.826275101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.517691628 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424413382 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867047462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979773598 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83808674 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.548291341 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.128836106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08873082 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426751955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.842466367 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.839846837 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834998209 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.762206481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03016497 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.21254297 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128114766 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.253749898 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.870679573 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839604475 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.050672402 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045193684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.662306982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956141385 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309586036 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87057658 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.605240205 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515890594 seconds)
  done (took 1658.872510349 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862777525 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.856225202 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.851335211 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.943651853 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888670794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.898316078 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.901420169 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926195032 seconds)
  done (took 56.894280883 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.834393505 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.030544011 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.844991915 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.835308782 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.842960009 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.834331842 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.003022529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.849757115 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.842544993 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.846329016 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.843939467 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.834248475 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.145839576 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.857469629 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.836950244 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.824323078 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.841832513 seconds)
  done (took 73.748582247 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.839618956 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.040732258 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.857625708 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.84801371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.788884055 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.855834968 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.793589605 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.844771436 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.840563268 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.052806755 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.473795906 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.854268497 seconds)
  done (took 89.858198994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.846555898 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.843351346 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.845073048 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.842839597 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.84426381 seconds)
  done (took 10.993465505 seconds)
done (took 2159.763160131 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.085616407 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063614306 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.06758267 seconds)
  done (took 5.896588431 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.986223811 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.034523728 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.151862461 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.159643611 seconds)
  done (took 10.101498135 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.131182518 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.221946369 seconds)
  done (took 6.117908834 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.243903884 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.848794137 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.229882138 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.838039562 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.83794996 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.836392912 seconds)
  done (took 22.284219932 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.842258871 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.843851089 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.840687701 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.844336289 seconds)
  done (took 9.137496837 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.824813218 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.510652728 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.822157841 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.833462622 seconds)
  done (took 20.75840673 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.597760157 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.275506641 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.586052788 seconds)
  done (took 9.225857795 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.265522365 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.720263744 seconds)
  done (took 8.75199705 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.102828431 seconds)
  done (took 3.867768817 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.973429679 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.149334585 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.349717867 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.346681686 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.467032753 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.67871683 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.152269246 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.083274041 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.242414788 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.271132874 seconds)
  done (took 24.482646436 seconds)
done (took 135.799833791 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.219541198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.073773308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.036263087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.186990037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.060504359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.040523265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.04523094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.173369965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.684908388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.678328958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.184512179 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.061423322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.192230639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.079343162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.199172317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.083799188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.061400963 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.238003091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.881351746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.115862972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.052353382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.813109553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.025508744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.826198617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.090286961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.990391596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.393034965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.082541453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.035335869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.395498939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989802947 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.275412894 seconds)
  done (took 172.035239164 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.730964609 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.837758604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.837202223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.838018622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.294014051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.838654352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.838748059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.837238149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.940927261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.929948181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839113141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.284087983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.839474445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840295059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.841747641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.837896184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.069794726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.797948014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.847724091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.851829857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.855252716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.253561778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.855757273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.270822914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.08505697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.856004621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.83728955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.859597599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.844969777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.84666529 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.850565958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.838538554 seconds)
  done (took 206.998558671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.842920463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.838872129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.839049028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.840251151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.839675078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.844415512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.843213664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.838213361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428550105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.423894712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.846830801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.845006484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.840306645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840673611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.844666246 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.841215905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.841019995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.844569721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.846431318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.847913577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.849556276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650261003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.850135756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.646869402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.846831673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.847593851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840259999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.849441786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.851704783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.85262471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.853648823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.842206026 seconds)
  done (took 219.583422139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.047061236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.852266632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.850777983 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.795120873 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.8512125 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.850559992 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.799497406 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.048627626 seconds)
  done (took 18.881793905 seconds)
done (took 619.277349291 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.282614256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.125434671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.017059336 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.872589118 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.124304326 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.899454921 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.868793692 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.933219685 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.603381979 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.933689433 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.567830248 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.884364217 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.657635178 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.888199204 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.99773779 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.923722401 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.452994847 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546388886 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.043622058 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.91761112 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.035151679 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.810587725 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.941984454 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.621847864 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676223916 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.85584873 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.050297844 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.458644599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.876970661 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.035507949 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.595273331 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.250072379 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.876575558 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.863794022 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.924019424 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.902212069 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.217496782 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.875277476 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.988307291 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.609489923 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.9373009 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.48857877 seconds)
  done (took 102.204946664 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.845165189 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.842414609 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.842264706 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.843041839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.842504453 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.842801916 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.842894983 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.840215121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.843929794 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.842452331 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.842625959 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.842885182 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.842475839 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.843375048 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.842106925 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.841566753 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.842793061 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.845211894 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.84265528 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.842215979 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.841854469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.841328149 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.861632332 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.84357551 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.843186242 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.843441936 seconds)
  done (took 49.714397718 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.855291803 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.017344086 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.098845607 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.868628254 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.854185321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.855911566 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.872182684 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.857501375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.855227771 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.856748351 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.944556074 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.858819672 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.873623005 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.099351236 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.864082479 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.853586415 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.853292274 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.853558566 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.022288138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868155037 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.873179398 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.857389004 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.871468147 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.867354552 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.85739909 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854442781 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.858316526 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.331460632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.861387109 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.946214139 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.896101694 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.873096016 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.289117175 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.108339579 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.903207122 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.859003572 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.856993464 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.949664423 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.859266048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.855064285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.87366432 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.857699375 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.100164424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.332290764 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.865868155 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.855278519 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.342961982 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.954165299 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.894033661 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.863802954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.10349092 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.866997821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.855946186 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.857711911 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.890561309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.863237193 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.855420439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195255957 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.862844657 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.874349424 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.860377215 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.856340512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.028168828 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.862499423 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.019582708 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.862527477 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.862336426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.858579128 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.100075757 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.866683913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.346117614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.865288716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.85894469 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.948884919 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.021119639 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366580381 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.865267392 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030995602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.293182672 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.878085955 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.859409759 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.325461052 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.881574574 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.860627593 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.85961274 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.860632736 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.858436205 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.905474165 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.872807623 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.273791694 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.344033702 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.205211093 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.880156237 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.869625767 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.858628993 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.19697956 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.864072745 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.858188395 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.094660036 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.348015402 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.867329237 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.864737552 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.328380895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.869211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.876232644 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.862860792 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.104661312 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.867480254 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.903168514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.858296782 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.86364924 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.859849017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.875546225 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.862585814 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.85824688 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.315244637 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.962540161 seconds)
  done (took 230.386659922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.854338172 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.85079723 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.853175742 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.85037844 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.85369898 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.861645875 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.851906704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.852813538 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.859357888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.851607802 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.852288904 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.853813638 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.852391659 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.854416551 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.320933983 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.862345502 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.466190038 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.8591782 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.857243251 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.870239319 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.538869912 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.863467234 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.858663946 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.875625452 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.858916787 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.860075287 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.862055423 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.899930853 seconds)
  done (took 167.591306594 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.864013569 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043957919 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.885790578 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902711593 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.870458415 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.862326856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.886137184 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.886463427 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.867074085 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.860543618 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.863323209 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.924729073 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.871847242 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.995612822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.892655244 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.895980695 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.968840445 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.868527368 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.864254146 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.861088901 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.891178467 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.859046809 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925584252 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986127076 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.883825093 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.978495885 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.871813302 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.866599954 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.864889113 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.981125142 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876226495 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.925451604 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.889873921 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.880512353 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98369497 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.980210342 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.970196133 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.891912532 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.868123486 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.863797076 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.863229979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.855054266 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.979784242 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.885505885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.867624216 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974442907 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.882455453 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.866791146 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.876519474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.864732159 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878255929 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.883281081 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929985472 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.992347429 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.89686265 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.891960188 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.890372681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.153621108 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.88140428 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.965002985 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.858061072 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983517095 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.88667723 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.856237705 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.866119443 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.871847233 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895535583 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.89355339 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970860227 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.874663538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.965479447 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.899584909 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.870470054 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.865505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.869151726 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983646953 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981237265 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.899850412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.900470985 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.895682301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.861805579 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.867096066 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.85769429 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884653135 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.869356733 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.983511292 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.984103469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.874162118 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.870207319 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.870436063 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.869380539 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.893990148 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.995058444 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.905103774 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.961368089 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.932124423 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.939510659 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.879864153 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.880046094 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871679282 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.930780353 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.883790336 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.877906117 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.204800649 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.938381358 seconds)
  done (took 202.219944387 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.353295589 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.91918308 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.927230046 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.192192334 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.287450129 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.728480292 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.916207163 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.916295868 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.942547854 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113724664 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.985503785 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.936422432 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901100602 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.891294113 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917441774 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.940915259 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.929851531 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.226864729 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.04700382 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.005327108 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.89710249 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.232229954 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.230518293 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.359966694 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.950008655 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.247585576 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.600099335 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.166754062 seconds)
  done (took 61.558307933 seconds)
done (took 815.448244031 seconds)
SAVING RESULT...
DONE!
