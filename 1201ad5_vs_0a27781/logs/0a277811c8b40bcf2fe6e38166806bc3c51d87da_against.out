cset: moving following pidspec: 7012
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.329458351 seconds)
loading group "string"... done (took 0.555172617 seconds)
loading group "linalg"... done (took 6.917227012 seconds)
loading group "parallel"... done (took 0.148209626 seconds)
loading group "find"... done (took 1.104501529 seconds)
loading group "tuple"... done (took 1.708548407 seconds)
loading group "dates"... done (took 1.260200191 seconds)
loading group "micro"... done (took 0.214880334 seconds)
loading group "io"... done (took 0.919861893 seconds)
loading group "scalar"... done (took 36.284689338 seconds)
loading group "sparse"... done (took 11.417971447 seconds)
loading group "broadcast"... done (took 0.896438953 seconds)
loading group "union"... done (took 11.681132012 seconds)
loading group "simd"... done (took 4.269273412 seconds)
loading group "random"... done (took 8.736092525 seconds)
loading group "problem"... done (took 1.849340155 seconds)
loading group "array"... done (took 20.241188759 seconds)
loading group "misc"... done (took 1.623397347 seconds)
loading group "sort"... done (took 3.180628382 seconds)
loading group "collection"... done (took 16.697713711 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483020175 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120143094 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.111166356 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114709906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142062864 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.107099075 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120383929 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08053511 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.754240873 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145805461 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115792729 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411618341 seconds)
done (took 4.99121739 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170103865 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080006849 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078174751 seconds)
  done (took 1.276475379 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062211104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.117503378 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062785831 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063344156 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063636679 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062637029 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06239077 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062501738 seconds)
  done (took 1.614377786 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.06991898 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065857883 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065567646 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064788065 seconds)
  done (took 1.386700749 seconds)
done (took 5.637784666 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74918394 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196367826 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.178722789 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39753511 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126136532 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153461384 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640998754 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303538727 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180688095 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078877453 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.100556008 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314698462 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104512211 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632503653 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.070893508 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087172071 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13411853 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417520509 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064218838 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078752612 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085757031 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124946474 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083098261 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.071174077 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141077056 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06483739 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132596092 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076755463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063950963 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205574457 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.168996165 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645655799 seconds)
  done (took 10.03184037 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09336509 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094511126 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06593683 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119711986 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092635489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066273096 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.067789617 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063620532 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083185674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.124565511 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085653446 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097818437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062144725 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065652543 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081261469 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201094273 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076173562 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078088787 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067031935 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071424812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104626215 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074789211 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074494349 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074319175 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124851665 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176159268 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092779998 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094018715 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063976791 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077259846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111686925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122341446 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062075891 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063159698 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121223786 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090880406 seconds)
  done (took 4.440403093 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.942583945 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136147517 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087428309 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12831171 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.061213326 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.103046808 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06222611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076822357 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196806939 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.406611846 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.566074559 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107255853 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099993884 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064563129 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.064632254 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063156948 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.316122642 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.091258945 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100690096 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077092294 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066154821 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065082648 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33815568 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.064082745 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060103875 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064381804 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.054442423 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119428683 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06465874 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.915697005 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122166174 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063578423 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097319184 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165483606 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083825977 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135795115 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063634346 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.192247783 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146811214 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06650449 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063402031 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080603056 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100201366 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109118309 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062789874 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.063260017 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156302862 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061992056 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076286048 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.615508216 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14928839 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090188504 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061098983 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244823125 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082500566 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066137346 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061369448 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179361905 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131553268 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064507681 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.063582543 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064738666 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066381576 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356720055 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063089897 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061225881 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06434183 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073741216 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.722737147 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068548133 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066634239 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069578587 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069294977 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084473094 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086433956 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.063517701 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071669549 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.062463161 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062271771 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063355909 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08101028 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.352357002 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063695986 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064978955 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060809942 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061503038 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.083551775 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093387527 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063238487 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062168153 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097131602 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065171616 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063179918 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101753952 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063059711 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.080777621 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065744166 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109692066 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060934573 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.163763497 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082243071 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062424808 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.093532648 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066731323 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101042275 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078211817 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064764226 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.391684156 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06306874 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06203091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065449634 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06244349 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064585631 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063010132 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076154162 seconds)
  done (took 20.125237743 seconds)
done (took 36.65961956 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.230099657 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072040985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.071816509 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074766905 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.071783989 seconds)
  done (took 1.729063807 seconds)
done (took 2.918785874 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.116648458 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09507238 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.061642688 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091814825 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060653783 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096319551 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095485386 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077551272 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095658219 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.061069195 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092211982 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.060800282 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060731045 seconds)
  done (took 2.274754748 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079263972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080696048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067117831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079383884 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.060934347 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.078712677 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077728693 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084801433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077047812 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06891686 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060692665 seconds)
  done (took 1.999049433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0784682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.079554341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079220515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063817904 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.077948575 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077409571 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.081767382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077434609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070097519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060711554 seconds)
  done (took 1.993811928 seconds)
done (took 7.446406397 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074106663 seconds)
  done (took 1.249680822 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584724942 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.050997303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078409989 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108432685 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179510137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116588922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274029797 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083404965 seconds)
  done (took 8.828505301 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098979179 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069487044 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066604814 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065820004 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065688369 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068502737 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065124908 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066586805 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067758506 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067675784 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06588749 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065874937 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064961096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068245166 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067580944 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068319285 seconds)
  done (took 2.34726719 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.088599017 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.087774455 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07103132 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071208681 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069082162 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069018503 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071033324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070155463 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067640377 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068666948 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071265092 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070354829 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068017455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061597633 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070784674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072196837 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067316143 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070757623 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071386762 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071476845 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071016647 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061364039 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068064871 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070369108 seconds)
  done (took 2.979097532 seconds)
done (took 16.586858528 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110657373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069013967 seconds)
  done (took 1.359710655 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079024938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080829361 seconds)
  done (took 1.348486239 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080271623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062717791 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089795007 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075758812 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.062970537 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062665359 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086154568 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062988678 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062796365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062823212 seconds)
  done (took 1.897927631 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065530372 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0760932 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068019824 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077998519 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071013609 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061322271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06943824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064544153 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075143049 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06015248 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068094811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079249913 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068169711 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081231686 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069425377 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066104056 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067819836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064472876 seconds)
  done (took 2.44495684 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062899736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064917776 seconds)
  done (took 1.319242459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064855461 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061343273 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064379999 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064748649 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060174367 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059500511 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06026976 seconds)
  done (took 1.623433745 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.369081919 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.106481373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293066321 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067425859 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078578937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243552322 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061975421 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067017994 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067091573 seconds)
  done (took 2.588971042 seconds)
done (took 13.776734407 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075497653 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082092935 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091531664 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.355581297 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088295043 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062790632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110902362 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184649846 seconds)
done (took 2.258788447 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206819011 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602663072 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.381458579 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192812669 seconds)
  done (took 2.370585183 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322663943 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083142123 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.055814084 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064083492 seconds)
  done (took 1.729258923 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062921989 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06565328 seconds)
  done (took 1.330961153 seconds)
done (took 6.840465825 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063047215 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062990617 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060654187 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063073994 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.061008017 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061882699 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079435961 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059971613 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062432782 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062960201 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065906778 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062902292 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062803714 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063062108 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060318572 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060546873 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062588417 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060237981 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060146778 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060063346 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062438486 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060110676 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060506366 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062585836 seconds)
  done (took 2.738027645 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08113973 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063588702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068837751 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068788382 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066408741 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067936168 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068102671 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06311507 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.067785417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065134959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066363179 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066705864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064562051 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0667583 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064682966 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066509151 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067740095 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062956543 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064646352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067100254 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068349829 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062994503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066350429 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067715322 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066440101 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06750544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064618617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063087958 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067820025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066215083 seconds)
  done (took 3.210449961 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066562493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059764958 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060991621 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067810646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061290072 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061349629 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06021872 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.060675746 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061341108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060324557 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061812666 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060267837 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060412585 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061241993 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061167459 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063614589 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075542466 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060668681 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060237974 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061012583 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063606099 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060460272 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060270116 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060275319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060137972 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060321192 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06063029 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06045479 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061239156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06035743 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063100236 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063896837 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060333669 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066907138 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063715893 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06011519 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063988074 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060008792 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061224673 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060057265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059751656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.059959101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060206173 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067046256 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060174627 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.061845544 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060396919 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061526539 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061019209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062744214 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.05951582 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059871897 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062411177 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061434877 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064116734 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059478467 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060856421 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059941296 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061553892 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060190954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059702951 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059989197 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062812192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060840449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074405227 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066610355 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060077979 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061750267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061141922 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062389552 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.061952484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073280997 seconds)
  done (took 5.677820291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086651654 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084722206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062372389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062237822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058624733 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060689753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06438055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060614739 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061909121 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066514637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061236367 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061777466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174609845 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07315186 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060610773 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062052151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066293885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058304956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060384132 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063697635 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061007195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064023716 seconds)
  done (took 2.757596461 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151375023 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067058454 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101259642 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069571892 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064164495 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069504122 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066149017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066345177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066239062 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0649687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064552308 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066883419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06459609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064390833 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064756238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065099563 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066281252 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06508558 seconds)
  done (took 2.525395009 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074176567 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063131102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083378096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063150757 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062892706 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065098046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067393162 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071107853 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06496191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062468053 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070795549 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06483648 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064731718 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062586444 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06458662 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062491579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064972493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062256525 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070359928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067528242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067297701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070407052 seconds)
  done (took 2.688505503 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075645824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065193705 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079149147 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065428536 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059114986 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061182727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066544209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062617748 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066403469 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064131551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062728048 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061241661 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066136676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062748442 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065767422 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062856088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064639835 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062687418 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064158472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058609592 seconds)
  done (took 2.516684984 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083998591 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06551488 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064541969 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073059532 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064415969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064214837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072021491 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064385229 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064102294 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084043621 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064082616 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064078884 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071802583 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068627888 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064244096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071795374 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071587523 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071742961 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064114117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063825651 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083497999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064441676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071524074 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064248983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06418588 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064096061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064084274 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068773165 seconds)
  done (took 3.142409901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063617707 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06380892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060896601 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060407206 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061149629 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060103595 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060633944 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060260741 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062962664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060337658 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063020447 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062648059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062706815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062478611 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062417546 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062879635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062786485 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06028483 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060260887 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060109685 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062579216 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062668878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062438976 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059972679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060051097 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062693457 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060401697 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060412477 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062370175 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060752895 seconds)
  done (took 3.073439093 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071891773 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069130416 seconds)
  done (took 1.367075976 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060164779 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076975357 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060701738 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066774663 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066623769 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063233511 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0705506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066603296 seconds)
  done (took 1.753759066 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.077905322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075160815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065058069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077611954 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073203641 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.079797089 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127819616 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063765238 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.069397894 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061001604 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.075781844 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.062418 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068597813 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062924046 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068311628 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068566711 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060865953 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068714234 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065259542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061746193 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063960457 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071090976 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065233174 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058603281 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064062757 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.084928074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073958432 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062841037 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065630876 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0702119 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068598123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057597205 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062933195 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063598837 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061454883 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.072547619 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077680557 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065671637 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07159835 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064070798 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073652884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058503074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067487544 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.06921298 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07307813 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063633149 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063836368 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058520232 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061234621 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065159275 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058583578 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063417868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057968291 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072350147 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06602932 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073359052 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061995432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064214853 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065836365 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065865972 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.069243796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064661554 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065091189 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062338838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071918999 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067024873 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071749836 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057872551 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057335034 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060729432 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.071853386 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084203166 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.068825498 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063600682 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063552301 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060592732 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065659504 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0640699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068130102 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.069063156 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062893286 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06837047 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069853286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062967339 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0654822 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071089515 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061289978 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066130714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060931731 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079087349 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06247356 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061177649 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060886755 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073155657 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066130848 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062744443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060686327 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069517137 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057926925 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06360916 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063848339 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063657412 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.072144352 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066410444 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066449123 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.069794678 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.068981131 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062287854 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064329805 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05940393 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062536739 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060583088 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.06806628 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056153323 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063926559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062307759 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062101189 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.069402892 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.059924215 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061607253 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.19612405 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069866527 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063552245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060324138 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06657443 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063392939 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067290886 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07111922 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062675227 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058682673 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058915389 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067039723 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063072249 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067152145 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068993463 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066722042 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058230932 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061676209 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069253989 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07252929 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064022514 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064832016 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069640712 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064289852 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062532298 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070314627 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066310683 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062436849 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.06909345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064391428 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059451157 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067173779 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.066270109 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062976646 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067104455 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066980569 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066186807 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064357236 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062817472 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071234218 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064145166 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061955763 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063406703 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062088421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.073236117 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065002076 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058614813 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061140513 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073320401 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061716087 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062887978 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061962076 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065774585 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064162637 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061442914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063095277 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065117271 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074233274 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067924611 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06494931 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.06852453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.073684029 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063426086 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065308444 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063244401 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064582488 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06419154 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071478717 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068496299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068189666 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066132672 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060399075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068509041 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06969733 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061684883 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060989967 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061766604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067204904 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.06817037 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066914733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063684009 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060884121 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063874288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065988949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06535762 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062722042 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061911283 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069536526 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061020711 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069859243 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063858404 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073041168 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065979507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058395744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065952162 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061007917 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068704335 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058180186 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060468963 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062084631 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0641182 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062018626 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065581242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057123245 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069797243 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070061069 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.062839629 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06185667 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062626761 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.068614197 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063044662 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065401783 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064729058 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.067699745 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071273752 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060792249 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064487313 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07135144 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061714557 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056130472 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066524497 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060792267 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060380366 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060514639 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.060301772 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.193404904 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072970446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070258116 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0577516 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066019556 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062072852 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062429184 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059623442 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.067637142 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066278987 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064918505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07031545 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064852903 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063909399 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067631373 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063243277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064819285 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065058359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066925524 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063973545 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065327878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062724351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06635938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062434174 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061910668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065704751 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063189431 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06394796 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069083105 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063286555 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063610369 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066101419 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064216917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064100432 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063762189 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06263549 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066336027 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064947141 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063759676 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065208277 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058931941 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070501141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062652781 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07056521 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063632982 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0603396 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071147593 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.065893928 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069898552 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063792657 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064519021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064338018 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063236357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066002703 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070201241 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061166396 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074513391 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070296483 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064268042 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.066365012 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063390315 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064767886 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062701146 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064603265 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063966116 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064157474 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063136447 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067831066 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065911786 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063636411 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065358534 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064505498 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0632881 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064745429 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058371203 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062671558 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062630875 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06307264 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072434255 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063537127 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062996732 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06214863 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063621273 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061949303 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059934778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071417328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072510865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063449156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069719602 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062339471 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064313386 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073472383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057196226 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06096751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060900708 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.060715888 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070398937 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063544259 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.071964922 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062709401 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062090928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060283184 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063896634 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061886495 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058127661 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060862615 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066621453 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062045156 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061747034 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063454178 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065111826 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064006165 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071497436 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061492223 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062390383 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.061782015 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059169251 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060944261 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061070271 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.064431109 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062848578 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059906685 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059293782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06164978 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062591698 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.062884634 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061974429 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06299985 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.203453748 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06438709 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066479234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067501695 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059001748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066799602 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064051622 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062805884 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062680771 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066844586 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066753961 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065059704 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072695344 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063146883 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064408312 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063764761 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061282796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063777731 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064025266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063587557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062596144 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064463786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07190943 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060996636 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065780293 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063591007 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064078335 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069895313 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064682934 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066429692 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070511608 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063663362 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064860074 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071086525 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068096327 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066289475 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065126781 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064713122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068995206 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062352063 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069031676 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06347048 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06394753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064907111 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061176987 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063371965 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063531229 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062437085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069082004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064659084 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062769997 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062872765 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061525553 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063853196 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066974745 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071008209 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065925388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06698619 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05921806 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061301559 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064798777 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061132934 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065530027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065443281 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068782325 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065398476 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063219034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062484005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072423509 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068620302 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066150315 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060950774 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066580495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064738196 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065576418 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064101444 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063077952 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064170665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066564438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064684302 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062094516 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069456098 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066189283 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064176095 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064285932 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063997316 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063317299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058622022 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064074525 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064932147 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068238249 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065221423 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063275442 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073574925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061079437 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06370238 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066194942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062655867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067589426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058407158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064592994 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064041244 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06387293 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058518411 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062391255 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060981435 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065255722 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061980739 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058351153 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073080545 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071671066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066047138 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061669314 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061546719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05779164 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057892046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061272655 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.062719857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06297529 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.071024117 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060769474 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060855169 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057509821 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061677659 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064311649 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.064501841 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058995681 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057429464 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061115854 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.198230991 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068968841 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062626362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063642057 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066765317 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065830248 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06206006 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066698481 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06016061 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067319961 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075222801 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064824412 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063627673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.069568452 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070797522 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063943975 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058306399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064294025 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06635814 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064090813 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06477044 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064966823 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078660222 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066505261 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063011698 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062910657 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066253025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063247092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071670882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06502572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063972108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068150852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065669642 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072987075 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066540142 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070862518 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066896059 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066292317 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06343824 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063705815 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062062391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062617265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064809677 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065878518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068931338 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072546968 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06322818 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073963759 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.071788273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065776621 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060940219 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063373113 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06388728 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059278004 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063991171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061923626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062537197 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062309868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062958173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065002404 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069275558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064779407 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064506437 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063602904 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057824609 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065542241 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065398736 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064172917 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059985393 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063638619 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064164225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06731069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065856603 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060660248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0647365 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064588591 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06356294 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058524691 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069144806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062383227 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064404454 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062318874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063214765 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063943231 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.065975971 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067768573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063837809 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064748539 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066459236 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065104724 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060264845 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060210592 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068197917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061017378 seconds)
  done (took 40.572081042 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097146247 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060612355 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059009971 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058636664 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070564515 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059534419 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058559716 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059434791 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059803346 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062213079 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058526002 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058783815 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067115972 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073894533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070372259 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063389272 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058536065 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059720935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058522699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059518935 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067664248 seconds)
  done (took 2.660654551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070962565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0678359 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070613356 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07257282 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063763984 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067222503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069044292 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06737643 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072520979 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063923675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072590802 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066954203 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.063498928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.063552444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063694246 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067145905 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072632931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064067484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06703004 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068917875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06739452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06923072 seconds)
  done (took 2.792906461 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063718043 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062948196 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064296663 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058528534 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062844796 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.058367498 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066322087 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060809169 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065974468 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070194015 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.061263729 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.061539331 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.063849225 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.057932154 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.062451001 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060103632 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104386696 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066042088 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062070795 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063388637 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.05787372 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064117996 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058362415 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058504795 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061241346 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066108487 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062886342 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060246239 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06227684 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061507022 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062474198 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059960782 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063307427 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.062877004 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061161603 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060915049 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061710161 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062671432 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058149522 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06036416 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062769419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.058600482 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062472646 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063239499 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060852497 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06009628 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063923891 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062061458 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057713254 seconds)
  done (took 4.378634439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076055876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105682093 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065143615 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084739418 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076435194 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072042165 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065769412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085363973 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060099339 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060658607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078300137 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075967182 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062412728 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066970385 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069007351 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062443737 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063451459 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061158501 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066127309 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061868744 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066286308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068667436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076111704 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075011559 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066256672 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061267312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062015155 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066467034 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074471566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066639519 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066784097 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067602062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076493578 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064098113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06189886 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064427551 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077937135 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062474374 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064777456 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060327168 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064178307 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066414165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068560592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078068767 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062553963 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067087486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062089022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059588947 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075115051 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064539658 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070002368 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076485225 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066170193 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062608954 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066736979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077017565 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062402464 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060615713 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06514194 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073958372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060262782 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065935132 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075578379 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06416269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069203483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0760594 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067795639 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066191915 seconds)
  done (took 6.100727704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071839198 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.068830468 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077219379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076708408 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068793185 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068987008 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06878357 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068706371 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068870401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073421972 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068861811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089444433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064421954 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071545574 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068927045 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06902854 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06880972 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068912397 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068973414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068965966 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069365865 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076788435 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06884714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076440914 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094438892 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06435217 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068175008 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068823668 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077506283 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068890984 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076409312 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069160958 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068994227 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076596822 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075802144 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068383744 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061984709 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068535715 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068925115 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068451254 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064039874 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076919063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068434299 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063731921 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068606063 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068405003 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076441799 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075629901 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071129969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073683891 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069003702 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076582805 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068466819 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068664623 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076464084 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.101456306 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076355892 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076425773 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068555653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076370619 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076323394 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082338281 seconds)
  done (took 5.804176155 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080216638 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071389432 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.073465876 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058667379 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060742061 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066219008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060926502 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060667548 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071442516 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071231457 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07339302 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066276995 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069346389 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073485325 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066339589 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069274041 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066544941 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06605795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071324149 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066411273 seconds)
  done (took 2.68808446 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071214841 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079327041 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06405999 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068014523 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065642839 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068331141 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064659825 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065283296 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063578729 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065268094 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072489165 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072244157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063326444 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068284304 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072528308 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068235753 seconds)
  done (took 2.409570928 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.070823341 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069565048 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076884491 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063622329 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.060828704 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059177925 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062537389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058045972 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058687269 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07432503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06238274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064994728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062674021 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061054071 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059543593 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065189278 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058960773 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059833135 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062518477 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074813638 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072711439 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060950576 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063170731 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062551126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.062547845 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067498041 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062060935 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060095784 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059885851 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06285446 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063224879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066098008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059669548 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060530338 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061127177 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059982833 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062247845 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062460792 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064845584 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062251201 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060419943 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062040635 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062590617 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063240789 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058987081 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06261913 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05873592 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064073552 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060159765 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06307702 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062005879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0646753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062789711 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068772467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065169661 seconds)
  done (took 4.800438909 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075216738 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066197274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059176845 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061098006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065877574 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06438903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065870955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064034127 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064464638 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06071208 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064501216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06522635 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063956815 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065675776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064384433 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066039003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058459578 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064355341 seconds)
  done (took 2.488316665 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068248793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062475961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06979818 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063082009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062764255 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06446781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059425566 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061189155 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06105182 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06238579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06234009 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064924695 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06115368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06459179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062183298 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062431534 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06437537 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060956951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062438564 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058531798 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064632031 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060986314 seconds)
  done (took 2.707383212 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089496603 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078737277 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.133681513 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075395773 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.079476551 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067866573 seconds)
  done (took 1.848445449 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086318336 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076871333 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063229301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084541578 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070053832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063916695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063842709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06420511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07240927 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072640551 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064007631 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072654066 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07255747 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071801674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069904098 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069909469 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064501442 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064058561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063143302 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08033403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064292389 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07223809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064830683 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063775144 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064078713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071824653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072555346 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072518082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064075758 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072335508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069844109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064174723 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072938868 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072789687 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065838852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072815029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06416685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080898459 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07003688 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072248935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065643851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070891549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072924098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069108589 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072975797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064494487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069056652 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064683249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064525033 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082777209 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070164602 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072517277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070583988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072893826 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072988537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083016216 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073215702 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072375419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070274045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075571145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072370926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070060862 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072049471 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072753233 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069961121 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072210965 seconds)
  done (took 5.986543196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07837369 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083056705 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064948879 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073136146 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072384088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064466992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064602718 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064451874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06425551 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064458131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104055767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064665034 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072108212 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072441445 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064909788 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064510295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064555522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072591694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064456733 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082835042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064714709 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072071989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072071576 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071844112 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072645138 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070107383 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064140534 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064852558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064345651 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064354642 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069279132 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064566162 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072223856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063632182 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071915702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064423441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064256989 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068679203 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064361197 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069668347 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071924891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080361972 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064001777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064183452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072752318 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064303576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064021804 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064544342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064606446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063908168 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073067 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072999384 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07299379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072301898 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064352275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064437299 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064228822 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064492489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06455254 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070274454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071912753 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064054472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082582905 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064313962 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064436093 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072393372 seconds)
  done (took 5.895288869 seconds)
done (took 123.784355332 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181219928 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.162194625 seconds)
  done (took 1.662807943 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065665833 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094793571 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073846142 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125784999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.063134014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097133282 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096024557 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074216363 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062815061 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063497799 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063023256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065185784 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.127900412 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.062986183 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063130651 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.065434041 seconds)
  done (took 2.597351897 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09414143 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.154156082 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097293617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062501184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093844078 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.069384899 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061156034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.071511643 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06775455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.062029723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.069334559 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067163545 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061401733 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067237609 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067344643 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069674786 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061809726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069429523 seconds)
  done (took 2.702878206 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097355887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088291857 seconds)
  done (took 1.523910554 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152246482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101859867 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140267694 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337593431 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163675584 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.223615964 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.123632066 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124140417 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113125044 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120171624 seconds)
  done (took 2.935775858 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094078211 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148935448 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25044706 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.111309821 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069177966 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091233141 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1125236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.074825994 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07701711 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076713841 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076827715 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.072859166 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095730853 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.069913476 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069959129 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072730852 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098695344 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069006512 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071120682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073222231 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095608097 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062173466 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07000279 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069001736 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074230216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074099501 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062065242 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.061962948 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073578012 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07100574 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073393577 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090121846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07405694 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103975768 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.066875894 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104417413 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073726418 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070358596 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070839726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070417511 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075579242 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075386003 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.068636597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07248113 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.061638042 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07283151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.062084629 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.061743562 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074649033 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063261244 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074655656 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073150416 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103663091 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063570179 seconds)
  done (took 5.753002055 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098402717 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105789004 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068607784 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108763352 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096070024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068597012 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097855091 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089365276 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.098811172 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066502201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06479968 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066764257 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078911423 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079647929 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108546037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100471973 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070226324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067927407 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100105245 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099006326 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065042866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091003471 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.085654067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.097913666 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063888133 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066914515 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064600885 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066723496 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073500929 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07453963 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066300901 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077127046 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081769106 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074969548 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063506328 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064392998 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065004083 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07673988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07615853 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075763974 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074147791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064500831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064535386 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066343535 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066471617 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064544042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075740569 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.077274669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075781945 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065990762 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067001068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064683866 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066279413 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077563872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074389102 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077995804 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076811257 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064837265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06481802 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069099351 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0771588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075786966 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076071211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066465156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075704912 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065255512 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076824721 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080789234 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064873612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066250643 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065118933 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0660977 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066491802 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074816167 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074847203 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066002644 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066025385 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064603663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076505471 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075414742 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064413147 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073665129 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064010444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064861345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066207173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066257145 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074210553 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076593321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06637822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065134097 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065941036 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064895011 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064299632 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073325104 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077122344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074624678 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073808154 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064852268 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.074205136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073936748 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065179527 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074663673 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064167451 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065161012 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064895128 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073151145 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.201912423 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077729747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066943669 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065618118 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075044302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078523747 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065747324 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075541313 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07747716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076675959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065853408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079039926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065808592 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077348797 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067208798 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076862892 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065514112 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077265784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065391261 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065358666 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065507554 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.076773773 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066922761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066216727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067100953 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066731732 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076994296 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080469897 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067748949 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078159269 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07638068 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067187384 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076424846 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065851773 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076612259 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066724747 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067322082 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064266666 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078968615 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065697769 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065522544 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066670817 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077861293 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065423515 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076053473 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076141412 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065681784 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078665575 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078158486 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074882337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077943188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066988506 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066003682 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065090733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066338686 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075200571 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077745252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066984577 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065813705 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074571429 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07675042 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064602336 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075621318 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076546724 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075638602 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064804801 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066523638 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076909948 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077055237 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075527518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074806334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075064074 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064800544 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07466331 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075183732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066308924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08216745 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065107895 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08007265 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075516082 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073711495 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07565426 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076889848 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076835919 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076959289 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080043401 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06449622 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064279612 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076520372 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064575594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066035372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075268886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066401042 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066259663 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080196511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065491537 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076536782 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064395049 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074362129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063235736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065632506 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079037867 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063808948 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064977937 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074761647 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065177816 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07287281 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075838806 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.205807719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065821219 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068228369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078070426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076729947 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066122622 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065522873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067929278 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075999145 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074274646 seconds)
  done (took 17.894777835 seconds)
done (took 36.414637606 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204455866 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.146582582 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.175529325 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116412207 seconds)
  done (took 2.08405029 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119017078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097660447 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091783308 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061541014 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098465658 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061554915 seconds)
  done (took 1.905251452 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308414578 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206771234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178506889 seconds)
  done (took 2.067313379 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195343637 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18345726 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387148652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249509964 seconds)
  done (took 2.496687815 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138976536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086759786 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063889436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080463569 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130889406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157178744 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098328852 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123156013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074573149 seconds)
  done (took 2.380606572 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143536521 seconds)
done (took 12.453737086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.197425425 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.104394848 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08052354 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.104318548 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141901499 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073590767 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.105020441 seconds)
    (8/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.151707432 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148338923 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.078103159 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.237348643 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.073497487 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071815059 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069761982 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.204780108 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09681113 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.202709724 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190192531 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147137709 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07875043 seconds)
    (21/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085688559 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10408776 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.149141272 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.095339228 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067430932 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07540378 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166553822 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086982382 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063077787 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065847591 seconds)
    (31/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113771001 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073778434 seconds)
    (33/309) benchmarking ("sort", Float32, false)...
    done (took 0.122605647 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069257445 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.168732445 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068050035 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187783148 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068804013 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.153310563 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196630711 seconds)
    (41/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072774587 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192600232 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.145418797 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 0.179749761 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071525134 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089654594 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06228082 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200760804 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072064715 seconds)
    (50/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07291351 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074465009 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.047789744 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068955735 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082113787 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084459441 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068747359 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068432166 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180004944 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069229626 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170895745 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059400579 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.145860109 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07104264 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.181112443 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063744419 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.147666684 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068353136 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.047719601 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.047749914 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08586127 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10442402 seconds)
    (72/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.048590817 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086775275 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068960726 seconds)
    (75/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.143923136 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160570325 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085561333 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094804308 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.068986828 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061660256 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061324703 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.06240964 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083099115 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071136651 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.093884573 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.047575216 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.145222618 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.238888929 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064642821 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162165846 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.048799047 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.147110645 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181089851 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085320093 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.171518 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107672804 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069891593 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101374258 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147525652 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189098786 seconds)
    (101/309) benchmarking ("sort", Int8, false)...
    done (took 0.137490789 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086677278 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.048987526 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086155414 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129722675 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149008267 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.145909546 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.134291917 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135297601 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086130438 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073317861 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06216747 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0830262 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.106203552 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073222354 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.093413633 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.067401896 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.131849026 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170730111 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064133967 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064700015 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.048194711 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.048540513 seconds)
    (124/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.047809686 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064462439 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062728025 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088979649 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062161405 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048363318 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.047860179 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062183366 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.129946922 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069508376 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190205925 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049626865 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.05956965 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068751651 seconds)
    (138/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154600619 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.048717102 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067568884 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 0.121238562 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068818189 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072488226 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.087343119 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.113524764 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071372377 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.142745353 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.190252526 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.068554842 seconds)
    (150/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.103699641 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069394625 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062024687 seconds)
    (153/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.15228892 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.048933485 seconds)
    (155/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.057174086 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.093917014 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049621574 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087380773 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.164206033 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.154914817 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049030936 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062014326 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.062002276 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069083578 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069168866 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.049090121 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065400703 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069825735 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061535991 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069906681 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.145096387 seconds)
    (172/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066739173 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.048302599 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078342371 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06267995 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.049375932 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.145720144 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10337286 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050315065 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063331723 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130633076 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.081901479 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134552189 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063415393 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067150915 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.048302369 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.047567258 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064267992 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.067959608 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075492009 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069736675 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.067832176 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061862662 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.153150945 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062490089 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.199792693 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134767422 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063243031 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.268783745 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.061968145 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06701173 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.048950892 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124167488 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059033912 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.048509562 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070954896 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.04811831 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084033229 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171359258 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071485292 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.06984734 seconds)
    (212/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.048820107 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069805737 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076074978 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.050196217 seconds)
    (216/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114212774 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095027352 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067898347 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062810762 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070642541 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107086252 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072652919 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087561973 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061864545 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076790608 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049303555 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063792149 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183870041 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103074746 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048315968 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.070837019 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073408133 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062579668 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128288088 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08702333 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.049444301 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.049296236 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087432383 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062167935 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.048396275 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.059833146 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.048726151 seconds)
    (243/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.049339135 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086890335 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.058833231 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.048566358 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074309865 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068449759 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.104883333 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0613636 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.049011234 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.061823213 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11381281 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06257414 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.048625393 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.064649376 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061410587 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06276786 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.048175714 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061416277 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050114308 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062513333 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068624104 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.069310076 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.063983882 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.049407991 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062141538 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.049376523 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074641183 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062260893 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069646251 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115482903 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086196102 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086304104 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.049711099 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062159777 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12820692 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.050591399 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068771723 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048402538 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062698652 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065482245 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070000678 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077670274 seconds)
    (285/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.084705087 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060953159 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069152566 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061070641 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.08927537 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.090770403 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069330903 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065486198 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.059724303 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.048353454 seconds)
    (295/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.048792619 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.058005793 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067318623 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.04926292 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063071499 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.084043207 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.051314251 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048189206 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06153867 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067345176 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.057621037 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.058529489 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.069021129 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.049378165 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07533632 seconds)
  done (took 29.335901823 seconds)
done (took 30.722709853 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082422113 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08961064 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072408319 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.089940483 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078276498 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.073259246 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069539229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075335359 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076868675 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078676281 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075170513 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051809608 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070657848 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071255344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071351852 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088078481 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074627369 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069782071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069848941 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062209824 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069569029 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062557365 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064400124 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05162566 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074513527 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068607416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069070291 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07081665 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062571258 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063021646 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06571521 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070074211 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062310349 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07500081 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068764851 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069906416 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071226032 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072970199 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064615443 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062776548 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070833972 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06262399 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069407683 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070535727 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06873695 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068439956 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069621827 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074506143 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088055083 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064962471 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071248707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072777416 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07329369 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069524274 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06647067 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069586172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067524282 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088215089 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07006472 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064980034 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070714044 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070652963 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067894604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069531566 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070057998 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071576152 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071867247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068035569 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070917983 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067658979 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062033329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069374782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065674617 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062620874 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071976562 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073588946 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061283422 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067851334 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068816172 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.067627601 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061456538 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064142683 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063946477 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068100117 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064123561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.051281586 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06604477 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.067990711 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06150915 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069739928 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068410589 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068712106 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063824049 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072314014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061617163 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067628206 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062306568 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06240966 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063669899 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066291627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061849951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064176947 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070883913 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063360732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067832493 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075499791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062051456 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068623293 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061251628 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061534353 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076445066 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071098494 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062357589 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064773199 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061502298 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069456448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061776896 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061948069 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061602613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0620127 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067666672 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061828117 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064013862 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068599173 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073745987 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060719167 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.064347235 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.062719437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060441061 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066002707 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060721636 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060631762 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062568137 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.05753793 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.062520557 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060632829 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067816711 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20086164 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071886308 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065798531 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071361353 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067135405 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069292338 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068217273 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062265601 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.056150877 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065192342 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065581721 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064384057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062963728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064348532 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06190921 seconds)
done (took 11.946039101 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063746725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139583439 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097454702 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092177717 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082545755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063282604 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072922674 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098997143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064599412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099352147 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084559708 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081755817 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109149036 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061637191 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062626082 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06663505 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064120713 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078244269 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097848472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083733153 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11236764 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062235764 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091242764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086798543 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083912735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098150779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063415125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066976368 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066313705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087629955 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083005139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06652985 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063277739 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097181239 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089432328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080308358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062957339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079179542 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064001157 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062310356 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06418041 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09484643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076460729 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077240811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067182057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066210425 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064041483 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080286427 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085580534 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075588816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083387811 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099766576 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065622773 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062567958 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061089911 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081853113 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062299424 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065224914 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062882235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064841482 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062287941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065678551 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078082485 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078737896 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066086658 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.07704646 seconds)
  done (took 6.57119732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080430115 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08686075 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080244983 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080357788 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062698792 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062907816 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062969808 seconds)
  done (took 1.993534231 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063914078 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0855265 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086032803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085329113 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080935171 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084029691 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072575276 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063384862 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.077276616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064078061 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084130505 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098619319 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06385217 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.069782504 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087797688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063228913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086566488 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063157119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066020413 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086585514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065380219 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078943563 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066761312 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06336869 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077591399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063232429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109515018 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06696564 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064306329 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065995781 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061325352 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10327629 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07682806 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072011873 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063205797 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077120226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077434838 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061236784 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079243896 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068213498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.076665188 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063422443 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063918078 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061236164 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067238917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073076449 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06394564 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063485817 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065277381 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082585056 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063889066 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076558894 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066244595 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.065548764 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064432913 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066698776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073120377 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064019351 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082679775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064694337 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079850378 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079719622 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077120867 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079195848 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06576194 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076837688 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.076580039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065420824 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064572102 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066452069 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079345188 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061627389 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064533919 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073361298 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065168957 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.085871401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.085397334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064368829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.072480786 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063623029 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063242506 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063423735 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085091897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065428281 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063079569 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066943598 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065779068 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06164189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061966954 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066450342 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061751456 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.064720814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066472043 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066243204 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066210781 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079557528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065155502 seconds)
  done (took 8.410269597 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065279327 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065066324 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065946976 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065042309 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064474588 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065020838 seconds)
  done (took 1.895246265 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089828514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066456804 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077792862 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069489722 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101034033 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083441549 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083573899 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07516039 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080220164 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075367978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082883379 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.084508436 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089064795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069537436 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083022127 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068874161 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083472581 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072613342 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074811453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0697875 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083094875 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069196368 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070203457 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078059663 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072102961 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069080983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064261175 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075131285 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075195617 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07568742 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069334942 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072525587 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067265442 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07474611 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083387399 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067663959 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068737024 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073773195 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069062527 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072287509 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084190093 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069455103 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071153034 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07352315 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074706053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067108221 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073436802 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072528857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082316496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073940326 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073400886 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068301574 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071807959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074058383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067012971 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074842805 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073583643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08343702 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068895413 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.066771049 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065557694 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072123762 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074179576 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072068794 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075868981 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07364158 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.067180546 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069185625 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069332968 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068417683 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073635879 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065788402 seconds)
  done (took 6.824870307 seconds)
done (took 27.165199755 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540702039 seconds)
  done (took 2.012948275 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599001795 seconds)
  done (took 2.094345879 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.508554108 seconds)
  done (took 7.995620179 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39123542 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486898063 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.678986169 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128619001 seconds)
  done (took 3.207721856 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.670357287 seconds)
  done (took 2.172881686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20430326 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192129455 seconds)
  done (took 1.908652878 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371839421 seconds)
  done (took 1.865553169 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.096254202 seconds)
  done (took 2.590982265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25972583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159602548 seconds)
  done (took 1.917111058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454171881 seconds)
  done (took 1.952105871 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.80596099 seconds)
  done (took 6.304027337 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202386419 seconds)
  done (took 1.738589309 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238884189 seconds)
  done (took 1.732883487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.653213383 seconds)
  done (took 3.147521108 seconds)
done (took 42.140201342 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077805175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079258256 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078502441 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074767396 seconds)
  done (took 1.792390948 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073911347 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069207267 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073627154 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070418576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073897126 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069425139 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071385401 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073592337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069593684 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070220214 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069361481 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069255098 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071817793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071002532 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067890833 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071878081 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073528249 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069190524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072424509 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069334799 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068030911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.071848683 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071736904 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068684701 seconds)
  done (took 3.200094946 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074253114 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070785277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071984906 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068545446 seconds)
  done (took 1.793708226 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075347573 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089443019 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086139101 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074685084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089998255 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082888859 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066313644 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066155361 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070092456 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073930467 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064954442 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092988445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084925435 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.074040697 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07600949 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063116677 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06573082 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08376686 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074113975 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074975193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067207606 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074217988 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.0650895 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.085039274 seconds)
  done (took 3.324222559 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074416196 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101050373 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075392611 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085502472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086647748 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062596403 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071648444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086433337 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120185731 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062397135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067598674 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06251848 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069734038 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062211964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.073186868 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102181586 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105149743 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065527231 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092591454 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062369121 seconds)
  done (took 3.101827496 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07001803 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067346194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.063186119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065946025 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075084919 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069770541 seconds)
  done (took 1.924005888 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064953073 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065134764 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064763689 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065262273 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068797147 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064641002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06288743 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064429341 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06453048 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064069469 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063470804 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062906053 seconds)
  done (took 2.284177307 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192151081 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066476404 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066254545 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063450014 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06751635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063221104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076684329 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065025672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087305245 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063284137 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063685974 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065343368 seconds)
  done (took 2.451086911 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202846597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073053411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23345292 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133834222 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109533501 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112602191 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100827274 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110316609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140764549 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098720107 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165040965 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162689216 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103914666 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134213557 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086020033 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094436876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152464693 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159334825 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100723898 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162733239 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141022032 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121895552 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144365058 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098407324 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102969389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119055362 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068382468 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077640878 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168060151 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128425966 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143822713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108440549 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091145123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173381859 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168203799 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139314118 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131018585 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080626138 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.098635934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129565727 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196995869 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088016721 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162778168 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103656672 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2176014 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133115583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117957431 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117587336 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104427448 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087691536 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144197018 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181495057 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135806155 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084506821 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10963498 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113188603 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114556797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10162107 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179521542 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159147704 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13102595 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068631304 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096765595 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152091666 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129492041 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107002601 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125163622 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092253227 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131844581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152277089 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115945 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141132746 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12612771 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086229472 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116227095 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137039726 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125789347 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16731978 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121871941 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07033803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122271969 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101166704 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078911155 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137927087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072342794 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172224015 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095103989 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103256898 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111641183 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109406024 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108805712 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157439096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140038109 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098946489 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061075188 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244512795 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119651254 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144774046 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085141091 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106978726 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114977728 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075488728 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137485701 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072523283 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121153809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.072439988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123223162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131203252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073021607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120100316 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099139815 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098397235 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131309503 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157453853 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086945505 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079749607 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165635983 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119681404 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101755456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141457418 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153571225 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097967028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101004465 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147783026 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177311814 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086648901 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160361425 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104646385 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08081425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084017107 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121052736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10953779 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119578685 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079425955 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115732153 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165542403 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072383075 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092481848 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130603464 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076373934 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07815953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100128396 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097029236 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091706 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096771867 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101009164 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134158954 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119936241 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101771801 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121108569 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094333029 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315063535 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087167575 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09819299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101444559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067801504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135606879 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15477061 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077284991 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16315845 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121738363 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102318045 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117156752 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080902916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137875474 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076099631 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067506241 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142179547 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108347712 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107877277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147700968 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102130946 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126115207 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1184836 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133076485 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130550131 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126735382 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10243614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085186365 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109279999 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123558448 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070143213 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088777322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077829982 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10085374 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092348129 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080339348 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139643117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12193335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097438469 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10859215 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093680286 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143797883 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073626085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126458727 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116501569 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091510928 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148653325 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148504363 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127499543 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096259629 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141357895 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067219968 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070477021 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085757763 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119097494 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079510749 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079637323 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260331311 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146199333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128274449 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136922422 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109562488 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119864125 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15287897 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067379785 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114087903 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146650366 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121040208 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101776166 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088420728 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096986848 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139250617 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107050759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178849009 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111547392 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124390437 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150461079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097845107 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077232318 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100208797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132948766 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102561076 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14197042 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09693972 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085079483 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107132138 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07118947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097861367 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124148766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116843464 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132236561 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111649695 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129835496 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074521887 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114224535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117561148 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12009745 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06087122 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117605773 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159034925 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090695248 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115156469 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14988237 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07608117 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.120830622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171468916 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140634641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081654728 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254030818 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116710829 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126585938 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119610066 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137995256 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10680651 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132978861 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106726244 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083553067 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085362011 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095521889 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101469127 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091357192 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10600304 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112438702 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092526409 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130888514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101389672 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10714849 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116475235 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095783498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087003497 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094896934 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172559175 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11742578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168481594 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096580302 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144103557 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16320332 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071942061 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076381865 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075728949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137114183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080565881 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127700674 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.094760408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103106864 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121818413 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139153832 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092143477 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065599011 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105418286 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131277253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109480755 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095742855 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101707193 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160562371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097485667 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076398202 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109997382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101350325 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098901637 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168317652 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.058282171 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094187449 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072555532 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077354634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123188217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294048496 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078610187 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100815201 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116384104 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107496465 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126561553 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09991087 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096280445 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111940327 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147213392 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126953193 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087787694 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109568206 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126977675 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154889086 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103139082 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093717238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170546913 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150677612 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1586375 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086080016 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112595452 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111563749 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105855903 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139252328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080760223 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162026271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078851792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134248883 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101437157 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087547985 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127053572 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095686559 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085169478 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162715441 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114558436 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079645368 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075156525 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115550552 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117449378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104053208 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072818244 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136733681 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070263336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12933307 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165252455 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077895335 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100964747 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093078066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076392073 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104388543 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098781271 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086188554 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.234841397 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178013694 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086760192 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147430995 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139508239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111298139 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135162588 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097835786 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634406826 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075061198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149979218 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114099777 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171854953 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094462534 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115827198 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106114778 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121766165 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143496809 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103311094 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173097395 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130178507 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114240746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077082649 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100170894 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100052058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086746992 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102013263 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111178904 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113621087 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090498533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113442319 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120465304 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079137823 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092273567 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152813792 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114125803 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140964282 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137503188 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082340598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115367067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136333465 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077394275 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120077371 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148727756 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102650785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09458693 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077421378 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098901702 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165841456 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069660803 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156849818 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263311734 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107410917 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111423514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113952132 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129690413 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106830724 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119024747 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092332633 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109194341 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111233046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079394284 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07534272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102708926 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110845327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09489793 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096918352 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095833482 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150225956 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068864998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093027727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100997194 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143300496 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172517286 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084996804 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080426385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116450282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110682958 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111094103 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118374471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076749686 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079999623 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079459654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.074366347 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105161149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109457935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101615589 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108031373 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161351857 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079933012 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.218518171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092163697 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102074809 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066513636 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075632404 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092809496 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094708445 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105718732 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097611778 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167406129 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091968048 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087155455 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090067537 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070633984 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080026737 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125582953 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106923868 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114085048 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092963078 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058979434 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104788386 seconds)
  done (took 57.48282037 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108795931 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.080385198 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09470496 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147391829 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120203963 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209455986 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154842902 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196411411 seconds)
  done (took 2.750608853 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06660036 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091892463 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097127495 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081791059 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064455931 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067280875 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222683466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079425739 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063679333 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085536897 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077497707 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067214079 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415020788 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063340275 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065935669 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060746326 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064267149 seconds)
  done (took 3.352479955 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361758079 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596299008 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370212247 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070479695 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.489146375 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088166753 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.129363027 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.124015102 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070271065 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535215831 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701657426 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.120686826 seconds)
  done (took 18.274836417 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072981134 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06712466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081505221 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080401515 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069407569 seconds)
  done (took 1.987297255 seconds)
done (took 105.272148301 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077089264 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376331533 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.051022534 seconds)
  done (took 2.068663647 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.080952969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082664315 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082200619 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08091801 seconds)
  done (took 1.948381354 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072075431 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073724371 seconds)
  done (took 1.762484928 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222183464 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.157828435 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083586026 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080248901 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076274978 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076680202 seconds)
  done (took 1.85499058 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070683274 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072131696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07094607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073929011 seconds)
  done (took 1.905444367 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074002891 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.050501349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052432844 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.053075033 seconds)
  done (took 1.850035595 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083483018 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076866718 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076311325 seconds)
  done (took 1.855651007 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099926682 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.082037888 seconds)
  done (took 1.801088427 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079618261 seconds)
  done (took 1.700026442 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097086784 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112077228 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129432388 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107689557 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135817517 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106651667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082776797 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083800196 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074171205 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084504818 seconds)
  done (took 2.63378581 seconds)
done (took 21.535205852 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076458858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359063492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357891309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087532084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667139116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353833056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978568782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089247412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111049271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064738752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081430842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645865548 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968620477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32015231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957979085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319967154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64862101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065092724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064701884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06500353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963516132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064623085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064770404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065508547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64587627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36767436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065174841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318595161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06493186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066904053 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351725086 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065306996 seconds)
  done (took 15.995152803 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068079551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115765567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070725031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082077368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067690806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066570478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068978921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066187718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116838493 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065264777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081816645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064850687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069179265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06601008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084237334 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065579416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066349296 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065914537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065279138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065496233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083912515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06444379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065145191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06538496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065041963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076747526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065450245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065222731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065443864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067319202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067830279 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065758985 seconds)
  done (took 3.931962931 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112812777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122241447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071499474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100824687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109874227 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06728055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140327599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089961712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124213336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065479958 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082123009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065415695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098309797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066032399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08471218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066004594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066511362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066028546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06551626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065989115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08425099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065505356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066016739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066272407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06586021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078858016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066034889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065914156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06573397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067654955 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068759998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066164989 seconds)
  done (took 4.191020812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070185556 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072173936 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080819397 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080397003 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066873423 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069965706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069690088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066656133 seconds)
  done (took 2.21312207 seconds)
done (took 27.956988125 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075756709 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06655729 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069585634 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077946889 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070893028 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075855747 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064084546 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071681692 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069328113 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070380541 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072106299 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064779997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068695811 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0644786 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070803069 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064978717 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07651234 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069107646 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.076234658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076701469 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067522415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070706169 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071720092 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076300045 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076651975 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0760364 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074759995 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070660789 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066847996 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068354031 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073980571 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080877155 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06595799 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.076888326 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065511076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065276724 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068972803 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065326558 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.076522803 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074270551 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06739982 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073606953 seconds)
  done (took 4.611656078 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084770926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088524589 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082146362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0582834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06403224 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061804673 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085370206 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056951594 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.057072425 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084460115 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.053017198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056491104 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059409271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.051340485 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056725237 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053852742 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058610195 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052969588 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056316127 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.056401479 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08516421 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051119877 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07440378 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059631019 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055978991 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.059056095 seconds)
  done (took 3.317523037 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072485659 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081178743 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08509141 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123544656 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.100448939 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073974405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076722173 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089884643 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.082508192 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064483655 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068209782 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091028762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085472747 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070900024 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.065324391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08158749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079152806 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067236667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070854312 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089124989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082423191 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082014963 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089243803 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078253372 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063839678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066531243 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068394203 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078699728 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069647925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074262401 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068824132 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067805052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066438349 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075724174 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068117436 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066230083 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08730688 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074399408 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074649184 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.064992534 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067903845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065815194 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088641966 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123189872 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064281567 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071219836 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072421467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.0737826 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064679263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083058965 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075466611 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064260289 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067888614 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063982322 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064876873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077929997 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066602064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066917312 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073506751 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067300703 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086943086 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068823152 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080037926 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064156078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072408583 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06382689 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065371214 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063852752 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089845681 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.066460638 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116786616 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0659241 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065925526 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073809299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072121237 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070457732 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064894135 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07969008 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074783323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068508862 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073053192 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06775357 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067320466 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084661544 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066981404 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066141541 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065621235 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070984726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067782417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065638889 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077239864 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064419177 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067219237 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080997286 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064180158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065752506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070485964 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069271155 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063702012 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075440205 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069633028 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0655646 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07365842 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064324963 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067522326 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076598431 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070984812 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063987907 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07003215 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070780853 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065336043 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066521312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067608474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066730653 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073675116 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070928225 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068967959 seconds)
  done (took 10.248202182 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157767171 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149603397 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068205356 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142353535 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073197384 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.076307978 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144626695 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09172923 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065104522 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065165374 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06583648 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106883087 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102677562 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.112435115 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075708583 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06461805 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.080319441 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111541239 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146815105 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139755515 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080392504 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074137099 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066811458 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06596718 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067902615 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075115581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082391325 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074303137 seconds)
  done (took 4.305743644 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080571691 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.094273286 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072058379 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08633225 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088461637 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065099671 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067314994 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066731973 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077695001 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076010636 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065013483 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070849224 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07231117 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068621375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066082096 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072323398 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072668527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067198562 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0686629 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070095144 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075406828 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088949405 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068811144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064627613 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069861406 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064038166 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061498285 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081626757 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065260252 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088580739 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063229444 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072775447 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078635566 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065857906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064806323 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06488048 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06448335 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064773425 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066323291 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063627184 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063378928 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054712353 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063640279 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07671667 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070705397 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05376047 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069588643 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070105071 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069802384 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062443139 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067613704 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067398518 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067672137 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07129647 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069807932 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069446183 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065555547 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070727657 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072025668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064468957 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0615804 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063570406 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069137989 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063214774 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072620425 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069388745 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063313161 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064379709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066352051 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070736908 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064290882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06769567 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062639842 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066765327 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06933836 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066911573 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065647198 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063126601 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064424098 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065229665 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052829159 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064570155 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.051078648 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067571151 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063138081 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063184311 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064478117 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069788276 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077398928 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0660452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07049371 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065745239 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06410391 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067676278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.057331977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067544426 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079849424 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079659404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06495077 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062727908 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07898767 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069765055 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063912905 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05345375 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072509088 seconds)
  done (took 8.863679527 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087898584 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067695726 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080953418 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088068961 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083875079 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072561513 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073998306 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066639658 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079167461 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070933481 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073441392 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065752422 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074468458 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073875238 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067188442 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073980806 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068880463 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079642904 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079383248 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06560741 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072880111 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077260681 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.086493898 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07712119 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075602728 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077536542 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.086620837 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069454519 seconds)
  done (took 3.807901793 seconds)
done (took 36.79133014 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.74074602 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.898033725 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.718870118 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.063093726 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.97323666 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.737261207 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.881696784 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.714236209 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.877814047 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.753068183 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.006586424 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.756289235 seconds)
done (took 64.780227632 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.73355485 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.867706281 seconds)
    (2/2) benchmarking "String"...
    done (took 1.991892951 seconds)
  done (took 5.520391126 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.096034841 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.362498458 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.951847408 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.716551945 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.723981792 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.953662689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.525054328 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263649404 seconds)
  done (took 30.159108617 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.846983963 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.95372591 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.397044084 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.434781803 seconds)
  done (took 15.340646746 seconds)
done (took 62.594633087 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.72766054 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.727810202 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.725606373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.703975774 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.777093185 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.738057166 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.041334097 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.963335752 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.719269815 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.712386475 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.720993702 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.152499067 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.724360227 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.107139697 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.717982453 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.730038624 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.72902529 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.212627929 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.877551935 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.734593431 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.72187537 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.759997728 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.726300094 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.734493554 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73920025 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.726939408 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.165200327 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.726896134 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.356982991 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.727920673 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.754984807 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.259379531 seconds)
  done (took 203.604652543 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.721983899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.842554161 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.88919915 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.728255095 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.173186982 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.906110519 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.83707743 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.217917663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.72821967 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.757271607 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.030465644 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.720455037 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.036762441 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.716462397 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.754510682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.808874745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.984170597 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.009933826 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.758096878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.89979928 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.741109555 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.90496088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.870062089 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.971135828 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738427608 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.788190993 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.907477142 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.741985955 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.917012986 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.96458536 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.75906775 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.750939089 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.952147609 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.600209551 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.734536536 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.73624568 seconds)
  done (took 169.263317858 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.130995414 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.723625376 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.722909683 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724423866 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.736356765 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.723917429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848518079 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855751076 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.186909077 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.205802455 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777378072 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.551249742 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.724852647 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791618297 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.73701904 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.725179649 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740058045 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.752494343 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.726193901 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.724337359 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849075929 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.736892991 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.887937659 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733372376 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.725543186 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.730362715 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.095782521 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724910228 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73193954 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.986598517 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.72569887 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724130423 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613182394 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.966455165 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816550882 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.727754333 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731789389 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.724992462 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.944028368 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.725923533 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.726230163 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.727991745 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895799502 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.725840152 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853985061 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725432416 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.225032861 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.725986354 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.725619165 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.784837102 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.395011617 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724535911 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.725020219 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.728505635 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.725381739 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.725634528 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.731451215 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.632808031 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803055082 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.729883427 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.729981853 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731474842 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.726880592 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.934581629 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.732406832 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.724639697 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.781790353 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.945708805 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.102956262 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852279545 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729327265 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795806262 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820478665 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.727996652 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.727151819 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.726328309 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.727080443 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.726606928 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.808410498 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.728738016 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.881471211 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736990652 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.728928174 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.779651237 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72742009 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.79843399 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.728522166 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621649766 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.728255718 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.727129427 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.035222647 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79490703 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727931039 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.728372385 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727082542 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.875298355 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853227217 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.533039564 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727665915 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.729518403 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.663547762 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.729619048 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.88824284 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730422362 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.899230783 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.730007522 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.810629929 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733904519 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.731482825 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.728157152 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.76043044 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.730667026 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.790254099 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.728347673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.101982628 seconds)
  done (took 397.329091887 seconds)
done (took 774.046448965 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.412509343 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359352112 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.480242922 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383608422 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.35969103 seconds)
  done (took 13.66681412 seconds)
done (took 15.336659362 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.816385711 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.822062602 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.754634862 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.818714199 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750418501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.820381034 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800351168 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.754968955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787457787 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.755289122 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.7898324 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755442825 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741643738 seconds)
  done (took 24.83886863 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967261432 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.965255455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802758947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.95687264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778652108 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.957120713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891353681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883991206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.881621868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748855113 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745678428 seconds)
  done (took 22.252429096 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967538911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9802024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809492496 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.970541845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782482437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.969695868 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898634079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883765623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.884429975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747759554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.746244245 seconds)
  done (took 22.313637514 seconds)
done (took 71.076142831 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.740403696 seconds)
  done (took 3.413460876 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.761260829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.905440876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.745897249 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.744651664 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.740100209 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.741236162 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.74451156 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.739255351 seconds)
  done (took 15.797408322 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.740763706 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.741363424 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.738450849 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738563182 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.738291152 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.740175743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.737884262 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.737837956 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.740369741 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.740096474 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737896626 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.738319036 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.73806208 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.741355476 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.73984522 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.741193432 seconds)
  done (took 29.505500613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.740414872 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.738677778 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.738869306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.739091609 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.738547227 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.740572406 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.741060791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.738658418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737880013 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.73908738 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.739557082 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.739395708 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.739998238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.739236326 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.740327514 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739445378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.738652632 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.73960586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.74309646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.739460047 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.740652488 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.738564699 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.740310645 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742020749 seconds)
  done (took 43.431169606 seconds)
done (took 93.819792938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.623035114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.136799143 seconds)
  done (took 8.435273873 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.744878997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.742872579 seconds)
  done (took 5.20237151 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.743597677 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.742816223 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.742584102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.742826474 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.743423394 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.74239254 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.743600752 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.743199967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.743014442 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.743042091 seconds)
  done (took 19.106154569 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.742353274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.744227016 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.740675979 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.743571331 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.742282453 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.739874524 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.743698064 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.74407453 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.743354962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.741745995 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.744390721 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.741247912 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.743993819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.742062714 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.743523955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.741846094 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.741809216 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.740503484 seconds)
  done (took 33.04181112 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743902141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.744785456 seconds)
  done (took 5.167282884 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.741023683 seconds)
    (2/7) benchmarking "second"...
    done (took 1.741758371 seconds)
    (3/7) benchmarking "month"...
    done (took 1.741753427 seconds)
    (4/7) benchmarking "year"...
    done (took 1.741774901 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.742584595 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.741128707 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.742648441 seconds)
  done (took 13.869611674 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.746313324 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.899685756 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.965864825 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.384151769 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.747523317 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.749271319 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.700202477 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.748993071 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.749317337 seconds)
  done (took 19.370114994 seconds)
done (took 105.86808032 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.562824278 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.740216847 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.116107278 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.794970141 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.836761154 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.035132315 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766247375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.959186643 seconds)
done (took 42.489146725 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.805031977 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.292863346 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.33644068 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.161417994 seconds)
  done (took 12.46904843 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.72547689 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.272721555 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.779391506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.338659739 seconds)
  done (took 19.817659577 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.107231854 seconds)
    (2/2) benchmarking "read"...
    done (took 2.101466838 seconds)
  done (took 5.892698781 seconds)
done (took 46.664212032 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.746010255 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.746164608 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.743767871 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.746451127 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.744008833 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.745091989 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.743663831 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.744497683 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.746446933 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.74564309 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.745952695 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.747230278 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747135149 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.747108924 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74455636 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743457069 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74680542 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.746445772 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74418449 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746823929 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74786755 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.74449853 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.744649197 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.74807568 seconds)
  done (took 43.57632395 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.747534236 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.744892214 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.747012763 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.748956866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.745179653 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.747362366 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.747577095 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.744961081 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.747978819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.75029642 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745490714 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.745729764 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.747924006 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.745093932 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.748661016 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.746778371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.748604136 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746554508 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747439624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.745167089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.750131953 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746470218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.745565379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748295187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.746002911 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.746641023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.750068845 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.747251346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748398862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.746103399 seconds)
  done (took 54.096093699 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.754757493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757842405 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.749258399 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.749413947 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.749106725 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.749287491 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.750075473 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.750750106 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.750537185 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.74919638 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.750106102 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.749639738 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750543012 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.750228547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.749000092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.750762717 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.749774227 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.750741111 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.751139865 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.750457318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.750670498 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.750730406 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.750085063 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.749529269 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.750972218 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.750250847 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.750790054 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.750026951 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.750438516 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.749941397 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.750013805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.751364393 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.750362175 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.750918207 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.750276017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.750868989 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.755484122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.758356932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.751147046 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751275705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.751151056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.751391001 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.751359244 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.752384924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.751528628 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.751751821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.751273139 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.752004606 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.752457788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.751629191 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.751632875 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.752466074 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.752292315 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.7528909 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.751688562 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.75261774 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.751947246 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.751950987 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.751756404 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.752138238 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.752783497 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.752619279 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.752217893 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.751904499 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.753285569 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.753489944 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.753558859 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.753504325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75232029 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.752741475 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.752538416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.753304846 seconds)
  done (took 127.794346777 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.752258619 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750328924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.75075215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.749357173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750523265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.752960998 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750038489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753777096 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750306746 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.75462118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752235041 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.751106837 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.750449008 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.753161761 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753365975 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.750904341 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.75326539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750722095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.753232747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753709101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.754616524 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751153468 seconds)
  done (took 40.229737755 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753765276 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754570921 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.751367776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754767747 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.751706689 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753967344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.753959258 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754676217 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753546844 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751982368 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752104482 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754530548 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75190273 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752807843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752178778 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751617435 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754789724 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752197826 seconds)
  done (took 33.244526758 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.752478695 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.751997377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.755378427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.752661969 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.753218011 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754927223 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752673737 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.755090415 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.755482554 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.752662727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.755576153 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756060551 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.757538927 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7533496 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755865021 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752833586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.75550095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753735751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755809666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753381836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.753662499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755803425 seconds)
  done (took 40.284757611 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755645658 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.755384407 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.754510728 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.753226234 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.753823699 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.756747648 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.755640746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.75451179 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756359278 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.756480848 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753202525 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.757034405 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.754385396 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753662274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.754312254 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753933596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757390128 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.755620957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755990382 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.754518448 seconds)
  done (took 36.792608534 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757697136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757595453 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758122298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757624979 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757055656 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757941512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757465938 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75825185 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758569378 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757916286 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.758388753 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.758732787 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758935965 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758359046 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758722801 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759884156 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758299549 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757704645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.758975623 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759428106 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759497131 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758502515 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758934889 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759567761 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759052747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758659127 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758779808 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75903842 seconds)
  done (took 50.928610189 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758506759 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.758742886 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.756043017 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.756638833 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.756851825 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.755280225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.756541348 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.756175017 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758858958 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756298354 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.759127925 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.759428972 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759286222 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.759016714 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75877647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.75896461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759208448 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.756515067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756832926 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756801204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.759360926 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759631926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.759414971 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755690595 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757573797 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.759822775 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75661593 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757464337 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759869721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757331922 seconds)
  done (took 54.428931769 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.778066499 seconds)
    (2/2) benchmarking "in"...
    done (took 1.778413665 seconds)
  done (took 5.249024082 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.758091478 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760331044 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.759807804 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.758434472 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758508679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.759962804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760722929 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758782652 seconds)
  done (took 15.767527523 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.75968696 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.761012093 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.760373069 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.760195516 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.760366289 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.758943455 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764527257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.760027707 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.760205825 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.760149766 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.767948449 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.767427788 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.762703911 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760910332 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.760266904 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762936145 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.761379197 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.761010016 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.760842771 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.760845681 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.762179497 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.763147083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.760200827 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.758526605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.761707398 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.769116385 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.762976461 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.762159204 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757826558 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.762366343 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.758239078 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.757636755 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.761302766 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.760152298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.760166361 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.760589085 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765252817 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.760165078 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.76408849 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760272607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.76009177 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.758058576 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.759598357 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.759281461 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.76042359 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.760800653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.760621523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.75904622 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.759102363 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.763223037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.766940415 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758644533 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.758636302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763386387 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.761659265 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.766813501 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.761048677 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.763532072 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.768854727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.769060332 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.771720315 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.768593238 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.760546253 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.761635799 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769761967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.786805939 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766945402 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.750861921 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.751101506 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.754440874 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.758023582 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.764602444 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.764551468 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.751838707 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751817271 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.752187687 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751814636 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751855687 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757380502 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.753541108 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.751398692 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.751894731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758749617 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776411707 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.748105656 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.751432783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.750894063 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.750491185 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.751416725 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761300549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.751863556 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.749897899 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.748060667 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.749682345 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.750821822 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.751842357 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.746785862 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749046185 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.748705112 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.751106359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.750935562 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.754017359 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.759732062 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.750695402 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750708452 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.754583206 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.752599398 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749099004 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755357652 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.750458921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.751536171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.751099158 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756559 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.748937374 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754124922 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.759842797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.752084984 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.750964034 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.75164286 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.752106274 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760498872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.775845897 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.752398336 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.752463302 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.756187831 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.763439686 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.753150575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.753437053 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.752308852 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.749815146 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.749239019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.752321996 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.753155965 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.750990677 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752955808 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751430899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.749511022 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.752993296 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.752857281 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.751839006 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.75236674 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.752225838 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.752253197 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.753767539 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.753184243 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.753582413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.756888662 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.751154657 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.753001433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.753073795 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.750053819 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.7543436 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.754286976 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.753513034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.751759539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.752799894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.751474427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.753255481 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754579473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.75311295 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.754099208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.754136053 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756243787 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.755613124 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.754433588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.751419568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.751169352 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.753640672 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.752756267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.752546761 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.754807721 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.751243312 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.755901646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.762288929 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.753928212 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.75460855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.755837626 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755559472 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754171078 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755010286 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.757161228 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.76150917 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.754830204 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.758831329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.755093232 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.755610933 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.754125868 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.753077808 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.753491718 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755164277 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.757042929 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.762534671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.765990839 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.763377212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.755501443 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.75845789 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.75497801 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.759283101 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757290536 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.755233331 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755955627 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755481444 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753904772 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757687112 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.755744181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.754522705 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.752786573 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.755409451 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.754732829 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.756232818 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.755354676 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.754077238 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754854777 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.753167749 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.756989951 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756688199 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.754478915 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.754054473 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753696396 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.754173981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.757316202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.756231339 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.760885921 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.753745033 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756004255 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756364144 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.756280111 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.752483182 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.755715474 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754385915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753106912 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759405292 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.753058282 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.752254364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757835932 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.751654876 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.750206646 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.755399473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.750861069 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7474054 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.752884503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.758361369 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.751007774 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.751091735 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.750716468 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74876221 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750212745 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.7538517 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.747662275 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.749922552 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.750235242 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.750260436 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.74729375 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.74947755 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.748897546 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.750279193 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.749308036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749185813 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.748888349 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749515353 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.750679607 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.74826039 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750056484 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751836204 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.757246531 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.752457319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.749103295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.749779142 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.75030995 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.754378867 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.748623075 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.749694485 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.748478565 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.761125751 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.758809025 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752670075 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.749639364 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.751105625 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.751944755 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.74970581 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.7529055 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747869648 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750701405 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.750159619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.748709435 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.748007188 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750295178 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.749956892 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749267259 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.750164977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.753960395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.749792724 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.747952753 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.749393926 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.750990519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.750644198 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.748742056 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.7505348 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.751607538 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751274231 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.749576045 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.748573903 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755096045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748683891 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.750474782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.749455098 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.749723688 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.749165679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.750681571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.750560399 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.753212098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.759179112 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.753618291 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.759728819 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.751746629 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758137815 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.750502151 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.754551066 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.759568041 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.747808772 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.748290456 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.749123194 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.749954431 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.757813994 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.74902463 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.750861894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.754896991 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749598245 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.750088437 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.753065138 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.749721135 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.751248151 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.749542179 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754971503 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.752373165 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.752356874 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750239353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.746226304 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.749231895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.751017924 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.750282214 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750620979 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.749764282 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.74942905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.747408085 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.74872599 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.751449975 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.748545282 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.748741338 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.746366114 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.748554447 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.754173248 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.749970107 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752302708 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.749129934 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.753071738 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748220346 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754845357 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.747747543 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.746959386 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.747718655 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.747997797 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.74662214 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.748327243 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.747056593 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.747117987 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.746171449 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.750518846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.746815324 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.747832819 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.743705001 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.745511259 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.743277968 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754093117 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768595887 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.746465252 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749044314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.741897921 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.745854675 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.750365751 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.746208515 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.742965409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.746727068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754462157 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753605629 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.744009131 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.746653398 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744465796 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74588709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.745208593 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.746135965 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.746358741 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.744714798 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.745385565 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.745286824 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746673152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.745566344 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.746106154 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74581302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.745819592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.753188381 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.745491503 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.745616956 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.746761022 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.746000016 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.744230617 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.744267316 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.745896709 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745551025 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746327475 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.745609718 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751291545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.75182921 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.746087815 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.744136376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.746945365 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.74426547 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.74569492 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744865058 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.744916411 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.74714821 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.745424048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.745623598 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.744721144 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.743099354 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74537782 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.745860677 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744817855 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746940955 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.751455694 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745799186 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.743071481 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.746344574 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745525986 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.743235962 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.744530485 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.749819827 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748490273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.753231042 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.75223251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.749424437 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.7452009 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747946177 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.753652158 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.742947639 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.744064925 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.745275512 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.745371977 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.74521928 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.748448871 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74565619 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.749707826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.74425669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.744078137 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750788341 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.747180848 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746215082 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.744823683 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.747080968 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.743392014 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.74365824 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.746477341 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.741677585 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749101079 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.744938865 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746006342 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745953667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.742100714 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.745338241 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748199336 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744627238 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.74457241 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.743391561 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.744371183 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745398835 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.744073392 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.742726734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.743640385 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.745003612 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.745958836 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.749161678 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.74196488 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745841546 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.745888287 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743466501 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745461105 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745065355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.74277945 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.742429644 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.745136293 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745190425 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.743779174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.744854266 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7434063 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.744248231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.747064047 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.744915631 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745469646 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.752331316 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.751605551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.741688651 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.744628734 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.74392657 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.745778051 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745115413 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.744261221 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74471525 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744955387 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.745102215 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744673457 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.744422711 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.74603766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759546108 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.744232164 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744481019 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.743809936 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747510888 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.74508513 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.744314923 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.745734133 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.744711369 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746050354 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.750801429 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.746746238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748618901 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743369938 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.744657226 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747164277 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.747321181 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.751423072 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.746542346 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743915139 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.745090977 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.747347261 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.756188966 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745491046 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751809182 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76826022 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.743365665 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.744841306 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.744969508 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743259693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.745465357 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.744592646 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.744397016 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.74465856 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745026624 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.745428853 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744120903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748535361 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.744298875 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.744349746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.74629646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.74345068 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.744043151 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.741144992 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.745375588 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.745128021 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.746473063 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.745189841 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.745073594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.744042506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755715156 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.751988901 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.749605297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.744619468 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.741903066 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.747028028 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.747081217 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753291438 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.749977509 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.745867913 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.745092268 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.744661249 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744238999 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744258338 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.743651439 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.742715312 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743114627 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.742752457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.753857498 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751935431 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.746963546 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.744745534 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744916057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745323918 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744905441 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745198303 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745909838 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.745451851 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.74409325 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748196848 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74571321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.745762877 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.747797925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.751648234 seconds)
  done (took 1045.552701323 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742594516 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744025612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743929652 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743349777 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74317581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742346528 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742805073 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744190772 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743597884 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743753103 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.744653627 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743722067 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743809132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744042126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743555804 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74362135 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743460108 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744083439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744381382 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74489897 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.743935202 seconds)
  done (took 38.297948037 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.747768357 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.744278832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.744429431 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.74733023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745665174 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745607122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744831418 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747253221 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748812384 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744193608 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747219719 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747654283 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.745454172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.74513151 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745825063 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748352831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747518763 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.745385305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.747906167 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745881125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747518428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.746486978 seconds)
  done (took 40.101982082 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748389132 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.74796004 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.746339208 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.745817095 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.748994899 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.745127783 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.749153794 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.749500145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.748113 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.748413571 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.746726279 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.748258707 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.752461283 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.752720186 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.749764859 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.74844473 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.924470361 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.748701527 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.749612376 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.748667774 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.746391348 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.752134925 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.746128172 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.745097923 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.746651607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.749489439 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.748931795 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749147044 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.749706794 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.749461288 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.752845453 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.749986706 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.74805808 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.748975618 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.74730041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.74906535 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.752912504 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.750236844 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.747206799 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.749306297 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.757386243 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.76580698 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750240695 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.755579839 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.750333206 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.749682979 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.751698022 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.756821412 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.747452145 seconds)
  done (took 87.595443284 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750626524 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.75030113 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.74896224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.750893836 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.751085523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.751097996 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.751270994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.750221906 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.748771291 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.748791258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.750289337 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.749002242 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.748796857 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.751874412 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751978961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.74740032 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749119471 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748199365 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.748543956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748817123 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.74915957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.750487205 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.752325609 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.749139665 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75174829 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748683467 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.7485655 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.750892902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.749948714 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.749159049 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.751611203 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.751338178 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.751815377 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.750146959 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.748984232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.752121478 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.750762849 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.749821836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.752394375 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.74949545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.7527532 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.752025192 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.752420994 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.752652794 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750180035 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.750804483 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.750432563 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.751444049 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.751627068 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.752720037 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.753603487 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.75081587 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.752551767 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.749753459 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.753414334 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.753964086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.750074867 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.751149406 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.752753046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.750184098 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.751188066 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75408481 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.751914839 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.753603528 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.753291652 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.751892919 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.751968123 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753641407 seconds)
  done (took 120.749011894 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754214883 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.754174734 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753580415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753514836 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75399189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.754548954 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753736468 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.753649653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.754942825 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753876486 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.754543362 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.7545909 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.753905857 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754340839 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.753517311 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754678026 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754268874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755714659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755153022 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755354273 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.754945858 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.755748785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755481913 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.754866147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755407538 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754958056 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75539562 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.7561237 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755247964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755547097 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755394919 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.755620035 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.754859274 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755244975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756356949 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.755187389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755221308 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755726463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.75649051 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.755458285 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756361693 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756011219 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75709079 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.756682421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755849146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756183187 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756729866 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.757711151 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.756694908 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.757003825 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.756040729 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756267023 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756560161 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.756400795 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.756626897 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.757373113 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756750591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756888988 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756415217 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757745416 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756196128 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.756745952 seconds)
  done (took 110.531459837 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755930398 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755510395 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.754003813 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755153647 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.756923603 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.753688768 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756591394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.756619682 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.756239122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.756475695 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757158641 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754229424 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755040079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756987009 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754928431 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755211865 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75460523 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754645853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758217229 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755231921 seconds)
  done (took 36.804252667 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.754246961 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.757739206 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.754950879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.755087951 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.758351044 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.755734856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.757903968 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758377421 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755064387 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758016436 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.758534728 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.757972076 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757271288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.756011716 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.758688121 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75779973 seconds)
  done (took 29.803523473 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.75740453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.758992523 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.758851444 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757788156 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.756306149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.756652985 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.758945363 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.756889928 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.756926122 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.759712919 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.759296858 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.758840806 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.759233223 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.758006026 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.756423593 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.760006042 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.75635022 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.756538281 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760252611 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.760128416 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758112534 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.756254026 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.760214984 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.759906035 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.757709315 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.75698545 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.758016027 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.757334351 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.758064302 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.759804406 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.758108688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.757833085 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.757166155 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.757522354 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.760336276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.757141582 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.760248689 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760235256 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.760516232 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.760981053 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.760963885 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.758572552 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.760514419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.760817641 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.758248205 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.76142481 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.758756514 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.758721787 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.75725929 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.758792707 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.761952827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.761128287 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.762276183 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.762181373 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.76104666 seconds)
  done (took 98.432056155 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761057836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761996528 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758950955 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761949811 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761616909 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.759469301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762790793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.760117083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75945758 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.761385071 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761109893 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.763221451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760242069 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761191796 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760358568 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761938221 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.759333173 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.759835638 seconds)
  done (took 33.39096892 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761135271 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760288064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.761393158 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759487355 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.759888921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763321852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759956361 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.762881312 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762129001 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761168241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760304886 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.762223136 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762340713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.762493701 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760749783 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759756506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.763348051 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76248434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760166758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760737237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762940325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763360998 seconds)
  done (took 40.449362016 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.760959479 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.760649073 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.776225864 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.777774076 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.781251091 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.78767702 seconds)
  done (took 12.340940771 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761567904 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76451007 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.761131405 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764441843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764095103 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759968687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761056073 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761355487 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765180425 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762150648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761973116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764415307 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765551015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761500066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764717294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76459281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762162891 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762799068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763158218 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764896066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762253466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765279409 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761918206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761853284 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762968223 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761668147 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765392851 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763178497 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761880024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76604831 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764651936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762523088 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764684676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763189483 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766631303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765090648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763199778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766421061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766785403 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763168163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765199089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765567856 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766208192 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762369083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765409332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762286846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76298308 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762578139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763561451 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766451818 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765482253 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763434405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766789947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765786898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766567803 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767074654 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764502234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764617796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76570072 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764319045 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764022569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766104432 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763922586 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764249274 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766921586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764159003 seconds)
  done (took 118.125367923 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76346856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764193503 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764568734 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765821186 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764635983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765863777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764000694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765775911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765310375 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764737199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768324308 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765093321 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765194375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76553619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764560809 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765302603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766279552 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76503561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764340507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768674003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766131969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764846004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765949078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765674234 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766025873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767656009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766493712 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766921974 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766082855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766491408 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764962354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765418058 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766675125 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765904932 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765377929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765882443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765980093 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765898442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766165713 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768360587 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767091982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768316897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766106546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766115407 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766759867 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766195082 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765797065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766184678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766370956 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766889754 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766770444 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766897509 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766776127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76707273 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766141946 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766541207 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766765978 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766484595 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766918944 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76882566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767401475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766846229 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770618521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76760606 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766637131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768157085 seconds)
  done (took 118.27446077 seconds)
done (took 2434.520838104 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.82486174 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.783465516 seconds)
  done (took 15.312105405 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.930166907 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.883239416 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.767822539 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.807736805 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.76795863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.787140024 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.782171128 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.767607705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.767745276 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.768496166 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.7680275 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.955184762 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.769274239 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.769401811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.768034542 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862461911 seconds)
  done (took 50.630653859 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.771379168 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.773292933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.784064778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.774470381 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.772813054 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.784175599 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.805605724 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.776557045 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808274559 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.784652893 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.841656846 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.785612104 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.770726311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.82194185 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.786441542 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.786821202 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.863669007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.848602513 seconds)
  done (took 34.045559133 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.849786018 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.777861193 seconds)
  done (took 10.339173052 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.7874347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.79495795 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78754454 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.796733458 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.772241192 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.81981263 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.781185999 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.792154618 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.808435437 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.808217785 seconds)
  done (took 69.656244887 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778590099 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.774255507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.77435465 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.773536933 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.765809906 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.769950445 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.77159366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.7689205 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.451483869 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.80891488 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.779193684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.778529739 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.772275487 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.775063574 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.772298723 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.794958096 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.893324496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.771997311 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.771257241 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.777622445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.773277871 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.848628581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.787263472 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.774565421 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.803476689 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.456555183 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.781205315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.779821543 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.882710572 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.771936088 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.773324154 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.772687565 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.775250871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.166725951 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.058437607 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.773063273 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.782606214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.780987284 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.77253407 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.913327815 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.774187888 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.779880211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.751148392 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.039166113 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.862086957 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.816290531 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.098334668 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.77751832 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.776548952 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.805128169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.777400316 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.777311823 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.787110773 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.288262946 seconds)
  done (took 127.373717578 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.76922921 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.077492855 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922788585 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.771394359 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043556878 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975829097 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.770200354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.817530623 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.770079346 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972438806 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.993014329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880131811 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770384321 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770709109 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.769604261 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767778849 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.93071 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.836197943 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771428858 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.768397059 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798937482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976909541 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.898921732 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.772342355 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.793001891 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.980243413 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.89171452 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.877139607 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.300997416 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.767932925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835589393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.770975258 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.769904584 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767536652 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926197736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.86657552 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86005471 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.771257274 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.768946731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.7696462 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.440060883 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96641387 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870679684 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.914452928 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02163572 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976079945 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.416712693 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.769876461 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.41640406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933892411 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.984112585 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.978582214 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.896251391 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.773717158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.930011127 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.770011487 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.771340019 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007522495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01528593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.872750878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772606578 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.777563537 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770451644 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016713937 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.772986354 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869696772 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773967505 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.772064734 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.870417391 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.882472405 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.019277663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985195291 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.806814193 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.069597384 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.248813997 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984948629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.840283948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008424112 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.774665397 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.770052237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858612573 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.520947444 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977709858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018899955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994621558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807835288 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.397094541 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.77449342 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966314825 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959925519 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.968517985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012014181 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.928964214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.089022294 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.771963412 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.774063961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013329667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.913078068 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.775162451 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.135448886 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008705608 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.334862601 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.805755492 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068894402 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908140061 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.136717748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.399567864 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.776049233 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940609831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.816085282 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.774163257 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776059604 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.964779183 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.580815105 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774278462 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.517859444 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.83901158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776938201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978841862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775604634 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986076318 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776255962 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008003892 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.676345641 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808023158 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.944566037 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.019021271 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.564720824 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019557541 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018613317 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891733318 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067370069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.506107397 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777901276 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053640576 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774791214 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.772679702 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.942690203 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.774525438 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008975362 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.77611657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002783524 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798133065 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928942624 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.777778348 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006723043 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.809131826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825397182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.77830188 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.904344819 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777587599 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.739110879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.928566507 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775508987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.773398022 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.18651166 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.777420645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919848111 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.003447302 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801146542 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842962973 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299596357 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.774079029 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86237836 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800890342 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.209894165 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.778694412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.991514436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.717509437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.211281909 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.772519684 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010852286 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.03123936 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.777849072 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777027742 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.514997349 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.458143589 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772152047 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932197003 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.264940025 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.415447918 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979711131 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774679996 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901869675 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777416657 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.845426757 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121022889 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7759733 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.772788328 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.775175964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77579786 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.773885496 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981349487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.80270419 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.286978204 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.911031482 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995668417 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.084189535 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992724563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822979298 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774447779 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040505546 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.775313673 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.838136243 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.775320257 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798513212 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005482467 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778265 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002541454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026485985 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693110804 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824534334 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.775740735 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773362375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.773440358 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.927921381 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864918122 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.777075613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.774164058 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.886438318 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.903022259 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967503945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.367504199 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.948520012 seconds)
  done (took 878.280826872 seconds)
done (took 1187.34044754 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.775889703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777740451 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.766225563 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777967776 seconds)
  done (took 28.815604877 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.785281965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.781240775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.783577724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.780845123 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.783169075 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.781655786 seconds)
  done (took 12.410168095 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.835587124 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775966989 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778086411 seconds)
  done (took 21.104197466 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.850582774 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.18566601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.894541286 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.216758086 seconds)
  done (took 9.862753366 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.786636242 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.783981316 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.784393981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.784900667 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.784092546 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.785461827 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.783374033 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.784126959 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.785668884 seconds)
  done (took 17.778332346 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.230505517 seconds)
done (took 95.915915419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.204516259 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.893403934 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.061723659 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.797741246 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893671762 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.890482087 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.945662559 seconds)
    (8/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.851823589 seconds)
    (9/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.703238484 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916855295 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.770959213 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.837238241 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.807768078 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.808318606 seconds)
    (15/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.974305434 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.69672161 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.077256969 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.781952143 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.782422297 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.882596105 seconds)
    (21/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.869438594 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.406705988 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.913677913 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.451104963 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.011777482 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.783564385 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007747011 seconds)
    (28/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.689320727 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933527049 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.803168534 seconds)
    (31/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.281064536 seconds)
    (32/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.794973308 seconds)
    (33/309) benchmarking ("sort", Float32, false)...
    done (took 5.548369126 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.890757152 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.088040792 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.892454754 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.768255956 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.755917349 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.987662238 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.144655827 seconds)
    (41/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.91172423 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.082101794 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.895436144 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 6.784738974 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.786072582 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.839576628 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.137569319 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.18445387 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.785466225 seconds)
    (50/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.405725262 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.997052015 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955140036 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.899140166 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.043824039 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.759178218 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.899227034 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.800414546 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.156517793 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.813787942 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.783421521 seconds)
    (61/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.928466914 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.026332648 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.844940394 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.676825376 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.843875864 seconds)
    (66/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.060937311 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.185096192 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.979005328 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.087669975 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.16134935 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.295451208 seconds)
    (72/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.067315072 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.02972684 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.800896871 seconds)
    (75/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.920881469 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787674072 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.164149112 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.85143668 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.812073159 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.999431273 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.173600456 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.497831349 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.671293463 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.916092897 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.928368022 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.95358357 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.883655189 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.787780811 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.897401182 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.858457321 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.048843525 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092444721 seconds)
    (93/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.380336543 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.700755406 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.005533874 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.862208403 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.871006411 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.772972228 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929041443 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.280175739 seconds)
    (101/309) benchmarking ("sort", Int8, false)...
    done (took 4.792000778 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.033511067 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.176277598 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.046516186 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.788333232 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.008314882 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.948612593 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.789872632 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.889988626 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.751144682 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.82522638 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.070839741 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.990246428 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.069184658 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.091907159 seconds)
    (116/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.922934357 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.816651736 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.785904004 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.791360777 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.828580928 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.902494704 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.886538101 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.888227944 seconds)
    (124/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.164384637 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.788247541 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.629436953 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.432814728 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.449487992 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.235040056 seconds)
    (130/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.978343902 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.957125231 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.237336026 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.814163168 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.773661048 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.44063099 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.776342092 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.145618452 seconds)
    (138/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.289776958 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.138108145 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.008715787 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 5.610430436 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.053820746 seconds)
    (143/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.799189778 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.850302557 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.813908986 seconds)
    (146/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.704440137 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.874723111 seconds)
    (148/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.778630456 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.577581025 seconds)
    (150/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.959020926 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.880037434 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.313957563 seconds)
    (153/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.366628499 seconds)
    (154/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.143453091 seconds)
    (155/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.971638029 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872341533 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.77596963 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.269161854 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.790379799 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.382273445 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.165775795 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.017538595 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.456028293 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.818183631 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.817341262 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.776476172 seconds)
    (167/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.860676722 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.813033766 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127504712 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.734690009 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.185954809 seconds)
    (172/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.874230794 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978025254 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.304367951 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18435697 seconds)
    (176/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.283495486 seconds)
    (177/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.420476467 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.709509761 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.77886685 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.030409754 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869148858 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.80973197 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.812819571 seconds)
    (184/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.892761171 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.978758814 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134370595 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.096700692 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.862051838 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.819148533 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.632217581 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.843635981 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.87716164 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.791399861 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.441525006 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.792139734 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.457834041 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.881882074 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.068798787 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.193039555 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.854668512 seconds)
    (201/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.910199244 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.399721218 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891648909 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.107382957 seconds)
    (205/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.143364882 seconds)
    (206/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.747670814 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.984846229 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814021194 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.7930887 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.577420036 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001420853 seconds)
    (212/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.924560057 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.824064957 seconds)
    (214/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.917170014 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.757028371 seconds)
    (216/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.884162289 seconds)
    (217/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.950940593 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.819952209 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.031120087 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.82382367 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.00711317 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.903589383 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.437934088 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.845071303 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.307017758 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.988078217 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.885261485 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.780298047 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.935178718 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.874743812 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.820098603 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.065702549 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.135862616 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.722403982 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.599395745 seconds)
    (236/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403427077 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.003110154 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.795060502 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.990005052 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.023347756 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.328317286 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.865051294 seconds)
    (243/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.93318895 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.487233351 seconds)
    (245/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.130786377 seconds)
    (246/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.684893455 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.796192559 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.957373477 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.479326018 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.012375979 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.75316666 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.895297546 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.786966479 seconds)
    (254/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842579782 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.162184631 seconds)
    (256/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.205453411 seconds)
    (257/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.013869072 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.371347288 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.105837005 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.090308705 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.78560871 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.125333953 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.829377438 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.176283148 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.94256874 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.139417776 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.425633864 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.317683087 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.484651409 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.100673028 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.826773884 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.87515753 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.049893784 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.6056286 seconds)
    (275/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.296457961 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.131447826 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.905169235 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.782484281 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.907507714 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.099664491 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801779259 seconds)
    (282/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.914454613 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.89285305 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.620149013 seconds)
    (285/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.836928575 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.88124487 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.823817659 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.935878394 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.83945849 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788610995 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.553335468 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.861957082 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.084972906 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137765912 seconds)
    (295/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.952373067 seconds)
    (296/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.997051169 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.847803084 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320006965 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89316136 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.850053917 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.78445855 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.321718515 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138182555 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.824292906 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.971263482 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.061866505 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.834340312 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.38329061 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.3650136 seconds)
  done (took 993.947579121 seconds)
done (took 995.933325918 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836849124 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824830792 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.807736031 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830368866 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.922519015 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.84323787 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.821223465 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.81183263 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.857877359 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.858983163 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.80984279 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.843403829 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.811589588 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.810002778 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809038944 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82576168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.116268927 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.837548057 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.826597956 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.81948302 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.828689461 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.811319425 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.858843039 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.843386004 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.814007313 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.812225032 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.813251134 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.829758396 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.922346077 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.812860066 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.813123432 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.822762001 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.115895377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.835290517 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.803943919 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.829740473 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.821948926 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820911521 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.813432813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.843637306 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.252684804 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.818154799 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.814575068 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.811988051 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.811717941 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815103236 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813120012 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.817244532 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826895712 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825406912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.247736994 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833251593 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.815454451 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.81336049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822148454 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812270192 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.815009064 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8292412 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.834487425 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829109593 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.107640045 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.843706632 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.814748543 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.828815397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.82103164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.287019259 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.814130715 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.81654625 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25342983 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.824057177 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.286767661 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.827782074 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.813868437 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.827266711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846191618 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.118132757 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.833618525 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.81222765 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.820334149 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814410234 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.822908121 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826443913 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817589442 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813345015 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827417331 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.846958778 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.82403892 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815761592 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.823139474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.833607238 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822324482 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.825428406 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.816373629 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.80881924 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.822888089 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817037783 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.817637936 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.817485946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818490556 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824878317 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.254747525 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837087894 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810487915 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810991217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.813525188 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828069946 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.252821854 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821858239 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.835856634 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.861773857 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.815868963 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.111416297 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844440039 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830953497 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.823795402 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818602506 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.810704895 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111108044 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.277045001 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.838352506 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817587388 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.814648998 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832760543 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.817743248 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.81198408 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.122251116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.842008394 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830428099 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938403722 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.825480835 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.849037368 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.814186071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819851617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.850101779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832281328 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.847886906 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819878506 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832568943 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.833737695 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.81244411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828028373 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.827294339 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818279753 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.82159621 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.811863545 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.850985638 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830409401 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829984041 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837543374 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.937446499 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.814712529 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.11257754 seconds)
done (took 285.354933164 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.882957989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.804833854 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.912268539 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.815659408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.898956476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.898811939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.811335104 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812655153 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.812950243 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.192136598 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.812491195 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.814253591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.807833536 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.812884145 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.895741322 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.815702149 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812575912 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156094056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.815798421 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.884723543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.814157146 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812207036 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814832275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.201933589 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.808770353 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.80956317 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.886835177 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.815616938 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.167308808 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.807301701 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.812249155 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.16691041 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.905643503 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.83325577 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.825563231 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822274319 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.900159008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.820649219 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.895963739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.895495101 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916147608 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856594862 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.81187063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.806860708 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820410767 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.818020502 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.814205028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.844239318 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.810760144 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.814157694 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.156117712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.826240443 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.815203557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.814568774 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.815351399 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.847688776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.814719095 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.817722572 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.907886809 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.819045549 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.878018535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.204247293 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.193932673 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.817249806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.808440348 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.815336916 seconds)
  done (took 180.698828599 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.881332056 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.89039827 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.883992844 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820001313 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.86547222 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.889697759 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.819363663 seconds)
  done (took 14.798021122 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.822164913 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.818199553 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866450442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866060653 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.817368879 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967874724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819512049 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.828630572 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.825508048 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.870490779 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.817652663 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817915691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825184279 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.817492323 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.86664596 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.829193991 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933358172 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.818936264 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819441442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.969494696 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.816440737 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825967567 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875019043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.828693114 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819389758 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.824476817 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.411529226 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821231373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817807338 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.819815967 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817082042 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.860514491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.820537543 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814780322 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817189731 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933960477 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.819964559 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818966819 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.819935742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.81082716 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.819931734 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.821043657 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.819234086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.817973981 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.820196782 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.842610955 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819390173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.820208912 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.81988942 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82153695 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869856059 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.82077711 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.817176146 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817846161 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.875661749 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.827447683 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.821811981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.817732873 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.821368229 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818401667 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971960373 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.867590715 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820633427 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869003241 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.82164447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822755561 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.820224566 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821101859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91488664 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820988211 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868103474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820181373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.976886032 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.84410582 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822249648 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.822598458 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824919048 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.822928784 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819810855 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.826955039 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819828649 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.821720821 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.826734799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819952768 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820658328 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93370799 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928738936 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.819089133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833839997 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.826702621 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.820961835 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.873821699 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821748197 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.819897671 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876085655 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937452114 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.876929723 seconds)
  done (took 200.97009193 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.82528512 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829857307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.821868013 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.836826963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.820569724 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82114372 seconds)
  done (took 12.708209548 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823642413 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.82303668 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822986113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822483499 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.822798255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.822394228 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824031442 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823665831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.826681309 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.822856684 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82215921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.824788488 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824287026 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.824050122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.823955341 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.824483582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824573354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.82137842 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.82423123 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823960806 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.964334868 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824248539 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824282105 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.823504531 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.827551703 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.823226612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830457529 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.824248303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.823512624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.83087601 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.828216046 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.823208394 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823346294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.828494939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.829152671 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.824370643 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827855804 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.825826805 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.822203417 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.823618941 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.826056381 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824771912 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.824721894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.825853325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.824893916 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.827609045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.829530144 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.832086807 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.825354556 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.825575554 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.826712327 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.824305444 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.824257567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.826002564 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.825441892 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828941433 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.829750233 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.827196916 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.826811966 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825466716 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.826272218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.824930984 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.826465124 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.830173178 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83383435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827438855 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.825936252 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829578847 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827206954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.826267157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827628069 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.823854669 seconds)
  done (took 134.341194173 seconds)
done (took 545.277654365 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.128844248 seconds)
  done (took 8.884661198 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.909797797 seconds)
  done (took 8.770923872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.343295868 seconds)
  done (took 10.098878493 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.865122816 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.848170492 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.849631354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.822507875 seconds)
  done (took 29.152450639 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.882889847 seconds)
  done (took 8.64005413 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.83429736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.820536224 seconds)
  done (took 15.447649135 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.878432819 seconds)
  done (took 8.635686704 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.886222061 seconds)
  done (took 8.646037825 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.837879955 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.840135721 seconds)
  done (took 15.44851997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808371113 seconds)
  done (took 8.565805475 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.489429223 seconds)
  done (took 11.252680197 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.835127401 seconds)
  done (took 8.607104686 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.824185166 seconds)
  done (took 8.582085522 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.950745364 seconds)
  done (took 9.708364878 seconds)
done (took 162.196818017 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822797755 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.823616985 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.822237939 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.819116569 seconds)
  done (took 29.045522443 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.862219496 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.863279464 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.864468536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.872075364 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.865776876 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.862780578 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.854366864 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.854680022 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.873780217 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.865018926 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.864021101 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.865099717 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.861905484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.855481927 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.865090156 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.864281416 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.872819918 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.863222579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855060798 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.865462576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.8295497 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.872678545 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.865002939 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.829915288 seconds)
  done (took 46.427497723 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.025380353 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898587144 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.981385557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.879991386 seconds)
  done (took 9.544349669 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.881031891 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.882386587 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.89452124 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.93301318 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.959440883 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.892050803 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.856764816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.851858604 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.837493984 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.883638567 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.959226135 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.899369853 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.966691892 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.829698634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.016904241 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831104114 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.829807349 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.882522836 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.933523711 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.94712592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.831619655 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883151875 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.886797494 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.900197036 seconds)
  done (took 47.230277849 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.828336247 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.837803128 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.835341255 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828682079 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.829947967 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830131593 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.835252687 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.831209146 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.850407796 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.830525434 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.828466132 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830773797 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.830921169 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.830672293 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.829833056 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.842734238 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844466827 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.831432989 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833502835 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.836722376 seconds)
  done (took 38.438161486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.82198408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.677495201 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.175311202 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.079823445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.824564768 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.823729264 seconds)
  done (took 31.164470522 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.843181242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.836274116 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.829716367 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.886465726 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.968777505 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.838087288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.830520038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.840321145 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.877031428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.896227434 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.849524645 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.858909067 seconds)
  done (took 24.116984776 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.82694724 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.828520095 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.826983501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.843533095 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.84195149 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.838017931 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.838723416 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.825336875 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.843834948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.850057397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.838451204 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.843032134 seconds)
  done (took 43.814366237 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917562279 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.87046869 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.867357119 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513216019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206095021 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039417268 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354362188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174124806 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.83249564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100955348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873832908 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9326713 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084093046 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342540087 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862486154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.29322274 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127663678 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045999949 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856773115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536841803 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892449543 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026470897 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.600836949 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887823725 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040007126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.957987373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.088827498 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.827719094 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965210055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866497895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839501025 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828904078 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102031815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212398759 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935665732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839504139 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444635694 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542629898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.814704593 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.67010828 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.5760051 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960521027 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840012422 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829074159 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764023229 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.994997604 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204091425 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.83477184 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.541340627 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.8293704 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840318984 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91874215 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.833970519 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.64849735 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.745831476 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832564892 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.827728538 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834853635 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400121268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970142253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.033826121 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.80608995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.919030316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589775759 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22536958 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.981805272 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.834339141 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834718894 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766048135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.613062682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886223427 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159978303 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.851550567 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482079675 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145275484 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.944386678 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77308738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113777609 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370649945 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.805544339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061789705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832210863 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766802257 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.865705964 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766313311 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111039569 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87074618 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.608387614 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872421572 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.176132495 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.843106738 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85321676 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855245463 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056332181 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.718054751 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832933024 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.666403426 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974752715 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854969929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.166453948 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766757045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.835793491 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088207079 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.043932999 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.91341736 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.334723826 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990627834 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407380134 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.884977247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.999845309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883028693 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.105801607 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894180492 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968361302 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888033351 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.834010031 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144589485 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439256557 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.973437667 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.917331704 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959418363 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.16107981 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863952072 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897080534 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838488245 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83459725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643168585 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38683032 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.834399876 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.837171755 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922948569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881837321 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83548272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780345209 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.454769989 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.91014472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.849868374 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058190412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409829986 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148097888 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768536727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164313649 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925849856 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.057785556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499011468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.916649629 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095579684 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.918363064 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.952493076 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884646115 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853950258 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933870005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856750246 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.002109409 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129293196 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.838751428 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.840177783 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627798311 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874165894 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843962934 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.841348329 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586067572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115874501 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.86139127 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843061094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725506835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850035548 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901933997 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841468089 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846458546 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.377733079 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566985338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843998347 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.418176122 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060991273 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84694852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.591930963 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951364962 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.917941563 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117854777 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898842347 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.771102422 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.548425938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.529944994 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837305269 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771944177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837120451 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846733175 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848988243 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.034243341 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116798302 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883481736 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.558024975 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.880101663 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848790448 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.84245077 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837849615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.346897934 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991666024 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.044753243 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885779176 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980981858 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.852059005 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771935927 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841320411 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842839775 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838410042 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.837914025 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872046258 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.566251259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216616859 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10044587 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.446536675 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852209547 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.653007272 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.899596683 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.897197497 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6970362 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02089799 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.946132695 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849282735 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850024216 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.619666273 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54692911 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406778355 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158269656 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153225752 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288282924 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.062658155 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872274765 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1775079 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773367425 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397881036 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899134725 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.60643681 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783737546 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922815769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487241361 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189630167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854315588 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068925429 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230938172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.611951293 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99290971 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052729071 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87500967 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.996380656 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804894008 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.63801858 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982262173 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.571546984 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05000092 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183471211 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545854577 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974839229 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.839769785 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.531739209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93034599 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.558367759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.012769188 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.045025629 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808522192 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318489141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849175017 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068623585 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202954851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016053566 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.962902809 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778372832 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854108884 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.852775933 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.843910436 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.838249464 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.722539782 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.096684129 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853645059 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777206003 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.960359017 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143113222 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.746079154 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.849200764 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844366425 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155399415 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393179229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019269097 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.952197111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363613955 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850496285 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777891092 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77741097 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.535798822 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848084495 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.819481041 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057274462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.94629672 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755220155 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92882073 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.095407835 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098715358 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.858047793 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122864048 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12103237 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543437415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869251078 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.944930642 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.55415939 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.960847622 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845367133 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080101054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596203582 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071250247 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.902048004 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.801723598 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.844157097 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058902333 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845214284 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.78414588 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085882383 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.568342307 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.964494211 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175987101 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920651689 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.808200047 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89786716 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.935619419 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853742902 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925504649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856969675 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.856540591 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856302948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892841661 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80631396 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.977097137 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86021297 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937226852 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.993931408 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369207276 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.851424541 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131839538 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225093807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182012651 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907197705 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847469979 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855924919 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781331867 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995646527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07267797 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119024406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974948255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.958834069 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872005715 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546778253 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.072896574 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091318726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121262564 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.742684959 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364490969 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906533532 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.847844 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857644491 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.058936136 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064013427 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155515116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997394532 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942667511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214758117 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121735968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848603132 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847149841 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435454917 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.856183879 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65821764 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.892256239 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.836934857 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12918951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857990079 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235629124 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871783515 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.008452037 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.365411701 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598219147 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138046639 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841333402 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.914856406 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128655973 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248567488 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163784821 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916709896 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859580584 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.957979067 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995385659 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.736596883 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.849651007 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850039409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900924082 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.559044055 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858895308 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135534038 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161887003 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.848322105 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.767976401 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873091413 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860771504 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073897313 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125480593 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103519318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859699535 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854926667 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.665836964 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129485961 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911859355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784555095 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.853538525 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95003936 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09845906 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874295723 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.303424371 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.561196873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127917518 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.850858834 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872080046 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.018378073 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221699456 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18047205 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.390687602 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064998908 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438592462 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.443019574 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15594714 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856704708 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.031341673 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159287304 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.855617832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.942769201 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893710884 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124596398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16421655 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.867160636 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683744957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.820654245 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193693866 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413859403 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790952567 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861311166 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.913515881 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851543017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98361697 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863777513 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.751632966 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032369141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.638882831 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132010971 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.858193246 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.842984543 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582242706 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15333199 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887793116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995246433 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85999166 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.569802658 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212010216 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109438178 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.947141982 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.864214872 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.855867697 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852748399 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839883241 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049510267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.049298209 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132599112 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.971781543 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.893620072 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85705815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069688056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064949093 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.785626758 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997412527 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943736789 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897946379 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.759385483 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355605206 seconds)
  done (took 1663.723258294 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879226357 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.86263228 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.900099106 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.870201822 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873996505 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945767409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.881972169 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901060401 seconds)
  done (took 56.90403987 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.845907482 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.045519289 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.855382305 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.848193086 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.856479474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.847927554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.020273032 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859740525 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.856219958 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.857620223 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.84758907 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.847268774 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.161654186 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.874686515 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.849043451 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.836621928 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.857015972 seconds)
  done (took 73.95355805 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.890065848 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.914574013 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889034739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.868869721 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.804197958 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.860186078 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.636770623 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.865467919 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.843764271 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.070669395 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.480890496 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.861623856 seconds)
  done (took 89.77358518 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.85223996 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.848411577 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.848827365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.849119694 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.848856143 seconds)
  done (took 11.031090339 seconds)
done (took 2166.950475486 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.090284232 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063293173 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080713271 seconds)
  done (took 5.923515918 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.992770282 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.039821416 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.15981999 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.17965341 seconds)
  done (took 10.156058225 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.133592317 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.230823754 seconds)
  done (took 6.144503241 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.231029031 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.856221641 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.231784444 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.846854987 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.845979486 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.84791982 seconds)
  done (took 22.327502723 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.849107705 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.852119903 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.849482261 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.852549908 seconds)
  done (took 9.184220006 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.831436791 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.508997995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.832265034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.847606662 seconds)
  done (took 20.801531782 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.59952023 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.620601513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.593181552 seconds)
  done (took 9.595270661 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.357875864 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.752410744 seconds)
  done (took 8.892358909 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.109415359 seconds)
  done (took 3.897644619 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.987613222 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.163671014 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.37573219 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.381084344 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.472173206 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.572550042 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.168369756 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.097997847 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258198786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.289956302 seconds)
  done (took 24.555969107 seconds)
done (took 136.666071419 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.224858769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.088670508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.051119715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.182856112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.081241515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.050909016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.074433808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.168892645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.695117716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693101018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.185203046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.082571896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.018783804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.093868274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.018196842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.093830895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.071734272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.242742476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.882670148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.078235287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.071650781 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.822629562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.031037988 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.836285157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.075252046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.004031191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.401161109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.094115251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.037925701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.411041165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005160584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.233625483 seconds)
  done (took 171.893073617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.766574082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.85445744 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854015872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868061598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.193948903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.85657518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.85483176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.854744008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.932950863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.92506841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.85666195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.21087004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.85587053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85615371 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857306745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.85598306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.071222144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.824856537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.866241567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872603322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.875209652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.13129421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.879977227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.180667967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.120848858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884208131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.85796826 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885128701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.860248525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.872319835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876314954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857757672 seconds)
  done (took 207.163589204 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.857525643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858354323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862698174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856628021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.864235086 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.857741608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.868118002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857230833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417186952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411382765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864598004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.862697946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.864858716 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857802962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.867113501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.85629807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.863909423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.866150105 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.868271877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872427857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879544123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.593880027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883733851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.59223752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.873090363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873501675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.85914729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.881534149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.889443541 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.874494505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878354327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.858718822 seconds)
  done (took 220.106813311 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.062415514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.865761929 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.867335635 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.816715168 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.865797434 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.865607848 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.858823516 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.055299714 seconds)
  done (took 19.07691328 seconds)
done (took 620.039828595 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.343696132 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.180864741 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.049759507 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.891218249 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.119995601 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.927322002 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887314723 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.949626023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.622396054 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.957299485 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52565948 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.902101495 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.609699798 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.907773192 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.01504621 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.94334211 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.416503112 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.507341825 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.06453317 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.937101121 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.06775512 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.843612849 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.960201103 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.645511853 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637008883 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881505092 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091486537 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.426474463 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.895822254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.053232632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.626431198 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.316917149 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896030307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.883305101 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.939066548 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.919193804 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.261186418 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.895278622 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.012883897 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.65662872 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.936128923 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.509881903 seconds)
  done (took 102.909733588 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.858619144 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.857705117 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.85670175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.858129344 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.857908238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.857779162 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.857435078 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857105668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.857662224 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.856907362 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.856318631 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.858211595 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.8565247 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.85831043 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.857017072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.856182047 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.857930663 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.859744532 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.857295065 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.857593815 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.859420191 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.857976255 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.870296283 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.857114934 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.858611611 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.858574968 seconds)
  done (took 50.123440188 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.870636039 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.009854876 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.094857519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887547441 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.868416635 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.873321532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88723021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.875871897 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.872001371 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.871275836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.964499508 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.875891621 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.888129854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.092929866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.882640564 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.869290459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.869657243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.868260297 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.014665671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.884572994 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.887478039 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.874586175 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.886965318 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.88232893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.870928534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868256194 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871232466 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.341969406 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.876780329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.962232066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.91121748 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.891230085 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.311625186 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.101386842 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.921245936 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.878230131 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.869590786 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96835332 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.875360433 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.869329886 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.887968783 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.874666977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.093061538 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.378541193 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.883625063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.871457456 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.354349857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.976110832 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.910367249 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.881747249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096364477 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.885771482 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.872287123 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.870524589 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.906199158 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.879511073 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.868895537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237397163 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.880650971 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.888745903 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.87672336 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.870672485 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022143935 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.878380455 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.011710809 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.879287494 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.877965731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871419884 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.097843812 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886285113 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.391257241 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.883893854 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.872313895 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.96665499 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.015885329 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.380073496 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.884382472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024533349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.327505132 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.89551297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.878246338 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.333172561 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.900357825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.878225273 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.874717965 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.874239901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.872686116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.917535878 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.889215818 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.320644824 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.386628582 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250947497 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.899170083 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.887819813 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.872585358 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.241565144 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.882039142 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.873700923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.091691454 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393166267 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.885357672 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.88048277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.369062342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.887560626 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.892886785 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.880940885 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.100504478 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.887228471 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.91835303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.874891265 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.879612919 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.876722418 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.891677832 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.879719645 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.874477987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.357693854 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.985953249 seconds)
  done (took 232.29996763 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.867371341 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.867996964 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.868012762 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.884396901 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.867767862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.872761901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.866870338 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.867010768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873985506 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.867049747 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.866161606 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.866607044 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.869267353 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.868257588 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.920638449 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.875742314 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.482401105 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.868747437 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.867809882 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.88121694 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515146004 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.875025472 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.868145994 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.867764036 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.869405739 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.868898818 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86917081 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.902194901 seconds)
  done (took 167.512562878 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.876169616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.98872838 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.890359489 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.902654232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.882621866 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.874337463 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.897898205 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.890269199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.879801969 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.881456835 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.87362368 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.934658351 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.885629502 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973450092 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.905445719 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.90618165 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.978350078 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.884116457 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.875224494 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.87444947 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.906197995 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.871984591 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.935616981 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99883282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.891437672 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990899244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.879524467 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.87797103 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.873865943 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.993821976 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.889809086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935954302 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.901069065 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.894679527 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.994858139 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.988229947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.982191257 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.906812604 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.879436742 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.875750333 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.876290585 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86674769 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989725462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.891946425 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.877061592 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.986116095 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.893147042 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.878987074 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.887453105 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.877432001 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.889819707 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.894443945 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.940652817 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004254803 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.909120008 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.903356148 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.900689946 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174730186 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.889688217 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.97630368 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.872315265 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.993541575 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.895010746 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.868139125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.878607349 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.883887931 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.906368188 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.908947802 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.979912832 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.88372691 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.97633886 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.912573903 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.883848813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.877793391 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.880806268 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.994264396 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990087873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.913234458 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.913695031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.908378974 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.874290385 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.877741114 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.868632752 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.895778419 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.882459059 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.991858255 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.992258939 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.885655993 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.88127663 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.880982763 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.881953763 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.903061593 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.002002245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.911035023 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.976806518 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.944739415 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.949968621 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.892573141 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.892271123 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.88384078 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.940983276 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.89275607 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.891127756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.224127511 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95132301 seconds)
  done (took 203.332960782 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.345752872 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.935758649 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.934321343 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.166470906 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.305995392 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.735219873 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.927108437 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.928873575 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.953100827 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.088990127 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.983999664 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.947349218 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.916572344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.901389304 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.930616089 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.948108011 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.933492946 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225154173 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.044703344 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.017095474 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.905103685 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.218286217 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.247140777 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.304372263 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.962070945 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.271045473 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.610922113 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.173961467 seconds)
  done (took 61.678653277 seconds)
done (took 819.65036708 seconds)
SAVING RESULT...
DONE!
