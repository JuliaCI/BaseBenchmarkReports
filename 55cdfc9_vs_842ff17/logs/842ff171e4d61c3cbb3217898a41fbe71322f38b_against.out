cset: moving following pidspec: 14530
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.184412495 seconds)
loading group "string"... done (took 0.649116176 seconds)
loading group "linalg"... done (took 9.945963923 seconds)
loading group "parallel"... done (took 0.174186619 seconds)
loading group "find"... done (took 2.473248306 seconds)
loading group "tuple"... done (took 2.395778957 seconds)
loading group "dates"... done (took 1.457699225 seconds)
loading group "micro"... done (took 0.641937908 seconds)
loading group "io"... done (took 0.688467702 seconds)
loading group "scalar"... done (took 56.476273813 seconds)
loading group "sparse"... done (took 13.862530652 seconds)
loading group "broadcast"... done (took 1.379467444 seconds)
loading group "union"... done (took 11.308696078 seconds)
loading group "simd"... done (took 3.927931278 seconds)
loading group "random"... done (took 14.141800349 seconds)
loading group "problem"... done (took 2.20560373 seconds)
loading group "array"... done (took 24.023849613 seconds)
loading group "misc"... done (took 1.563182738 seconds)
loading group "sort"... done (took 3.809650652 seconds)
loading group "collection"... done (took 21.118030221 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.924435337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.178478666 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.243057727 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.575790814 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.31374848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.207345366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.202718834 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.187405084 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.700612991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232455512 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.194540359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408402222 seconds)
done (took 7.176942903 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.348066608 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094305086 seconds)
    (2/2) benchmarking "String"...
    done (took 0.239668814 seconds)
  done (took 1.000752052 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097616122 seconds)
    (2/2) benchmarking "String"...
    done (took 0.151039747 seconds)
  done (took 0.916656235 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.135364251 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.206482296 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.151392635 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.1508421 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.137520097 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.150263821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135807554 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.150909895 seconds)
  done (took 1.748940133 seconds)
done (took 4.815691493 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.538212127 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.923305085 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.536922718 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.219445795 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.352238136 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.365646586 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.314378267 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.333412568 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13206601 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098000983 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.256239261 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.506477426 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.466301344 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.039787259 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098970565 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152752453 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.203197118 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.863012677 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121058922 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.158153725 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541147092 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.260859978 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.159021768 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.150087975 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.228067208 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167838739 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168853005 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.144747554 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.725803496 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.174456789 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241620899 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126113197 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169518181 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205145719 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282387119 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152714739 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.731656855 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.243407279 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126412475 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.143404534 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.725631694 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.164762742 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.2551245 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14747033 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.115394387 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182940865 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142927267 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.119966818 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.15166315 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14208967 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207102753 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.482149112 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.150729401 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.240610111 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150661912 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.742488016 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140473698 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.319167632 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.170008611 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148968654 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.133810926 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.130943439 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.21094417 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138493079 seconds)
  done (took 23.029215109 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.253444504 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.254183918 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.121843215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.204589249 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.185583139 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.12364944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.146982235 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.120365871 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.171707958 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.224012608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185433248 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.259979548 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.135383543 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.136934167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.229006379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293261835 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.149433176 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.165165907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.130976714 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.154698132 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.184242914 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.138600669 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.155136455 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.137292495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.213805338 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247105596 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.164224026 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.165173552 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.143750694 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.140499174 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.185065365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209600488 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.118571498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.146402961 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.219341903 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.164814146 seconds)
  done (took 7.073470921 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.281989268 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.144204172 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.312702117 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231448611 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.169262536 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.257631148 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.240343649 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224710853 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.337293182 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.33749468 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.225360563 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171570247 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.138263074 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.137428146 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121868589 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.121621733 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888948806 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213747997 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202804498 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.233129067 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153819483 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.122152006 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.417097255 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140975689 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127497325 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154077436 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.095198972 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.265926835 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154934899 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.525423111 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124318402 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157174034 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172219089 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.236137176 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166404562 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.178557442 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153667251 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.128116221 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.252024897 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15905681 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.125658352 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.138266478 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120682907 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174405375 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.173686275 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147755689 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147617549 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177933538 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.144582427 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151296121 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.203826974 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.235313054 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.226764884 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.127615631 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320117152 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.165629162 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140833002 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.150639765 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.892514713 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.164713505 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.140209808 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.120424466 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154894366 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.137609584 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.602384088 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16374444 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.547475455 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127478875 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204737751 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153953524 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158599063 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12838168 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143832343 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149150704 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.144134194 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122305411 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.145591444 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.122644935 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148178779 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.145089666 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144077229 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.122295596 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205702905 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.139444201 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.142501813 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.164304464 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152235861 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.148150731 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.130397121 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172454597 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141177931 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.13042235 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.143477605 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.249333906 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156025592 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.147485278 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158220388 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.186281521 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.128065436 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.347612838 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.14258084 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.164162543 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143522781 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170910956 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154811664 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123921755 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144643042 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.120982364 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.14199425 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189839378 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.143597429 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.122606636 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.147923907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.135120346 seconds)
  done (took 32.912709831 seconds)
done (took 63.68293654 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.500215065 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111051687 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.131188214 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111319223 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130877937 seconds)
  done (took 1.732183218 seconds)
done (took 2.461603274 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.232260628 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.33274806 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.247832435 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.146893366 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.225061881 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214338931 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.198476916 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.214761366 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218819565 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.210530609 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.144256684 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.237394496 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.225386238 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.199534327 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.144021496 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.254954112 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.209519304 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.192020502 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.245807244 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145930309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141531294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164160493 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.146079778 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147450674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144883841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163605475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147844284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163673348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138539166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147840766 seconds)
  done (took 2.392145206 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.170771263 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146278791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.140575382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.156283466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142526792 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148079645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142235863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16080317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150444692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161818831 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139140634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.148458932 seconds)
  done (took 2.376519459 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.120109939 seconds)
done (took 9.913217706 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265623603 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.045973987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.200815755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.316102025 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.380832119 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.325284223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.693613548 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.255168325 seconds)
  done (took 16.336728134 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.158703982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.156141443 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.250732306 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.139733158 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.158913037 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.136743462 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.151985756 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.136851353 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.155869351 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135228221 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.151340557 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.134845163 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.137698559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.158251675 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.136256499 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.157802772 seconds)
  done (took 3.258453336 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.181302234 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.179781935 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141590527 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161932423 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138553154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161717492 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146012064 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.161085747 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.138361256 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.158496427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.146016434 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.159223065 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.140888956 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.15502729 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141573193 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.179422706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.138477562 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.160155237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.160647665 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.160255296 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.159558688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141400559 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.157612996 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.143906897 seconds)
  done (took 4.524198391 seconds)
done (took 24.8604197 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.199237442 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.146498224 seconds)
  done (took 1.097684229 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.211944095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.230266539 seconds)
  done (took 1.201726766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.159778217 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151462861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166897414 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.164984414 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135234574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.15296035 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16221962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.153806744 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.135255398 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.152897682 seconds)
  done (took 2.298893719 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139239461 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.155257323 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.151828968 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.224195049 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.162014651 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.139363404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.156462117 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.13894603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.156976764 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.135419438 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.156710555 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153883937 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.15574414 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155132618 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156361972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.141651084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.162664577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.138941161 seconds)
  done (took 3.540484934 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.137043527 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.138179415 seconds)
  done (took 1.039609907 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139163659 seconds)
    (2/7) benchmarking "second"...
    done (took 0.134523753 seconds)
    (3/7) benchmarking "month"...
    done (took 0.155893491 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153862067 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.137240768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.13405868 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.153346673 seconds)
  done (took 1.77114495 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.592373317 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273899053 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.402649138 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105975516 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159619497 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380574142 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.161776865 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108038195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105939463 seconds)
  done (took 3.08136812 seconds)
done (took 14.789816434 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137254189 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.33694391 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.655804878 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.175301848 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.135789938 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.212886161 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.397582103 seconds)
done (took 2.825513854 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358705293 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.213798776 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121990109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.13897287 seconds)
  done (took 1.600589404 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.127170778 seconds)
    (2/2) benchmarking "read"...
    done (took 0.14219074 seconds)
  done (took 1.042434126 seconds)
done (took 3.417507621 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.157612168 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15355051 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139756063 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155145313 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.138556978 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.157236916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139128426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152427095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.138401133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153211913 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139695826 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.155195984 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.135943679 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155459872 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136546872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.274524538 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138894681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152942947 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136694461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.155086196 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139646414 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153139276 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139169792 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156150268 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139134089 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15646168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137030283 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.154462542 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139127624 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.155843684 seconds)
  done (took 5.302855812 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.142062626 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.130548749 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.152662237 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.141891486 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150509827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.134456537 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149623204 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135271429 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.156845955 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135008991 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155386183 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13613587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.152478719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137188764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15517496 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.138879476 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.162419958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.135583019 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.152244557 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.137190469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.136532751 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.153957682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.134386276 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.154582085 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135367988 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.150122096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.135643775 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152380712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135535636 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.152763691 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138252762 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.155150641 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.13655571 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162822777 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140042211 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.151704013 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.141703636 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.151776052 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.136359712 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.132280529 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.150440958 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134527131 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.156029559 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.140300612 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.153786475 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.135689724 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152090762 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.136205512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.153727272 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138308355 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150240558 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.135922856 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.15551497 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.138142275 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.156057947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.133236896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.13532708 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.151034147 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.136147895 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.155118834 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.133583859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.152613473 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.139072021 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.155679983 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150182484 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.160412701 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.135886021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.155862505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.136610769 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.159604699 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.138594751 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.165108137 seconds)
  done (took 11.239464886 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138670222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134070381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155602842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.135450356 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154903315 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.138337664 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.15415081 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135272267 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154205308 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136419288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154848601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136691036 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153265748 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137951868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134748117 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155633082 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.135196064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15599819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.135488711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155674966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136413683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154966136 seconds)
  done (took 3.972444241 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.284629729 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.143227895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205844003 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.14846314 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.175215266 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169012175 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141701867 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.161213756 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141772882 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164542897 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.145638006 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161063069 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.15426949 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164930243 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165510351 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.148537297 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160197723 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.147981143 seconds)
  done (took 3.774163452 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136956711 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.135406473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155960438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13580345 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155379964 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136092602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155879514 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137305417 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154816768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137096972 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154875026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137601464 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.135704232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157452112 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136070317 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.158019493 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.13678291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.157181654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136468732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155373386 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.136463599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155235936 seconds)
  done (took 3.990567068 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151995091 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.156446575 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157266506 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161065138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138605319 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157930504 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.143783472 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158311946 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145837878 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.156188717 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.139762571 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15636118 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154542334 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158456706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145273452 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.15748183 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.140027713 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158107281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14018265 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.137907306 seconds)
  done (took 3.810715521 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.233573813 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176297755 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174674281 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164062727 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176888351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155067962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182653231 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.154603567 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174759168 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186544068 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.155597801 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173099977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163750225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179158561 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154508816 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183161506 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162539901 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182511272 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174105144 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155465076 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18700302 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156076679 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183251649 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.155018131 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.176762085 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178035628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155918019 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.180653742 seconds)
  done (took 5.636755467 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153067015 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167867785 seconds)
  done (took 1.122437042 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140699846 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139848239 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.159108187 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139680799 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160243863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139406866 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.161444901 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.139963807 seconds)
  done (took 1.981706869 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.255004088 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.261463108 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143872553 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.170954214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.258549074 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.238858601 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176669563 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.165748142 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.140819056 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.154444443 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.251456938 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.130897083 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.160155679 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.135588367 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159837296 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145094592 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.161822643 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148739182 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.167032728 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140731082 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.166149173 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144466661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161894816 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.15037332 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.164090556 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.14212975 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.16304954 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.1502689 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.156463354 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.141608612 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.158334286 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.139999102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.164336222 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.143362739 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.163226754 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.260194953 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167227116 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1378007 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.160628079 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144947202 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.184306575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.14126827 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.161234387 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.139477281 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.162373375 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.146503686 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.164285823 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.140085962 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.13245243 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.154956516 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140283077 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154586451 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139499926 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16099717 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.139999583 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166980699 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.140955231 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.158192817 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136750011 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.157710858 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.13805192 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.156739225 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142265174 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.164187453 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141677031 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.162961228 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.159729143 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.141669914 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140453318 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.161902697 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138860284 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.175876876 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.162447249 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.145916765 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.165788446 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.14323023 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138065303 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166925986 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138870994 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.161105908 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.143154677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.18305876 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.161771055 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.137315195 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.155356247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.149541577 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.141643682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.165173589 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.132699172 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169188294 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.142141003 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.161883847 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133662808 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.15882483 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.135555453 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163936244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13266142 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161688762 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.140047279 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.165307465 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145923932 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158449679 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.141949457 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167166777 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.147037334 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.159794987 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.212961146 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138975429 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.157535008 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142157047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166689536 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136572402 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.160021794 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.140910372 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137813077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.156316048 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.144196276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.161748449 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.141712442 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.166470025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143331216 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.163806771 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.14317184 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.17048984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.137066048 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.165023542 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149314884 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.163677529 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.142236142 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.161841051 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.142265267 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.162132193 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.14603583 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.159043852 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.145172178 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159131064 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.141322325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.163325854 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.145314961 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.161558139 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.136875937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.160312451 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.141766557 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160330425 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.143516743 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.162316551 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.137552354 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.154180948 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.14159924 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.157800639 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.142256705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170696933 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.137764685 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.163681459 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.138495888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.170918233 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.13882502 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.167262437 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.144259946 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.166764971 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147030485 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.153983533 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140540305 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.163714083 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.143847063 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.158561325 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.143453011 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.162260221 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.149070781 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.155310929 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.146440231 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.154891621 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.138942658 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.166939456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.144078881 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.164537848 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.138822827 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.194547409 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154477847 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.166801787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.142106049 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.161228413 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145874244 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.160575321 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.147540051 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167141301 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.147539811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.159633176 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141967387 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167201113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.139210152 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.142630892 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.161940263 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142690157 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.156231976 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.142599249 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.156046191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.145875118 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.165480957 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.146980591 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.168127526 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144185487 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162389244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150773811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.158879833 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.145619645 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.155675198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.14633521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.17243432 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.149040207 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167886291 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142940669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.160904844 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.14358955 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172045672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144919672 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.162674141 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.143584643 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.156533086 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.136537198 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.167876974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.146827897 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.15931952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.142995017 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163628353 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145347546 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.160037247 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.137027642 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.165742613 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147929679 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.157829804 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142936514 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.159212419 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.141554506 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170158273 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.135877674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.158365607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.145736781 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.16717911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.142874558 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.162949309 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.14666279 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.167486758 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.146363793 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.16313036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141703821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169477414 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.142738123 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.160919666 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.140483818 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.143996267 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156496387 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.143320029 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.163056203 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139863155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.160040127 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145796852 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170184728 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147388535 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161370706 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.146483867 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.169491663 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.147273215 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16053752 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148171699 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159052524 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136556646 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.160907351 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135681228 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.165819526 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139132285 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.168734354 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142203719 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163309345 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146589754 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.165813068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.140250271 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.169729681 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153761707 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.15843922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136318054 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161983097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14220255 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.161061219 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.139916817 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.165667118 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144104589 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.167698045 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145259398 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.160751927 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.142638974 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.172141845 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.139714082 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.169297983 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.149797749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.170494561 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.13834412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.167797347 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.14041004 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168121398 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.137201214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.163193144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142589332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163443705 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.140458986 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.163225509 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139511375 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.157490434 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.140163414 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.168735038 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.142340956 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.168001401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.14359777 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.161142895 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140899431 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.160068234 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.149442743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.162410051 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.14983226 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.163841007 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.137618398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.156885097 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.148604707 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162642819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.149603139 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.158060163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.148219059 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148503954 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.167320868 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.143555404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.173376954 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15099944 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.169299395 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148496984 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157434975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140704975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169578768 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.144563039 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.167712057 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.145949298 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.158876291 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146541216 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171600779 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.144568362 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.163279455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.137001964 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.167017743 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.148867609 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.168687185 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.146302054 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.166771033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14505365 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159888766 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147371666 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.169188606 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.143786264 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.170866511 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14455415 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.168355773 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.141149938 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.169954174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.145847721 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.158232181 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.138490082 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.162625092 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.150571906 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.137122538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.170140048 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.147512089 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.162429263 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.142435422 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.168824451 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.140464249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169495147 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148310272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.164470576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152841619 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.167030111 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.142476607 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.169850089 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.149098872 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.158940595 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.142401085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.164233619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150644617 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.163063469 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.148663153 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166200597 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148540485 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.168831583 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.149218316 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.170397593 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.150726771 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.159692254 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.151860232 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168634878 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.147214505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.162574691 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143829443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.161266967 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.1447176 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.172022588 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.142956461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17451102 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.150203559 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.164843988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.144883531 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.171179879 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.145402935 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.172807886 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.142156565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168707778 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.140391411 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.16828471 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.144830455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.173369374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.143608273 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.160470349 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151335966 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.170535048 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150328272 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.168021628 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.153229949 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.160451877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.13977075 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.14743732 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164693639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154281261 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.171428102 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.144181322 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.166566059 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.148722765 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.169136459 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152104176 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.162572941 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.143921661 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.168909641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147278621 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.166270657 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.140696878 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.171862701 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.144935806 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170395714 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.145052308 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.163220918 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.145556892 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.17380337 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143849123 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.164822834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.143646016 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174233963 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144595768 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.165197801 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139826763 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172838133 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.148165837 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.173968446 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.143374507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.16826753 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.143788128 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.169406463 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.152013672 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.166704396 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145769472 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.166068549 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151629143 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17291252 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.138503629 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.164619662 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15641481 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173302139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147925713 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.170239278 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.145967369 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174872635 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153268822 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.169856758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.141366103 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.163918083 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.145456897 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.162604255 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.149129853 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173266586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.146104057 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.165828723 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15145657 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.175729841 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.151022638 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.170125509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.143498706 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.153484164 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.166101043 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.149560969 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163687546 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140706922 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172475676 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152199189 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168238775 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.146655541 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.171668634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149507426 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.164676711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.144656376 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.172294286 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150817405 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.173520205 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146599414 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.166630511 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.150488637 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.179228481 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.148955466 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.168323294 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155322319 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.17589426 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147880037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.169041269 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151037337 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.17639972 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149188891 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.17489764 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.144859928 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.167426442 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153876263 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.175993452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156170348 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168188426 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.141308537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.173878873 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.144962737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.162119509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.151119087 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176798788 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155596998 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.168426198 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.145030121 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177547652 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.153407832 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169356473 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.14617328 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.165709547 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.152622454 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166663174 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.15187568 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.166553572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.155748459 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.176826893 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.153953297 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.177981868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.143400692 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176423751 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.15217975 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.177422464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.150686482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.163520344 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.142798439 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.171878576 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.156085944 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.154200352 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.174776746 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.150932185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.174618899 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.149172954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170937176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.145899223 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.176994149 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.153300015 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.171908915 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.14966528 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.169328338 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149007938 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.173011974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.154043744 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.177431711 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.150655121 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.181165146 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154883045 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.169927967 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.145542676 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172163991 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.151030696 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.170663796 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153447471 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.167248472 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.143102489 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.175586085 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.155770849 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.16915821 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.156875878 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.179191114 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.14750606 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.173501006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156586436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.175110332 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.151415942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.171421434 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.152298329 seconds)
  done (took 94.089416577 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.199044102 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17996153 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150793422 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171875208 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168961063 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.175861518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150581969 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.174583727 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.152704878 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183378345 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151423523 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171769233 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16545422 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195075249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189608918 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162247961 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172322022 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152841015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172106628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153727703 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.188489105 seconds)
  done (took 4.483650197 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.152257502 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.150341353 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174111486 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.150055628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.172353615 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.150245267 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.173005892 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151865939 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17180332 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150953628 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.172252661 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152417724 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.150448076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.17337876 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150339705 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.174878703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150596142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173004691 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151198525 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.17325606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.151728047 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173577958 seconds)
  done (took 4.442471921 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.175238659 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.154765553 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.172440233 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152615543 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.177483537 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.151560341 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.178822652 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.151634139 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.184455907 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.147429765 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.165834841 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.147907343 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.172904312 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.152948487 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.168701448 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151621665 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.182309595 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154464078 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178325296 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.151908729 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.164579443 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.152758681 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.151973962 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.167307971 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.156243745 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.179774712 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.15606857 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.17812609 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.142323911 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.17769275 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.152188831 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.168761231 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.14351555 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.166766488 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.143674407 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.177139928 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156130101 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.174034074 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.153786718 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142644335 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.177004082 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.156248316 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.16600196 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.152726421 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.17570545 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.145978484 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178419866 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.152345201 seconds)
  done (took 8.685162459 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.182410389 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.214466944 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.155528727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206907823 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.191158393 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163220749 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.180267586 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.183311054 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.17861369 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.156212156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.192385048 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.166434827 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.183068175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.16174392 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.180370198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155882612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181399699 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.155074381 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.184330285 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177583445 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162653371 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.180624851 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.167774861 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.188355508 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.159262744 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178353149 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.156984188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.182822221 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.165594522 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.185118959 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.160749268 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183501201 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.187297215 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159933275 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.177910658 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159029688 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.191126103 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.158243758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.179753205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.155517715 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.178674717 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160522499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.180814693 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.169084841 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181691723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.158607575 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180817169 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.154522852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.190715638 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.157699148 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.186297541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.18952134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161074349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.18015159 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.161845662 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.189728934 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.157751604 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.17913423 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159415658 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.188843731 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.156231194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18135259 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.16815919 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181150553 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162329288 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.190774015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.158315514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.18280553 seconds)
  done (took 12.83590421 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189915555 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.184836052 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171408357 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193977957 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.160719308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.184661179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160846898 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.18369718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.161025733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.431827194 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183568289 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297057476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.164226598 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190093876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.162064793 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.185439207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161460161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184224657 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161146371 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185177934 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16017519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.192453443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159695293 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191955449 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195693292 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158425667 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182405291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.161921085 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.192305788 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159660065 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195366298 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159848094 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.183673778 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.191703242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.172291992 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.183854346 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156291927 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182492308 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.161037477 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.184037194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157930752 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.193052924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160722336 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.181177376 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161397437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.18386991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.190704341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.173507118 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188615694 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.167602454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.185113004 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167374769 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184672487 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.159553026 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.19171456 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.199045847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16927894 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.191319337 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161332255 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192407599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190052432 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.178747715 seconds)
  done (took 12.274797848 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.15823094 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15572531 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179141378 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155965702 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.179402972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.156070857 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.178526071 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.157288515 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179487883 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157002801 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178122435 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15746746 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177850149 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.157268046 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.177724148 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157614549 seconds)
  done (took 3.59450536 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.175444004 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.196154731 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.261229034 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160801184 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180764049 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.165438168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.179650898 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.160565622 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.155167726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.190060117 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.161192951 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.184859228 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.196735116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.159598427 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180240911 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.160877646 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.178052167 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.163236092 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.178940216 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.239932968 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186429218 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.158986265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182527795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.159675649 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.183122447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.162325548 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.188962461 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156403919 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.182569716 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157936159 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.181976505 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162314778 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.181114002 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.160880013 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.18154649 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.15833659 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.180814895 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.158011619 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.183114373 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.157272875 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.18352752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.158608076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.18155224 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159914392 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.179478609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.159459868 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.18038216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.163635579 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.182772229 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.159680382 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.181552779 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.163536553 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184975861 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.166083358 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.187802058 seconds)
  done (took 10.580876783 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.170570937 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181864798 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.17184384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179364623 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160703461 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.183770299 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.16159702 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.161171078 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.185417813 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.1563737 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.184547868 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159703441 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.18350543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159373163 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.183917896 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15875247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.18083677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158903212 seconds)
  done (took 4.023922121 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158000165 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.15533732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.181010953 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15618919 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181596089 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.157058704 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.180271501 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157349343 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179879583 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157004252 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179263562 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.15898821 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156119223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.181889141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.156060417 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180518278 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.156865404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.181937742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15732249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.180078708 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157536095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.180469361 seconds)
  done (took 4.636471291 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.171624035 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.289069496 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.189461404 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.299180467 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.155791964 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.178552861 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.1644794 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.181851025 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.193239078 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.156606982 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.177676567 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.15678628 seconds)
  done (took 3.25903349 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187132059 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.21888796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160045764 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185746181 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168718968 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187035705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164438252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187852315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171506896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199905172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18582585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174153046 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195628448 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172436197 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195328569 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168834653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187712837 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164205826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183765589 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20355954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164615051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195107932 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164127043 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186416419 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164348322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196886313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171583464 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198120992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186477987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173101866 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193430941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165167848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197900683 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174404485 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.185737053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195235993 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166433365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203583404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169722347 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196797693 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160622779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193950579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171744046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193345873 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196558711 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166371753 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193128648 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164937485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187994786 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186616312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193542413 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195679779 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170730911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195532712 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173927955 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.212539839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199295662 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173978334 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192567202 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174857124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197385668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193262272 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173994946 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200420247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170616257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197083785 seconds)
  done (took 13.094632956 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20055524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.185922268 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166239263 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200943801 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173277461 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189395918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165096654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189125147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164490601 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187916589 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.233393673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166381346 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199479768 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173488023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189022969 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164589442 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189767278 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196432767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163938284 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20993224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165774914 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198849229 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174092047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197293747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200870782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171145929 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188906125 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165354684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189618683 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166265535 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195906439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16549618 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19808996 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.163420421 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196902315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190514715 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166884155 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19434549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167225572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194104205 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17343757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205899544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165130928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190562727 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200539995 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166306004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189233196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163705881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189941683 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163300908 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204077674 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178943393 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201516263 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198301848 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16721268 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189219817 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168635444 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19006969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16651367 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196035527 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173520978 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191747767 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.209704065 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168751597 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189947441 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174001927 seconds)
  done (took 13.098856947 seconds)
done (took 230.703906769 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.326949382 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.357854787 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.151145936 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.517760537 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152115904 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.858137122 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.855591896 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.260943465 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.153415555 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.15101406 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177041281 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.171624815 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.577257129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.174901681 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.153804878 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192364234 seconds)
  done (took 32.189626489 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.358228168 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.407654078 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.193003408 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.157049177 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.158004813 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.18411179 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.156541783 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.18411443 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.156811842 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.188133813 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.179301881 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.155766688 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185769019 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.156230889 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.179368932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.158998024 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.186353454 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.159478127 seconds)
  done (took 4.475772691 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.17823836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.24542949 seconds)
  done (took 1.402865098 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.18829815 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.280372724 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.383309421 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.231566577 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179136934 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200573753 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.231042964 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171463149 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273006536 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.168903016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.195893972 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.179086777 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.184027509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186435513 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175663697 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.179018888 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187878987 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198273183 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.172129729 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.18386669 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.182432707 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.183043533 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164019186 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.19759977 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263715417 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.171211305 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.184904421 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158002631 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.184216587 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.171302887 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.190985638 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.173329971 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.195242641 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242672048 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.18442369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.214547144 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.188034133 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.158144784 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.198934177 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157622138 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.186796271 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.18476601 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.170458478 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.179146925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.157278954 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.18644331 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.158384541 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.181155723 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.167733783 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.185518882 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.166328209 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.190383589 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237761022 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.161746213 seconds)
  done (took 11.399805184 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00304492 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.204706939 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.18457624 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.158568018 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205878154 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.17311081 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.023914547 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1838495 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317533525 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.10034049 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.20013453 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.168160058 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.33231464 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.319258781 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.368141103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422938683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.85459937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.198619937 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190829689 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.22751702 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188929069 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17671716 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.199571884 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519439528 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.159785561 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.184542277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165054549 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.192192477 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242250166 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.15987627 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.188392282 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264596883 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.360177533 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.277530105 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159884879 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182907269 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157096912 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249645531 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.358630405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.286318223 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.253651481 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.157055089 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.182510462 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164169538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.19895739 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156712802 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245137591 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.257482584 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.256712493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.187754095 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.168252187 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.191282676 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.163054692 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.244228822 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.182460472 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.430174009 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.456242165 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159128262 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191294069 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.172560241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.36002602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.162267245 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.303109526 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.206056366 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280999881 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.183481585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.880641398 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.252868701 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158946984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.190098907 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.164055536 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191271957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.186495122 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.221962793 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496948801 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190664033 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.165025859 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183535159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.295266316 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.16084524 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.184681471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.244724539 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.161661603 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.191637815 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16798596 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190843446 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257983901 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.339497257 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.166955151 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.192184199 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.165751906 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194359061 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.160633979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295664809 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.323568706 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.243235397 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294566695 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163690539 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247165865 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.252293824 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.189381013 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.256847417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167083721 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196786334 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164452334 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.317553621 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.198797495 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188202708 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165660517 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.192154444 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.22792907 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163958218 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.210963477 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.255280757 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.56058315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.252910176 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.157059953 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.189084769 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167546831 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.244738616 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.192287004 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331987814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19007365 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.228783761 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.191256869 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.157705966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.190982058 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.250806265 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192954028 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16721869 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189376605 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170760926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345313819 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289272266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195966036 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.316604696 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.26159009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.190496122 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.259958394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16782926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253417512 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194692654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164757044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185211483 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882050396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171793807 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191581072 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165753492 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.270684489 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188102737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163974435 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184539721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158997098 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869186614 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191095379 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.159294683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.189292879 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166110705 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192702459 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165087372 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.193131605 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24850364 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.315874406 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.196134712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.190063829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.163574238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.24574588 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.163156321 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.187366111 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161077982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.187193637 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167431432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192791888 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.164044911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.256173437 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.245795947 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.324905984 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.634693277 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.160995397 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187638375 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309928487 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187812126 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.39473338 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19281965 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.30554891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.251382098 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182535147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.430698452 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253530772 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.270353118 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.165262471 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.258193942 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.182495041 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168555397 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.247488319 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.185878792 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.168951753 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245271212 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.194984077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169971941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.329885691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187467085 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314778925 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.158923571 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.256573471 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.18975935 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167707368 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.423476238 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.161076552 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199666246 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.248766062 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167423392 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.188233305 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.041842395 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.162439392 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.197639379 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.167399015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.331589393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.250301579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.167086972 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.194075928 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169794428 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.248708427 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.294671828 seconds)
  done (took 62.229950212 seconds)
done (took 112.666959751 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322721584 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256735308 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.404375946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237545159 seconds)
  done (took 2.296157595 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.342311419 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.203228986 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.304108976 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184117378 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.307302699 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159720817 seconds)
  done (took 2.526387069 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233477751 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229854433 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230027492 seconds)
  done (took 1.72572617 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271054504 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273783345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414601239 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327372405 seconds)
  done (took 2.378498003 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343336606 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.177209256 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.217496273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.291855601 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310589568 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272430798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.210954896 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213352451 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.218384803 seconds)
  done (took 3.31619991 seconds)
done (took 13.271679898 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.452121256 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.339627587 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.300536827 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.192560943 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.301825656 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.499008386 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.457930223 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.170952516 seconds)
    (9/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.233076375 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.170808404 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.321097508 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.199450278 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.227978836 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.348789184 seconds)
    (15/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.208483294 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.456100965 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.19563279 seconds)
    (18/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.201434092 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.173338368 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.219087513 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.39815422 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.187349857 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.208463667 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.343296706 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.252541857 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.251402349 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.362488854 seconds)
    (28/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.228627559 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.389010726 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.328302138 seconds)
    (31/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.284747944 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.463202877 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.26939216 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.174181219 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.319725484 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.153375779 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.257432723 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.234310021 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.223644148 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.337541233 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.182885407 seconds)
    (42/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.282387514 seconds)
    (43/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.196410727 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.156660267 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.189324009 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.200032022 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.248375762 seconds)
    (48/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.212411111 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1334628 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.131681407 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.136078649 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.192395017 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.198946784 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.192676755 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.13201855 seconds)
    (56/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.129791108 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.195182466 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.136982862 seconds)
    (59/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184501687 seconds)
    (60/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.223816487 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.165416457 seconds)
    (62/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.169683555 seconds)
    (63/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.213307584 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.195555441 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.200956211 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.180978476 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.19642225 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.404184208 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.136711418 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.267833548 seconds)
    (71/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133138178 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.199984226 seconds)
    (73/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.188178009 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187748933 seconds)
    (75/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.223417421 seconds)
    (76/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.20165684 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.132356951 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.256468568 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.17055866 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.21893209 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.133426146 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.273296345 seconds)
    (83/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.133268081 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.13066673 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.192293128 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.163525143 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.13271188 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.165127366 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.133624197 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.194558006 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.19447052 seconds)
    (92/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.131619895 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.197659444 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.185490967 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.163044536 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.171823814 seconds)
    (97/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.130612602 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.203183944 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.165459994 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163938762 seconds)
    (101/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.201382374 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.189029134 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.135812471 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.162738925 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.190469795 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.173551812 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.163009935 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.204005922 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.174943468 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.216727877 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.131781693 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.19417526 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.167303364 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.227367843 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.206331045 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.13746861 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.219021563 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.166767344 seconds)
    (119/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.219109789 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.141253345 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.137348161 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.250330804 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.173704798 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.277631548 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.13804085 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.192565241 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.138993892 seconds)
    (128/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.28362462 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.140236972 seconds)
    (130/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.175292598 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.164574812 seconds)
    (132/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.175349125 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.191067665 seconds)
    (134/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.138859851 seconds)
    (135/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.132443769 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.132341328 seconds)
    (137/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.158085542 seconds)
    (138/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.176360776 seconds)
    (139/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.199659455 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.167052543 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.213619664 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.186908749 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.139805571 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.202872563 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.175358457 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.158691395 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.167788038 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.138581979 seconds)
    (149/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.15797765 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.141749843 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.191403195 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.167535827 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.167131649 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.132597548 seconds)
    (155/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.165056502 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.167190567 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.160452624 seconds)
    (158/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.132861851 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.16747712 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.159326317 seconds)
    (161/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.204888785 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132056898 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.137897244 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.167059682 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.165486096 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.132704965 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161393076 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.133516647 seconds)
    (169/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.173447543 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.202606695 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.174001827 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.215781566 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.17557189 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.200975004 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.135863959 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.193613742 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.135529573 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.173400445 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.196104833 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.139531524 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.198122193 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.140617899 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.164632918 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.214209915 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.13400706 seconds)
    (186/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.202518784 seconds)
    (187/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.133050346 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135265947 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.132810668 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.196193429 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.137861601 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.130600692 seconds)
  done (took 39.351363298 seconds)
done (took 40.38267439 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.321922238 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.158383455 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173892439 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.203931826 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.304029104 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.181224531 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219551175 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175150837 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.213922136 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173382102 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.192790252 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.18761701 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.201614399 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.313463685 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.204926296 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.168911366 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.191491974 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.186379497 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.214671487 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.192349471 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.301624758 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166436677 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.213388597 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.16473226 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.302213356 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196972672 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.173219456 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204939661 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.186312543 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.203898113 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.174745256 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192890914 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.189750214 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.217131632 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165278894 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.20231493 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163943449 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.165007515 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.176077541 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.201658744 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.187699749 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.202505151 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.175609652 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.193186298 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.176129435 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202106004 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166615542 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.204557834 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.164663018 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.202640153 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169277942 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.217633437 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.174898731 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.190520655 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.165690718 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.194059169 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.186737662 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192671731 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.190278691 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191735691 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.16833866 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191768201 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.180443386 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191770664 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.177182342 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.165371793 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204226425 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.177161023 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.203724844 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167950497 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.194380772 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175259969 seconds)
done (took 15.178398721 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173490844 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.236155545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.32260036 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.32336356 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.195096845 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.214457542 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.207877202 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.194172575 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.206464193 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.184691255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.231108445 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.19827181 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.322532231 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.21238954 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.211571233 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180620187 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.178191144 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.207733975 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.321798063 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21953026 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.19099795 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.213190571 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.192950731 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.212242241 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.171694644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.232210577 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.173961447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.209108659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.17096948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.207544232 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218272892 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.172787799 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.2010658 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189778582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213595525 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.182800804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.21128102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.180126534 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.199522273 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.173753317 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.206067204 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.187609981 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.199851152 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.184768195 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.209626447 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1861938 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.206678929 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.184564865 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.200264618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.178087127 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.199878081 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.195964263 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.213083322 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.186880545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.21215923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.18350194 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.219136181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.183959738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.204627527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182569356 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.200815701 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171449047 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.201439109 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.218607075 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.177682029 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.211255949 seconds)
  done (took 14.653624792 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191495304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.23167257 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.183190927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211687431 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176719636 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.194503813 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.165299109 seconds)
  done (took 2.461071177 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.169306531 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.33841663 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.327241926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.327883983 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.31842129 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.370932209 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191823969 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196712242 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.204101466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.209311713 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.339247468 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.426997876 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.180547153 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211199818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.334366322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.167911067 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.332594359 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.19921452 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.182932598 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.361231731 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187284567 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.231736269 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181650346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.198940068 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.335452373 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.169074415 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.413785569 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.188363785 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206008605 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.183584801 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.210986616 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.247479155 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.361269928 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.18495658 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204515724 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.32865443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.323374129 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.185713124 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.412844657 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.173369936 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.318100751 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.21537379 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.184403878 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.21424019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183598819 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.315866299 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.218774457 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.213647366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.184474334 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.343231675 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.212212671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.33723825 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180924211 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.213520844 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.181426031 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215422635 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190462115 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.21399551 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.342842553 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.218066422 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.332159207 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.332783661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.325175252 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.332190438 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.222244985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.341312025 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.313777892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.18166263 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209504211 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.184849038 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.330828895 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.214245221 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210340371 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.322466517 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18815189 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.335562588 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.334245854 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213173286 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.181265356 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.204322981 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.182030217 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.20074948 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.326033961 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.182131999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.212120805 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216861792 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185171388 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.212502337 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.176545024 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.220595647 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.184058226 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211457682 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.189172134 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.213585027 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.186621387 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.363409593 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.183094158 seconds)
  done (took 25.086890812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17386433 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169564818 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.204794034 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.170089037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.200293368 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.170265395 seconds)
  done (took 2.237742806 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208887157 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.214349859 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.193610577 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214307459 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234191248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.323863339 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.332046364 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211397267 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.233637442 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.198081234 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.325148902 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.328434283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.328838869 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.219452856 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.331853981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.188383333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.333853414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.216478339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.194639968 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.213568774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.18387482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.220301321 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.183417811 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.314841004 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.21878421 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.186079312 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.210081981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.225553785 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.195371317 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.209696696 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190252732 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.217188599 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.177388529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.213379667 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.332972315 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.177342619 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.213329049 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.188691545 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.218854836 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.185910772 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.329282966 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.217204245 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191466647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.221638448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.210979228 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.179604175 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.217490637 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.179913272 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.332659621 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.220443667 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.189055529 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.218299878 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.186837984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.221139688 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.179979396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210858939 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.189154743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.332339438 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.22433461 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.178078113 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.218688723 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.218123475 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.182869424 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.219005762 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.187399293 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218805718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.179943881 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.216418008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183979059 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.215707538 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.191332078 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.216575857 seconds)
  done (took 17.337876001 seconds)
done (took 62.876788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.624258705 seconds)
  done (took 2.772105279 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.283782415 seconds)
  done (took 2.433866933 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.765641507 seconds)
  done (took 19.947889848 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505695189 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.425973279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.116068827 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.246529678 seconds)
  done (took 3.442161152 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.169001292 seconds)
  done (took 2.332480036 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.482328049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.350422325 seconds)
  done (took 1.988557999 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.84101931 seconds)
  done (took 2.00837475 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.97937789 seconds)
  done (took 3.135774253 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36816215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287292858 seconds)
  done (took 1.821652225 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.736793593 seconds)
  done (took 1.908859629 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.353096745 seconds)
  done (took 17.529812752 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32468046 seconds)
  done (took 1.494888099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.362359222 seconds)
  done (took 1.538523825 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.83261747 seconds)
  done (took 5.012482576 seconds)
done (took 68.527088557 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.187966961 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.217734591 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.191242929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.215262815 seconds)
  done (took 1.976973452 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191791239 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.212641378 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.192132001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.212892317 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.19383087 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.213828843 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.186338771 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.216852393 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186552395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.214246214 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188180655 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.184431926 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.219101665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.184117925 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.213816732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.187790846 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.220310176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.184290859 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.21762421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.187070718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.216292058 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.18643443 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.219477405 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.188066052 seconds)
  done (took 5.993713757 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.184310533 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.176314587 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.208911004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.175810369 seconds)
  done (took 1.931421915 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199252299 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229854684 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.20055277 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224873554 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.201476033 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228099376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.185552228 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212579762 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186003823 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.225173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201629105 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.231746443 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.198675531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.22133224 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.197047132 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.211076647 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.189768896 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.229783523 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.196099861 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.227392602 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.189390945 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.224394345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.184573674 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.225451425 seconds)
  done (took 6.208289468 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263109563 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.22867066 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.213787065 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.263376575 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.243958738 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.186441812 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.242251372 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.192286638 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.22006421 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.194391597 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.215046979 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.232517789 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.221032062 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.188836287 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.218026267 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.190677416 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.226747852 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.190089538 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.25832409 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.21809211 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.192147521 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.226872667 seconds)
  done (took 6.013684404 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.191619964 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.204807861 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.178211882 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.20204152 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.191645493 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.208798329 seconds)
  done (took 2.361358901 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.176817828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.170528572 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201998128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.170577831 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.20535324 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171691144 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.200192628 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.171700631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201419963 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.17286628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.201132675 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172363943 seconds)
  done (took 3.399035261 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277661856 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220974403 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.355909518 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.478385539 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263540056 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259915641 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.384958098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231352777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.280465575 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235979138 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282909121 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231784314 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255016571 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289522645 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212875241 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.252140009 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273761381 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280064939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244377719 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316411664 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257663345 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276542648 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26411268 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24950399 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239689705 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233614402 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.219319848 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197212431 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26834289 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265349031 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28069068 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250021656 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212612059 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288699183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329352915 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280731384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.36962763 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234201728 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.235124019 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.29131843 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.334265382 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243445492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294923734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25247573 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198643899 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295075167 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250787467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.290963639 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.204222439 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244735754 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283099004 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249912514 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.271430803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2385224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403926845 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204810278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.242222439 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279174145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287419786 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306385332 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251820145 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.225469631 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269938545 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296540622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319650713 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.210907819 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.26611959 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223599143 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235619942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312106121 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285185283 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262537835 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.294369518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200024 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276012434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266138772 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224406312 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310509366 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274736732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.220136369 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221145856 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23470972 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19434692 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.291565536 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220820901 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320733835 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202039517 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.278620285 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277006148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222750951 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263203246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261196667 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231618086 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249457151 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.15964766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244465148 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258003175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227992003 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229830285 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251320593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210833575 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.226871336 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221669884 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.223906019 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269527171 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.196488833 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262993091 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242267031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.235003021 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282731667 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216796589 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.266550681 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271746683 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300456258 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201407583 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233561618 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326733313 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275100514 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.206926482 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273835036 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.302601147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.242512718 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206964972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268804266 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297018182 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212562278 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309005584 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241252932 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205152296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.229390078 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276789412 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22905575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.262565286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229268793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.237163142 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290221123 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.230979719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210119433 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286315657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235460588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194219974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239182278 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236659379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.214271504 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.254558081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.209248789 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257244948 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270713215 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238524694 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25942245 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237749052 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276270905 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202696721 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.273257769 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248016643 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.191111447 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.277163264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30327817 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201691751 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284114455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.26300559 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281211682 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246089284 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231653521 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285771584 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197693233 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.222155727 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263032064 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242517047 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265686712 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.294797665 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276404546 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.268673295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.234700046 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250455929 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271449964 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287444744 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227714329 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.242833399 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277661194 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27069133 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.191598725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224699686 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.198510607 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239777104 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201196003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238277916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28444224 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235387782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276247626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270622535 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241141713 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.295816553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.197229589 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26317219 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.280025133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209815015 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.296630091 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297961675 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282276227 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210804475 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267885665 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.222076327 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199871195 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.235999599 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231351555 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240253575 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205631747 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248292537 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.299051468 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272667117 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221936785 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292598839 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268467062 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.309032796 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221721362 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.231766441 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270211239 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272247196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.260006406 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236658358 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.23072589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.299353448 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244700166 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297371868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241064247 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286469663 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297449452 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.271271679 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202412386 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248315709 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265684038 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21119281 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264743222 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245547155 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203322595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252928834 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.207650214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243733965 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29266375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247343615 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24754846 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.25870863 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273612668 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196240971 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244939107 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280648563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216221874 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.198163461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23700428 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296715725 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255117311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256708938 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27274154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202481764 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.422004746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284441133 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243945586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240120081 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241433983 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246091566 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.263179355 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263698441 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255494867 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245632646 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316624194 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275757061 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.210994614 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233862046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219160205 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253231417 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.232391954 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.224056493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.270338077 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.245249819 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292143671 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208997017 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276462288 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283160508 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.217584017 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.253149175 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209050457 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.335516628 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275660024 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27718775 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.271904117 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.23474049 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28749722 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227788884 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199341395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.236277279 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255934581 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232621851 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287171317 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.266899514 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281914991 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280370872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234826062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245157452 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.199863915 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274182165 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252906354 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283776824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206350229 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.242205437 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291113295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.188736788 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234850473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232326434 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397733399 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.25262291 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273529414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.168367714 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.389965466 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2004847 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236273487 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26117627 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242128595 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.236536343 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.260211618 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278281911 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245532989 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230328423 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239439256 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27947515 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284079809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270886974 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248610139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.250589891 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266577586 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228017818 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27642218 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251357099 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.219110223 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263863109 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304035003 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.28051749 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.204182091 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277308698 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27552456 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244578291 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279364202 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244670201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286198512 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201671002 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27321298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210157078 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229140847 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265283479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.2666022 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202244179 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278415066 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278318546 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20422601 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231973254 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219083013 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274464104 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246493285 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.203210376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293560163 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.234021632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256997131 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317796802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23382851 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271727629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215948448 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23688396 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211421647 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250153186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202950831 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.281400285 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282494727 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.203090679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279857925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272953294 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267285201 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226519252 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248964038 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.370606886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.201125206 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30065232 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221841771 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304457728 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254249024 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285371814 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244054684 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256623822 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273639187 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251842641 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.296301327 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272389255 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.274269354 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204407781 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250049237 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210688794 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.239221749 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257168033 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246949688 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247291362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.20869178 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.276884703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251914177 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.219857225 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248273237 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310410816 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256069739 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262253593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.293667541 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244582694 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2839227 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248083946 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236574298 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.272089378 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277440928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21810015 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259714991 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.206529087 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243272964 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325293308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.198008378 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268751436 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282828124 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244449073 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281015108 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.24101167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254598438 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247266163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285833875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200513986 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.258336432 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277525077 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209373428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.232636766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278012395 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236137672 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.2761797 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24794491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.254712645 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30698221 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.196256907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241086856 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39799823 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26670787 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269182682 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.229592982 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20993568 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25459118 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267359488 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.240863791 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279973349 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.236085843 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203018887 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.253088871 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.225876859 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.233107963 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275641056 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257463085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263245071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293189311 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.208793756 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.36486587 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248398025 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247492501 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.213244356 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.203839092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247400601 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207756637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250502422 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283896375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328561138 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.272011873 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.222021855 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.24303466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201332549 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238152154 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235109315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258403762 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282704043 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254249659 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.168689064 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215098577 seconds)
  done (took 123.646804522 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25372784 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246216031 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.262929738 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.315395896 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28994962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.390351191 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.324823569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.341917283 seconds)
  done (took 3.737948022 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19278348 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.242961152 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.251797745 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.191604218 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.216377993 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.60492158 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.24539891 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.228545521 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.237053728 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.230573109 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.21603471 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.657313013 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.22506821 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.224278834 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.226289664 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.18357828 seconds)
  done (took 5.683447437 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.56826893 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.770389027 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.511668795 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.430375066 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.388326611 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.30294085 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.990124133 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.297857521 seconds)
  done (took 14.574365424 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.247703542 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.280282914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.543571162 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.427035341 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.296754299 seconds)
  done (took 3.114896509 seconds)
done (took 179.808335338 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200065196 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.198728274 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.233929947 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.20066892 seconds)
  done (took 2.136776806 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.26195659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.15542483 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.193017756 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.155486427 seconds)
  done (took 2.089040845 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467953014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.155897421 seconds)
  done (took 1.967056442 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.220018553 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.754321915 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.213541147 seconds)
  done (took 2.521032671 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.210509512 seconds)
  done (took 1.536773412 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.193234645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.192088239 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.393983736 seconds)
  done (took 2.106619186 seconds)
done (took 13.678110796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.217985135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.04104148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.664052122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.207000855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.827602848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.473442192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.537412727 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.258653921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.27944721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218550756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.249975843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.76783482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.524972676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.958326769 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.507931484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.954929183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.804253588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187920283 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224364033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188284526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.518720097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184987204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21934691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187131572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.800338593 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.493066714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218413223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.968886365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217926119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196188151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.508993683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186978789 seconds)
  done (took 24.101799003 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.188243415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.277410443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24324578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.221642677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194216373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.221629811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197775967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.233694319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.322182402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186253533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242078682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.18712947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226010619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186450421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243950572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.186348129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.222895782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188285675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.226640625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18969192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.242700126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18597508 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222336692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187677264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.220048753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.205024706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219889267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.200057593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.220920088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196888519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225024141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.188143617 seconds)
  done (took 8.23875516 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.23058402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.289596543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.243943801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.260644177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.275853987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.190223099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.312810853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.258764264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.297350582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222395361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.209415192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.221949786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228135779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.223207874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.212075602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.222342321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.190553416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.222817043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228752337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190414171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.243082989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187403316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.221613753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188923905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.220195773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.208904336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219080811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.201565159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.220665855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.198288961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.226345187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1889174 seconds)
  done (took 8.594771665 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.202814667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.204134421 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.246842015 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245430283 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199023932 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.203647536 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.237472864 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.19836035 seconds)
  done (took 3.080411195 seconds)
done (took 45.336279693 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211628606 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.237431681 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.209901607 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.202713256 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.393383994 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.195492047 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.240204625 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.196112693 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.20234072 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.245772005 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188257869 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.229892654 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.207494319 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.234073884 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.36306043 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.203031589 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.40088371 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.362389271 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.196183726 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.23904266 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.197403899 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.367569867 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.23788927 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.196927171 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.344223554 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.228422108 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.353142555 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.201309769 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.233796551 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.188113016 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.363460565 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.234630963 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.196864007 seconds)
  done (took 9.628692378 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.30761106 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.233440798 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.198180994 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.232568838 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.198785461 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231868347 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.347091626 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.198127819 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.232244569 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.197062416 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.23165476 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.29337611 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238712265 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.191649859 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.234491841 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.176086423 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.34882433 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232688976 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.189863549 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.160577587 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.228469113 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.197785019 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.359152507 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.229580578 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.198672533 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.232104985 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.200657041 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.201656566 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.235093906 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19951706 seconds)
  done (took 8.314666254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.202747854 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.210399804 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.252612733 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.300309684 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227857844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244684689 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.21414111 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.244371528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21933935 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.226373889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.206760294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.262207407 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.208403611 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.23761797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.19120972 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.24233567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.207083266 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.226794083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.199818159 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.244918686 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.211270296 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.242132993 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.214717656 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.235147704 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.19011167 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235128998 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.201235396 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.236387041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.199950256 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.241659358 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.192077486 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.229785084 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.194855558 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.261925562 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.193156841 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.239248125 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.211801863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.240894297 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.204464938 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.259295095 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.193292065 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.229020082 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.21767316 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.284680359 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.192998063 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.237067379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.194361791 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.242757827 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.189935902 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244558308 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235339256 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.226674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.247003535 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.191786388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.189233145 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236009628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.191759013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.230570989 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.206765366 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.227796949 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.21307663 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.235937146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203196364 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.229607933 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.202508718 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.22651177 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.190826358 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.232276157 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.218467485 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236018643 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.229705942 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.227312065 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.204240669 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.24155575 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.203342522 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.239387521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1907578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.238795158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.203175409 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.230676928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.205221862 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.231157085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.196954968 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.245045117 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.213532984 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.241153021 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.204345926 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.237057123 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.195027917 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.228532059 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210998903 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.2279614 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.195334079 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.239404283 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.193232718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.230328596 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202856618 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.236110247 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.19049302 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.252404033 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.196583766 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.226402988 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.219416577 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.230127471 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.196508161 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.202036576 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.270147397 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.226210754 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.202657386 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.237429214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.193554725 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.200889009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.230300882 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.192288186 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.242847461 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.207994748 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.234985328 seconds)
  done (took 27.265271169 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.460527936 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.451110858 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.301189214 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.53996716 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.205893762 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.40842277 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.455495111 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.455390884 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.230671468 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.264505335 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.251609424 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.454408541 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193842151 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.258420412 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.458638625 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.541514514 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222200933 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.271555927 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.26768323 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.206121006 seconds)
  done (took 8.280190208 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.202519341 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262952426 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.216943248 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245963399 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204391012 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.244985496 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19377415 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.250824928 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.204435384 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.235055071 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.198093217 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235957493 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.209556618 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.208126114 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.243593888 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.21527182 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.237194436 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.19881001 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.25050162 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.199027924 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.207199452 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.219471424 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23890009 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.215436912 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.246369872 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.203594081 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227413208 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.198372431 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.235384468 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.202711486 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.231787016 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202141048 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.236188187 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.174497806 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.239238257 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.208573364 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.232881863 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.197797624 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.198331627 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.231414954 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.207335216 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.2407448 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.201134568 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202447198 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.214266854 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.179441765 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.243593151 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.205290352 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.210234909 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.213483473 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.241742848 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.208880655 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.236026044 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.215700508 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.235404367 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.211983954 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.240206071 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.208448436 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.234010683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.193228332 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.227474592 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.197190143 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.23637869 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.207584791 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.240294648 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.203954681 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.236299916 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.194923861 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.230881111 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.197680896 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.197692156 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.24331661 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.250613786 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.204659553 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.201606903 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.240322149 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.202037676 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.199067344 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.201893915 seconds)
  done (took 18.664068228 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.220797159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.239809447 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.213287606 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262997677 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.206979469 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.234797116 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.205992934 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.213834267 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.244246954 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.213176839 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.243767766 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244242472 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216575222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23980192 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204266834 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.245364424 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.207069667 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.2686613 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20668909 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.258385038 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.21083131 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.235816921 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.207919096 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.242567472 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.223092662 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240803374 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.222318286 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.243745464 seconds)
  done (took 7.826181665 seconds)
done (took 81.321045615 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.572870477 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.739139643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.50483002 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.510239627 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.488798172 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.525123984 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.498305444 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.49654765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.065521893 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.47433056 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.499298261 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.497699291 seconds)
done (took 32.317214142 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.596922585 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.219860756 seconds)
    (2/2) benchmarking "String"...
    done (took 2.22401987 seconds)
  done (took 5.843688994 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.201126723 seconds)
    (2/2) benchmarking "String"...
    done (took 2.21532804 seconds)
  done (took 5.804847805 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.490443899 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.490123004 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.733379667 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.489754881 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.48846898 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489264221 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.48906402 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.508966529 seconds)
  done (took 18.077531349 seconds)
done (took 36.204199056 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.555028011 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.787350259 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.770550847 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.471894462 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.493521052 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.494654515 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.491531756 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.551169837 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.497992334 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.473866683 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.942672937 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.776673065 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.511309135 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.90615807 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.474989403 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.489729945 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.4954026 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.8454861 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.492722957 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.53771419 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.489556271 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.475638569 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.505256401 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.510315072 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.503931321 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.497210065 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.53807271 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.49295428 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.808625459 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.494385449 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.53874585 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.493649271 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.536110573 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.496011169 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.493305314 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.505280751 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.803969813 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.50789814 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.490281849 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.506069241 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.806460989 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.5089991 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.495372392 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.504253705 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.476682587 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.565895884 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.490672424 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.61797603 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.515642513 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.506466996 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.503320821 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.923395869 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.5021843 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.497354409 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.495448747 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.840379101 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.498943915 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.633492485 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.527263004 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.497292536 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.49397619 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.494641295 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.501791788 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.514705765 seconds)
  done (took 163.551054013 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.494569806 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.494293315 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.494126806 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.541201141 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.498115669 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.494302399 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.49522927 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.492967084 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.495132221 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.520008144 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.499603029 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.49345284 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515909994 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.439324749 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.503135662 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.507059117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.499857401 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.502033487 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.503632259 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.494635918 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.519493506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.499363719 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.496004636 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.496485104 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.499085401 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.578988597 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.518595956 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.515517994 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.507526636 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.496288171 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.511062862 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.501868541 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.218067875 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.363091264 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.49903175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.503754913 seconds)
  done (took 91.095740324 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.495604178 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.496998514 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.496410729 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.534112601 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.497376623 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.496557706 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.144075138 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.144539557 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.565216901 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.940517533 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.183381345 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.798744474 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.498042109 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.592054667 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.508181692 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.503773968 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.594566448 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.52310083 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.500972086 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.497775152 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.172353536 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.516004506 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.986904516 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.694165725 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.497075922 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.534175233 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.899777994 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.497872447 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.536934413 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.844328907 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.537117487 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.498809462 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.943036321 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.875298011 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.613181985 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.500591793 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.535559352 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.499115679 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.790619673 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.498620854 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.499107294 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.500416391 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.501082588 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.241496593 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.503009926 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.146987605 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.499018144 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.541448135 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.499794792 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.500065786 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.10139631 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.372390214 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.502570483 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.499590714 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.502270253 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.499582233 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.499900694 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.537704706 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.04548454 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.446047996 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.500344202 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.503567907 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.539673399 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.500949066 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.519712834 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.502958532 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.008469941 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.558472088 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.660660656 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.176373135 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.5055447 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.600130702 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.624029907 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.501458643 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.500817122 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.500562589 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.501180294 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.617410061 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.501427697 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.348101642 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.69357166 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.50292034 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.221283533 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.607377417 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.502007048 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.502237568 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.931413764 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.507168256 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.501970354 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.285818491 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.601265538 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.501094793 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.502814443 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.501465715 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.501929021 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.353827107 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.154291637 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.858411294 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.507843882 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.505299653 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.508694267 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.480202532 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.149781056 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.226329643 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.508185845 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.619178182 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695093092 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.505539223 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.504411723 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.207715475 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.508820307 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.556511333 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.509547945 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.908663864 seconds)
  done (took 416.127507203 seconds)
done (took 672.164664546 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.488125778 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.488715996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.487709506 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.489485282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.489824352 seconds)
  done (took 13.844514088 seconds)
done (took 15.247365489 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.506394834 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.506589906 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.507516732 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.293486852 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.507329682 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.507010182 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.50762855 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.508164656 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.506482736 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.507471358 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.281982711 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.513247877 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.510226239 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.452019363 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.265839641 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.508775089 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.372012124 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.511243329 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.507755244 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.798734858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.522235837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.571914767 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.788237456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.550602826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.80906464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.846480259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.515518697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.693244158 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.529310321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.529373954 seconds)
  done (took 21.557559482 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.385374402 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.818747168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.517484189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.574097626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.821455986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.551373091 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.821768232 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857507997 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.5166018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.687386105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.52988995 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.527491403 seconds)
  done (took 21.628349331 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.22514907 seconds)
done (took 95.982593444 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.545927283 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.616224344 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.541984028 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.524079994 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.52369832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.524542694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.525867423 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.523977663 seconds)
  done (took 13.730419119 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.522007611 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.521645527 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.521627406 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.523167556 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.523314022 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.522337834 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.52343012 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.523754451 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.522182362 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.52297813 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.523174273 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.523214583 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.52253693 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.522796708 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.522250988 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.523302617 seconds)
  done (took 25.768537529 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.525826166 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.523559029 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.522774314 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.523073047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.523730971 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.524797548 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.524898337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.524088069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.522404144 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.52415342 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.524382694 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.524132051 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.524260884 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.524135379 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.524024741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.525259095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.525186473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.524016995 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.529875603 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.523975361 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.524429266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.524703587 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.524109532 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.523699695 seconds)
  done (took 37.991583686 seconds)
done (took 78.896729923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.529032118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.51279249 seconds)
  done (took 6.449516808 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.583528066 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.583571975 seconds)
  done (took 4.576494699 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.525096053 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.525447236 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.526772839 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.525424932 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.525062859 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.524941995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.525709332 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.525423251 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.525576365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.524935859 seconds)
  done (took 16.660949023 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.526370354 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.525726033 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.52659768 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.525489518 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.5266422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.526682922 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.526421718 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.526025133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.525137513 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.526441255 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.527426032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.526290711 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.526608282 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.527249468 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.526323771 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.526342691 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.526746588 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.526472346 seconds)
  done (took 28.882861433 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.54058242 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.545812467 seconds)
  done (took 4.494406099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.656147315 seconds)
    (2/7) benchmarking "second"...
    done (took 1.569141449 seconds)
    (3/7) benchmarking "month"...
    done (took 1.631885128 seconds)
    (4/7) benchmarking "year"...
    done (took 1.623020782 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.568182974 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.5470763 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.56927492 seconds)
  done (took 12.571797515 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.522253453 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.807824448 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.997339336 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.690180366 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.512210553 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.540731849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.507431713 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.54132199 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.540298044 seconds)
  done (took 17.069330587 seconds)
done (took 92.114368165 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.516298629 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.614602214 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.531566782 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.531566638 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.825522455 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.526605388 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.522848137 seconds)
done (took 18.480680188 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.509153782 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.506878493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.539991104 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.529317151 seconds)
  done (took 11.496151027 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.516313283 seconds)
    (2/2) benchmarking "read"...
    done (took 1.839143661 seconds)
  done (took 5.76612559 seconds)
done (took 18.67338512 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.531494112 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.530879788 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.529972748 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.529611581 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.529309857 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.53008558 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.529537473 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.529211855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.530097293 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.529684595 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.52928291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.529666461 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.529583962 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.52988432 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.531765336 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.530854006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.530637523 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.531407466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.530250709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.53033009 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.530372882 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.530625983 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.530694947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.532140387 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.530256337 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.529926501 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.531700104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.531480694 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.53102782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.530956408 seconds)
  done (took 47.324500203 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.535778022 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.537787621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.530532673 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.531354074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.53219437 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.532173335 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.531877421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.531679305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.530782212 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.532188626 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.532744809 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.532224914 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.532864318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.531725111 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.532816605 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.530778725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.533740179 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.532704553 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.53378211 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.533515712 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.533402352 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.534404366 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.533540007 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.534474923 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.533679811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.533012785 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.534499113 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.533592309 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.533640271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.533943366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.532983892 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.535692387 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.533058051 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.53427741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.533715075 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.533708854 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.538080752 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.540998237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.533375599 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.533504501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.533276302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.534715347 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.536559042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.53525782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.533852872 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.534728886 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.534161341 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.534223539 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.534996286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.534533786 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.535990738 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.534255756 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.534534977 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.536252558 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.534958646 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.535296604 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.535375837 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.535704038 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.535032227 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.535940308 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.535257656 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.536172723 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.535107136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.535350579 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.536017819 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.536225802 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.535924099 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.536824722 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.536097271 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.536555045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.535988947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.536210251 seconds)
  done (took 111.887676663 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.536269206 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.537496793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.535959657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.535866821 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.537443772 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.538516911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.537157422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.536536719 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.536594928 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.537773184 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537233164 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.536854801 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.536261234 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.53795398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.537943719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.538345871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.539403663 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.536801216 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.539014925 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.537971991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.538353121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.538262937 seconds)
  done (took 35.242007158 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.537269426 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.538456432 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.537807948 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.539531886 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.541771053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.540906547 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.540150368 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.538358611 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.538568575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.538012005 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.538053332 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.539560346 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.540976184 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540021615 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.538145439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.540487623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.539034062 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.540722373 seconds)
  done (took 29.126845584 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.538350607 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.538053772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.54095263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.538587212 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.540117397 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.539631362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.539241284 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.539389914 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.540257133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.5401923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.540212245 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.53904217 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.53989142 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.538957311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.540491524 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.539837227 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.539998601 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.540750015 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.539663719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.541849985 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.5393397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.540197104 seconds)
  done (took 35.294016404 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.539763856 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.541168545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.541160875 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.540520954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.54012878 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.541569015 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.540594645 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.541587261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.543139777 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.541513004 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.541139674 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.541636569 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.543553124 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.542242754 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.54182557 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.541945217 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.541938645 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.541995919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.542404341 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.542208034 seconds)
  done (took 32.253393951 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.543970558 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543404869 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.543529437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.543568719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.5428193 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.544249556 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.544174465 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.543108031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.543114435 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.544123194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.543042664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.542472201 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.544017445 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.544251395 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.544786567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.544090881 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.543241468 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.544915936 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.544240883 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543537299 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.545324546 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.545716311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544803033 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.544020757 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.544644833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.54467714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.543592243 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.545065047 seconds)
  done (took 44.655169319 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.563258131 seconds)
    (2/2) benchmarking "in"...
    done (took 1.562464717 seconds)
  done (took 4.549089262 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.543962369 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.544558712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.544932239 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.546138978 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.5461404 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.544306601 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.547113302 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.546118315 seconds)
  done (took 13.787179753 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.539276289 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.546523354 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.545846333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.54571625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.545697126 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.539960437 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547717643 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.551477199 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.541292005 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.541874639 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.546773528 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.547178988 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.545337129 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.541964659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.542762072 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.544965632 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.549786794 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.54767201 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.548390407 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.549104128 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.549640746 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.543877709 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.547308756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.552025845 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.543312757 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.553711045 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.549995852 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.55216177 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.542781032 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.548863509 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.545198538 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.55299222 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.548657219 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.548328239 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.547971528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.547891537 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.552297017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.551255811 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.552748536 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.554110628 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.550373926 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.55008905 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.545164077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.548109266 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.547864381 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.552792403 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.549286693 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.549710846 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.544455674 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.54811373 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.555523177 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.543947547 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.552231512 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.54891758 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.550725955 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.555651474 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.556178498 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.547685672 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.551111188 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.556429983 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.561409691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.560458327 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.551600767 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.554856606 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.550844079 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.55814939 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.557336696 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.557246456 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.553442363 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.552260522 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.554250799 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.564652601 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.563988399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.556665528 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.552245527 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.552042651 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.547603191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.554872037 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.555446068 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.557867762 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.558175134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.552628785 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.553586551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.557156829 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.549297325 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.557024668 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.553333816 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.552823149 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.546695139 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.560317355 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.561231496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.553366398 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.547079378 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.550619085 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.553811637 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.555194252 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.547331445 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.551420405 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.555683955 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.553421952 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.553190862 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.551027264 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.556636252 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.558320648 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.553591286 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.557464386 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.560946187 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.551639299 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.560629498 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.561607309 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.554933564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.549204283 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.555647572 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.558150072 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.550460797 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.559747899 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.559913632 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.552589799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.56070462 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.554914668 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.556795232 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.565963541 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.56066649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.555185103 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.552964476 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.564331165 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.55667743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.55529186 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.562129415 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.556679233 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.555582887 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.554602375 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.562075491 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.55184278 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.559855343 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.555020376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.560239242 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.557408311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.556905836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.554850485 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.558105511 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.557145177 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.558170344 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.560714908 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.563034749 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.556535646 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.56667056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.558938994 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.558244701 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.560710467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.563595944 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.558185836 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.554825125 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.56145472 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.552403069 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.559736323 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.553228875 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.563126775 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.559698323 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.559936913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.559616601 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.553128708 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.558446053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.562848185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.559953933 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.559304781 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.562084217 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.559521577 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.558750975 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.553287807 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.561209883 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.553047534 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.557018751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.565432631 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.560207037 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.561102134 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.558731336 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.566397187 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.560268243 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.560344047 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.556320129 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.56213507 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.564583705 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.563895415 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.56794811 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560807899 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.559746066 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.556137356 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.558268716 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.563640671 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.55784146 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.568329313 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.569479793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.574370717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.558923816 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.564713213 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.555572187 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.563808178 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.562540035 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.569436703 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.561606336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.561369052 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.556589077 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.565727237 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.558414576 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.566706782 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.556377644 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.565918662 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.56304831 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.561214766 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.562906876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.557472071 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.562238106 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.565377345 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.563132664 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.562774831 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.558172299 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.567664278 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.55618369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.560095903 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.566455711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.563614606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.567289543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.570387977 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.562232482 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.568428342 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.565962993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.561161165 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.566351458 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.563263244 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.564525324 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.570934808 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.567014867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.562522295 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.570986551 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.568312296 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.56147368 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.565492673 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.571030997 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.564296464 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.560899418 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.572122867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.5648674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.565151858 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.565020969 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.560635022 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.569684344 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.569023116 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.571678993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.561021185 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.570282479 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.563186958 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.569788339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.566256127 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.570542268 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.568145685 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.570529599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.571887164 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.56579512 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.561853789 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.568830102 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.567116986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.566623975 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.561867909 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.571851019 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.569229572 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.566438524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.565486568 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.565758384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.570000702 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.560985403 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.568341608 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.562252523 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.579867215 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.585004731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.572191677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.572391404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.571769395 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.57085326 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.571466637 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.565590614 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.565768227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.568331816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.566995312 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.564909106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.571130721 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.564238184 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.572682227 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.568035411 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.571143073 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.572530033 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.56876169 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.563327475 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.572716603 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.568940516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.569315226 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.563759596 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.569542698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.566286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.571308195 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.570084372 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.566377499 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.577403081 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.573379057 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.568945389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.56867475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.566639064 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.565266672 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.568658253 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.574523316 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.566244844 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.575632432 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.565713812 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.572671958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.567688275 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.5766694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.577594557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.566647783 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.577103683 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.571163445 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.564099953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.566858863 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.572499835 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.575229501 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.580357323 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.564948335 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.574088488 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.571478351 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.571316527 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.570807411 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.571682624 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.57112082 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.571836495 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.577008701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.577583708 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.571532096 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.575004646 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.57931246 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.571834783 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.570758123 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.565379566 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.575852387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.579649167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.56919967 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.573587161 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.569930452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.574555868 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.572745149 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.574669135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.573096521 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.572530319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.577733205 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.578627629 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.575741838 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.573015494 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.577965589 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.582509857 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.579366304 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.582805665 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.571154513 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.577768158 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.573741856 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.569792181 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.570821233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.571877487 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.578101937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.567620162 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.581505265 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.573296404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.571997869 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.576633646 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.582170341 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.56821884 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.577468351 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.585379142 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.568305101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.577743752 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.575161092 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.569218715 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.578637652 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.576536463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.568115095 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.57314221 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.575986103 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.580958596 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.56998588 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.578188062 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.571563624 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.580049248 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.575685901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.575671478 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.575451526 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.575170004 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.571508486 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.576947917 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.576573153 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.583303164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.57358353 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.578361373 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.574578783 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.584134526 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.58533176 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.573359698 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.582195255 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.579242236 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.573488459 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.57766826 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.582556 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.573826783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.580692356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.573226086 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.576178451 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.57568136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.58084023 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.580948796 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.583237779 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.571963646 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.574398284 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.580303827 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.57689896 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.578775896 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.576479376 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.584553359 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.572984461 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.573409895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.579310768 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.574696939 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.5830101 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.575031394 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.58027239 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.578639099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.583216312 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.578790118 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.578803546 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.571761281 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.575032073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.586065397 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.584628235 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.580133928 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.579087652 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.582990371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.574637442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.579373608 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.580759599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.575873784 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.577064003 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.582833276 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.575208102 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.577594262 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.577979993 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.582497513 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.58353918 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.583261089 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.576116283 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.588445891 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.588578252 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.587560475 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.574741733 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.578376936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.578952468 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.582842765 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.580094548 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.577886426 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.59042764 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.586430733 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.586314204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.581271367 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.58208704 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.575355206 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.585825104 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.58265684 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.57982562 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.589135658 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.580148813 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.589804593 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.581917705 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.582430729 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.57701348 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.57770164 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.581391023 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.581310619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.58536261 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.581772814 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.585193155 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.583231807 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.587745395 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.582279438 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.581963039 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.581994529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.577467181 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.58614236 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.577043597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.586945435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.58379205 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.579362637 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.58751749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.582670339 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.579923599 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.585973157 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.589812376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.583194009 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.579213689 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.583665435 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.588736396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.591062263 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.584539128 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.578776056 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.585396914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.588379238 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.584437002 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.583734504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.580463312 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.597323616 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.595325768 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.579901296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.58320381 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.588562907 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.593964276 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.58468597 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.583149134 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.583717539 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.585897294 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.590294666 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.586088923 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.589394492 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.590597441 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.583083251 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.58877301 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.582799939 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.585695801 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.589067649 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.594359633 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.586680936 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.582828039 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.596152869 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.594037909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.587908166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.601442383 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.592909755 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.588559285 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.59259649 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.57998648 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.588678949 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.584393471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.593031027 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.587189842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.58745354 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.587172643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.58114824 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.591406876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.594414002 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.597654189 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.587092088 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.580427339 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.584797246 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.589792347 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.623363082 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.58926515 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.588062309 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.589230767 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.590356444 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.583625868 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.602605116 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.605418002 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.594308157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.588306135 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.590354681 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.590456597 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.593982559 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.590654026 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.594990719 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.590110056 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.589489984 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.589676266 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.598839994 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.590427836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.585320859 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.588188208 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.586008128 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.59376021 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.600057395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.609268778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.593758653 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.593045873 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.593766537 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.589913273 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.586726065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.593712705 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.590564827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.587342124 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.588377215 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.595910894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.591420454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.590367904 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.587978884 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.597631708 seconds)
  done (took 937.155221148 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.592529858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.591327993 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.5900955 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.590798969 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.591650462 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.590518723 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.591883501 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.59088163 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.591675357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.592486084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.590238764 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.592046749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.591578805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.591262917 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.592377641 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.592008994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.592153737 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.591031878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.589887805 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.59236703 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.592964718 seconds)
  done (took 34.885703277 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.592422138 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.592280726 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.592939736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.592777786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.5934347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.593299681 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.592287241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.592826335 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.594266039 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.593198103 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.593448033 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.592597469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.593823643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.594278673 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.593355181 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.594385884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.594150175 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.593534797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.593374975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.592831405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.593514306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.593170273 seconds)
  done (took 36.516554706 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.594895957 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.59472963 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.590577444 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.597454052 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.595036714 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.594709452 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.594939417 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.59449 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.595570123 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.589438592 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.591755773 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.592227046 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.595214039 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.601198927 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.59442014 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.602960394 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.596642642 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.596540163 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.596803344 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.595405916 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.598820715 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.604908308 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.596438698 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.589604755 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.598264732 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.595695124 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.596459519 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.595779971 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.591340273 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.599332372 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.595464543 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.592286647 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.601106702 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.59798366 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.592725345 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.600848318 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.597047587 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.596107579 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.596059438 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.598552713 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.607561929 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.597399062 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.601866754 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.606296331 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.598016073 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.593049895 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.603980947 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.59772801 seconds)
  done (took 78.11367585 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.597251705 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.597905223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.596657618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.597840787 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.597782354 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.599229798 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.598306118 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.597980093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.598809006 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.597726195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.59921545 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.598141975 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.597753304 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.597811526 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.598510725 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.597944876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.59871218 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.598423908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.59825631 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.599684964 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.599760113 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.599205701 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.59927922 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.599150938 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.600245771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.598867325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.599257206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.599213449 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.599125938 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.598707992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.600049334 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.598428892 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.600668445 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.599033991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.601044343 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.600060018 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.600343207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.599934629 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.601958656 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.600680567 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.600904676 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.601787498 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.601432761 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.601365744 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.601180151 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.60127912 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.601292436 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.600043699 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.600981206 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.602171597 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.601999428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.601241444 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.601673032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.600816374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.600842069 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.602450332 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.601548599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.602140028 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.601818594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.601857122 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.602466985 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.602606012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.603670448 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.601850626 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.602712493 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.602799256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.602673125 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.601793675 seconds)
  done (took 110.280546216 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.602858505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.603166777 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.602202914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.603069438 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.602586068 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.603957709 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.603575396 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.602522354 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.6053368 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.604631057 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.603996902 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.60382388 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.603329535 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.603208961 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.604331216 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.604264777 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.603542604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.605226747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.604077216 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.605384015 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.604562772 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.604606919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.603845088 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.605224086 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.604294414 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.606269028 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.605024531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.603932265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.605656736 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.605747763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.604967156 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.606384315 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.605932065 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.605121504 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.606911342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.606823137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.605789224 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.605850854 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.606702799 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.606129908 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.607445773 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.606017108 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.60581844 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.606472104 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.606410581 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.605471191 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.607565589 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.606214217 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.60687947 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.606916864 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.606109334 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.607410063 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.606501995 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.60677506 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.607748856 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.606914229 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.606483293 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.606253083 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.607573755 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.60766727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.606131693 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.606879742 seconds)
  done (took 101.007757936 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.607238254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.609009838 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.607849419 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.608188093 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.608247064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.608293967 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.607450496 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.606851918 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.60702331 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.608048933 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.60785359 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.608109111 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.609339589 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.608337927 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.609353129 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.610477607 seconds)
  done (took 27.209284015 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.609015435 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.60905833 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.608966756 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.609763899 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.608995839 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.608411024 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.610255701 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.608918286 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.608808155 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.610428222 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.60935676 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.610523111 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.610110117 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.609841826 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.607967126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.610770343 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.610184236 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.609866308 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.610115674 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.610265381 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.611595732 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.609492139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.610730455 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.609135429 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.609013565 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.611832627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.609315962 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.610286588 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.609825818 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.610812875 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.611323 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.611173158 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.611146406 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.611105878 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.610222794 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.6116722 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.609955577 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.611785343 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.611731889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.611810374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.611008341 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.611891563 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.612370326 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.611731264 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.611737874 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.611713973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.610749181 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.612848398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.61328688 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.61133728 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.614231004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.612400362 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.611951913 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.612953519 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.612175958 seconds)
  done (took 90.068612804 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.61212709 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.612717975 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.612627056 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.612762865 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.612141138 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.611482605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.612132003 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.615258197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.61390046 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.614022572 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.613273701 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.61572546 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.612569762 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.61410164 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.615539069 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.61426511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.615477034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.613706226 seconds)
  done (took 30.525633127 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.614790161 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.615339406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.61491147 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.615099826 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.614631413 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.615578292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.615017563 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.61505471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.614902429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.61527795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.615104156 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.615194399 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.614432666 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.614946208 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.614984003 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.614470299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.615769128 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.616361266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.616500422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.615152897 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.616129465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.616320387 seconds)
  done (took 37.017551043 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.608227516 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.607910867 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.608301154 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.622236025 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.619031634 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.60839768 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.608721739 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.607748018 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.6259207 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.632733248 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.631003645 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.618934256 seconds)
  done (took 20.88380808 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616972847 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615879967 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.61559621 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.615757005 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616363255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.617240072 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616764451 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617137411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616239566 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616560322 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.616193783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616101218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617410527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61739195 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616957069 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618148051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.616902592 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617449145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619195629 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617289284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61739715 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.616572475 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.618515874 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618719273 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619003992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.617112501 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.618187295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619903903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618523811 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618002297 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.618508086 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.617465802 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619295309 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618340368 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619002024 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.619474354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618434377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.618706662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619930491 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.61947524 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.618815967 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619964514 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619209706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620169006 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.618928748 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620673837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619491933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.61961451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619201908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.62107193 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.620669943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.619300074 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.620015815 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619276066 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621714022 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622199327 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62076312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.620430888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.621486008 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621076389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620580649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621948647 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620611329 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621532554 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622038957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619907029 seconds)
  done (took 108.325604532 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621481011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.62173622 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621361752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.622431682 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620292382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6210219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621876724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.62125314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622464189 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623427616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.622967532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622509714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623035941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622737233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622235705 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622038332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622405741 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.622258094 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621399147 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623613804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622445563 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62397778 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622129976 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622853806 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.62482335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62356895 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623159289 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624618993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.623808093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623639866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.623262769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623199988 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.62361583 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.623195469 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622589846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.623669729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.624771562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622269115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62361317 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622057522 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62354231 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623617686 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623984118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.625191838 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.624856346 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.62521352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.624588864 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.624381827 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.624870768 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.625512758 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.623844701 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.624640041 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.62492063 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625910537 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.625455465 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.62456043 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625422585 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.624299193 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624749394 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626241402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625404167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.625897475 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.628015471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.625320619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.624862982 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.627956659 seconds)
  done (took 108.654825886 seconds)
done (took 2076.177710879 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.614706791 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.613657526 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.618178681 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.488657515 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.617311034 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.278554336 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.263076603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.619971019 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.619291206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.619601801 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.619193806 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.617053983 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.951039312 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.618250075 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.619139726 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.614378897 seconds)
  done (took 59.885223033 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.650496262 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.629286103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.764178762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.623089913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.6523763 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.851021655 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.689061823 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.623841105 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.832985355 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.626633114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.618029797 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.65017165 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.623766705 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.616265633 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.647043357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.851784977 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931147436 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.62211827 seconds)
  done (took 34.998151999 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.181256032 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.658000978 seconds)
  done (took 6.334059051 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.647680164 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.624956227 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.629653636 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.623871349 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.618029194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.61616663 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.625236037 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.621667978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.6243816 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.778671146 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.625902482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.639641406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.626427483 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.624915602 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.630989548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.674755338 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.757754536 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.643318959 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.629694293 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.631693926 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.625461736 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.803326498 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.677477179 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.633191676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.778332659 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.627304744 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.631911979 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.639930268 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.78354471 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.6328221 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.62714724 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.626295546 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.628440333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.619824333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.210002385 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.618781923 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.660014499 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.638174028 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.633484973 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.777148738 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.627322145 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.63326618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.621045069 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.204231984 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.759428599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.869546737 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.630076208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.629477305 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.629502014 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.783698769 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.629372814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.629537372 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.693679272 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.631920242 seconds)
  done (took 102.243578726 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.64611958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.620913402 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.810046522 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.647628756 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.620337956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.619453672 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.640538077 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977408251 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.626002083 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.620919633 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.958373927 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.336338125 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.622665339 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.669384329 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.668379378 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.662258606 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.622497058 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.620622702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.62367089 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.620512037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.243002189 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.623435414 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.641382541 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.821864958 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.667905229 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.245610259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.622381719 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.621723214 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.624197745 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.621649929 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.29884494 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.629789662 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.680598083 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.622206059 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.946546248 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.094710864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054294781 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.632286036 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.631391125 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.623569452 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.658267459 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244236982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.075414307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.623642675 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.630489056 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.24747867 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623813664 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.622447282 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.627346312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902520625 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.625008202 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.627709177 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.624159864 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.625419739 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.624581899 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.692813707 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.682031023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.245763695 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.624732705 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.625582275 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.675038148 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.625847039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.62341797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.625739884 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.626215547 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.078183413 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812215003 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.631212907 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.075574561 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.293642948 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.626262694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.373680849 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.625050872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.649740943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.737695414 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.626646012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.625273719 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242722748 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.66087504 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.624923527 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.058373734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.628331896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964858406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.6469893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.627874955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.264261946 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.628921364 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.695787178 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.626202304 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.626858632 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.625815842 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.640544529 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.954878636 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.657321713 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.626906335 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.628052425 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.659277041 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.627654896 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.628311081 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.632778882 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.378394969 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.630003269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.627369551 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.627098832 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.628223045 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.628832047 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.627185732 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.630634834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.919592659 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.628617817 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.631534783 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.62953425 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.627757589 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.631423296 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.829138742 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.630921806 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.013913204 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.63159918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.629399422 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.648662775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.627763784 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.63782661 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.628034518 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.63793865 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.601266085 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.990740456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.648564028 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.647776499 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.630479112 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.643415734 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.632464078 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.631917837 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.66968717 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.634886762 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.530020967 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.656396125 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.65995187 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.629192958 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.633940268 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.630700594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.632910283 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.630062412 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965626518 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954947696 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.866194358 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.633056174 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.631880168 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.520007677 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.676713551 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.817287975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.654164583 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.630403355 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937154427 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.833292215 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.633723063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.632509622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.636022366 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927441638 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.633161179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969308054 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.328319213 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633280896 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.640296276 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.52472437 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.419782927 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.633806186 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.637823171 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965856611 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.652465975 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.633700107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.631624534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.633835831 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.632767403 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.635036396 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.63465833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.632971377 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.633107711 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.707855639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.834295847 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.653253789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.637565109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.252808312 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.644199104 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.633275113 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.643678503 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.634209948 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.634850672 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.669895222 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.638625619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.667374064 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.638361018 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.639118941 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.325266484 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.632622091 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.636190321 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.835535204 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.475322278 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.633686149 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.635492666 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.633558107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.671836163 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.281168035 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.637143707 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.022720848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.634860072 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.680154309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.634734192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.658006151 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.28144729 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.655997355 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.635705649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.452036984 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.635328491 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.41386989 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.635631469 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.638227896 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.38422211 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.634199265 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.640859146 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.636511071 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.636923473 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95706031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.638187348 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.663344186 seconds)
  done (took 567.903850664 seconds)
done (took 772.858114425 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.636371827 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.635171277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.64060549 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.641553315 seconds)
  done (took 12.066227416 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.65134679 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.643821342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.651616637 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.643657869 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.651620136 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.643151139 seconds)
  done (took 11.39981873 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.635870206 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.636455736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.641935889 seconds)
  done (took 9.427823219 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.890576277 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.646511358 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.074085151 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.647062034 seconds)
  done (took 10.773444655 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.651346523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.652840968 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.652736119 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.652154152 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.653749401 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.65409705 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.653517048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.65226825 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.654287171 seconds)
  done (took 16.388758853 seconds)
done (took 61.571202831 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.622380386 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.640500408 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.626909419 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.771981384 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.716933566 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.622263709 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.641152843 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.673760144 seconds)
    (9/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.447868455 seconds)
    (10/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.679240116 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.623534416 seconds)
    (12/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.770585995 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.591116279 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.309035065 seconds)
    (15/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.668022933 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.624067868 seconds)
    (17/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.81761097 seconds)
    (18/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.670634973 seconds)
    (19/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.797892475 seconds)
    (20/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.727128233 seconds)
    (21/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.625893043 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.726651367 seconds)
    (23/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.644230371 seconds)
    (24/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.639656049 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.624541797 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.380962502 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.626124417 seconds)
    (28/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.489855131 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.625134525 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.624243518 seconds)
    (31/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.836090728 seconds)
    (32/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.649805192 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.88179063 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.678940247 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.642552226 seconds)
    (36/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.127443814 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.850211538 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.628966701 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.721420296 seconds)
    (40/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.794293937 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.812523102 seconds)
    (42/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.625114272 seconds)
    (43/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.688923951 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.762497713 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.918114449 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.717904878 seconds)
    (47/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.626209691 seconds)
    (48/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.550135159 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.324878812 seconds)
    (50/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.600486703 seconds)
    (51/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.064280961 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.644809155 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.643129781 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.806587797 seconds)
    (55/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.796587968 seconds)
    (56/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.629043597 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.768916429 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.628334687 seconds)
    (59/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.836109937 seconds)
    (60/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.376396664 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.931389424 seconds)
    (62/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.628723832 seconds)
    (63/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.628277963 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.700489635 seconds)
    (65/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.749704302 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.754919498 seconds)
    (67/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.86308238 seconds)
    (68/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.639674791 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.211690689 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.628278899 seconds)
    (71/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.954570632 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.674261665 seconds)
    (73/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.883093481 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.627274622 seconds)
    (75/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.75500066 seconds)
    (76/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.391105544 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.991603094 seconds)
    (78/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.636164476 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.675501655 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.732728844 seconds)
    (81/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.929786128 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.997347126 seconds)
    (83/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.605582717 seconds)
    (84/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.731509143 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.66908255 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.778190625 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.63438972 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.635811157 seconds)
    (89/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.547158269 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.737822546 seconds)
    (91/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.727742126 seconds)
    (92/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.688439541 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.777699221 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.725545072 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.533589333 seconds)
    (96/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.777914581 seconds)
    (97/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.62933165 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.750347295 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.749931409 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.630108719 seconds)
    (101/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.648078329 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.869931856 seconds)
    (103/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.935887861 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.785725992 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.785708379 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.679144853 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.62970323 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.630040005 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.822831118 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.724876121 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.631470997 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.675499485 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.75777818 seconds)
    (114/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.613188383 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.753618484 seconds)
    (116/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.051557398 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.903532179 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.824771551 seconds)
    (119/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.731114224 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.636682088 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.092091539 seconds)
    (122/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.632075239 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.68713027 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.633435186 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.534028737 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.759474879 seconds)
    (127/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.517135161 seconds)
    (128/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.730726485 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.631669684 seconds)
    (130/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.72396486 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.51820722 seconds)
    (132/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.685991999 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.747476776 seconds)
    (134/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.512917779 seconds)
    (135/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.696922132 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.635047341 seconds)
    (137/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.633856568 seconds)
    (138/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.738404313 seconds)
    (139/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.688656386 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.817902109 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.795415574 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.737957269 seconds)
    (143/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.633949142 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.784934384 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.716221121 seconds)
    (146/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.698024181 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.821699506 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.63240755 seconds)
    (149/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.887761168 seconds)
    (150/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.634506423 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.740126719 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.634773982 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.76327317 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.63336627 seconds)
    (155/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.397982663 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.780767219 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.649499738 seconds)
    (158/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.815048721 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.783998031 seconds)
    (160/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.633710457 seconds)
    (161/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.51847135 seconds)
    (162/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.770269989 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.633595393 seconds)
    (164/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.637069817 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.729241262 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.636224978 seconds)
    (167/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.860181404 seconds)
    (168/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.651490272 seconds)
    (169/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.685086695 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.688282264 seconds)
    (171/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.691704914 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.759420064 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.929984623 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.683277266 seconds)
    (175/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.511354787 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.652640713 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.911767976 seconds)
    (178/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.688002412 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.652820672 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.642914895 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.721725315 seconds)
    (182/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.635168256 seconds)
    (183/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.730486531 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.862696345 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.643561283 seconds)
    (186/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.723302563 seconds)
    (187/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.63626781 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.645747926 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.636904075 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.695897195 seconds)
    (191/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.463056829 seconds)
    (192/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.764219419 seconds)
  done (took 416.503226014 seconds)
done (took 418.021340701 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.684744724 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.763174659 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.662458894 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.662996591 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.665706832 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.654653964 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.68551539 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.665235668 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.677738312 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.67821143 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.655746758 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.67425416 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.680811424 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.674273053 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.698597045 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.665302739 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.663667893 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.675317733 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.678098396 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.68205751 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.668052831 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.665593128 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.692635307 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.665183266 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.673804844 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.674196629 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.671959759 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.657359926 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.671335974 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.68102047 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.665027432 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.671435417 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.680756294 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.676468189 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.668346974 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.675272361 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.66849336 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.766551775 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.68560939 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.676621509 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.674292619 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.681667603 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.67194222 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.671195773 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.67614692 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.693472883 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.674568683 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.681823198 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.665117735 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.667445689 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.686983572 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.678413086 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.673428693 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.667794668 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.661628006 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.680646274 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.675781376 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.689896255 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.674396806 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.668910008 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.701588002 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.688068162 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.678311717 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.676445475 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.673559006 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.684496346 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.676429053 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.68459118 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.672936734 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.670079663 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.671384525 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.674770609 seconds)
done (took 130.304559664 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.791433543 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.663556555 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.821863774 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.672556126 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.836109787 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.789927589 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.671814222 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.672922179 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.673372071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.472317605 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.67431361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.672828553 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.664332714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.673176987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.788188087 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.673735552 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.673272396 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.370245752 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.675052497 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.808422296 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.66827578 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.674032509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.67308647 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.46629103 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.666774132 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.660222478 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.807075767 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.673330523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.37040438 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.660468462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.662579048 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.364232849 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.807660603 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.692599587 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.683692976 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.682959837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.838038208 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.678104956 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.794719536 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.794342066 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.825225059 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.714389031 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.660680245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.666768598 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.676977853 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.676040458 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.67465153 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.703104873 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.666594944 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.675116361 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.376597021 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.68613325 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.685857113 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.676756201 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.676194323 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.694815916 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.674978551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.676424261 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.811614479 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.677918354 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.794736082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.468841764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.474931913 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.676592741 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.664972384 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.676250045 seconds)
  done (took 130.925291122 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.74034025 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.745025463 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.795924542 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.672322339 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.720454742 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.799525941 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.671078489 seconds)
  done (took 13.680053027 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.675448554 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.677763443 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.719695368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.718983546 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.67785092 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.843618588 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.677012913 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.682722678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.677119478 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.722005329 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.679022543 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.678178932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.687726314 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.671811187 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.718348616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.685521052 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.786230447 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.672938499 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.680024497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.827684764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.678931522 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.68748134 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.723786748 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.683454131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.678800031 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.678145137 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.431786139 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.680030732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.679234046 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.679533788 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.678105622 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.740438998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.679349242 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.671698731 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.678733207 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.786864814 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.680219123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.679055347 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.679861798 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.674140955 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.680484241 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.678054115 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.679573089 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.680347118 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.67881201 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.698856439 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.681105547 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.680374513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.680466083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.680752338 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.723961462 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.682007265 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.680619869 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.680882496 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.727489572 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.691347373 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.68212186 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.680606754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.682614565 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.680879931 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.828528814 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.721996373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.682706808 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.721753101 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.680557342 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.683016351 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.682027645 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.681501323 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.766519391 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.682403039 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.724344879 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.682372122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.856259898 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.700787755 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.682332356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.677996797 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.678802469 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.683363252 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.672734415 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.682272802 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.68175012 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.678576676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.682679145 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.683867994 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.683696445 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.835924466 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.784586366 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.682510276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.692886761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.683915864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.684985402 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.728756854 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.684170948 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.684790652 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.727410001 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.793319172 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.728483933 seconds)
  done (took 171.276512448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.689039021 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.689116534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.680659757 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.704519842 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.678669329 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.676975938 seconds)
  done (took 11.661780362 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.679803929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.687956195 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.684486157 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.684998515 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.68596631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.685413907 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.687154834 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.680389486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.691768911 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.685280209 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.685159612 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.686081181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.685937096 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.686873555 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.684554201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.685521718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.686005577 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.684103842 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.68778652 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.686760379 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.674157482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.687273431 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.686911214 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.681561733 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.691113465 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.687370832 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.703023856 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.687796807 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.687103742 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.686385276 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.689853816 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.686661878 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.683809081 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.686396433 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.689916926 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.683399698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.691063288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.688587839 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.687256168 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.687518981 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.690246647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.689268634 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.687117381 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.690256662 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.683513363 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.685423749 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.69259065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.706436986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.688501367 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.68942751 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.688136161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.688545103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.687916021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.690046014 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.687191575 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.685835077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.692486444 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.689062924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.689168564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.684537568 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.692803129 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.689594347 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.686450023 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.693108787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.690881212 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.690947032 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.684930501 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.694510379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.691732144 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.689976745 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.691990397 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.691265015 seconds)
  done (took 124.077612894 seconds)
done (took 453.153389532 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.14185854 seconds)
  done (took 4.689547603 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.823588655 seconds)
  done (took 4.373401988 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.416785895 seconds)
  done (took 26.969303512 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.765776295 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.682103103 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.704223274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.685140418 seconds)
  done (took 12.38630247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.313967076 seconds)
  done (took 4.861359148 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.684272856 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.686125588 seconds)
  done (took 6.919911214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.107635892 seconds)
  done (took 4.654980775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.507695324 seconds)
  done (took 5.06092617 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.69996612 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.687774573 seconds)
  done (took 6.942855025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.67434807 seconds)
  done (took 4.222533037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.523424367 seconds)
  done (took 20.071199559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.68719768 seconds)
  done (took 4.238688508 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.712635133 seconds)
  done (took 4.261200884 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.956664417 seconds)
  done (took 7.504947519 seconds)
done (took 118.708212171 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.678132844 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.677114409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.67764565 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.677424078 seconds)
  done (took 12.259008173 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.755938612 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.755898957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.764901088 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.749677486 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.752002035 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.758939382 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.717911549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.718433492 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.747873466 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.744583861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.760912041 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.750445107 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.759674518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.719136977 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.745456551 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.75949481 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.749334327 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.766737411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.719140755 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.751948613 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.693454087 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.752977587 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.746317446 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.694439932 seconds)
  done (took 43.385319388 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.205498131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.75966705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.842215361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.740749901 seconds)
  done (took 9.099777532 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.796874894 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.798509954 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.818746226 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.854504766 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.900966472 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.814823468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.721639112 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.716337969 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.703624127 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.801068909 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.874878316 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.799068972 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.019428129 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.695522928 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.013828564 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.695397147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.694899908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.79977827 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.84922485 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.883098549 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.694505978 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.799746181 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.808076932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.800361294 seconds)
  done (took 44.905993433 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.703077405 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.712605864 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.696036857 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.710633337 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.696799603 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.698338027 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.698954855 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.70447183 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.696088637 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.697435772 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.698929642 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.712542869 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.697415066 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.69727235 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.703930851 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.699926275 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.699301473 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.704449668 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.706460968 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.69681378 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.698526721 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.705089816 seconds)
  done (took 38.987507821 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.685448785 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.684598136 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.03611846 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.940909626 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.684539107 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.687325889 seconds)
  done (took 16.272328737 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.77964775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.930527146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.691986866 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.14060816 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.224504177 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.692440666 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.691717357 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.98113607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.369897885 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.403435683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.742572045 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.776346238 seconds)
  done (took 24.980638563 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774743621 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.695643124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.706972267 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728841325 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693970268 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693240003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.786954181 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23441692 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.700654507 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971464734 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696525125 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776067125 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.943040178 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693572938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.719403874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.67049075 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924755607 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.315189508 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696805968 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708491741 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726171829 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713563952 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.701769943 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946878656 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.696233346 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695775902 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.958476698 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.695709515 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050900968 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027108126 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022662656 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697362053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972261951 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198091612 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802922655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94654938 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697966372 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.698815606 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.682157468 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.715624025 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710653848 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.697848499 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01890332 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698381361 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.695980638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.70443626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241810986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.706115402 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.696564499 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696291166 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025108161 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782890725 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.701046543 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.697078972 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711787968 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697882074 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.701945814 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821186352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335944628 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706002119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712769631 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.703188573 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.693640148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704521166 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454252012 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.705357654 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.705286888 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703350382 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698361701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.699099302 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720863207 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698647514 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.71898711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699076287 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713568299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713394336 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700224473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360666411 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719070151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.705124107 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926793494 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698442983 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700399819 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.698856182 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.698947202 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.60875746 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708977685 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.67643744 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733610587 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243642512 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952591781 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720901531 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72946951 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923378632 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.677756597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701060404 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.710584464 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702393205 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721980975 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246530747 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700241736 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.707696073 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951135526 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.911834096 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699773595 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.682485332 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248853276 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708469437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.723705236 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70758991 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959088725 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.434911964 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040685161 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707351855 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763054091 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.703485056 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.68523831 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717797228 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.711681126 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71105127 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027571404 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.680011812 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704742847 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776490376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705013638 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.703106964 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721465794 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70473084 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703651684 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.942029431 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705537094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032875198 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.706673337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703972263 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.71003753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704463726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.726963957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927221234 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715530511 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979528287 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703928431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704303316 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70506073 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.924960801 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.713592045 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.712153801 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046509252 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705167533 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.72001424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033649238 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740814542 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818647081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739060873 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.716857474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95416673 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.7118053 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.71092388 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705884888 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.708502111 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711706592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.713548277 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699414181 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442518215 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708310919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710582159 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705073229 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.722267098 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781107941 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713846581 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9606718 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.713726004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710076851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.714111968 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.713084731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928897533 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035932562 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.711645656 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883352873 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.255562917 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.444810859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721996243 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.707193359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.707473009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.706835887 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707428681 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706645659 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.708995656 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960947303 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045169141 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.705169234 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449414118 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710268348 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.708731738 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.714877227 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040051581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.722317971 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710351535 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.707847273 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708665268 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71616022 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042413609 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934305847 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.724373323 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709652405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.227325019 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716628421 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.711054225 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.710269329 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735816723 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.70922811 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341989977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050329733 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706059715 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042446517 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.714983043 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.729017421 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.710522117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719362887 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.756453893 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.728410128 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718964628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.965926273 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711689629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711882742 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348976167 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673383622 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390143282 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716447775 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.711914088 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.714286545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262494185 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711744945 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712452727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00308753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26342573 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711941251 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262220738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.72107038 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.650813962 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045428001 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943091675 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713964412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.713864274 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042558009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925183189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740695129 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722381958 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717694708 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.689297451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347632526 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721496043 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89340956 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264227428 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714259805 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.714315343 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.787520956 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.720390113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196318257 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.715073893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711961662 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.727435472 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.7186373 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351375912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.719507983 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714046273 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474188667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.729958854 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.27110116 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713631024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970922561 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04551758 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.029154934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.727351874 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732077189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.961878855 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047370896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717532276 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.729216891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397874994 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.57354073 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.722795246 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713942936 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.698966121 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72557728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07528885 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.724539679 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.721272004 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725136832 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.716072912 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716242089 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.716010611 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.722803955 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718855655 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324733826 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.721834944 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716448235 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730348365 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720791396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.966463625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.732991583 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458220266 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947348898 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711125187 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751579872 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.723273393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728347119 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.694858312 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.717576956 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.716368827 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809598737 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940621022 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.71713594 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.693316935 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.785695193 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930972628 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.716698839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.718258358 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986772768 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.717559733 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.738596248 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68145928 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750702303 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.724437432 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722020803 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.731532276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751096044 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795214305 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974736106 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.048364135 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053346352 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207665971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728742977 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722862601 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.735059467 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800112278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736901501 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.724636146 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.720099053 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461499595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724314168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472721209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057300445 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.723884394 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731902589 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719189348 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962780003 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719077494 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99624157 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721018444 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.740913761 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741890763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728504783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735700492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936005262 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996802945 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719827062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740406937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720601324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.722058462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056139775 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.93439616 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349361897 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392225989 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723959576 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.738752277 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283096375 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999166042 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723095783 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722707377 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722312426 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.72280473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736768458 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.729742601 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73251776 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947453041 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051452791 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236147433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051043109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.741906614 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.594397368 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738563781 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971773543 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555224347 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979678918 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473373554 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588677431 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97775981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797258596 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983682181 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.724904609 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961912145 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.725967666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.723176155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72353516 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724332312 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.724765434 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052628176 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47195558 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978900352 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.730345283 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725791675 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755179796 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.98330376 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947389773 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.649134554 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94759852 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05861173 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732665481 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.725445328 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475844163 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058746959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726010027 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.730602969 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991989152 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.727103869 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.762750106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.596787868 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.726018846 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.396434646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.94007658 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747182936 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732600816 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.599247261 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474797628 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.735804376 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.342535425 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.729016195 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733435656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006860248 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.73367308 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.743770631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017714846 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.732459551 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72810318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991599776 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.470191297 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.675794771 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.730584508 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729646769 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.728308923 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729134781 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792604921 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729024947 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728514016 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.209552672 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.728479143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728725978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741637498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.735604286 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741083978 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.731975957 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729116346 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.737800761 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.732121547 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.719911608 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.742493899 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855005187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371731329 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731641417 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.352700599 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.065860709 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978373881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.745127784 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.708973145 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.73470886 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730547473 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728161424 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729591263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.744025245 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403561721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.741931012 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.062852857 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737377237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.943481269 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941836561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.739848797 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992554126 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743974712 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753667001 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.707289268 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.732284136 seconds)
  done (took 1152.044709528 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.751791073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.757096604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.739387516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.77357279 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.765916828 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.81262425 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.787549017 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.78771852 seconds)
  done (took 23.762184956 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.743423363 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.732847933 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.741866633 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.735050881 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.732086648 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.288150515 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.738937268 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.73468085 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.75043127 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.73803098 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.740401642 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.461493413 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.736492621 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.733738871 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.746460512 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.737205825 seconds)
  done (took 38.686560675 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.280556495 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.791619542 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.647263914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.802920734 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.743861772 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.730799573 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.312439495 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.730002233 seconds)
  done (took 31.630025781 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.741166516 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.741350278 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.742146676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.740203594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.742437524 seconds)
  done (took 10.298422354 seconds)
done (took 1447.864095234 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.740648369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.740941696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.740987196 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.740549226 seconds)
  done (took 8.553740688 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.712408738 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.712436494 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.710963862 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.728077351 seconds)
  done (took 11.454429356 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.184516785 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.385838846 seconds)
  done (took 6.161048143 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.735696983 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.50149978 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.483815001 seconds)
  done (took 9.311990776 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.029885545 seconds)
  done (took 3.621845041 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.1599677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.21857382 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.729539602 seconds)
  done (took 8.700884698 seconds)
done (took 49.396592659 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.738404063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.497284204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.882967552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.731311289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.893804251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.883850223 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.016517898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.743560056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.741320437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.728147444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.731626873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.893045382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.003774152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.49710092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.004081283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.497508943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.892857616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.728673971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.730922607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.738066056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.016576118 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.730287791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.735502617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.739980738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.892016158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.87379941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.732269694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.499144027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.729158149 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.746485257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.874721498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.730373805 seconds)
  done (took 94.469294461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.729983334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.730817128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.751075381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.73001493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.730566966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.731267593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.731291315 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.732739834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.730745378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.729954558 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.73110487 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.73020203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.733660058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.730821723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.730783843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.731405742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.731206276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.736811351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.730715407 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.731757327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.733686076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.734415259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.732590932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.740123274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.741329392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.73297891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.732428197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.732588799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.732078137 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.73283818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.733451631 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.732413635 seconds)
  done (took 89.053186001 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.745360359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.732493695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.73578471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.752116701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.749361318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.734755134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.737481552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.734931324 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.737267523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.734303355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.733676021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.747698462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.734048592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.73854246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.736477284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.738872102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.73343246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.733459442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.73498389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.739437037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.73600186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.73395438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.734540637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.734025231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.734499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.73623216 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.746470784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.737560539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.755286048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.751392387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.736221687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.749689809 seconds)
  done (took 89.247196857 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.975385307 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.749258717 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.752322865 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.742939768 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.751583834 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.749281295 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.744217512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.980534998 seconds)
  done (took 18.044763547 seconds)
done (took 292.409005985 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.761547508 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.752605239 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.770713622 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.748079691 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.762076731 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.773923884 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.983687004 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.771363434 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.974688642 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.745836559 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.762667918 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.745197862 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.737422012 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.895022113 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.756896869 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.746227818 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.774575488 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.737742539 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.750537162 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.000754525 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.775353187 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.739438121 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.762351385 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.760598032 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.724185634 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.827136808 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.82680266 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.912230751 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.876764897 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.825087095 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.752826174 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.746852836 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.76274913 seconds)
  done (took 78.843969197 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.745600897 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.754089671 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.753374946 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.754428955 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.752511272 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.752754986 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.746753683 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.754335451 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.752355014 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.753540622 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.754261 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.753440269 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.755294774 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.754418534 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.754550158 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.73562482 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.748360814 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.75459466 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.747163356 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.736822054 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.753787787 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.754643131 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.754744544 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.75572218 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.755818751 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.754941211 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.755418665 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.75673644 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.753563902 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.754551827 seconds)
  done (took 54.166201529 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.754666563 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.741916306 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.740852055 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.777082865 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.749599216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.754698168 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.119114013 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.757126964 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.753592812 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.752147283 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.746079428 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.758935623 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.806238256 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.743115018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.754272834 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.757585534 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.75788994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.750451079 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.748015356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.766206828 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.125958884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.757063603 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.121062171 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.766549374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.754762319 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.752938175 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.756292431 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.743492836 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.754647752 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.745703075 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.753182756 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.117930547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.747759146 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.759281013 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.754057133 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.763293353 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.759831026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.755150471 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.754649869 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.75344435 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.118884095 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.754279485 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.744719297 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.745568562 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.755535955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.759995039 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.745240053 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.752469298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.063722919 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.760319829 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.768817263 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.756681486 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.762162526 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.754980702 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.064762338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.75678394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.754186053 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.766133798 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.759319703 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.121877135 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.761509362 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.75490491 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.748368718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.754822109 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.74622481 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.757204549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.768765685 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.756005299 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.747498478 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.757617331 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.747915057 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.755946425 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.760548322 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.749432495 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.750085953 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.74935276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.757121902 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.751989545 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.748048071 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.147266798 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.759142913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.749649136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.133040994 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.759730478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.764639327 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.763427085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.763707617 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.827654477 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.120291537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.713141404 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.771262711 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.766351885 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.125065047 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.764567694 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.75794518 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.768105643 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.763437208 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.763478031 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.74903962 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.75183634 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.758670797 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.771967872 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.751045125 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.760617618 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.125931197 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.764487544 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.749781949 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.758831909 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.829890352 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.765321599 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.771922639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.762084329 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.13491329 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.763171832 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.766528992 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.750217384 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.777025539 seconds)
  done (took 250.329182339 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.749938896 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.754476289 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.753963791 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.75261872 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.751710398 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.759187747 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.752724452 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.756426325 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.759512029 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.755468468 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.754465847 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.762384181 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.761177473 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.754088312 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.76596823 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.755294144 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.752498511 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.768739344 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.756306104 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.754639983 seconds)
  done (took 52.743408313 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.767446652 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.469887964 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.445881871 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.766705429 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.766619811 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.7612417 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.829937995 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.769663595 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.766703421 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.139843865 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.983051049 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.769903674 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.766508347 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.768792126 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.446052933 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.747483354 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.14120479 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.471897847 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.76921879 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.471283428 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.746859016 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.768154497 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.760697331 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.475764163 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.149700976 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.129690995 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.836283954 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.477218418 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.769513822 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.768606033 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.471856604 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.771438513 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.763837385 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.466817753 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.768195295 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.783822241 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.771125831 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.834742016 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.836738237 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.147449969 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.481636609 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.138565978 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.78165566 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.957477549 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.771902196 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.747004011 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.484988038 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.77157341 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.749940003 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.771603012 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.775561771 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.461781785 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.764397387 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.462052374 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.769892781 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.770304399 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.476058294 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.46214706 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.455702028 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984576286 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.765709502 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.132830947 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.770672299 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.486985845 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.773104428 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.772138472 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.772726808 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.989686425 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.481655499 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.134441726 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.146113381 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.146192161 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.773354434 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.845716131 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.772403848 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.148122082 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.845632477 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.215927345 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.147096725 seconds)
  done (took 160.092536289 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.090688545 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.879331764 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.22635938 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.415123881 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.347710473 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.920915151 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.899865698 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.043055148 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.769982441 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.874332657 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.567315301 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.872024345 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.646146433 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.849729688 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.884778142 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.906060778 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.251548725 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.761978972 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.491046524 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.546781206 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.766058045 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.88424053 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.593761553 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.198949504 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.765330785 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.577458865 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.764551323 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.369637722 seconds)
  done (took 65.781776681 seconds)
done (took 663.558281227 seconds)
SAVING RESULT...
DONE!
