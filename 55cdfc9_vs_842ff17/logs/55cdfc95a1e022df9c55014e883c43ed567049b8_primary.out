cset: moving following pidspec: 11121
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.156047866 seconds)
loading group "string"... done (took 0.633767282 seconds)
loading group "linalg"... done (took 9.946459397 seconds)
loading group "parallel"... done (took 0.169403925 seconds)
loading group "find"... done (took 2.579835582 seconds)
loading group "tuple"... done (took 2.154898338 seconds)
loading group "dates"... done (took 1.393670244 seconds)
loading group "micro"... done (took 0.630107244 seconds)
loading group "io"... done (took 0.681640194 seconds)
loading group "scalar"... done (took 53.500398624 seconds)
loading group "sparse"... done (took 13.518271899 seconds)
loading group "broadcast"... done (took 1.316431462 seconds)
loading group "union"... done (took 10.361702536 seconds)
loading group "simd"... done (took 3.594941169 seconds)
loading group "random"... done (took 13.548684244 seconds)
loading group "problem"... done (took 2.193251829 seconds)
loading group "array"... done (took 23.827551771 seconds)
loading group "misc"... done (took 1.546826665 seconds)
loading group "sort"... done (took 3.781113136 seconds)
loading group "collection"... done (took 20.735230537 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.907647912 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.175106914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238964867 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.56813432 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.30687258 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204620898 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200097276 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.183323188 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.683440155 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.229407944 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.190776621 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.454746443 seconds)
done (took 7.13161249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.471081726 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093928758 seconds)
    (2/2) benchmarking "String"...
    done (took 0.235781681 seconds)
  done (took 0.988145627 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.097815445 seconds)
    (2/2) benchmarking "String"...
    done (took 0.141854652 seconds)
  done (took 0.892218643 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.132241316 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.202191625 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147776773 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133816509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.148614302 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148756721 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.13332531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148325571 seconds)
  done (took 1.712689911 seconds)
done (took 4.847808069 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.524159289 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.967461281 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.588184279 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.214011059 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.361460175 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.408620393 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313519605 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.269713916 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.146821486 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097776661 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236782408 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.486337341 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.445676565 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.004647686 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097592508 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.15060841 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.199054045 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.875319378 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.122701908 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152875984 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.539625011 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.256188566 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.157180396 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.151707828 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.22553708 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165197316 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168010838 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.143760145 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.79448808 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.173316158 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239461062 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121734706 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167346903 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201508396 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27819226 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149609388 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.785927572 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.24036513 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126519617 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140526922 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.79119815 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.163594364 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.252298212 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143858658 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112465334 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184320423 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.140091031 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116643125 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.151658426 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.139981562 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209665855 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.572314714 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148297213 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.235311265 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147691431 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.78127617 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137362725 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.31968925 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.166908073 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.148205508 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131958648 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128534857 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.209075686 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134264568 seconds)
  done (took 23.23016029 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.247105725 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.248803034 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.118225759 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.200168326 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.184485555 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.121244886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.143630691 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118581578 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.170581384 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.219737094 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181261362 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255163565 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133498628 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134435203 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.223887345 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293075384 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.149170853 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161744929 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.128906183 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151558787 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.182168864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.134901391 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.151862118 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.135778438 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211185052 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247544197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161128698 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162842322 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.142254744 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.138815603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182706844 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.201267055 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116582519 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143667124 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.21735909 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162418968 seconds)
  done (took 6.956900769 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.277921813 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142125545 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.310916428 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.237198372 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.170705783 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.23979336 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.222324985 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.331719282 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.375825254 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22022534 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168174735 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.138284874 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136462038 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.121369404 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.120419445 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.890935537 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.212839311 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203910033 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227745711 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155996314 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.123022404 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.770445693 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142509726 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.126984574 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152829268 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094728081 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.264829381 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154188777 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.521093278 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124700731 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155235985 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171599729 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.163318246 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.233472383 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162988434 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180240363 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15507453 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127117659 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.254043167 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157858107 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.23644952 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118873356 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138762139 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17294115 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156976288 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.1512679 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162496219 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174920183 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.127867467 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167687852 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.289661668 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.236346672 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.222232402 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.128326243 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322739538 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.168764861 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.141618439 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.151141486 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.882579545 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163735081 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.138945136 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.122167788 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154292739 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.137614849 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.854179029 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16195244 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.340452919 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.122799848 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.203476217 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15569857 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158056512 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127315952 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143553994 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.149509075 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.144446691 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121492598 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.144934971 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.121883974 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.148391289 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.145015262 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143756906 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.122585208 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206442008 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128073203 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.151869399 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.165265604 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151091284 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.148989298 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12716167 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170543545 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140374007 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.130234481 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.246137345 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.144157541 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156887651 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.145517322 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157796955 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.185546051 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143825742 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.336407107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.139130679 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.16377908 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.141282513 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169112085 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154969491 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122930987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.144784208 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121453088 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.141518256 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.190949723 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.144259701 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.124326409 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.14762099 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.134258369 seconds)
  done (took 33.37074139 seconds)
done (took 64.207008344 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.493975555 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10952953 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.129796843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109851622 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.130690615 seconds)
  done (took 1.706717546 seconds)
done (took 2.420938483 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.23229385 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.335771747 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.257145198 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.146645661 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21404311 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211504624 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197066609 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20820262 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217635766 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.215154159 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.141247398 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.236550504 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223616582 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.19496077 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141963865 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.248180807 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.191143452 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.215115904 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.244692005 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146106919 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.142465623 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.163394179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.146347188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146435858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.146115727 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161481635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.15061303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162507067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138692487 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.150293983 seconds)
  done (took 2.383245607 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.170219607 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14293746 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141201441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154032176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142844318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146285784 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142805848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159205327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.150091519 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162353098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139193756 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.146711766 seconds)
  done (took 2.359012053 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.12130569 seconds)
done (took 9.852276313 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242215085 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.956179383 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.200372483 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.313850081 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.380466714 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.323182478 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.675184298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.25248039 seconds)
  done (took 16.1868281 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.159656943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.246454594 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.158863185 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134606568 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.153626742 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.138866941 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.155594667 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.134010445 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.15147554 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.140406014 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.139135204 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.150094351 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.135914228 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.150978835 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.141964935 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.155605761 seconds)
  done (took 3.240592524 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.179681904 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178780776 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141993764 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161009228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.140248913 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160778257 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146064954 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158621033 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.137814446 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.156379729 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.14760648 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158792379 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.141616349 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153834152 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.142551044 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.178586833 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.139055978 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.158488622 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.162862405 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.159484911 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160680764 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.141056889 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.158436402 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.14257903 seconds)
  done (took 4.509049254 seconds)
done (took 24.668235613 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196394118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144556704 seconds)
  done (took 1.082541909 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.208826865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.229151684 seconds)
  done (took 1.186496523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.156996108 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151112776 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.165379411 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16375981 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137811942 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.152128409 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.162498036 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152031891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.136558231 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.154004441 seconds)
  done (took 2.284691644 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.138593126 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.157206531 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.15031022 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.22100437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.162248575 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.139324769 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.158040674 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.138512881 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158281299 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.135194042 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.156900976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153644895 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.156718589 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155048184 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.15666292 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14163003 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.160457912 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.139933477 seconds)
  done (took 3.533187081 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.134488519 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.136030163 seconds)
  done (took 1.025611915 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.137167955 seconds)
    (2/7) benchmarking "second"...
    done (took 0.136071092 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152728169 seconds)
    (4/7) benchmarking "year"...
    done (took 0.155022871 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.135743788 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135837251 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.15148405 seconds)
  done (took 1.758378018 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.611545074 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.27421643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.405172419 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123675522 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.138698467 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.380383177 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156842204 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106886603 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125614912 seconds)
  done (took 3.107610821 seconds)
done (took 14.727273722 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.137297961 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.331812788 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.660168376 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.174618714 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136863639 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.211111945 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.392106099 seconds)
done (took 2.803641711 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358722401 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.212647841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120976524 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138118064 seconds)
  done (took 1.587750768 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.126518425 seconds)
    (2/2) benchmarking "read"...
    done (took 0.144217581 seconds)
  done (took 1.037208773 seconds)
done (took 3.39032221 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156675029 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154016971 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139659884 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156240088 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.139649597 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156659835 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139452609 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.152775299 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139347583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153596148 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.262756889 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.158463444 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.135528025 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.156335911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13862735 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155545618 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138733937 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.154135201 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136682925 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156600071 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.138658988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153532083 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139752597 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155706688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139220844 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155185822 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137744934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.155043185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.140496269 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.159060474 seconds)
  done (took 5.315057597 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.141010509 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132126023 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153902635 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143519844 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149620043 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.135343879 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.149776047 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135584917 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.154336036 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135134909 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.153974031 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.13585672 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.151381048 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.135770538 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.154319175 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.137729531 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.160690074 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.13663544 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135398622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.154079305 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.138378018 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.152524473 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.135750735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.153474708 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135955851 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149263187 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.13553299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152923249 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.136490402 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.152940897 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.137298194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.155942912 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.134973628 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162438957 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.139504886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.135137316 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.158612491 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.133054743 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.154137672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.133744744 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.15093099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.135834275 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.153283163 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.141965717 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.1532661 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136131291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.152822975 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.138176678 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.152949507 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138405613 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150115489 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.136718272 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.138133781 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.154406757 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.138491972 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.150976111 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136164907 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.150705357 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.137357585 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.152510065 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13341029 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.151145412 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140578666 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.155632946 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.152400154 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.159339332 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.136569069 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.154785529 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.137105446 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.160006227 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.138782947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.164183197 seconds)
  done (took 11.228828838 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136300772 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135720584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154089669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137127643 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153470542 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136415941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154143388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13628879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153692247 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136452206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153487265 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136118764 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.135708275 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153431206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136729527 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.153766359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.136560943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154178503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136731578 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154175646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137268697 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154300598 seconds)
  done (took 3.955500875 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.28487635 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.143457758 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.203170965 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.149441025 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.172641371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.167440722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141599752 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.161035963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141995513 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16377524 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147032854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160120091 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154322203 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164701557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.164820151 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.147279423 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159836336 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148660311 seconds)
  done (took 3.758114769 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.136673959 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.136076805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156057658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136687409 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.154301621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137329764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155820066 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.13842016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154787569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137617767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155791056 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137840962 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.136884748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155474602 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137364165 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.155285338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.138350827 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153983848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137483508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154080715 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.138353811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156002329 seconds)
  done (took 3.988566102 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151994961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158738926 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157783524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.161814755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138000844 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157695858 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145122255 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158005052 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.14621586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.157062607 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.140014062 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15755808 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.153987528 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158158452 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.144953958 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.15823633 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1410047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158456654 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.139951429 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.138932771 seconds)
  done (took 3.809129477 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.232391941 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175552675 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174405238 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.164168976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.174492664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156641616 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181259262 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15502161 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174617948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.186011907 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.15551082 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173747711 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.163157514 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179746421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156521915 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18126368 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.16296008 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.181635335 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.173522405 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156084888 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184547371 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.155988194 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.182768468 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156129268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.174809786 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156495666 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174016492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.179110423 seconds)
  done (took 5.616471686 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.152576928 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167664424 seconds)
  done (took 1.114684483 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.141321417 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141711405 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160560222 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.140507185 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159143596 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.139806795 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.158776069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140633389 seconds)
  done (took 1.976336895 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.251253179 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.257955694 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.143778311 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.170008273 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.255345553 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236251781 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176257464 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1670086 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136800527 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.152606952 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247460519 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.131225216 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.158345936 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.136223287 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159265016 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.144970341 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.159735513 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.148198742 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.164143855 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.140371376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.162668813 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14558066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.159973407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.16077006 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.153097503 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.141833472 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162161014 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.150988007 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155821972 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.141402636 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.157966186 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.13994021 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.162263096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.144292652 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.160263397 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.256879777 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146171686 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.156628506 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.140773906 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.163580819 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.185402981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141380693 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.160387321 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.138196763 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.162887454 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.145671384 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.165426465 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.140088191 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.132553628 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155217874 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.140748132 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153701914 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139504696 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.158907047 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.13989347 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165890522 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142407822 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.155454488 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136130459 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.154486124 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138801189 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.155244847 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143777019 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.162348114 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141432657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159431972 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138790916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.159565592 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141145474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.160766205 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140183451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173900153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141649248 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165729052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145441533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.161005573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137585261 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16596843 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139698326 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.16088455 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.14504144 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.184294862 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.141448199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156223613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.13748319 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.166649958 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142219175 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163090692 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.13325813 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169192661 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.143463782 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.161355937 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133382388 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.158268785 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.136771977 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163893579 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.13481051 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160054936 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.140312977 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.1641756 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146002799 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158336353 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143605924 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165670332 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.146883788 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.158806079 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211402816 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138174529 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.135590928 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.162457608 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146594748 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.155069747 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.140081894 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.159470006 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13826435 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.156211953 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.145414161 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.161187905 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.143736964 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.164893063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144074574 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.161847794 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.145430216 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.171508759 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.137211514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.166167924 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148801858 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.162482472 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.142849565 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.161090865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.142279659 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.160106095 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.144483378 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.158402807 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146018974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15807004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.141217383 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.162871851 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.146533535 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.160009386 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.13762221 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.160247129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.142726855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160885094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.144652116 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.1618346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.137348524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.154481582 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.142654593 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.15732064 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.14210161 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169752547 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.137714834 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.164202166 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.138822448 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172026791 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.139331551 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.167087526 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.145552622 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.166642008 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.146832738 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.153527142 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139561805 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.16475001 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.142930826 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.157756939 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.143355644 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143645051 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.167335995 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135690478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165559481 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134218316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.1590254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.147203483 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.164831886 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.144509804 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.15823125 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176222177 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17341092 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147150203 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.161128124 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.141243504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.166698339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.140780403 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.166237478 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148584966 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.167603201 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.138966848 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.161812998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147072997 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.158648858 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.143259901 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.161012966 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144938369 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.154045844 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.143699926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.154773163 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.146566984 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.164524194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.146815193 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.168526023 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.144997637 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160613985 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.150735983 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.158825675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.147025979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15510838 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.147107881 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.172794259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.148592986 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167829929 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14476502 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.160632053 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.144817503 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170988354 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.145303042 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.163083291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.144105118 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155584305 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.135826087 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.148977184 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.165422644 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.140335588 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.162682139 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143779135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165328279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140067218 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.156045801 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146391268 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165253696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.138759184 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.16298512 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.139744019 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.160750707 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150302257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.15623162 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.138218685 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.165030668 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.14812284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.164117026 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143470616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.167045374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.148999441 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.165200809 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.146006596 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162045099 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151029616 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.161868158 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142939838 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159034154 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.145160657 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156614318 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.14451668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.16287911 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.139867217 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15850874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.146040938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169126749 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147812371 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.160761508 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.147281147 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.168929915 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.148776787 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161146214 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148241413 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.159709916 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.136046414 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159484377 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.137020781 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.164483654 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139087861 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.148162065 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.162324672 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.162695894 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147943205 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.165303534 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141772391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.169085647 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.154349257 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.157097766 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.136975982 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160871016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142979718 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.159659757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.140310488 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.163901484 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144410839 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.168756304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145355631 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.159623699 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143550736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.152755927 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.160092163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.148662375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.169864054 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.149084317 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.159457756 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147226521 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.161045226 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147048322 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.157882406 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.143752064 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163082527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142767203 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.159542953 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.14273478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.159306179 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.136704877 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.161555376 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.149744818 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.162638553 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147035485 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.16266648 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.140856529 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161568714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140417133 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170510269 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142392578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.172145988 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.144203249 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.158729298 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.136749776 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170342684 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143400163 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.169899456 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.138173264 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.167075252 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15016333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.167246142 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.145619654 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.172710037 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153083462 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.170709791 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149738576 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.15808235 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.141294858 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168584652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.144807411 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.167107427 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.146247276 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.159134394 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146623336 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.170184874 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.14523232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.162949132 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.137492123 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.144581604 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.171043457 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.148608553 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.166784302 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.146224384 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164894783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139692763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168167458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.151214656 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.165501531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.150040173 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164416473 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147775803 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.163411714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148880341 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.166049972 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.140497032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.157798979 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.142268784 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.170677805 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.13926309 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.169888519 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.149443735 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.161878904 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.143629026 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.168995283 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.140818649 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.16659007 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.149845936 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.163625589 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155718978 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.166656142 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.143416236 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.149035439 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.170255391 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138838551 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163123497 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143754978 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171712908 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.143397082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.169185134 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144338167 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171381966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.147504407 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.16929702 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150109247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.171245462 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139061315 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.171839582 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148309221 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.16790277 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.141369348 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.163550767 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.139375074 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.163949665 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.151001496 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.162591722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.153499389 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170304087 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144320787 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.163325429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.150481577 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.16369468 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15243996 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162904733 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148025324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.15933662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.148338006 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164913675 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.152108917 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.16262755 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.139639872 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171719928 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.15012694 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17038998 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147979677 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.171984078 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.140146176 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.158253707 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.148287006 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.163238979 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155992453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168294239 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.144148707 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.165445214 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.148301921 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.16756426 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152064447 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.140241054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.163407426 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.146280677 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168266051 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.14459829 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.16228993 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.149744642 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.164177181 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148630838 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.166065825 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.14088989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.165599881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.152962226 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.165805652 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.142009263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.164286913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15404873 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.166241941 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.143619008 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.160743726 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151364486 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.170063358 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152889311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.162569332 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.145959865 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.164021405 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.148409651 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.172692452 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.143804569 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166546228 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.144617274 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172317386 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151108416 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.159543462 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.143951044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.176841047 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.151954128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.168286759 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.149508864 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.16695669 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152782138 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174504454 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.149684563 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.162410265 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.142570867 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.165678259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.140226218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.169951237 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.150888314 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.166819848 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.144007695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17059701 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150278205 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.170421872 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.148716296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.162813735 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15532454 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.16590293 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.150771593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.141312216 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.160652103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.14933608 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172108969 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145761029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.168479213 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.148674673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.170835683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.14305187 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.16511038 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.151212216 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.172338693 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.153652755 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167506949 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.146539518 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.171167741 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.158067334 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.169625303 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.147926527 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174155623 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.153470333 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167414446 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.147783289 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.170814701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.153947221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.169363834 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.153894713 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.165840523 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.146268094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.174136565 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.154910549 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176089341 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146556811 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.161752789 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.151496108 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.165992566 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.141579195 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171244752 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.155467753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.174118546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.148570539 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.165725275 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157175795 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.173459138 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147674619 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.166103736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.145739679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171389166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.144882401 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172169351 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.145600634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.175765104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.154557816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17521667 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.155635154 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.163503374 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.154704385 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.17114373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.156416034 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.169484741 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.141773417 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.163882997 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.150639329 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.154694705 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.176241641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.152471349 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.172770487 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.152016859 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169009222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148141921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.165445897 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.155538169 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.173449847 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.150266385 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.170648718 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.148000401 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169004374 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.15022294 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.173444181 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.155574958 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.170109445 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158368507 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.174763312 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.147605753 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.166316558 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148981395 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.171011608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.149273425 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.173221996 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145484652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.164748626 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153891506 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175527106 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148433479 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176380305 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.155201461 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.167930285 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.151366428 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176900133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.153090139 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.15001956 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.169565884 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.152630103 seconds)
  done (took 93.887974004 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198878129 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1784582 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.150867735 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171950108 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169250347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174233774 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.151717075 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173048357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1527467 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181944136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151610245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170921203 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.165817809 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193483548 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.189664464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160947328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171384977 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152722707 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172140337 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153637202 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.187091675 seconds)
  done (took 4.468838342 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1506246 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.150535658 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.172034086 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152298184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.170677868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.151312169 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.171197327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.151468799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.17150731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150692669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.171824103 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150515742 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.151122317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.172965462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15089848 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.17187451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150998277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.171740609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.15174045 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.171317528 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152540899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.172059975 seconds)
  done (took 4.426811224 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.173514835 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155436596 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170064693 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152247404 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175750173 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152282123 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176104647 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153454943 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182018561 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.147691495 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164183823 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.147292568 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.171842535 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.151633623 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167353236 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151822872 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.181474037 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156316683 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178794101 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.151794354 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.142220962 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.173010446 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.152620256 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164291373 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.156572149 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.177746862 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.15557763 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.176724204 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.143098432 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.176563374 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.152519498 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.168106728 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.143721893 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.165407874 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142903281 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.17636417 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.155266211 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.152060275 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.1744806 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.143983385 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.174926438 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.157018627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.164782385 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.152741326 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174152747 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.146175417 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.177643796 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.152893432 seconds)
  done (took 8.652135954 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.182036443 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.211210749 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156511237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.204003457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.190598388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.162897802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177992526 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182669997 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178131943 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.156679724 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.191805838 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.16698397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.180404958 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.160302414 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.177544482 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.156450193 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179259986 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.155586399 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182670502 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.155573059 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.18392461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.181611365 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.166728631 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.186682818 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158335674 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.176541535 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.157271621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.180258962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.167115763 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.182723874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.160784591 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181430075 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.167329485 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.176224064 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.155932302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.178785219 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.190335104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.157695598 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.179063645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.155025836 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.179206412 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159215697 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.179499595 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.169061508 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.178589083 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.158925147 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.17876285 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.1538087 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.188644345 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.158282026 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184238081 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.169664601 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.182633456 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.158669952 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.182495564 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.190587568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.158020033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.177057302 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.159481389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.186673632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.155245135 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179910946 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.168146369 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.180383078 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162455977 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.189626453 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.160318282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179465576 seconds)
  done (took 12.775802387 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187350564 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182999675 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169618465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190254144 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161202378 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.435987641 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160935893 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181588876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.160532556 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187309645 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.182671452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.292456164 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162804211 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189087383 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.160090093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183959937 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160805181 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182869309 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160234723 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183075018 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.160286551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190402796 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161284235 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190017792 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.19429973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158332005 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182664696 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.161164585 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.191617282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161038243 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19520875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.162430867 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.182809551 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.191426522 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.171584889 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182545414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156910024 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.182759109 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.161212771 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182895739 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157260852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191885736 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161624289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.180483781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.162064672 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183056775 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.169474356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.193735842 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188765597 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.166778906 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.184932997 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.170023097 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18411723 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.161224212 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191070687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.19998405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170305704 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192308157 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162128799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.191476913 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172028511 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.199483419 seconds)
  done (took 12.250178073 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155945765 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.156277054 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.177843575 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.156435312 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178349152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157206302 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.178097508 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155953898 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177831672 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157083473 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179512922 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157392856 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178670876 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156821254 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.156276914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.178240202 seconds)
  done (took 3.584886333 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.173894623 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.194926308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.260410798 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.160141731 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180806626 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.164806809 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180115821 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.15908363 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.155485899 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.184358175 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.160987018 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.181099316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.19632337 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.158211045 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.180767103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.15983162 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.177246115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160419739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.157115331 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.259375971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.185533449 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.160146029 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.18103182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.162024055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.18150314 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.164111776 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.184721234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.157176082 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181861143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.159370315 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.18153167 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.165299709 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.17947146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.162754301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180636663 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.158393396 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178787041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.157966027 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182238944 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.158875087 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.181656356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.158911568 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.181076163 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.16039204 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.178432108 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157485283 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.178308018 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.162591039 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.181889493 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.159836108 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.18135201 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.162947531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.183769855 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.165072466 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.188425353 seconds)
  done (took 10.538731999 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168038374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182765138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169755694 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179256071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158262883 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.160304333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.182457235 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.159193705 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.182331757 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.155773328 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.183483963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.160517811 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.18165027 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159669826 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182786867 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160579603 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.17908838 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.160386876 seconds)
  done (took 4.000556292 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.15693946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156012646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.179845243 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156696562 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178493096 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.156116591 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179586256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157743255 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.179383926 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15606718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179287782 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.157880077 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155620555 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179517066 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.155965536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178775647 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.15587015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178977302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.15623365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.179291671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156831796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179782417 seconds)
  done (took 4.61500425 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170019999 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284591561 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.188111306 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.296241786 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.155399576 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177328436 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.164525473 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179562368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.193492215 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.156352562 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.176964723 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.155196871 seconds)
  done (took 3.238883939 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186743125 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217030152 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160098221 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181473864 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167867303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186004412 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162838141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184854281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170532061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197837559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185982105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171824092 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193972355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170668426 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190834109 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167637299 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18627682 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164176532 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181926361 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.200804582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163601179 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19314451 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164068627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185297733 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163636076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195255463 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171503959 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197923674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18701756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171613648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190939589 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164391477 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194338876 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175179063 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183664819 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171450394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18728846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20454547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169992833 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194476514 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159669107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191310062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171681123 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192394053 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194825397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164867081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192679263 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164077688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187484979 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184326239 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191419851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172819036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192997432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196224495 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173563579 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.2077693 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198676353 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172897462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192078948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175178021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194778459 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169687224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195303924 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198308338 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168127911 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195541772 seconds)
  done (took 13.004572971 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198598538 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184138871 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165150592 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198253426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173224628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187835416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164052606 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186953035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164911158 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183850854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.2315592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16586171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.197549913 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172976318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187571268 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16521135 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187353577 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196872109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162098403 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208767119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165232669 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195872034 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173745511 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19733369 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199440168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171165558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187499125 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16554106 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165075034 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194173106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165788909 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196104666 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1628362 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196160224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190132202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166632862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192828667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166179862 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193009507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172484967 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204698549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167278013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188124955 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200676412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166188495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188391342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162210241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188404984 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162870761 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201667816 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176450925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201253609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197831081 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165899225 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188211129 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.165758739 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189331738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168360759 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193142083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172695937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189699534 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208853347 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166137809 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188693684 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174352068 seconds)
  done (took 13.025666345 seconds)
done (took 229.998333961 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.322713853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.354882772 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150994594 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.429011581 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.151098463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.857677235 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.813438328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.257467757 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.151216856 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150375049 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.173993644 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.194784192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.559709949 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.174299211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.151880179 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.191951507 seconds)
  done (took 32.040031789 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.354138747 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.402934332 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.167143679 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.180765095 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.157442832 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.181826582 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.155027311 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181809273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.156751561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.185432943 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.156819733 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.175238672 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.185651342 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.153464629 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.180268213 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.157071815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.185358077 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158309539 seconds)
  done (took 4.439075786 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174800251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.327774586 seconds)
  done (took 1.479146789 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.189714684 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.279701531 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381557387 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.229900242 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177668709 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200060391 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.232122397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.170186115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.271649406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.16935102 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.194429737 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.179180316 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.183206369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.186499625 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.17413031 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.178232318 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.185560395 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195382675 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.17115381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181348387 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.18174516 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.182040815 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162418188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.195003092 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263571768 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.169402927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.184780841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158449033 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182916724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.173418102 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187442827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.175434477 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.193869228 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.240771204 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.184109626 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.212133012 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.187527612 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.157782772 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.19430042 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.158387774 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.184574223 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.184285502 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.167995814 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177769316 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.156865753 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.18446605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.156344067 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.180909466 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.165447356 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.18333954 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.165792349 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.18816791 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236904389 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.160761834 seconds)
  done (took 11.337441946 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.997562752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.20483942 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.181924344 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.137102471 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.205404852 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171378158 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.021279425 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183227699 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315378743 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.071435272 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200451473 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.166667857 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.332781112 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.339768006 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.342048524 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.508639283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.855506935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.173405861 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.214156005 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.203340085 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188028404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198665176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.173824701 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518570317 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.158556516 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181219202 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187866568 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.166781329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238460196 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.182082936 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.162895952 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.284711626 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.354048257 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274217648 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158597064 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180597405 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.157739999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.249558571 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.359443016 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283922419 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.252015978 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.155495772 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181185951 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162779802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.197365287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156239529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24495889 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.279086242 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.255970078 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185112618 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.167093189 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.190579063 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.186855479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.242890116 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.156740902 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.535502034 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537221106 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180996507 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165070063 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196236693 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337493254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.184517544 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.302413373 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203868692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283720447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.157526737 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.89765471 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.250309522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158182487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188516122 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.163110024 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188519149 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163547574 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246740521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.496006488 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16509199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.187659841 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.158665417 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.293076274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185205454 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.158056874 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243029783 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.184818459 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.165981336 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190650039 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189472683 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.255968729 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335385956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165740231 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189678191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.164996208 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193630397 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.161006935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.295908549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.320507783 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.24048938 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293897447 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163684852 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.247073941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.24927492 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188523713 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.257816237 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.186266121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196981524 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163968486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31495689 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.221564524 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162086789 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188963299 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.16615178 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.224035789 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164740257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189882048 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.255089479 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557331364 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.27076209 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.182233813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.164365906 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191094872 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245087944 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167163392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329737605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191783333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.25329616 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166548829 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.180944685 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166526408 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246357299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192542413 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191037251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163821115 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19345711 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345251094 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.287035273 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169407277 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.335542546 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.233984828 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.188908299 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260470245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189003254 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251619325 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170715597 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188060447 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186230644 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.892798214 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19706657 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166188879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190003601 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.246508322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.184148265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162600754 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184295459 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157253467 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8691643 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.189691296 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.158042362 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.186941194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1659907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190618122 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190987807 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.165448401 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247283807 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.341056598 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.19141745 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.165252733 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.185313231 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.218663126 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.186897939 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.161550308 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186348423 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.161419569 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.191596547 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.190643624 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.163008325 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.25504695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.24328982 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.298702713 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65686354 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.16149002 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185182274 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.31094771 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184816163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393639149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191999717 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.305772781 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.249969667 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.158099398 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.514879796 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248086434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.245070879 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.189258968 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.259280888 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.158739262 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.191754953 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.246313306 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.161820862 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192112865 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.242319669 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171617214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.191158319 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.334201511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186442549 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315837061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15909441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.257101562 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.185836965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190552427 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.396285997 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160722046 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198019836 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242380804 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.191637989 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.162542581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.038169963 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.186396025 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170864171 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.191384114 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.326414802 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.222511221 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191455969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.192868524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170984542 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246122923 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.295138413 seconds)
  done (took 62.383537671 seconds)
done (took 112.647982107 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321801195 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254687887 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.406973271 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236741479 seconds)
  done (took 2.288786769 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.340551626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.205333077 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.298115315 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184682526 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.305973422 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157357442 seconds)
  done (took 2.510330076 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23268948 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228172804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229205847 seconds)
  done (took 1.718028187 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.269248087 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269977628 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413062411 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325156227 seconds)
  done (took 2.367417349 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.339200022 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176852836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.217686951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.289946722 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.305879537 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.269455784 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.211023596 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210134797 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.216939011 seconds)
  done (took 3.289278254 seconds)
done (took 13.194864627 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.488539263 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.459656683 seconds)
    (3/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.241431155 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.297764234 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.527049426 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.37274228 seconds)
    (7/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.375322583 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.449718722 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.201413148 seconds)
    (10/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.253048631 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.279935843 seconds)
    (12/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.19781404 seconds)
    (13/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.264198749 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.391541146 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.331514239 seconds)
    (16/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.22781547 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.253045998 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.199459943 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.240028075 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.166722518 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.420917319 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.135139758 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.188668999 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.278807959 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.191453832 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.281654107 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.459940932 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.476946694 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.170851848 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.206440988 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.225253913 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.402457999 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.252312876 seconds)
    (34/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263152498 seconds)
    (35/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.260462348 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.171006204 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.217790039 seconds)
    (38/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.234007166 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.140279357 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.198603383 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.171245776 seconds)
    (42/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.222796694 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.249463875 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.137876429 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.2084162 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.171650763 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.193522947 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.209268322 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.132529992 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.286560662 seconds)
    (51/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.185961961 seconds)
    (52/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.21183223 seconds)
    (53/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.176668892 seconds)
    (54/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.177582459 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.203535353 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.196372418 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.134674709 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.20597145 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.2133095 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.187067327 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.227145961 seconds)
    (62/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.129605186 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.211415415 seconds)
    (64/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.129160246 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.228442083 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.135888836 seconds)
    (67/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.136510081 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.18851662 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.12969658 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.135953709 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.135556091 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.223520517 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.215289439 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.216880037 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.218920707 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.211165832 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146203423 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.171822237 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.162775669 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.174759897 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.129784301 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.205518458 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.17198069 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.162587679 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.164769005 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.19093062 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.164564409 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.210051638 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.171489843 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.198659983 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.168653591 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.215829145 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.182424669 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.225374993 seconds)
    (95/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.137150711 seconds)
    (96/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.174011569 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.19183341 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.137279339 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.189950931 seconds)
    (100/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.131922411 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.173415357 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.194241252 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.174707504 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.163423496 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.137644212 seconds)
    (106/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.133949837 seconds)
    (107/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.190594421 seconds)
    (108/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.28343718 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187063043 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.188071069 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.191889787 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.130190258 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.193069895 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.13292164 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189888575 seconds)
    (116/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.157790291 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.171966142 seconds)
    (118/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.188554339 seconds)
    (119/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.231000492 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.199999094 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.193295867 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.172072392 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.192468898 seconds)
    (124/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.227004918 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.197895961 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.165527388 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.215525123 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.165310494 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.19213454 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131502502 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.133368355 seconds)
    (132/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.201237334 seconds)
    (133/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.175139527 seconds)
    (134/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1585558 seconds)
    (135/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.20154611 seconds)
    (136/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133352072 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.211299939 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.184799506 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.139082546 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.192259637 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133698433 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.13408303 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.164707441 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.17301128 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.189023134 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.172606734 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.200177019 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.230040394 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.199491648 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.165606822 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.131104932 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.157446201 seconds)
    (153/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.133483638 seconds)
    (154/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.17213521 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.15853077 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.247288994 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.133831252 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.165272179 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.132806471 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.1385825 seconds)
    (161/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.165098877 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.166573245 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.190737652 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.138833129 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.144630119 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.135399714 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.194222401 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.172899367 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.192666304 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.138855044 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.214272143 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.164312627 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.131761833 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.213782442 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.13293489 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134631734 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161572305 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.134101453 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.13789744 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.193605899 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.130511149 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.167445592 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.165598952 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.167047271 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.212070226 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.138647789 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.133875449 seconds)
    (188/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130887537 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159789496 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.132705236 seconds)
    (191/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.132471349 seconds)
    (192/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.133131581 seconds)
  done (took 39.102013301 seconds)
done (took 40.125604039 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.318478124 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156318812 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.174882116 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200909143 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.299742876 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.182501347 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219035515 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175065679 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.211663764 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.175754733 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189839621 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188031464 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.200063379 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.311735573 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178684355 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194119156 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.165572861 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.211886594 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.190361311 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.216222859 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.301330686 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16712829 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.211955574 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.165209701 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.30049474 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195874396 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.174612657 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204296829 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.188055122 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.20244612 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.176086187 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192021937 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.190207646 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.216498569 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.165583512 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.202405263 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165901371 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.164967609 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.175514613 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.201854796 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.187898623 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.203548137 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.175499042 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.194973642 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.176133334 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202000774 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166140505 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.206981196 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.164076721 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.203259537 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167908423 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.216942628 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.17362691 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.191211722 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.164172131 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.193622093 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.184443877 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.191999865 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.188134936 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164681609 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193649401 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166073497 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.203192655 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166712623 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.201188116 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.16678844 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.20137794 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.178361006 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200684517 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169565222 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192176063 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.176125659 seconds)
done (took 15.136713656 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.169385287 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.236063179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.317639843 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.322114523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.194690592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.2107313 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.2085836 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.18951034 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.205643206 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183867941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.23040193 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.19876995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.322638019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.210489778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.183163926 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.207613548 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.178268661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200809972 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.318614788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.219474897 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.190530379 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.2115163 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.192193442 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211691015 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.171683336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.229580239 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.175157715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.204966514 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.170651207 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.207387689 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.21838282 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.170848991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.201607256 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.188299452 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.215994703 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181362833 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.211097953 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.179228636 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.197335222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.170681978 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.205683592 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.186274235 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.198014364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.183531726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.207085238 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.18740356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.204957364 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.184073357 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198490082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.178444099 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198638535 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.195474223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.210737985 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.18643351 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.218037374 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.183522839 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.21115385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.184736631 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.202111546 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.183148997 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.19946771 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171249499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.200218255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.192504101 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.202496091 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.183754579 seconds)
  done (took 14.541291691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.190918316 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229840974 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182115287 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210609709 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.177065543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.193185805 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.16455408 seconds)
  done (took 2.452385262 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165946989 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.337227714 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.325989083 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.325615242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.314110584 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.366494398 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.190171227 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.19618381 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.203426833 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206460633 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.336869782 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.394665537 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.207325061 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.212211934 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.331660079 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.167406464 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.33072758 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.196537416 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183599097 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.330612697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214461534 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.230922717 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.181014525 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197951146 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.331965739 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.168877006 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.410632705 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.186677881 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206967677 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.181794881 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211508233 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.246260703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.330440468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.212495007 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.176238654 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.35710505 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.318341853 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.186447995 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.408151219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.172512039 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.315665571 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.212649706 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.184686898 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.212220328 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183650023 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.31334446 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217607552 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183419151 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209839325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.341509945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.208597096 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.334403049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180715211 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.212516167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.180018912 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213897945 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191542978 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210190722 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.341392137 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.186011059 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.356872731 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.32906942 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.322201237 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.331660304 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.222507633 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.333497647 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.310722918 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.182341552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207273885 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.184482147 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.329550215 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210607148 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.180930913 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.318102496 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216133831 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.33370605 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.331759199 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209032634 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.182661816 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.201208457 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.18251038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.198040513 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.322384533 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.183514944 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.211159774 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187804479 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.214193004 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.184817349 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.203105547 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.22163098 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182985417 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209598691 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188643033 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.213002362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185915153 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.334194606 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.20966349 seconds)
  done (took 24.924709735 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170932617 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.170492108 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.20187274 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.171372738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.197744828 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.171995995 seconds)
  done (took 2.224228343 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.206749877 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.214091204 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192995519 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.213148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.233303634 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.321402603 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.328242251 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209801393 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.2341727 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.195353161 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.324494774 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.32722323 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.326509711 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.217914579 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.330758027 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186797334 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.332383221 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.215289341 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.193412436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211792872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.187821547 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218047742 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.182172435 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.312899541 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216990675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185618548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.209660875 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.226816687 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.192521241 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.207558722 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188076048 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.215122688 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.176298439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.207961142 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.331441771 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.177740831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210760072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.189311236 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.216944597 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.186279201 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.327616613 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214334387 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191844463 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.216769606 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.209765273 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.176698453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.217711528 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.178220432 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.33056122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.217670392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1876992 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.215183783 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.185895911 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.219397086 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.178408493 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208954731 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.188396822 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.328222886 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.219839119 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.177363078 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.215690555 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.186232396 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.210014976 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.218307317 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.185313549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218545661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.178094093 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.216781711 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.182893706 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.21765867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.188388673 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.215630394 seconds)
  done (took 17.224813874 seconds)
done (took 62.455314297 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.71021061 seconds)
  done (took 2.8512903 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.385085407 seconds)
  done (took 2.530882678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.728562725 seconds)
  done (took 20.905250822 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.542154404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512800035 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.110910696 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.242231302 seconds)
  done (took 3.55679226 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.209660859 seconds)
  done (took 2.373738955 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.48440037 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.351544992 seconds)
  done (took 1.988448559 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.87958629 seconds)
  done (took 2.050602032 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.979433498 seconds)
  done (took 3.142539255 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.379581883 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.31180237 seconds)
  done (took 1.862078938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.7304024 seconds)
  done (took 1.903331269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.777369388 seconds)
  done (took 17.955432376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324954549 seconds)
  done (took 1.500701202 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358608687 seconds)
  done (took 1.537865255 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.929289509 seconds)
  done (took 5.106475316 seconds)
done (took 70.417494659 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186199681 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.218010165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190051032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.215386691 seconds)
  done (took 1.970566631 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189453502 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.215378684 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189123736 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.183513578 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.220108028 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.214111398 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1841499 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.187883738 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.214495615 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.185452103 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.213719855 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.183111668 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.215364661 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.183190899 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21223046 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.188115998 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.216993393 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.186576552 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215691808 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184763373 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.215924054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.187701413 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218246755 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.189256097 seconds)
  done (took 5.965967182 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.181314765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.175753402 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.206545633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.175248644 seconds)
  done (took 1.922173264 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19481857 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.229748977 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.198328077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.224533288 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.199579287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228435548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184877709 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.213108705 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184796884 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.2248949 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.200328274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.230457707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.198488844 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.221679302 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.197617107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.210359993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.189015825 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.228549509 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.19394319 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.227578962 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.188805867 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.224538496 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.184301205 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.224627349 seconds)
  done (took 6.188038356 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.262513548 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227295236 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.213228156 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260333252 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.24527042 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182955715 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.245038803 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190599908 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.22199465 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192483522 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.216107326 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.233176703 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.22189028 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.187466968 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.217204027 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.19177638 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.225260976 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.191392969 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.25535973 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220040907 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190475749 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.2279371 seconds)
  done (took 6.006043604 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.190837958 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207528089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175019707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.204411014 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.190619507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.208837144 seconds)
  done (took 2.36468432 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17650039 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.171545936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.20090236 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.171459699 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.203812847 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.171321821 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198950797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170934286 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201002582 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170809952 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198905791 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170175019 seconds)
  done (took 3.390140114 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278585174 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219594375 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.356284587 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.47644379 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259473689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25857814 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.38192099 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232939684 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.280934554 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236457519 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285961562 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23116757 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254828052 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289522004 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211848604 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.248675314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275454336 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310976405 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21065895 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315272615 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256377536 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277064323 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261381629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24830684 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.241062129 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233601448 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.218599033 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198227864 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267596679 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265569914 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276975864 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250647674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209813939 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295663629 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32874159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279372023 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.368668456 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.232603696 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.264178612 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.260726848 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.363381903 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209917007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292738404 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254163016 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197869827 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292781304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255751939 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.291755736 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.201734121 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245018543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285365005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282124651 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.241157794 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236568232 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403036606 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230320564 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.210150581 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279018565 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290211791 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305799038 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28077722 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.191014658 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272275787 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290917005 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31878509 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.210497093 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.264116534 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226721979 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266289632 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276632139 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283293414 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260926431 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.292430512 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232989898 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24415496 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266723141 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25825445 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311703718 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241830596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.218848876 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252773884 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201993852 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226288053 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.257931558 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221024745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320344097 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199852024 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275428055 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278632048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259701265 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230702284 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262854514 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26529454 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217663305 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.193050057 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210963796 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.259225221 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260703207 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197475786 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.257058135 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240567155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.193254026 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253675658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.189889465 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272360978 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.195309172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264375411 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27238594 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.233249155 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249470146 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251150654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.264899765 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238187124 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297369627 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231576307 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202041389 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32335098 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273124211 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.237492854 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27489337 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268697769 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.24329428 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237317203 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235102334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295468393 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248400437 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305774672 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206825365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235508781 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.199578055 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275775747 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262237433 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.262001547 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196074395 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.266861426 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291698623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.195593144 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240414344 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288435298 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201574355 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224441622 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206842551 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237829346 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.24517849 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.220979422 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.240727468 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258867976 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238602606 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268347047 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261259294 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203603071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273844092 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233011006 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.239735704 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250995175 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.219565363 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.245560474 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301229999 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230938613 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282524681 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.233911004 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279265433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275679192 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230201872 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252016269 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228991845 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.189907706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263819146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.274390487 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266562834 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.259136843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306845445 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.235557383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.267458346 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253915063 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272114551 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.254546025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260418219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.248643359 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243627142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272348282 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.222301043 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.192502288 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.229969346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205937695 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231611424 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206298456 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284693233 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268711007 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276270269 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269816205 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208862114 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29793119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.228488564 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230739499 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.279926554 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241403092 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29281719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262353114 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283574625 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24215385 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266902826 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.190555963 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22902303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.203685902 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266995193 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241921912 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205898405 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24540249 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.296569213 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245572714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252616782 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289994198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268036175 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.306543765 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.190630827 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.264882049 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271259539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239486162 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.288698264 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203044296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.260947063 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.298305557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244640335 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296083241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239427805 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284711597 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303511708 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.269673836 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200160665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251787349 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263224546 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208308779 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263532735 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217174695 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231592077 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255243077 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.208629922 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243114986 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291717654 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214450076 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284328703 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.259302656 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275496347 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196875846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245039538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281145478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21743496 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.196711883 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283328389 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26336141 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252345839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263025165 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274571932 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200997933 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.425077061 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285460657 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254711757 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239133591 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241569692 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24401912 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261839703 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268469815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286985548 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212138528 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315144856 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273825646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.24691401 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20125641 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251649829 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220203049 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.233237342 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.25509829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.234598126 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.247412553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294341257 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206118228 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276511774 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283561837 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.247724515 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.21966864 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241062108 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334123446 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273383969 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243720428 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.270823193 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.269097496 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253051522 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225465962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198951022 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.235227312 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.287671339 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200908227 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286329444 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.265872542 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278859276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278221897 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266094469 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210957371 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228697854 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239384039 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253015999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284742389 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23485531 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.207410768 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291660368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.190111764 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233703178 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262753165 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393558458 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219340785 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276257964 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.167142298 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.38994481 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228158186 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204387729 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262150828 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274506578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.204286801 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.287750694 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278959746 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211292217 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263466188 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206633928 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.279568341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281509471 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271801581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282146266 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.217982995 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264797144 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266803913 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276977119 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218594227 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.251580063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264084191 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26860279 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.279400131 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.235459974 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244310042 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275201568 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277576637 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28012184 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210639876 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28591895 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231642212 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237580656 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241657809 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196827017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265901451 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.267725589 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232463877 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246482388 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277060425 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23508679 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199541077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250854625 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273090819 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211433982 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.233348285 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293052348 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.201065816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28872319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319305597 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201487971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271755211 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252738223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202200751 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242575214 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215796139 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235089934 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.252390971 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275597269 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.237440533 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282506705 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239148162 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267686176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265223715 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24854675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.337077477 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.232227143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299925628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222770386 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302361199 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255293936 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251597171 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274597758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256087138 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27203044 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220774152 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.327856527 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270650169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.241213979 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23515994 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249763345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21122916 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.238259405 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22654263 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279331906 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246591037 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.208178547 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.273933452 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25130577 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.220784055 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246973556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308230779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224859944 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295914454 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.292578909 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245422096 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249646234 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279922367 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233275078 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.238264562 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279003607 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250420783 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259276369 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.205271524 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243548645 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323849147 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.197823093 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267594372 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248653754 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276981322 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280020115 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.208271571 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285937556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245890555 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283998023 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199036774 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.261744753 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.27725585 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206050039 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.23215079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.246574489 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266719556 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.272846995 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216118871 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.283821986 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300762651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.196472083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239478044 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396032647 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23559122 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300611716 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.234262526 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210687221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251882983 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266758852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.238769343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278258045 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203475678 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233784691 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250985357 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22372855 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.231183503 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244783755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289650941 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269415282 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291697858 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.207328287 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.362669606 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250168424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.247821347 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.21232671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.202799072 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245890816 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208390501 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248578516 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284438551 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322312731 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.271569779 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.21986868 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.242351488 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201013545 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236223788 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235531004 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257673952 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279350735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221104749 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.199990072 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215355968 seconds)
  done (took 123.496533397 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247916539 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.318715263 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.288246182 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.319703788 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.32568794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.389048291 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.331806123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.339082771 seconds)
  done (took 3.880518795 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.224656972 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.242984931 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.252344133 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189446214 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213938854 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.619721636 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243220731 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.226449516 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.235535921 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.22826406 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.212220362 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.659182141 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.224600353 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.22473127 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.22262706 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181415564 seconds)
  done (took 5.716641382 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 17.116174373 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.390682333 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.852014085 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.429719112 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.591957182 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.302462031 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.023434115 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.305625087 seconds)
  done (took 29.332072449 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.246121477 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278014228 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.540176441 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.421219294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.29384938 seconds)
  done (took 3.100403653 seconds)
done (took 194.496347907 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.197140637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.736415401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229791899 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.201501495 seconds)
  done (took 2.672301233 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.258914369 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.155531787 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191304115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.154578819 seconds)
  done (took 2.089316765 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.500039609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.15561504 seconds)
  done (took 2.003744956 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217325519 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239492744 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208555356 seconds)
  done (took 2.004733826 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.208884318 seconds)
  done (took 1.541498533 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.19139868 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.19157835 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.390415142 seconds)
  done (took 2.106594614 seconds)
done (took 13.744211405 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.214161056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.035247953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.658424789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206822806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825667012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.476623288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.532965937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254482305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.277497338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21744338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.221671784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.797775267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.51736821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.951571763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.501019668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.952701432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.801876661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184530996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223278639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184872609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.510361846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183171716 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219020954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185190409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795788684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.490265533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216975225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.964423464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215808582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194426424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.506290322 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185131955 seconds)
  done (took 24.010771819 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.185847087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.27439397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240566421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219518029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192844862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219728505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197082961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230648458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.32212188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184965268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.240754801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185898093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223446031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.18559785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243102546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.184381737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221316902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.186069192 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225489119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187615248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237959956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184716462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218959109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185886354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218380614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202015024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218345807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197982207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218693165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195129704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.224000701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186532819 seconds)
  done (took 8.179711199 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.226746311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287282155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24270244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.258557768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.276459981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188116042 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308276377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259100305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.294415578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219794439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208168505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.219067544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.227119121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.211716359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.218537514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.189013745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218999573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228104131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187460532 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.242047618 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185339118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222432372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186555025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.219653587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.206874823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.219680665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.197453715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.218941703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196113035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225276489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186878458 seconds)
  done (took 8.538008188 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.20083775 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.201780506 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.242593353 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.244161177 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.19623128 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200072316 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234415791 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.196804229 seconds)
  done (took 3.061062409 seconds)
done (took 45.112894726 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208485341 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.23758521 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.208030505 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.202568953 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.387933246 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.193056963 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.240601046 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.192694303 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.201868178 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243772824 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.186783275 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.228113578 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.207505761 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.232348493 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.360146498 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.202928257 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.395957728 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.359631891 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19373681 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.23855202 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.195112186 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.361739235 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.23541295 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194935289 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.340861138 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.228118323 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.349170196 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.198266039 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.233082448 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.186949169 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.360281681 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.233749431 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.195364466 seconds)
  done (took 9.558387468 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.303100393 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.231330984 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.196943173 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.229748398 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.197285811 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231144249 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.344084169 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194930048 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230382024 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194023138 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.230276205 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289663292 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.237577162 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192411307 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231149252 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.176137007 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.344031083 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.232429243 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.188160016 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.159692438 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.226070629 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196373329 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.35704224 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227791124 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.19643703 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.232128886 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.19574967 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.201913865 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.232265554 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197803187 seconds)
  done (took 8.260140739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200234337 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208539258 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249852111 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.299224743 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.226603064 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.242607994 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.214239519 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.242335588 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.219371249 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.224269814 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205345927 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.259369007 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207911569 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234952844 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.19074157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240466156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.206406527 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.225042697 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.199304544 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.241843698 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.209731589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.24089617 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.212645925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.231855388 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.188466697 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.231842344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.200255504 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.23425534 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.197758259 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.240179651 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.191960045 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226686706 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.19301553 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.259047887 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191873833 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237478288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.210518634 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23745264 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.205028144 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257644785 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.192640874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.225838485 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.217412234 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281567169 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191567233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.23588748 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.192299888 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239140586 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.189233628 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242471679 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234603442 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224804932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.211771232 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.223254483 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187909749 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232197714 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.191071267 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228454222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.205885886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226473919 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.212781539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.233549162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202367371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226344494 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.202678051 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224612876 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.190901598 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.230200377 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.21807251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.233922569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.227356039 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.226030581 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201659581 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.23862667 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.201332444 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238133228 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189794584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.240321771 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201099247 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.230333422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204630955 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.22913283 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.192415506 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.242523573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210796035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.239721991 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.201710157 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.237779921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192325743 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.226622983 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207977691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.227898767 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.193851793 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.242018358 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191664751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.19511699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.235577525 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199818089 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.223296503 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.218160617 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.229358863 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192490192 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.252340939 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.196511853 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.228267871 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.201478246 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.26770472 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.191932151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.23447899 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.202016705 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.225626713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.200061071 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.227558479 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.191236333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.24151736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.207392295 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.234298027 seconds)
  done (took 27.090070229 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.454738071 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.449409533 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.299516157 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.53469423 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.205024821 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.405862751 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.446864549 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.454800233 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.228569689 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.226857287 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284550104 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.455231869 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.193381841 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.257750945 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.455790896 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.536024188 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.221875255 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.268183157 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.263897639 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.207155287 seconds)
  done (took 8.238720144 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.201523264 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.262227162 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214971576 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245446498 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.20150432 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.244122972 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19265392 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248855 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20329035 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.233889346 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194109252 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.233587147 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204855843 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.207100898 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.242206312 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.214148487 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.235255525 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.198671073 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248120513 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.197851474 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.20426752 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.21833825 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236047566 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.214566047 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.243422594 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.203266759 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.224590852 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.197495247 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.232006384 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.201218727 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.229457837 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.200640457 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233820652 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.172008885 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.2404137 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.20635004 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.234187799 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195815511 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.198891467 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.228001811 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206432587 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.236677816 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.201925647 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.200120667 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211255902 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.178264738 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.242762162 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.204307746 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.208806131 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.210842961 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.239445243 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.206152554 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233745238 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.215493966 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233015162 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.208742617 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.23857781 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206937965 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.233638215 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191481048 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.225495934 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.195074515 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.2355087 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.208013391 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238730764 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201131661 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.23564475 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192745824 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.197932245 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.231354697 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195474393 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.240761839 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.249996015 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.201448521 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.20071827 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.237965043 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.201577669 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.197736722 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.201707821 seconds)
  done (took 18.550484767 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.219273939 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.24130795 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209745104 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262339322 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.203953963 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.236074383 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203452997 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.212964152 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.242211115 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.212446921 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.244032967 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.242885278 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215495992 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.241506272 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202467815 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.246757792 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205267087 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.268080261 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205001539 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25802094 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207666419 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.234817669 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205940316 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.24154657 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221522076 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.243891127 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.22008262 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.242370312 seconds)
  done (took 7.806570325 seconds)
done (took 80.851031189 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.593982505 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.749116159 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.511762536 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.512306619 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.548124382 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.547143309 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.512867157 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.510968968 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.228813762 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.490409104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50947999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.510635617 seconds)
done (took 32.673170644 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.720857017 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.235933293 seconds)
    (2/2) benchmarking "String"...
    done (took 2.259215885 seconds)
  done (took 5.911959092 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.2156986 seconds)
    (2/2) benchmarking "String"...
    done (took 2.232470553 seconds)
  done (took 5.849333457 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.503180915 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.499676283 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.790657184 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.498933618 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.501844048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500616246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.515738569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.501921913 seconds)
  done (took 18.207105361 seconds)
done (took 36.592582305 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.501925423 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.931585312 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.774295709 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.48942645 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.497515282 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.52116951 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.497852654 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.581699681 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.510684373 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.496547148 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.960972464 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.819959069 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.507391115 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.975595061 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.490753746 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.507465036 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.497762805 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.888866912 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.50223149 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.549853757 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.484259111 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.485685543 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.513028154 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.511961261 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.515482287 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.513340966 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.490537723 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.49666667 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.866370378 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.514795986 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.551318231 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.496975936 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.494349912 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.499837132 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.510709491 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.509715239 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.830762581 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.521683684 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.496091254 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.514990916 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.828970527 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.518580834 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.507236608 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.517587051 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.504104558 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.49154139 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.497582322 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.629657866 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.527919377 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.514412307 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.549598598 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.964432441 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.5134854 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.5146642 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.502069739 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.895607573 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.517498256 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.520006022 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.531308219 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.513864775 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.509701889 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.502247993 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.539501573 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.513657824 seconds)
  done (took 164.350908207 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.502245923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.508121755 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.502468952 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.503741875 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.506411418 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.505842962 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.505856641 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.505119009 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.508334207 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.534112588 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.508375761 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.50215957 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.506876254 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.452435812 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.512473361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.531150439 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.509118442 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.504924347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.529581156 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.508109282 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.508363753 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.507459244 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.510074393 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.50414497 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.533002245 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.611774167 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.527487707 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.55023829 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.51755892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.505369353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.529084089 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.512374037 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.264109147 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.38011385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.517052023 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.525625292 seconds)
  done (took 91.557041766 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.506811366 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.503693236 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.505234017 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.545965704 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.511248977 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.218740569 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.218290755 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.611014194 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.058529323 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.57675117 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.902482806 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.507558231 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.604849118 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.520451541 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.51213314 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.607661667 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.531110825 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.504469845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.506367041 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.218838306 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.522676724 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.61709452 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.704671885 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.509118166 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.547589514 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.915318572 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.506127622 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.546324478 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.864289194 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.546724606 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.50565502 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.990117703 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.509029539 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.843604106 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.628104715 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.51056872 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.548057176 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.510862403 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.802312153 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.509437924 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.50736647 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.511603076 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.509707243 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.284759922 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.508857412 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.214278119 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.513593765 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.583980028 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.503487517 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.509876768 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 24.060271488 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.526334759 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.507061805 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.508416094 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.512442408 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.509359383 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.506684185 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.54851055 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.951506463 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.508785527 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.506946557 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.513980291 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.547396148 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.515100288 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.575831694 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.507235622 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 24.35807335 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.570003954 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.722046272 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.22144542 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.512379398 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.609192073 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.629948731 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.506406031 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.510487192 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.510421082 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.511574933 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.625903995 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.508943674 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.484009608 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.704958342 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.5109719 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.353842184 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.515128672 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.612023685 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.509583294 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.014594002 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.515102582 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.506462917 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.342666755 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.611201114 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.511420262 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.510426222 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.509758694 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.512218425 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.444164256 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.191408397 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.920450664 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.510096766 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.574997574 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.509138444 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.5803289 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.191628133 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.296283285 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.51256033 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.631569823 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.704804675 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.512373421 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.511235204 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.357690582 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.515421459 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.570436197 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.516119978 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.916651511 seconds)
  done (took 422.165308134 seconds)
done (took 679.474510952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.498939372 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.499141172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.501284482 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.501975712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.500390691 seconds)
  done (took 13.914149229 seconds)
done (took 15.324809818 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.517020819 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.518845426 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.520622578 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.322245535 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.52014721 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.542902668 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.522455113 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.518761079 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.519742654 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.52019485 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.280502992 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.536337633 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.519338541 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.493657129 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.30384575 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.520348943 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.393400009 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.52293476 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.520479779 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.820839179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.524248204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.580382507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.804535698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.5592341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.834416824 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.858190133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.523527208 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.729158431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.540937857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.538209438 seconds)
  done (took 21.730992491 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.418103421 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.8242698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.525472565 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.60101198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.804580495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.559725201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.829700851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861165965 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.526247367 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.691199018 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.538639703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.537873885 seconds)
  done (took 21.716415616 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.270025057 seconds)
done (took 96.661855188 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.556985905 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.623928827 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.554652595 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.532705943 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.531525757 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.53381585 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.529892209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.532153579 seconds)
  done (took 13.810894788 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.532023943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.530635719 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.532039507 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.532669166 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.531854322 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.532809765 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.534381216 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.533109911 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.533043434 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.53473144 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.534543471 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.532179263 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.534105177 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.532699828 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.535321825 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.534622542 seconds)
  done (took 25.9468023 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.536984763 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.53525463 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.532872461 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.535342817 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.534055948 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.535254897 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.535283632 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.534489466 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.534204174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.535618706 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.535138514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.534418056 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.534751107 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.531579299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.536420187 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.536785665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.532310227 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.532512581 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.535788158 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.536405825 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.536149018 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.535736917 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.535372562 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.534456171 seconds)
  done (took 38.255388635 seconds)
done (took 79.431331084 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.522546776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.522353317 seconds)
  done (took 6.461937175 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.592965193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.590652822 seconds)
  done (took 4.605009012 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.537001189 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.535680501 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.538427401 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.535753555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.536573222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.536826452 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.535631372 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.53571354 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.537057076 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.537062576 seconds)
  done (took 16.786519856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.53815037 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.536959701 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.537655048 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.540110291 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.534407863 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.536974314 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.535284273 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.53948085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.540054658 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.538263142 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.537359963 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.538745227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.537914584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.537586398 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.538378054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.537839008 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.537418393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.535534052 seconds)
  done (took 29.099534669 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.549312517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.555327953 seconds)
  done (took 4.526633014 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.665454957 seconds)
    (2/7) benchmarking "second"...
    done (took 1.581468869 seconds)
    (3/7) benchmarking "month"...
    done (took 1.642027772 seconds)
    (4/7) benchmarking "year"...
    done (took 1.634369033 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.57961071 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.559157309 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.580404365 seconds)
  done (took 12.664809334 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.538851479 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.825763248 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.010770229 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.698894986 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.524721514 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.55433908 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.509191715 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.555773774 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.554352843 seconds)
  done (took 17.191331261 seconds)
done (took 92.755641888 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.528063035 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.546301606 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.561629032 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.547340754 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.883872566 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.555699051 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.530876369 seconds)
done (took 18.577931625 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.52928456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.518810726 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.515729786 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.533731488 seconds)
  done (took 11.519766558 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.541020316 seconds)
    (2/2) benchmarking "read"...
    done (took 1.8519871 seconds)
  done (took 5.818404009 seconds)
done (took 18.762980358 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.542417711 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.543519427 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.539425482 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.541497461 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.539158828 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.542670564 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.542310889 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.537246467 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.543626044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.53997211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.541829757 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.542440014 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.541463421 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.548813987 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.546855592 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.544627048 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.547709569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.543387149 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.543757648 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.543640641 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.540768906 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.542206718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.542292289 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.541584314 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.542862921 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.543006436 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.54183381 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.542250188 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.541819551 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.542221247 seconds)
  done (took 47.702714602 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.547381399 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.549134353 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.542720944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.544655652 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.543522361 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.541216675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.54199362 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.544582212 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.54308768 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.542816319 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.542975231 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.544189115 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.543795299 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.543284107 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.544989184 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.54277768 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.545656444 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.542204979 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.546310222 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.544914806 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.544236731 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.545486191 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.543489281 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.544539371 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.544575814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.542715281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.545104767 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.545104171 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.544670202 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.546124086 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.543966305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.546607456 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.545422539 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.546078726 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.545275879 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.546920188 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.550343957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.552297051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.547890004 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.545811452 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.545007834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.545226975 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.551186774 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.548386609 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.544991348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.547076451 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.545858967 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.547172536 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.54837913 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.545544608 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.54632112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.547285021 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.54610245 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.549378764 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.544736453 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.543948747 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.545767011 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.54581661 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.545092695 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.545812908 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.547182102 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.545127698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.546960914 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.547213263 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.547711654 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.548198961 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.547816168 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.547243999 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.545555793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.547184818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.546534195 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.547355262 seconds)
  done (took 112.722259386 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.548835247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.545050748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.54552499 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.545281119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.545994799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.54760476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.548721299 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.548600925 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.546683538 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.549479811 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548558438 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.549740037 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.550538104 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.550182677 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.548386464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.550192613 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.547733636 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.548138275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.548653202 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.550997438 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.552423278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.54961468 seconds)
  done (took 35.496499899 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.548377677 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.551326402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.548200009 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.551322007 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.550928579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.550618477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.548416338 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.551460878 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.550968192 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.551226813 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.549151145 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.550617398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.55057224 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.551208699 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.551368159 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.546946617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.550309025 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.551272117 seconds)
  done (took 29.334268039 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.552107268 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.551548007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.550846822 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.552049468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.54978984 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.550118797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.552126093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.549556752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.551709695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.55249665 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.552100686 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.554527173 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.552758318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.552747263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.551514148 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.553214362 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.551420274 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.554781021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.552000713 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.55056157 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.550565972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.552915402 seconds)
  done (took 35.57700182 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.551518667 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.553759687 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.551550603 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.554826337 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.550760198 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.551529866 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.551823933 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.553119561 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.558035422 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.555636261 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.553875208 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.555377018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.555516978 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.552417011 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.554959661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.552697629 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.553973071 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.551804853 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.553009147 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.555855164 seconds)
  done (took 32.506091898 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.555014223 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.554702741 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.554491673 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.555037946 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555591514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.555626806 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.556299537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.554818195 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.557152645 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.555658825 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.555398501 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.555440914 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.55380031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.557594366 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.555988491 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.556161573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.555632902 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.556907969 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.557876802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.554486811 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.557462783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.555357353 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.555178288 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.557338279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.554563865 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.556124084 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.55623824 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.557231721 seconds)
  done (took 45.000076297 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.574681466 seconds)
    (2/2) benchmarking "in"...
    done (took 1.57562747 seconds)
  done (took 4.588431377 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.557464508 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.556341774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.556051987 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.556312049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.557193614 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.557547723 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.556444249 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.55728175 seconds)
  done (took 13.891921119 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.550386304 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.55911335 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.55871058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.557606825 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.558476406 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.546199123 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.561840754 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.563245907 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.552588856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.552577488 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.556805191 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.557553677 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.555933144 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.553538285 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.553316353 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.556117901 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.562358644 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.558077756 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.558315666 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.558767354 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.56080294 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.556307496 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.560088351 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.563687885 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.555301727 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.565852744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.567758435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.566976302 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.553186651 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.560393574 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.559550784 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.565122574 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.561151174 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.559597023 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.559756144 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.558553613 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.564436876 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.56429417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.56023608 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.564237253 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.560660804 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.56124484 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.556017652 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.561367503 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.557814166 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.566685673 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.558699533 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.559710543 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.551339568 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.560495838 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.564289776 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.554565603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.560914644 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.556305545 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.562915585 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.568159945 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.568358758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.557936307 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.557790125 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.568993975 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.580321125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.570219335 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.562128215 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.566891838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.557890345 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.569767113 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.569368736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.570167271 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.566363718 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.562072858 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.563647497 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.575637779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.577809726 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.569396748 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.560317762 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.562612615 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.558938434 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.563677551 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.568289183 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.571153048 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.567976908 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.562636124 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.559664324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.564608601 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.562590903 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.569466969 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.564030637 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.562512582 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.553779334 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.573110705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.574306875 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.565444761 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.557734022 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.559781929 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.564550255 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.567285014 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.557628805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.561105626 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.566523945 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.565894431 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.564464544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.561624779 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.567716309 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.56991268 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.565041281 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.568038504 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.570124393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.559663491 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.569883902 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.571059521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.563260245 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.559000975 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.564839251 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.566594509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.56070442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.568105441 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.567618684 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.563928503 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.57251779 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.564450293 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.564243058 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.572903285 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.567821711 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.562331956 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.558734137 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.571598444 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.564196837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.562402419 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.569216325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.563965113 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.562736109 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.560976564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.570995067 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.562912714 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.567100612 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.558606482 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.566197983 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.562872578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.563602687 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.560799449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.568541755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.562952699 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.565689446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.566858813 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.567505013 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.564380417 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.571937541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.56399184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.564479432 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.567217372 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.570314257 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.563258374 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.558207777 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.568744871 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.559079136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.567470165 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.559850217 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.565956285 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.56426402 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.565334414 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.566130918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.560258595 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.56346019 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.569369809 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.565490191 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.565360724 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.569016998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.565473893 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.564996611 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.558560822 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.569275972 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.55940838 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.565547732 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.570781089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.564918993 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.566201079 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.564732318 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.574074831 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.56693325 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.566802298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.561964594 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.568598377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.571419271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.570764251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.574287248 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.566786725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.566757309 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.561533093 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.564237021 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.569204292 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.562577452 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.574228383 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.576016187 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.580035576 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.564042115 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.571913903 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.559169651 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.571683396 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.569637968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.575435271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.569058621 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.564267759 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.564343981 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.576902692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.570310359 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.577797249 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.564665064 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.574034603 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.573317573 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.568993118 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.569241965 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.564005577 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.573657892 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.573979808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.570067678 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.571597884 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.565907072 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.579325502 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.566404635 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.571034555 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.57404857 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.576412959 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.574434608 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.585366006 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.574138307 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.583615909 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.577146505 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.573853679 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.576312498 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.575515117 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.5779979 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.582630827 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.579789952 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.573532075 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.585525433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.58123118 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.570667347 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.576878938 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.583871663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.574030984 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.574218778 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.581479493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.575664326 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.577885702 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.573132182 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.565897085 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.580369397 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.582403114 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.584189905 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.571906622 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.582514764 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.5710415 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.580238439 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.575206959 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.582393564 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.579121726 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.580628653 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.588294669 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.577276383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.572912423 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.58261152 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.575981239 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.575113326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.571044803 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.582537573 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.578914871 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.5822788 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.577924699 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.578153892 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.583040119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.573762915 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.579684008 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.57450869 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.593708007 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.599777407 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.582570188 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.586685893 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.580648831 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.583424158 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.580960314 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.580219216 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.577801409 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.573591319 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.576596233 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.577954124 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.582012468 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.573906732 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.583447176 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.581065937 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.583000318 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.583447513 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.579704777 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.575760518 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.583866224 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.580844964 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.5769371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.573680696 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.583075913 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.577941602 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.585974758 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.581552067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.578252123 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.591432654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.584560557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.579911585 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.577784203 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.578680893 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.574264211 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.5797925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.589567472 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.57880094 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.589030733 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.576989554 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.582367626 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.578919465 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.589329504 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.58980844 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.577610642 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.589731117 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.578683033 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.574998087 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.578817432 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.588091206 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.588451912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.595663913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.576793857 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.584401036 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.584753891 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.584027746 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.585735028 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.583423759 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.582952701 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.582825105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.58938708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.591113477 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.583425457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.585317101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.59123773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.584028821 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.583054132 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.575614388 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.58610746 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.593664539 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.580110579 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.584509534 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.5824273 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.587693149 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.587428587 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.586633213 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.585911872 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.585828526 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.591418855 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.591250951 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.591284584 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.584973174 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.590768588 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.596339821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.591922257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.596642765 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.5811272 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.593091467 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.58709177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.581863122 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.581663116 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.584131961 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.588727466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.578142627 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.592380268 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.588968103 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.582604494 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.589977335 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.59479816 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.58054324 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.586522968 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.599824825 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.580736358 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.59308221 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.586751838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.581467262 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.591292972 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.585857853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.579646791 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.585803112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.590065887 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.596978631 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.582944976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.592701562 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.581000659 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.592924869 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.588268812 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.58857226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.588939596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.58730446 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.583065396 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.590455818 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.587313965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.597824322 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.585624323 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.590876455 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.584123004 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.598239759 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.597780926 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.584254957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.597071529 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.589920897 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.584800908 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.588584717 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.596209427 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.583427617 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.594421048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.585302619 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.591937037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.586863449 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.593278226 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.6051768 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.598657136 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.585656772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.593621114 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.605066942 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.600601309 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.601932882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.598794817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.611638701 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.596603696 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.596957063 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.605199831 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.597962386 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.614857231 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.59902518 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.60355087 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.598497944 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.602359483 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.599195342 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.592070775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.585365711 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.588208645 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.597351581 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.608778663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.597518476 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.593465854 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.596803443 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.586513072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.596746485 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.594557869 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.595300278 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.59047724 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.597540519 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.587442323 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.590714387 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.594536999 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.600237152 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.601296133 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.607166356 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.595873374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.608789907 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.602270896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.60047933 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.586550443 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.591807177 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.588495074 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.593821788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.59501085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.589560398 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.59998215 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.601500515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.596963284 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.594234905 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.595576299 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.588100573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.599397285 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.595270069 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.590191127 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.602705598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.589463333 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.601946905 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.594953118 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.593917467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.590629505 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.590354191 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.592619745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.59819346 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.597442031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.595172657 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.599144689 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.596130897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.600158371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.595431149 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.597476855 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.596996896 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.587977655 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.598960231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.590214557 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.599128632 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.597259963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.591004619 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.600056949 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.59782251 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.5913477 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.600386613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.600963783 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.597584094 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.590773536 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.594683007 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.600973145 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.606086628 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.598426358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.593929356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.594644443 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.602967462 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.59779082 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.600187547 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.592038699 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.611629283 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.608676958 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.592100957 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.59959434 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.601254674 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.607166824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.60120757 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.600329908 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.594748655 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.597115558 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.609290172 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.601027998 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.60354573 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.604784064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.596362912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.605011388 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.593585608 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.599921396 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.600332398 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.610997226 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.600885735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.596379252 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.610347754 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.611728388 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.598184166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.616696663 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.608898569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.601719192 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.604540841 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.593195256 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.605033612 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.597895922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.604325307 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.601946086 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.601865868 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.599848704 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.632148274 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.605618856 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.607086743 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.608635958 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.60071244 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.59396951 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.59612213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.602924492 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.601432744 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.60405181 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.601723453 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.602204602 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.600586345 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.593819034 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.61258388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.616530122 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.605092054 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.599477744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.599539835 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.602677902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.607320369 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.602426835 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.605679546 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.598900578 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.602474893 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.599723256 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.609992589 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.603162679 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.597664465 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.598490058 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.595964199 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.606278904 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.610857143 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.623454645 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.605475749 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.605426507 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.606323335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.604211699 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.597920796 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.607962629 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.599971306 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.594528559 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.598778471 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.605964795 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.603135666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.60001214 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.597820742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.610613146 seconds)
  done (took 944.057359931 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.600647033 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.601933015 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.601164835 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.6014503 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.600351993 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.603306328 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.603934463 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.605441892 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.602778374 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.602281927 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.603523949 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.604870501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.603790816 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.604975866 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.607331493 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.604900638 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.601850937 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.605804979 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.605903588 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.604948052 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.602054302 seconds)
  done (took 35.154924837 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.604910912 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.604698337 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.604561883 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.606288231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.605226335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.603819538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.605571857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.604964268 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.604784583 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.60543247 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.605099476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.604507236 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.605071352 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.604474246 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.605735745 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.606812857 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.606125475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.605354418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.607485922 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.606897236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.607998945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.606325042 seconds)
  done (took 36.802055193 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.607112983 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.607481542 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.598627604 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.612817471 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.607473276 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.605360664 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.609390596 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.607554429 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.606313456 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.601322893 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.601439608 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.60382347 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.607943438 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.614953551 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.606601707 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.613917753 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.609676989 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.611295217 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.60901946 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.606968776 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.614665831 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.619072836 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.607393388 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.600180524 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.613779136 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.608499976 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.609115782 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.609639632 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.602820578 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.614391164 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.607428647 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.60342278 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.613165637 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.613118802 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.605691027 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.612987462 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.610579531 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.607145972 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.609752206 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.611257876 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.620698444 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.610099967 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.61520311 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.619902107 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.610576844 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.608108199 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.616111814 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.611077648 seconds)
  done (took 78.737206185 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.609859074 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.608350409 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.61107811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.607932804 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.612942443 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.609555481 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.612173155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.611218622 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.609829096 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.609362131 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.611346993 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.610806958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.61083495 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.60979899 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.611614033 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.610225499 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.610157269 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.61104721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.612082712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.611032105 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.612860957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.613184843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.612997158 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.613142726 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.611644914 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.613595822 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.610071033 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.611151047 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.613500406 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.609846994 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.612845504 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.611110049 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.613116078 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.611547032 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.612048232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.612861016 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.613386405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.610806805 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.613196241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.613216486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.612870369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.61162499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.615886504 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.61305541 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.614451234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.612167997 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.614090614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.613258758 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.611948855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.615128461 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.61377815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.61326841 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.614192843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.613800371 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.61209669 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.614042113 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.612723691 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.614601512 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.614826873 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.614007006 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.615361718 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.614681839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.61533304 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.614677748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.613529244 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.616084729 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.616154171 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.613322998 seconds)
  done (took 111.1343719 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.615451978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.615037188 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.614932422 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.614735378 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.61439878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.614748358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.615793678 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.615168578 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.613968227 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.614940313 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.615375006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.612015936 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.617959254 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.61640863 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.616717019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.614011281 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.616722001 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.617558413 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.615231012 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.616769392 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.616036751 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.615607862 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.617081292 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.617228305 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.615772407 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.615995377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.616784276 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.614905821 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.617315082 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.616651946 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.616372888 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.616628458 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.617426596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.615944667 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.617157668 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.617219555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.617928989 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.615863668 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.618821562 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.618784422 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.616723968 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.620076232 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.618623317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.619397533 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.617034877 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.619271823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.618505662 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.618215336 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.617522864 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.619764895 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.617353653 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.62007054 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.615838753 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.61983896 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.618318483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.619593596 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.619365663 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.619093099 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.620347983 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.619397656 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.620147049 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.619031866 seconds)
  done (took 101.744427479 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.619474247 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.622413512 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.621830828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.623393497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.620186909 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.623151226 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.61798193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.622513207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.622624001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.619491906 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.621376891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.622359809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.621665472 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.621098951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.620978685 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.623114642 seconds)
  done (took 27.436003492 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.621544078 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.620260293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.622375225 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.623127844 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.619400887 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.624307481 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.622166639 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.621795161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.621104271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.622226432 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.623434663 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.623580192 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.623483289 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.623798131 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.621603495 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.625291477 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.623538398 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.622298013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.622244039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.624006365 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.620673155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.620902163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.622849332 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.623057437 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.623807604 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.625457332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.624798317 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.624810807 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.624713523 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.624157448 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.624307044 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.625257544 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.62434432 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.624284909 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.623406009 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.622596066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.623729562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.623854453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.62459712 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.623978261 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.623168869 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.621976035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.624304584 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.62520025 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.624199594 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.625986739 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.624114403 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.62656419 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.624782174 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.625591445 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.625312611 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.624547298 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.623302894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.624811779 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.626765983 seconds)
  done (took 90.793117449 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.624329458 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.626033421 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.623452432 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.627268767 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.627286696 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.625803841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.628065219 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.625848171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.626436664 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.626598539 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.62430838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.627489326 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.62568519 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.626742638 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.62661737 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.629162265 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.627835052 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.62836192 seconds)
  done (took 30.772511207 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.628043284 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.628559836 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.630079729 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.627080462 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.627640331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.631230917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.628797751 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.627873131 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.629308099 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.626880295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.627487706 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.62830647 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.628892933 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.627625979 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.6283624 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.630091591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.630161809 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.629286088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.630836885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.630035819 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.631355971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.628853356 seconds)
  done (took 37.332828315 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.621940066 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.621248633 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.618358652 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.637157762 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.633030904 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.621061737 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.621941887 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.621197775 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.640791543 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.649523799 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.642950458 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.629475183 seconds)
  done (took 21.057747825 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.629645898 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.631813949 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.630405229 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.629606246 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.630928079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.628721282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.631686945 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.630073719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.630278349 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.629937776 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.631606135 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.630797297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.630734541 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.630547241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.630458371 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.632496288 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.631645551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.630741732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.62951269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.631747225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.630720747 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.631361477 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.632657741 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.631442863 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.632508528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.632688673 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.632254171 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.632858119 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.63455047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.631862062 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.633114996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.633363693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633094656 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.630231938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.632932211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.634560971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.633704301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633400885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.634036517 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.632319844 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.634297329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.634152633 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.634296695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632631029 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.63573606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.633450188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.634703399 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634121324 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.635971811 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633696584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.634360805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632918845 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.634073781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.635922782 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.634603076 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.633789168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.634475793 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634781547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.635890198 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.636745807 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.632190773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.634416603 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.634009638 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.634296667 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.633937702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.633638389 seconds)
  done (took 109.259821344 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.636774685 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.632712979 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.63406842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.634696787 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.634470169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.636217543 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634400303 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.632396289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.633347676 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.635953319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.636362239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635235544 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.635304203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635591033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.634397857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.636231744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.635917392 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.631770147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635656075 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638504114 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.635441222 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.637650669 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636364075 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637867996 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.635855441 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.633604894 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636085938 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635849065 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.635303962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638059291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.63776559 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.637384135 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636983679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.637613589 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.634147107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637352121 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.634802065 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.638570171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.638939114 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.635725022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.638516619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.63838522 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636312124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637489793 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.638415526 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.639039925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.638298529 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637756976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.634799124 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638869978 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636643789 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.638708282 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.63973615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639512192 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638049073 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.637300254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.638316435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636994734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.637646708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.637860589 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.638015046 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639288143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639970431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637984418 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.635727439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639568245 seconds)
  done (took 109.527707426 seconds)
done (took 2092.054119059 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.628376502 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.623427461 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.631778143 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.816572475 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.626916288 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.305559592 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.172237819 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.630566179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.632694239 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.632769531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.632863132 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.631202422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.96227803 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.630209363 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.632540786 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.627120159 seconds)
  done (took 60.32273845 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.664896797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.64482875 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.778895731 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.639461807 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.665804315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.86906419 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.704871272 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.641191433 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.848968402 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.642278849 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.632604161 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.664043828 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.638530997 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.635272988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.661889862 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.870604508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.960488852 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.650088566 seconds)
  done (took 35.322100584 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.203552644 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.684746607 seconds)
  done (took 6.395901625 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.661036365 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.640088615 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.642151307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.637892641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.642718805 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.652165978 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.635548763 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.641414213 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.627690232 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.798674412 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.642388101 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.650843038 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.637039932 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.635491904 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.644680664 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.68694367 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.776044695 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.644200525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.6441543 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.644309894 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.639991615 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.823761955 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.69057411 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.647116552 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.795339779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.632167376 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.642533178 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.651890061 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.803436274 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.647489593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.639230982 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.642251087 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.642824064 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.632191243 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.267200664 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.635575062 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.672356866 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.64834197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.651171177 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.799984393 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.6439179 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.645328447 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.634795483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.257940575 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.78035913 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899996485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.6358947 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.641100795 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.644621146 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.806520199 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.643676268 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.643721313 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.711004383 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.633873849 seconds)
  done (took 103.134152388 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.655214565 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.631376052 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.819495836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.654887202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.632341324 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.632729703 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.636547306 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01364202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.64074235 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.632903902 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016145434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.662735734 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.64940842 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.709046224 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.676067332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.80292816 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.636697656 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.641852219 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.632646087 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.63834647 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.644896949 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639218658 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.63534116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.83339791 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.676225163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.291567226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.643589948 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.629661604 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.661353977 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.631280821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.30923428 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.661305923 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.694471218 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.630167721 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975577239 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.141029952 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.096145138 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.63764275 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.659045214 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.636909679 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.633561339 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279297897 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.128156688 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.638227689 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.638021615 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.296220737 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.636651455 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.669484668 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.661829313 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.919095855 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.648123931 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.641233252 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.656110655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.641337981 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.637259292 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.665301232 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.67014026 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.305607477 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.635482852 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.636725077 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.676593531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.639966102 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.637977459 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.660945011 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.637473566 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.131287515 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837908557 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.638731218 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.101097046 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.314482364 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.63810316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.412093641 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.636339031 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.663067713 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.750794108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.645021366 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.634689166 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295642691 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.645570563 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.63534823 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.11126403 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.64227287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985052953 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.657556959 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.636759389 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.656859035 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.649579595 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.705221465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.638668755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.639134101 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.638516611 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.643655327 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981095375 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.689701083 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.655654881 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.640048343 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.673180552 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.638884696 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.64741736 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.64159826 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.413273421 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.66281424 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.640406278 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.66266588 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.643857348 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.642457488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.639696664 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.643084105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.313126593 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.646507594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.64189594 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.643360858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.637844824 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.643210462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.845365083 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.645428286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.038333007 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.636687491 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.639170072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.645318099 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.648513753 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.668945854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.640566553 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.676349129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.631676098 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.007298191 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.667573424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.643256271 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.645514715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.642380619 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.657464644 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.642013822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.677975585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.642353552 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.638511299 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.687650333 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.670598188 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.641699651 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.650702348 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.666244503 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.652157156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.653279994 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.984654346 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985662774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.874213059 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.645875842 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.645923156 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.650137727 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.694467674 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829583344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.667962848 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.641246895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950855977 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853431758 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.641796095 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.642948318 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.643830453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936218072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.646859032 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980852544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.646491382 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.646829198 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.652668442 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.670479355 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.43557849 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.64876243 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.64759988 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993957324 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.668042112 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.640845201 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.646706278 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.645597582 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.646009534 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.647570471 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.646447023 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.64412445 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.647210668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.721031454 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.848268278 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.668354033 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.643301311 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295453378 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.656189558 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.645913006 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.648056064 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.643591587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642830243 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.807544947 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.646569149 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.673850375 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.644385363 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.64636047 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.345457432 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.644366508 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.667714615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.85029142 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.670721359 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.675808184 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.66083213 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.646633856 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.688191139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.302737592 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.650020885 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.072358176 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.647411004 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.696062862 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.647935713 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.667426128 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.306227054 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.649344635 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.648721747 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.476352663 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.646900718 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.419431973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.644100846 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.646300173 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.429341174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.647931899 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.655527982 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.648168918 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.650856604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.654307034 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.670464858 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.683951619 seconds)
  done (took 574.922461586 seconds)
done (took 781.603344372 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.64837654 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.645283654 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.652645026 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.653760329 seconds)
  done (took 12.126072977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.665214281 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.655383698 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.661025704 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.653985503 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.663457217 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.653640905 seconds)
  done (took 11.479784918 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.648112645 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.647692824 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.653100995 seconds)
  done (took 9.474728003 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.918819564 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.654821704 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.096616932 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.668644468 seconds)
  done (took 10.866700275 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.661950059 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.661062492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.660754883 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.662644725 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.664450747 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.667842776 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.664695427 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.662975338 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.664495004 seconds)
  done (took 16.496502266 seconds)
done (took 61.968435846 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.633606018 seconds)
    (2/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.64225977 seconds)
    (3/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.738640573 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.730100464 seconds)
    (5/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.517767396 seconds)
    (6/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.332070106 seconds)
    (7/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.702546372 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.94395722 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.687691354 seconds)
    (10/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.77466717 seconds)
    (11/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.84543208 seconds)
    (12/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.807706163 seconds)
    (13/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.460381582 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.002573977 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.963560902 seconds)
    (16/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.946206418 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.635498034 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.804875851 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.639326696 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.761164535 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.64620867 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.637255236 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.733006101 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.632073776 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.74184109 seconds)
    (26/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.401509234 seconds)
    (27/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.640889656 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.637428173 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.798468004 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.837652751 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.639270859 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.601725025 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.562983547 seconds)
    (34/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.641546031 seconds)
    (35/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.529675045 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.791119828 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.731865302 seconds)
    (38/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.525017663 seconds)
    (39/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.39763677 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.727761071 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.686065129 seconds)
    (42/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.391726168 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.649508638 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.638489833 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.68447124 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.695778338 seconds)
    (47/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.726670202 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.947677362 seconds)
    (49/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.640718752 seconds)
    (50/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.015884666 seconds)
    (51/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.517870334 seconds)
    (52/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.752112865 seconds)
    (53/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.769857557 seconds)
    (54/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.67798803 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.759641671 seconds)
    (56/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.770385291 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.466660137 seconds)
    (58/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.655599069 seconds)
    (59/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.645614108 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.79440987 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.648608884 seconds)
    (62/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.770491811 seconds)
    (63/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.641074052 seconds)
    (64/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.705169708 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.639227484 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.642014757 seconds)
    (67/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.643056958 seconds)
    (68/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.725435983 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.893887827 seconds)
    (70/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.636971889 seconds)
    (71/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.646557903 seconds)
    (72/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.389089193 seconds)
    (73/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.639630943 seconds)
    (74/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.674450625 seconds)
    (75/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.641932935 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.748468596 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.639950001 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.697599142 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.636902861 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.837261815 seconds)
    (81/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.641554391 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.838223444 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.696513334 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.077785737 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.797148292 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.945036805 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.840873996 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.736790513 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.690563107 seconds)
    (90/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.685496494 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.79091723 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.742966314 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.654549507 seconds)
    (94/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.6589675 seconds)
    (95/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.643010196 seconds)
    (96/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.731015018 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.656088454 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.142854475 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.80255636 seconds)
    (100/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.702625049 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.688901612 seconds)
    (102/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.88808672 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.773028941 seconds)
    (104/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.64179805 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.643149159 seconds)
    (106/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.664694539 seconds)
    (107/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.750699434 seconds)
    (108/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.746880187 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.562131212 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.739514002 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.769878634 seconds)
    (112/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.825389828 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.67448553 seconds)
    (114/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.870278503 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.688756727 seconds)
    (116/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.703186095 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.686675802 seconds)
    (118/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.883771472 seconds)
    (119/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.640106335 seconds)
    (120/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.702872832 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.642781798 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.707823239 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767109913 seconds)
    (124/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.64126967 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.784369291 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.836725274 seconds)
    (127/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.903115497 seconds)
    (128/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.693004776 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.66103595 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.682325216 seconds)
    (131/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.916669259 seconds)
    (132/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.725258333 seconds)
    (133/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.736121069 seconds)
    (134/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.643827216 seconds)
    (135/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.537706527 seconds)
    (136/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.630302624 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.798326425 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.746802293 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.625781031 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.704245354 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.858592454 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.643300237 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.1233424 seconds)
    (144/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.693156534 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.783152813 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.687842541 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.726053032 seconds)
    (148/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.656361884 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.697545414 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.802702731 seconds)
    (151/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.648204342 seconds)
    (152/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.644204148 seconds)
    (153/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.901118738 seconds)
    (154/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.692307824 seconds)
    (155/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.644545309 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.056751127 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.811862183 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.540085145 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.646967052 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.22569153 seconds)
    (161/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.657170451 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.771660764 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.738097712 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.648954899 seconds)
    (165/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.670060478 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.673610154 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.83391312 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.701069747 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.767416718 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.545543736 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.773574183 seconds)
    (172/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.791978334 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.648897478 seconds)
    (174/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.342338674 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.652815249 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.874601495 seconds)
    (177/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.818631702 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.912085103 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.549195621 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.685089036 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.652419026 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.964346171 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.65145666 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.848570002 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.869809761 seconds)
    (186/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.649312725 seconds)
    (187/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.689029179 seconds)
    (188/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.79334107 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.647521003 seconds)
    (190/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.752855417 seconds)
    (191/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.78170915 seconds)
    (192/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.648659933 seconds)
  done (took 419.242025423 seconds)
done (took 420.768600227 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.696078924 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.762808178 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.674122611 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.676141381 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.674899096 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.664108774 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.696314351 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.679062432 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.693424513 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.691132647 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.666424294 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.686465025 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.692999096 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.687793271 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.709782887 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.676246597 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.676024483 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.688555562 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.687617892 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.695009043 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.68069971 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.678677634 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.70688158 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.676011513 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.684477854 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.682986316 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.682559732 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.675249963 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.682602247 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.69389036 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.682050014 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.681956214 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.690856348 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.687447536 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.677530046 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.686303777 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.680137262 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.767821916 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.70116473 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.687058662 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.684105936 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.694272095 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.6814916 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.682325369 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.688915926 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.704439384 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.684351584 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.693659797 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.681624166 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.67961939 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.697017234 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.691284481 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.685373902 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.680885218 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.675612098 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.689495388 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.689692563 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.701087946 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.686779554 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.681762634 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.711798312 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.701108244 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.690739785 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.685925816 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.687485593 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.698122807 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.690204947 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.696933023 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.686603503 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.684143897 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.681404679 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.688774476 seconds)
done (took 131.164713282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.802419338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.673496934 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.83555002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.683044309 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.851495944 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.80440612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.68451077 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.684590859 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.683857416 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.475547039 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.681843079 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.683805806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.673553614 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.685500251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.80153259 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.686352824 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.684911958 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.375214511 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.685137995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.815406407 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.679332317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.684686905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.686868624 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.49225331 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.678867623 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.671177772 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.814496857 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.687161274 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.390894658 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.669901245 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.672386832 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.390260079 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.813790566 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.701282169 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.695772367 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.695133795 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.85507433 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.688860874 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.803362569 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.805670599 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.840440922 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.72286486 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.672303089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.677085662 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.68773725 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.687791638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.685531798 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.715782153 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.675685429 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.68733685 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.375638706 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.696156321 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.696019928 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.685393268 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.688372667 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.709334192 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.690500786 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.68951497 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.818092342 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.68976973 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.800098409 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.491460032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.476734288 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.688056323 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.680344244 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.689909451 seconds)
  done (took 131.689511227 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.752691436 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.756641355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.811892877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.680618671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.733205723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.810095629 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.67937877 seconds)
  done (took 13.775087299 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.68800498 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.683802851 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.730602763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.731836503 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.688605986 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.85312763 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.689957665 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.696327366 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.69072647 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.7336536 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.691530925 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.690663881 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.698088223 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.681396533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.730544578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.696132089 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.797713797 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.683522476 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.689237619 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.83735973 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.69012914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.699186647 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.735225553 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.692129596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.690819636 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.691368171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.438384618 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.688227277 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.690808813 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.690681736 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.688971466 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.747661032 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.693525936 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.681131138 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.689808052 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.800353788 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.693744431 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.689175431 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.691002227 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.687539932 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.691722763 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.691815554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.692666079 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.693393765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.69261799 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.705051911 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.692084207 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.692477061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.69110705 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.692244117 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.732246797 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.692298147 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.692237574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.692132266 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.740065367 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.702843805 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.693485831 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.690219491 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.692021249 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.690845014 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.843111766 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.737010864 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.695453969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.736197549 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.697107231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.696236515 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.697093565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.694795066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778568865 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.691525403 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.734848919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.695558062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.868043087 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.715060734 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.696278646 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.691314269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.688400723 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.69435346 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.68393191 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.6952437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.697701776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.690630697 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.698503683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.696657206 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.695384938 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.849423378 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.797451865 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.693326861 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.702797011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.693649385 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.694532812 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.740456172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.694185062 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.696908847 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.73865463 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.807014613 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.74151291 seconds)
  done (took 172.421905068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.702794075 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.703044149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.694547455 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.718237421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.689134236 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.690794036 seconds)
  done (took 11.75502802 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.689720864 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.698647014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.695078053 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.699677541 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.698254322 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.696770597 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.695302064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.693555316 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.702622943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.700472295 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.701435524 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.698404718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.697012502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.701693422 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.701317906 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.700640011 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.699606685 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.701123181 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.702200791 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.699729394 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.687165678 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.699898662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.702193855 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.697097913 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.701301394 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.701311396 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.716786334 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.702379538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.700501044 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.703437265 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.702211007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.701146651 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.697325626 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.697071098 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.702572967 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.695427778 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.702248508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.70366304 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.701732003 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.699916725 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.702194447 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.700140266 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.70037231 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.702240748 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.69539893 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.697381473 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.706141579 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.717692816 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.700432669 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.703944593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.701806104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.700288519 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.700157381 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.701744356 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.696441272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.700610675 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.705470802 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.703421194 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.70339979 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.695226006 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.70460707 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.701371775 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.697372821 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.707084831 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.702914455 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.702056454 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.699201727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.707573571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.704239328 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.698864013 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.704871562 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.700663386 seconds)
  done (took 125.014092235 seconds)
done (took 456.203300973 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.013975547 seconds)
  done (took 4.573957795 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.840157789 seconds)
  done (took 4.403856897 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.242654135 seconds)
  done (took 27.8121736 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.703401185 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.798483942 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.704146506 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.701073987 seconds)
  done (took 12.468820572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.414687926 seconds)
  done (took 4.979199537 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.698916672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.713345384 seconds)
  done (took 6.97687273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.155974548 seconds)
  done (took 4.719807407 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.529324546 seconds)
  done (took 5.101933236 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.707898866 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.709737536 seconds)
  done (took 6.990811535 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.675999455 seconds)
  done (took 4.240712137 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.932604617 seconds)
  done (took 20.497375023 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.702315694 seconds)
  done (took 4.268643432 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.736754413 seconds)
  done (took 4.297728946 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.104113274 seconds)
  done (took 7.670794605 seconds)
done (took 120.565356039 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.690406023 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.689885604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.690349937 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.693678013 seconds)
  done (took 12.325412077 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.76980264 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.769866722 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.778631645 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.764250164 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.76453121 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.771483802 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.733600553 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.734114001 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.761348631 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.75848085 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.77338201 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.764965203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.773465858 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.732165571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.756771627 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.775257944 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.764775011 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.779514725 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.731168144 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.763421603 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.70972304 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.76618534 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.760962243 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.711070915 seconds)
  done (took 43.732631121 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.199601365 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.774531861 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.856755576 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.751058475 seconds)
  done (took 9.146115276 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.81474034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.813750331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.831354635 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.870594161 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.915316507 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.824657113 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.728426319 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.731376642 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.715151515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.81400397 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.888368733 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.810932787 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.030744206 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.708055706 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.03139218 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.707525834 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.706841887 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81359839 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.861313966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.891702094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.709946695 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.812504687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821565835 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.80914267 seconds)
  done (took 45.231107594 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.715338991 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.72454303 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.706139868 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.725548606 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.713149929 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.71178173 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.712171772 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.716754839 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.709732946 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.711648833 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.711539787 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.72543545 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.713025072 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.713159685 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.717096541 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.709939352 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.710818057 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.717605321 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.722107776 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.71136153 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.71301048 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.717562571 seconds)
  done (took 39.295861529 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.695792096 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.695772513 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.050800832 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.962927074 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.696027509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.702674923 seconds)
  done (took 16.373101282 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.794447267 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.955913098 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.702629917 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.171832969 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.286006458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.710214995 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.706810099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.004797118 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.410725522 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.453984447 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.758956545 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.792410955 seconds)
  done (took 25.322771727 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785749615 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705822294 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.705536681 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.810017061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708861777 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.709017625 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.720951757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305093258 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.714203352 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97950703 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705194522 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.793450739 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956577824 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704476496 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710626096 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.704459891 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938295373 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393475046 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712270133 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717939513 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741987993 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.70686816 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.706963362 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013578779 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712713247 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705385901 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.969296073 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.706908046 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087045915 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065041243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060774928 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71524428 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98282622 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264679904 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819668462 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986354802 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706645935 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713594241 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.68283169 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.712892651 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718524294 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.712530222 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060266422 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713487969 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.705724328 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722839035 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326007266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.722116591 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.706982086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.707673739 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063011868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794863807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.713348603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.707400518 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750526442 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714615196 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.712214459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837375682 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354410713 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710737668 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730234602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.713127165 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.712909569 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71611859 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.531925754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.722196673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.71397937 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714591648 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709183487 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.708713278 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736591096 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711170927 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.731619931 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708849352 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631796064 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717688168 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71545404 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415890726 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722157401 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.71593634 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937371203 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708872232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708499083 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.708177638 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709469477 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.715039888 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72058628 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.686643033 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74652167 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.290665455 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990332765 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737018214 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739247524 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932762327 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.686511584 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71269294 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.712490286 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719666658 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730611804 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287492823 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710476196 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.716101197 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958838472 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.923290214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717862168 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.708570885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318041418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720336488 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.73877273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72203019 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999246956 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.493918885 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075230857 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717004761 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751685708 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.710816541 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.711825342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725254812 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.722122116 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.71536655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047188402 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.689471906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718821324 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786056388 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714382836 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.712390993 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728238173 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717636855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711332468 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.975737083 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734422579 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066859422 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.720192832 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71318063 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.720064876 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72320625 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.717868307 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937103977 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726429583 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990596778 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712909171 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714796598 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714011052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.934049543 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.718727091 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.718978592 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055077635 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725755983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.75185324 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0676306 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75315511 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826715607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747636955 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.730360414 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969215782 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.72238982 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.721902606 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731480462 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.721407611 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720574593 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.72413207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70863574 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505957965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688677604 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.721058163 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716036115 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.733401172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791057293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722227695 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996939597 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.720443018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738811612 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.724774361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.725674661 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943976195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056753687 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.719079867 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9185638 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.317505449 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476001721 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733718052 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.717524444 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.718145014 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.716933795 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719735638 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716736909 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.717070961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996312202 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071446853 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.728778349 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477939635 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722909678 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.717958926 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.728854666 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05774095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.727428848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719980817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.719229752 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723367505 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738677548 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066912304 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982963514 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.736726229 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.720748733 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.237728835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725332766 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.718054566 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717343078 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744466293 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.717836007 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371421478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061371407 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72910341 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063043167 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.722320388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.741093141 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.71758945 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72465155 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726365425 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.736195467 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728291955 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.001772012 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745196348 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724918702 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359155667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648819817 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419554879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723181997 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.731197389 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.725439646 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305549673 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722563514 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722198992 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024561175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306638726 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721687392 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325462913 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.726201381 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.717150541 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068376841 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948142589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721834439 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.733388312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068980025 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933901013 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745923682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.727336781 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725127626 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.699774246 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423636598 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736493851 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905990405 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30590147 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729121036 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727410999 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.774452944 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.744439824 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.285413009 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.726481719 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72226252 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.734576403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.732248065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377026354 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.727091883 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722471275 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502332616 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.723851473 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.332983897 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722766252 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003927529 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070366371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.049294281 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.726946579 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.736145062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.969917825 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069353662 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72575241 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.729999875 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.425982483 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.582004388 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.732776701 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722764032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.724282346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736116739 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096152615 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.741948853 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.729562018 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729705597 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.723923612 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724763822 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.724708219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.73104856 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693850263 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37566901 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.724416515 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737502056 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.744274041 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72928321 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97365057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.740335884 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484875259 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954925057 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721168876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759563165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.730800708 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740323206 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.708935917 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.726159092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.725759227 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729311459 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949625045 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.725759175 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.707434415 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.823049334 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939382241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726918377 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.73538482 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021518539 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.730275686 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.746759134 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657908432 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759276089 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.736540049 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734015823 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.744848959 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759492612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802061628 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010897841 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.076939963 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074084752 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292705967 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.742747179 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73489977 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.743920293 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809054911 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73431445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.734400015 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.726310019 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507351366 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661731377 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507734015 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083963363 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.73324463 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739818062 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729623481 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97011106 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728384303 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005688261 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730002551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.752726181 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751811246 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743569715 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734410213 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945877869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004446566 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731010988 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739920316 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735033044 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.730754403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0803476 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.944211165 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399051214 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.448231083 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733531529 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.732968323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342786634 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010697391 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731129211 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732903024 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733764663 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.757157685 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.745784692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.741567836 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74717815 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961600191 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079692707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299978232 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08281424 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.765034839 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.619425493 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744562701 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.982755391 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.562937124 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017357129 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504050391 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643028827 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991195469 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806107723 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017998511 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.734668631 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968633166 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.738564024 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.736868997 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.732762189 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731818493 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.732586917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082588421 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500894572 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987814292 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.738986863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.743383288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766952753 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.019451292 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961860407 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736730666 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957606796 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091437796 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.7446574 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.734618637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504823784 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087313548 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736462882 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.739563153 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026803988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.739395222 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770983033 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.607675998 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.735127504 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452710569 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.948683137 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755147603 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733921308 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.641860017 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507367464 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.738113283 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.393909702 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738878931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756318089 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017092359 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.742511438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.741943304 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028119082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.742815009 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.742495824 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028125579 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.514588055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.744269986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.770386098 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756327734 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.74423906 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73782233 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812712932 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740634567 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73851946 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.26839983 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.740964727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738223678 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750130245 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.756188704 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.757111957 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.741179696 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740217331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.745529173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.745557827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.756810042 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.76152011 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865405245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451698955 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.742034131 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.353528195 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.076753469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.988290613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.754441778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.720717627 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.745777314 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739494417 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739672663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739890392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.752980364 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458523405 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.749241263 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.098323596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751335649 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.952288244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952819358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.757595617 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034693647 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753356845 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.764084091 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.717752759 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741591896 seconds)
  done (took 1160.188444616 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.766093674 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.76753077 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.753517977 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.85290536 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.743991292 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.910423082 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.843508871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.790983001 seconds)
  done (took 24.028199355 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.743551061 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.741942844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.73960257 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.744071458 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.744822654 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.321279053 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.740631179 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.744625422 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.760578151 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.738306659 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.737501089 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.478445077 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.744164066 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.754382996 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.740456251 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.7437381 seconds)
  done (took 38.826496325 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 20.601282555 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 4.274229012 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.881021313 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.841360038 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.854049169 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.739500599 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.397938013 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.770790422 seconds)
  done (took 48.961401733 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.750322497 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.75062199 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.75031741 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.750732366 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.75281205 seconds)
  done (took 10.35687349 seconds)
done (took 1475.354543858 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.751339252 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.749936993 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.751427589 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.750127846 seconds)
  done (took 8.605467379 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.720629697 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.72041349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.725893234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.742070573 seconds)
  done (took 11.513577937 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.721276803 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.459291216 seconds)
  done (took 6.783022511 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.743354929 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.508390022 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.493260893 seconds)
  done (took 9.348281634 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.037804604 seconds)
  done (took 3.640186033 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.170025683 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.260347289 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.737967112 seconds)
  done (took 8.771803082 seconds)
done (took 50.264449735 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.751159369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.504692786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.893061368 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.741125048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.900168824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.894471169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.012087046 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.74881807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.738595862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748971733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.743047198 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.90045943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.000623197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.506072115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.00213834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.508515352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.899133428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.744567086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.738307944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.741133073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.013358025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.746318197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.74964883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.754819797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.901866675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.886931859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.740568579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.508323164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.752894704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.753347864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.885140802 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.760282767 seconds)
  done (took 94.7746082 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.753384461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.738667525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.738711524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.740602899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.761438668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.741502826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.743491714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.752348767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.740781802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.741142443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.761451332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.754092902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.741055793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741754841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.741153114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.741073897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.754757585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.740831549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.74189506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.742280933 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.744246056 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.742021916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.741049286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.74773745 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.741365388 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.742494556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.741266286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.754477526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.741854113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.741725668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.741533872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.742629697 seconds)
  done (took 89.443588976 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.752111106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.751902858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.74130381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.750453116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.758932455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.745338393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.745434597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.743154439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.743313785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.759609302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.741886943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.753200691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.744129761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.759385759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.74540563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.743055059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.742560615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.764131229 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.749542238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.742726922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.763297508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.743220293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.742579143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.744278148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.743392876 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.744105014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.749778011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.745964848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.758081933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.76423634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.744080307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.74473102 seconds)
  done (took 89.576561162 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.984632376 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.758034889 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.760291988 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.752782241 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.759761709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.757635679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.751826617 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.990253157 seconds)
  done (took 18.124326819 seconds)
done (took 293.52263134 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.770390629 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.770970867 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.777378129 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.766336405 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.770571209 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.778218271 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.005404462 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.781582195 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.997180108 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.758043442 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.770612255 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.754154413 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.757690487 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.913803873 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.751213473 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.754710458 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.765608399 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.747232557 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.769053848 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.020468208 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.782082578 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748372772 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.755980884 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.756734197 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.73248148 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.839778359 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.839333417 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.926789499 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.893707408 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.838458046 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.749739927 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.755623731 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.77382469 seconds)
  done (took 79.184313527 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.754515021 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.761187473 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.761612999 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.760795143 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.7621058 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.762846497 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.755019736 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.761835726 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.762395498 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.762932885 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.761900557 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.762226191 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.762346326 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.76240122 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.761233671 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.743489992 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.754412677 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.762836702 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.755002982 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.743339222 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.762607385 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.762884002 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.765079858 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.763271155 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.762785374 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.762060311 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.762246889 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.765010927 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.762874155 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.763134226 seconds)
  done (took 54.421294793 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.761610073 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.772171038 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.752689957 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.769240273 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.75783837 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.761655079 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.140902024 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.765646848 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.760814437 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.761716908 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.772239135 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.768915852 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.814068596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.759078545 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.760868576 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.765587513 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.76347081 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.758869901 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.753134071 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.797975139 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.14942513 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.764814757 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.142729925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.774715129 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.763496279 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.760713813 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.76357863 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.754971184 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.761818861 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.772542461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.771661216 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.140758933 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.767727351 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.754534872 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.772704864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.772353105 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.766204612 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.754109745 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.765250698 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.760618684 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.153768622 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.766666429 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.769023382 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.754105667 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.763476289 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.768637735 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.754286799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.75560681 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.114373245 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.769209708 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.75539123 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.7638882 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.770360075 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.762368658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.087177949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.764975316 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.762529267 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.753868199 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.768822454 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.143575534 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.768522986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.763260151 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.777697963 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.762494809 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.772014521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.765906338 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.777808647 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.764164955 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.772213307 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.765242041 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.757088684 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.764107192 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.770047215 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.77519798 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.771142292 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.757184438 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.765740983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.757044862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.782743856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.15634068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.770954896 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.756456163 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.173048631 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.771011328 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.772753764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.77357422 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.769464381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.834189772 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.142998196 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.727284372 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.781391283 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.758978562 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.150473717 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.774578017 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.76472063 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.757124958 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.772062845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.772572364 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.768471884 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.758789036 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.767439416 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.778894779 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.760210859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.768185916 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.162127075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.776578088 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.759645625 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.767408864 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838032901 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.772672996 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.779005662 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.771412477 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.17389377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.77496908 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.774690936 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.759296865 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.762895114 seconds)
  done (took 251.719012161 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.765964518 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.760464051 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.771212147 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.759844573 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.759244673 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.770734989 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.762190266 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.762007557 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.76749792 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.761071563 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.765253758 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.771849374 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.769394981 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.76110596 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.785114957 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.762596611 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.762675007 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.786696252 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.76360812 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.764375735 seconds)
  done (took 52.956690392 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.775674249 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.504515499 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.502386363 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.780712122 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.774645424 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.770057299 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.84261186 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.776985098 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.774378077 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.162757506 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.007837377 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.78108813 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.77630981 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.776563576 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.49783326 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.760886527 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.164893814 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.507460478 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.777833996 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.507431378 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.756780627 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.77754697 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.768821889 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.509812499 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.17379568 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.153442205 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.846662243 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.50944176 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.777512482 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.775571847 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.508812739 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.777362496 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.770149688 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.543489084 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.782907127 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.790407155 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.777083064 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.848299367 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.849032287 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.166876966 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.513435412 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.176679215 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.794593149 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.972413344 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.779907448 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.757715204 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.518677674 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.780081734 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.756361477 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.779984083 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.783627903 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.519972653 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.778217584 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.519774246 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.784293298 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.779604612 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.510911147 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.522301991 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.496854984 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.007063747 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.774811982 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.159318025 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.781147533 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.522809349 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.782131933 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.779678304 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.780288358 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.006943683 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.513644346 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.157761697 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.169999264 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.18512405 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.783866622 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.857980389 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.781632295 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.169989965 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.856255857 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.197778579 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.171136594 seconds)
  done (took 161.679014524 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.106234129 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.885659014 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.248163035 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.435819857 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.365749105 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.933211406 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.911578273 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.062451308 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.786002752 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.882202616 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.607258536 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.883838995 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.64845424 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.855976906 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.896032145 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.92222567 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.272308148 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.779879482 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.511350924 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.579644139 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.776543868 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.923046836 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.614233368 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.209648098 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.795321571 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.616986756 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.793888844 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.392012819 seconds)
  done (took 66.325996605 seconds)
done (took 667.895540621 seconds)
SAVING RESULT...
DONE!
