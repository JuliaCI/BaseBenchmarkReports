cset: moving following pidspec: 30073
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349481432 seconds)
loading group "string"... done (took 0.550208458 seconds)
loading group "linalg"... done (took 6.943335127 seconds)
loading group "parallel"... done (took 0.154486082 seconds)
loading group "find"... done (took 1.077359818 seconds)
loading group "tuple"... done (took 1.792392766 seconds)
loading group "dates"... done (took 1.225758856 seconds)
loading group "micro"... done (took 0.222315371 seconds)
loading group "io"... done (took 0.998588259 seconds)
loading group "scalar"... done (took 36.113734309 seconds)
loading group "sparse"... done (took 10.855297862 seconds)
loading group "broadcast"... done (took 0.961026227 seconds)
loading group "union"... done (took 11.877344122 seconds)
loading group "simd"... done (took 4.203395946 seconds)
loading group "random"... done (took 8.454130618 seconds)
loading group "problem"... done (took 1.738983313 seconds)
loading group "array"... done (took 19.865373494 seconds)
loading group "misc"... done (took 1.670987706 seconds)
loading group "sort"... done (took 3.074425538 seconds)
loading group "collection"... done (took 16.021345312 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.502316467 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126987105 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118543476 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12248287 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144530603 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12004042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129426087 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088317057 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866603637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148678181 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121710998 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424374803 seconds)
done (took 5.250760441 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177095787 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084558061 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084086588 seconds)
  done (took 1.462923311 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067296962 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125397937 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068386789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068016251 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06857533 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06842544 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067522363 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068019786 seconds)
  done (took 1.829270883 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074926295 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070291535 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069778205 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069468879 seconds)
  done (took 1.578151334 seconds)
done (took 6.420852692 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.777504541 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203830948 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18488612 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405447711 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129910009 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155199068 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634686558 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321139471 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184542537 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0813238 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105061323 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319467546 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107305663 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643438152 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078822606 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090894992 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136015147 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447281995 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067079074 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081871963 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089160876 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128127062 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087792927 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074211358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144049473 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067560621 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129423367 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080444693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06637205 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206872532 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172664273 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676171532 seconds)
  done (took 10.410904414 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096160043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097667927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068136733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13620764 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095525154 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069536115 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070741999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066743127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086614309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127142748 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088366843 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100778961 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065243541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068246698 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084220052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203732088 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079669642 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081135615 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070224828 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075357352 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116230901 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078212318 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077537652 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077469567 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128106921 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179632108 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099132153 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099306462 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068969732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079976133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114263964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125283126 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065431154 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066034127 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123548965 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094132009 seconds)
  done (took 4.75779096 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.927288471 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140048579 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090969824 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130295984 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064733308 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106759628 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065454911 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080265106 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199183589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.293533861 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571396879 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110447547 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100399002 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067526695 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068071132 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066283179 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354751 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120701288 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103198613 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081028726 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069989798 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068913039 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355668551 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0675446 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064097046 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067786267 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057648835 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122999949 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067949376 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925097124 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123865281 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066384604 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099988911 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16811593 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107383947 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085879602 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272861583 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068237481 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065015369 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150046317 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070097612 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065773081 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084151191 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103545079 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112668985 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064789302 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066536406 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161146775 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066763279 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078876968 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.982953362 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154248118 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078792055 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065545834 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247511606 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085950428 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06895914 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065182754 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18275476 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135157632 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067217391 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066954418 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067587952 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069621084 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349858063 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06599224 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.746506577 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069837336 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075730864 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069306908 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069016301 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064323679 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072576584 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072210033 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085456948 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065737444 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074944103 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065608392 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065889939 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06627408 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083738145 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361068537 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066444871 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068321228 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064211484 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085771287 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096925569 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068284851 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065139 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099839885 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063714011 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067574434 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070144483 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104644003 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066441379 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083755861 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069109399 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112731285 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063542562 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065394541 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085362461 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065864472 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09523704 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068635257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098600287 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079605883 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066865081 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.390479031 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063949301 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063625596 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066769088 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066334673 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066229195 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065346783 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077642773 seconds)
  done (took 20.900908738 seconds)
done (took 38.290992326 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272603652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075868432 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075016371 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074925257 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075726256 seconds)
  done (took 1.962920951 seconds)
done (took 3.3542983 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120656159 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099146528 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063616967 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095318231 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064227654 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099322068 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098632339 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08038935 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098950728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063944784 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096101266 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063986747 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063743102 seconds)
  done (took 2.495711379 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082690892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08303903 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069587983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082531408 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063802276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082267023 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080856868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087926439 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080992738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0723031 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063627746 seconds)
  done (took 2.212742426 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081726717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083951884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069657106 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08184118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06405459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081786292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080827945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085004004 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081278545 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073126914 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063437907 seconds)
  done (took 2.205216052 seconds)
done (took 8.271248428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077317164 seconds)
  done (took 1.42746498 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.584591805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.085213489 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08135025 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11202594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183058078 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119355525 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278071986 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086924879 seconds)
  done (took 9.062270261 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087673097 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081252314 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068455163 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06961085 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069332936 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070763634 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071306619 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071932793 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071719799 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068128885 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071712237 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071670532 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069506964 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068899097 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068293064 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071058667 seconds)
  done (took 2.572723158 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091912335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089907462 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074135837 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074419203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071586247 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072037241 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073894358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073325872 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070748228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07178702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074401387 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073736705 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071371617 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064775497 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073726472 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075281762 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070607938 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074328735 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074990642 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074756526 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074272 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064460809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071318181 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073998179 seconds)
  done (took 3.234694491 seconds)
done (took 17.656188234 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112875086 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071406495 seconds)
  done (took 1.544614883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081310499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081887021 seconds)
  done (took 1.532459613 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082073768 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065700466 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089552437 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077656617 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066021138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065765851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086788561 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066299481 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065408443 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065881103 seconds)
  done (took 2.099106858 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067994398 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077682513 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070013194 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081183933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073004305 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063780941 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072898081 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067895973 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077556136 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062669322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070802945 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082120748 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072651464 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086321011 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073622778 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068802608 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070370272 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067415525 seconds)
  done (took 2.676458515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065811541 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066386528 seconds)
  done (took 1.507439849 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067473752 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063015677 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067333182 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066626805 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063366921 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06219672 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063256273 seconds)
  done (took 1.825028318 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386581401 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110418467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.295810896 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070944655 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081989026 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250073658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065503746 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070167402 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070364673 seconds)
  done (took 2.816814026 seconds)
done (took 15.376960053 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07926668 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085698125 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095004822 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363852565 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091556616 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065703874 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113526421 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190658507 seconds)
done (took 2.472587073 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213263414 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602432143 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.37886706 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19446437 seconds)
  done (took 2.554873536 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323574343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086106979 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058521113 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068256718 seconds)
  done (took 1.92237538 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065979615 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068337165 seconds)
  done (took 1.519010126 seconds)
done (took 7.59429628 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06624816 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06539601 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063593494 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066290496 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063000523 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063496314 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065494885 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065514463 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.065310686 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.065142256 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067871029 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062976575 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063001655 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084402135 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065275854 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070825778 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062994163 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063038655 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063011978 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066026929 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062982976 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06529422 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063031631 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063104527 seconds)
  done (took 2.991561511 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083061491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066100729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071449107 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070662881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06985745 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071095635 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070610834 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065780567 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070478726 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067701571 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069208835 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06937048 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0672744 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069512852 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067866348 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06966351 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071449664 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066168817 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067648307 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070049697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070607188 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066013331 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069413441 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070479938 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069355572 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069404943 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069979812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06604448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070603265 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069181347 seconds)
  done (took 3.479823081 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069428084 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064104283 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063852786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069801327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063845133 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064808725 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062735125 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063547931 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064219974 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06290369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064507962 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062967634 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06310181 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064044395 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064146811 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066875023 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07832696 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063368778 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063209425 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064439317 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066204457 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062996373 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063180483 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063111148 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063088174 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062912176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063611541 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063223813 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064206979 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063048736 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066055412 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066822137 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063283353 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069695981 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067064312 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063148997 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067037381 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062624932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063877931 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063209445 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063086127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06319644 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063513845 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069815998 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063302869 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064957394 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063111365 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.176076763 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063650078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066080329 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063005895 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062981258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064955223 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064209146 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066741592 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06261483 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063938798 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06252096 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064175839 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062821171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062537304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063065017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064980289 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06353749 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077082216 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069482646 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062575278 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0647216 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063727715 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065386512 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064500733 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076139251 seconds)
  done (took 6.180466558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091277089 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086950868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065410603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064538919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061496769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063447234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067256465 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063587301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064771937 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06929086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063736532 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064967935 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064721177 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076472786 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064093996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065047733 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069302598 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061480228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063658435 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066964862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063835018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066678556 seconds)
  done (took 2.895562649 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154551215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070593178 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10473304 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072454508 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067415053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072389987 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069393991 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0696829 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069869413 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06805423 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067742181 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069449676 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067273313 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067662159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067728164 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067812475 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069596064 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067945381 seconds)
  done (took 2.762955411 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076986284 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065658955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084992398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065531884 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065502097 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067845802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070728537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074093934 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067967735 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065570151 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07389316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067632399 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068050238 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065402029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067995525 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065437821 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067964815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065563116 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074129326 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070143572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070058606 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07407792 seconds)
  done (took 2.935206511 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078837941 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068046936 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081974241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067768326 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062460049 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063951854 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069626116 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065724559 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069775263 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067125235 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065738132 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063848786 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069059678 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065749131 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06895009 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065501054 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067041191 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065270955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066917877 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061325119 seconds)
  done (took 2.757304148 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086919276 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066717268 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067910866 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076342524 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06722589 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067294129 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074781949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067079982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067269169 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086956713 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06682463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066871662 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074766076 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071732151 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066830226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074648463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074443282 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074819762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066929334 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066806952 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087340204 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067089963 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074579406 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066990997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066563217 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067013002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067350471 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071880582 seconds)
  done (took 3.406149091 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066078283 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065542255 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063359871 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063218345 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063348337 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063427632 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06331451 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063161835 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065720312 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063955768 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065530081 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065679876 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065774823 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065510531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065539723 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06553412 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065728682 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063031605 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063134026 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063084003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06544969 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065481134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065755519 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063394693 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063175651 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065460972 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063065846 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063342689 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065561322 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063039617 seconds)
  done (took 3.340987797 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075699793 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072777779 seconds)
  done (took 1.556424175 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062872775 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08008325 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063677544 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069629969 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069687879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066443185 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073281499 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069987389 seconds)
  done (took 1.960006312 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081973991 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077611504 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067710477 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080715355 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076012941 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082515595 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131898061 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066888132 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072802191 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064050173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079401952 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065420307 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071919638 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066680901 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072221321 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07249297 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063796757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071926606 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068320718 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064517106 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067192811 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074879025 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068233234 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061738275 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067280713 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087235919 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076470627 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06543168 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068728372 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073467253 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071259337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06000073 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065655666 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066277557 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064043344 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075455091 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081177413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068721208 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074761496 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066851295 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076589195 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061033151 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070203772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07209385 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075810499 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065771679 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066646971 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060860092 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063703623 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068340879 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061273019 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065608403 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060677597 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075295001 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069068016 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076578799 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064553888 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067093163 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068729699 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068802247 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072017922 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067537922 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068311283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065651884 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072273635 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070210119 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074475755 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06102729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059942923 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064135857 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075732132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088989909 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071984149 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066781801 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066972228 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063925421 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06914697 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067443116 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071820762 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073038017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066176312 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071313433 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07318379 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06623295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068274274 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074291309 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063897604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068687655 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063518476 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081757133 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064593819 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063499066 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063760294 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075705998 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069184099 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065671033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063575121 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072923703 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059974898 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066245702 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066664273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066798181 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075978603 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07049512 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071065747 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074602121 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073356122 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066026528 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068544315 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062646131 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066812891 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065264444 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072904742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059961539 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068706306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066307021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066121885 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199673491 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064420777 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066522608 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073445538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072902544 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064596732 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063608956 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070087286 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066618176 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069775059 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073911743 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065122325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061555261 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061917887 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07006408 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066533948 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070520322 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071972676 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070060836 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06169595 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064687914 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072241723 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075201102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066419017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067669139 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072363371 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067755442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065119028 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07292006 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068938412 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065295664 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071589694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067449027 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06158517 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069979837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06938799 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065221283 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070120533 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069461802 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068505382 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067549043 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064838385 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074530612 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067777472 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065588056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066005868 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064973772 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076907642 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068360518 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061762108 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063146551 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075293653 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064834497 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065654133 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066190831 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068631961 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066795493 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064849949 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06614864 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068392243 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076135805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070465387 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067271887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072051336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077258715 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065697156 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068660133 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066483145 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06731054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067446553 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07506086 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071589509 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071585663 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068538171 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062373716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071527185 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073031807 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064956355 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06363453 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065139529 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07010557 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071933088 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07001333 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066655431 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064333783 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066586241 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069508239 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068579674 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065795879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065085741 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072448804 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064062873 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072832931 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067040789 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07586325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069205943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061021004 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068614576 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063836127 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071456985 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060920131 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063883165 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065018994 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066685604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064800657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068185624 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060287189 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072481687 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073678117 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065968553 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065322431 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065857503 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072712125 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067175408 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069553063 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069321816 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071737654 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076200747 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0652645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068931578 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075585334 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065571121 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188324665 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071763212 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065284471 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065375879 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065660157 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064251915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069834406 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07565559 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074109517 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061076724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069434095 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065214423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065536463 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062516455 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0713896 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069865274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067787147 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073779012 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067718495 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066795747 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070468242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06641926 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067617411 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067795117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069423249 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067219787 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068708662 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06537442 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069665667 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065392817 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064756794 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068266787 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066004734 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066814853 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071951518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065908558 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066365309 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068433538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066785142 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067071948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066872399 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065605778 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069943458 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0678324 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066372345 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069273991 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061989876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074106908 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06631228 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073854875 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067044023 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063758 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074056396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069309441 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072545045 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067334169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067088809 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067540868 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065404438 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06883242 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073884992 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06440254 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076919114 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074117605 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067732009 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069250143 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066500605 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068369327 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065114401 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067704365 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067103603 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066827838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065629263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07125575 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069381509 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065785741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067558973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066412435 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066420635 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066943335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060690306 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064931243 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065155597 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065859639 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074994245 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066374306 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065370156 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064676565 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066581187 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064999309 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06268341 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073791032 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074881 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066640982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072854604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065215659 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067497418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076260485 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060459655 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064107995 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063950472 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063973598 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073099964 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066467122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075088942 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066031317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065230911 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063167251 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066707571 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064416095 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060449416 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06391172 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069422448 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065665101 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064999111 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066118603 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068467724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066933921 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075425372 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065094554 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066562524 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06568479 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06296934 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064698673 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.196052784 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069416891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067185953 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064748984 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063816084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066024364 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067261911 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068449973 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066953899 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068163834 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076588614 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065851763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069386561 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069825392 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061467452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069074862 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066115782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066748717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065721992 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070206029 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069821219 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067803649 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076660042 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066148852 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067868928 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065983656 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064988888 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066457509 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066096582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066056383 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065843034 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067962967 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074146208 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064704702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069260841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06614373 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067220736 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073277594 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06778555 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069223438 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072771745 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066901801 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068666867 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074883705 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07180146 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069526815 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067730178 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067858418 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072113747 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065810248 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072704149 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06724018 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067283107 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068502095 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06480269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066854253 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067274503 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065191324 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072487304 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067920697 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065202966 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066570799 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064147248 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068048798 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069987877 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074161191 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069014135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069647273 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061659078 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063792882 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067536587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064420224 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06765526 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068572034 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071822428 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068220574 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066373044 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065094655 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07487591 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071244106 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069662574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064011983 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069720996 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066490522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067814891 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06697601 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065920343 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067225463 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069421302 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067511426 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065369974 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072476849 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069056372 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066853023 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06739064 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066550993 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06617762 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061118365 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066834777 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067505795 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070996465 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067894968 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065935375 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076506778 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064092459 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066198515 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069304563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065605051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070931211 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06168322 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067870161 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067272056 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067037525 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061618737 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065600376 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064490485 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068501308 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065320528 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061267442 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076334497 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074814495 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068595762 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064685605 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064291191 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060933233 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060943635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197366089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067930544 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068918669 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076309952 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065247357 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065856469 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062151361 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066857669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06930151 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069708736 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063606072 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062619135 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065969671 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069874401 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072104684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065484996 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066560829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069949559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069160303 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064557473 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070864073 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063568421 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070139388 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07919818 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067847323 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067298059 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073335813 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074192291 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06747052 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062569054 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066316819 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070115579 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067576398 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068397418 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06747484 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081559224 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0690826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065705079 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065706029 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069184112 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066475305 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074171077 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067863466 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067334927 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071679953 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067875784 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076356443 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068744476 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07423276 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070044692 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069441765 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065722715 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067188018 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065391079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065418054 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068038603 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066880875 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071987651 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074658468 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065829091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07695462 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075237066 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06842629 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063408254 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066180122 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066479568 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061937756 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067557584 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064776675 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064526335 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06427901 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065026743 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067150331 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07117887 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067026456 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066745327 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066058804 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060268586 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068133319 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069178762 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066914902 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062788373 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066015669 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066738133 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070340138 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069168272 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063695735 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067556236 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067369222 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066534497 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061322215 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072226309 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064751502 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067725848 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065233297 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066219117 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066357939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069383752 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070469563 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06677619 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067975757 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070003715 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067979028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063279477 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063242131 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071020925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063716558 seconds)
  done (took 42.624145185 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100196283 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062212937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06156164 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061944371 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073726103 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062637112 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061826354 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062722679 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062952522 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06492092 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061695522 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061428206 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070669906 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077089372 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073303823 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066209834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061428725 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062880884 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061520457 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062593011 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070377717 seconds)
  done (took 2.894043247 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073609391 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069659186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072650709 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075743601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067020947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070090529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072250399 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070290397 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07517614 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066681052 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075720334 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070345898 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066492121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066608542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066595739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070066794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075230985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067057106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069979299 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080645042 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070059068 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071954953 seconds)
  done (took 3.031920317 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067248711 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065635818 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06762819 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060714815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066420488 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061362815 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069070622 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063538199 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06894927 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064585451 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065189524 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065021196 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066893506 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060799868 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065255558 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063315821 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108394929 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06873933 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065264807 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066255423 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06118606 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067288133 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061123255 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061180517 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064749377 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069545454 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067072906 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064215277 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065078701 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06463819 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065630276 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063303541 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066764492 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066183717 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06462729 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06469229 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06526947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065209115 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060816524 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063370959 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065944535 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061560593 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067011727 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068475429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065124333 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064730307 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068710112 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066908333 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062112128 seconds)
  done (took 4.704212734 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079150205 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107783547 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06774488 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088036422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079523503 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075159174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068720978 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089066958 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06309655 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063913755 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081131059 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078996278 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065757015 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07011711 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072700761 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065169808 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066491649 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064612441 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069461469 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064960279 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069235808 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071674941 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079247916 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078219999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069020188 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064683531 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065185585 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069656959 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077850103 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069586579 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069802058 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070449731 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079737806 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067432497 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064895043 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067037627 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08087185 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065242535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067436807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063156003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067393116 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069498067 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071474987 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08145735 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06545188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070557566 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065403496 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062465325 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078302082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068026775 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073325972 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080216877 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068933345 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065494234 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069399987 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080063391 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065414263 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063513259 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067938529 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07783697 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062930527 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06898132 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078502811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066759705 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072591488 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078851078 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070142209 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068740029 seconds)
  done (took 6.481052844 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074378152 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071630615 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081812067 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080660557 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072361241 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074667575 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072834089 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072809118 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07256193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077092232 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073076215 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094383034 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067173688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074561887 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0720234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071989816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071872384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072324921 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07208462 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071903714 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072236121 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07975551 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071912439 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079856456 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098010147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067466628 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072064743 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071955553 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07961807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071937256 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079378559 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072039526 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072791404 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080405393 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078901876 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072076664 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064668691 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071993034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072033056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071694358 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067140579 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079439549 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07146097 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066892367 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071916012 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071434118 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079630608 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078797832 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074353614 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076427725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072094475 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08093131 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071497864 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072028177 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079713064 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103978591 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07951682 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079394756 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071652901 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079914923 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07979594 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086700824 seconds)
  done (took 6.18264681 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083840495 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074307485 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075326296 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061228262 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063753956 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069616216 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063889013 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063793445 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074162698 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073920106 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076402123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069276968 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072595801 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076404532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069500473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072844687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069117467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069214308 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073838216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069162268 seconds)
  done (took 2.917820508 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074290802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083360075 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066578744 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072705514 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068225638 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071320061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067730688 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068457818 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066312465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068624248 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075300019 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075668937 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06627653 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071528775 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076328417 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071704913 seconds)
  done (took 2.632019587 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074382645 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072932395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079715556 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066187551 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064048182 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062442568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065741769 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061241353 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062565503 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077322177 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065241969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067722824 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065525891 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064022088 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062858173 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068355172 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062087084 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063270064 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065944867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079575254 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078620059 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066169268 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067845575 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067453299 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067618359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072459623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066316189 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064656106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064689516 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067297084 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067634009 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070333876 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063500704 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065022509 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065696318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064774456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066730266 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06672126 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068010741 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065348223 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064577367 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066620231 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067066752 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068245419 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063433272 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067744228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063316936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06851996 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064537412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065792241 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06501267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067461867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066060911 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072203778 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068032809 seconds)
  done (took 5.18638217 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079238633 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069140599 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062102747 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06365197 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068645621 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067260916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0691522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067032073 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067952272 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064252669 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068280349 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068451199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068049011 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068828139 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067513542 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069274989 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061296479 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06736796 seconds)
  done (took 2.717974364 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070354979 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066102195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072509809 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065961449 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06539346 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067729952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061622128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063949984 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064234912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065216265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065441093 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067552188 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064209325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067544084 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065644931 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065222354 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06758194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063965583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065569432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061495352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067638356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064849964 seconds)
  done (took 2.943851822 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071637052 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092525695 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138777502 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083140841 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081313563 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077857212 seconds)
  done (took 2.040763019 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089853114 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077390244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066707033 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087011736 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073925209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06692344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066865759 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067302709 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076217563 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075977832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06697155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075580331 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075719818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075360819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073857558 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073173962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067499774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067271996 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066027342 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084039609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067256183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075762968 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067070643 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066695521 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067146136 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074974541 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075371704 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075485689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067027451 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075742543 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072333251 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067027006 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075430779 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075664699 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068662508 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075568443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066862036 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083448648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072607193 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074747723 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068641888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073272974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075431812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072021455 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075470916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06726771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071656215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067070097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067113123 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085171126 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072901715 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074956769 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073268702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076457013 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07583191 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085813402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07596497 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075437471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072995002 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078012056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074825343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072641778 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074824674 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075344582 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073208198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074850436 seconds)
  done (took 6.348672753 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082227639 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086025848 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068908246 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076126816 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075018002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067628532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067634743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067390781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06735101 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06704397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107616697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067583467 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075402166 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075230101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067467268 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067373449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06708468 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075103022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066992918 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085617027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067093754 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075267617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075563898 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074796436 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075730107 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073083881 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067322754 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067485824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067166665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06727858 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072286604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067589217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075179801 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066886555 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075471271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06759583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06739288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072080224 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067224597 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07277065 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075033248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083430895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067142647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067009003 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075610834 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067364556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067523056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066765015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067625754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066586745 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07553143 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075636262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076259775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074954743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067577834 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067497077 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067214178 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067190985 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067590577 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07248023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07511806 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067245035 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085378811 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067459853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067152515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074811199 seconds)
  done (took 6.263482744 seconds)
done (took 132.618735189 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185509453 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170090118 seconds)
  done (took 1.847964475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069170782 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097683395 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07694455 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128650666 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066757621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100325785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098925303 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077546619 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066121634 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065854947 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065873511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068529072 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13086762 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066140251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066107253 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068832013 seconds)
  done (took 2.820534644 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096192487 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156916116 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099117556 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065471837 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097074249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072539628 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064602104 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074886332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070508408 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064784417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073212531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070238347 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064779174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070063295 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070808449 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072989567 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06498556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072332872 seconds)
  done (took 2.930086537 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100509925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091770334 seconds)
  done (took 1.704153534 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155596014 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105386965 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150859188 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344949134 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166416062 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232599059 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126565739 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125932006 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11631826 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123032792 seconds)
  done (took 3.154406209 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097718357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152697849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255400763 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114812943 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072296278 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094915245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116182048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077444174 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080691415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080097883 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080101471 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075932491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098043036 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07332466 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073144436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076241225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101863815 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071998458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073736168 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076162983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098684947 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06538921 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073432898 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072142045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077333722 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077291282 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065572196 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065592228 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076647469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073897718 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076966227 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093639157 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077322209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106869654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070092489 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107841095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076202707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07351372 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074156515 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073813493 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078536896 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078131584 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072008277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075620935 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064808646 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076063876 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064905743 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065221869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078040776 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066543111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079190772 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077005918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106635564 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066615743 seconds)
  done (took 6.105490362 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101802632 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105522776 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071651525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109301302 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097256653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0714579 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101067723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091572201 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102641413 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092915232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088835255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070258479 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081800063 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083469829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109897728 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102194312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095245148 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070681353 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102052058 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102867244 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068218653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094725868 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090874993 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102229521 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067441945 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06995097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068489706 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070462629 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076994472 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078272738 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069728191 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102026171 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084333864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078530421 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066982777 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067920762 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067888999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079293232 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097724815 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078896487 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077964706 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067624869 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067735002 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069380378 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090764464 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067270961 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079301103 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080210938 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078455249 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069327355 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070211443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067829648 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069557882 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079917034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077589871 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080456897 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079783122 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068326194 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068468284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072046741 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081288289 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078911798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079256503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092220492 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079152632 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068321765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080271501 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084115898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068251733 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069654473 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068409792 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069559962 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06947578 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07778894 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078017364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069798931 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069436286 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068003849 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080122966 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078682284 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068210639 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076675934 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067212128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06844257 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069573207 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069807155 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077688234 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079730408 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069729582 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068266294 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069511619 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068389431 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067230242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076915549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079958607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079080267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079607735 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06983274 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079350014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078511661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069301161 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078708198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196403077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070847618 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070181958 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079511302 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078213615 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080211769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070002231 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078490776 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081307324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069313411 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079295172 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081995731 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080434483 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068517708 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081617947 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068877592 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079940068 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071074772 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080381011 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068913251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07955625 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068743167 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068695468 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068674158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080538566 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07080547 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069961232 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070737604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07016366 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079829559 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083235884 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071204387 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082058795 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079466905 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070908486 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079630646 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069188919 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079919647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070080078 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07074544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068136071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082621837 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068612835 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069147098 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070052041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081377132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068821105 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080945295 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07900967 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067881585 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081964852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080810864 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077320575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080937157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070171016 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069463257 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067697412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069550088 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078478452 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08043194 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071173534 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068763616 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078896277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079916068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067248689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078607926 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078192122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078337379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068665003 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069482013 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080192943 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080760859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078115724 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078207981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078650894 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068378271 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077665926 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078548118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068163709 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084989335 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068326197 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082911648 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079372484 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076750039 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078711481 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080504979 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080540634 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080278508 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082468693 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068289508 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068053613 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085801398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068195046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069449097 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078496306 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069837254 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069838441 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083628203 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068880809 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079863053 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067869032 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079109815 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067301208 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069919625 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214686606 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069330805 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070406487 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080577381 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07085314 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079824912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082046005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079674294 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068895869 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071548887 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081713968 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07982276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068958123 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068938542 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071685976 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079359231 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079115578 seconds)
  done (took 18.989288155 seconds)
done (took 39.069360431 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208628548 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150764138 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.206728468 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117768228 seconds)
  done (took 2.29068887 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121384448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100453785 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094729005 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064928389 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101355005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064765991 seconds)
  done (took 2.090731862 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311347484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210476262 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18175823 seconds)
  done (took 2.243652235 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198781003 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187091866 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395348166 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252971952 seconds)
  done (took 2.685366604 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144328199 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090044347 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066814063 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082848633 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134439789 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161451328 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100979808 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125885355 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078189835 seconds)
  done (took 2.580452889 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144856599 seconds)
done (took 13.579983229 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19799149 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111202065 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09336654 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121923483 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107450599 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069014848 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208612144 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169323544 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.229582841 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137766984 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075824116 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10613666 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.171139538 seconds)
    (14/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074222933 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081403126 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077304664 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.215321286 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073000183 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105738229 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212770718 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180510727 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176620962 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071331869 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.152186199 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091394385 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07894639 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077195369 seconds)
    (28/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128798556 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216708065 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087736992 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139637332 seconds)
    (32/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071096956 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205223879 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101363652 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065369636 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138550346 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069986979 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171840769 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073579064 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06709537 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076393434 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157936577 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074904096 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070700037 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116707096 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064597682 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063991938 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145720068 seconds)
    (49/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.180524095 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075149157 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115805875 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064668936 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078726824 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.118387524 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066143196 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150283048 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07204556 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202904575 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071495891 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149228613 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073009506 seconds)
    (62/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.154407579 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203398677 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070060053 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150689318 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108210596 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.195851926 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067003291 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052257161 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074837122 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12447518 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097277223 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100018651 seconds)
    (74/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124499383 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106163606 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07593195 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075931946 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184546903 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051054217 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.239742294 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06579657 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066486797 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076532332 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122406854 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073525201 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072021551 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076395994 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089196479 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.066529505 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151420076 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087743136 seconds)
    (92/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067255307 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072906504 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150499222 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 0.127833879 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087836199 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107890143 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062979994 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150802521 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072058596 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062111324 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077396992 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090318117 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073079167 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179489402 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072888018 seconds)
    (107/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.155313958 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187037968 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051124997 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069505234 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073077155 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052837234 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.294036193 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136657928 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062278723 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073488427 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051025827 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139554365 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090036636 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051680841 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095107968 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089948455 seconds)
    (123/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051990461 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171223022 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086828165 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135622079 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065595671 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.133664254 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072857654 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065740285 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073090333 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071511443 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05146062 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109392096 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066709514 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111523904 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071165359 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.174176456 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072403865 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071997488 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095597157 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067379623 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05115139 seconds)
    (144/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060415729 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130984772 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051583384 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 0.139054432 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086592811 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.183093897 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071414722 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064866079 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086956868 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06611997 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072608876 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050969722 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051094468 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174672317 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065718759 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070957304 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05132519 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094172356 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064497861 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071825015 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051267429 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065352639 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053136379 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120785615 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.194183322 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147926017 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098891049 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132063597 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051219073 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066568072 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110794711 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079278332 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072996305 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063992715 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051242161 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098558563 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080316128 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080584703 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05138746 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05132607 seconds)
    (184/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075248971 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098975855 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162751338 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182327955 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052590985 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.33455769 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091625899 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073884002 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053087392 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068799999 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087322313 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112561628 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072268927 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127769131 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101384281 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079747197 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139230084 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080226919 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053093627 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065271034 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052538558 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065902327 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072258441 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.0712656 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07387606 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064970532 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134775173 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172311357 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093870174 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157507519 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065658809 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052212269 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065571812 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054159683 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066317316 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064966583 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05159056 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089464187 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070870793 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089805687 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072261321 seconds)
    (225/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108843616 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078032464 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067508479 seconds)
    (228/309) benchmarking ("sort", Float64, false)...
    done (took 0.125960634 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074388339 seconds)
    (230/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066074887 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089418419 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066629331 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062474625 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066962648 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051914432 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052081275 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.166545815 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071203906 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072504121 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069391575 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073329085 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060967593 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066396952 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065863254 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065497112 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064122557 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0680374 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065605083 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052976156 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052810194 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073942706 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131830576 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051129396 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051493391 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071563585 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051206941 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065045084 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064732709 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051267493 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087930987 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051371289 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10438572 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073007559 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052327093 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051044335 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106980935 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050799908 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071162246 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064768216 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051341427 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05224625 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052471119 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064268175 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071962085 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052684476 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068173698 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071939284 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060930918 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078843541 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064622614 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052958978 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052364023 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072898719 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051941879 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051732375 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052423735 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091284864 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051254559 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068373573 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065109416 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088919833 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052757273 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067505919 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072246705 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063648203 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064223735 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052141543 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072250373 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097116747 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051443166 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052414405 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071030518 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070533296 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164528408 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086460842 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065443267 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051154626 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060473189 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070250269 seconds)
  done (took 30.598543644 seconds)
done (took 32.155856952 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085108009 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091597201 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073785773 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091819799 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079652073 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075564564 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071182696 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077572244 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078741943 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080520392 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077375163 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054325335 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073355564 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073472277 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074224863 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090646224 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07713484 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071752488 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072074435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064363761 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072372904 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065019638 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066700855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054481637 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076775907 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071220294 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072014261 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073573301 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065093692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06522394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068598085 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072177922 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065163962 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07693419 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071337786 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072047434 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073706178 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075409313 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066679997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065234998 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073398705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065573927 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071894292 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072710356 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071243899 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070899871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072179373 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077209469 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090259264 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067262932 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073546205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075155558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075362578 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071632813 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068970385 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07257254 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07023697 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091083542 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072696898 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067517392 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07300061 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073170644 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071239437 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073134306 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072439085 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074106019 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074703586 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070373897 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073848961 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070439699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064660045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071848672 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068075637 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065130177 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074956792 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075996099 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063778646 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070416637 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071757359 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070535415 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064420622 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066923896 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066557406 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070261458 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066595283 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054256739 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068265598 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070978957 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064151306 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072586087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070999058 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0716372 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067007662 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074899399 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06453313 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070006708 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065499859 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065019806 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066277064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068371324 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064460204 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067001897 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073402768 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066614658 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070423491 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07817383 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064559924 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07097888 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063667682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064098347 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078489024 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07388861 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064757201 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066962212 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064135798 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07168814 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06428409 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064888125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064965837 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065475707 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070950183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065280662 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067246151 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072363825 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077155502 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064639898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068448201 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067387862 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065259049 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069751728 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064722185 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064635064 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200463832 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061452386 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067377111 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065500306 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072935296 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067408125 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073227991 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066717818 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073338819 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070077476 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070858712 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07001949 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064067618 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058960176 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068375616 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067805294 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067371759 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065579228 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067443486 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065430779 seconds)
done (took 12.511162231 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066041454 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143577362 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098996288 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09542917 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085729603 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066521388 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075908702 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101111655 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067328668 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101999936 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086825084 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084820605 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111971212 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064263955 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065849051 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069247199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067309917 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081033307 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100813058 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085610708 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114880348 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065135979 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094109171 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089683959 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086300128 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101179216 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06662627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069542205 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068779917 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090673043 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086070236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069335453 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066180393 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099932055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091971365 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082564651 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06596962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081572079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065960416 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065362381 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066744584 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097111417 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079464899 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079739049 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069581695 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068508114 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06667956 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083140563 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088268576 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078229285 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085752299 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101894136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068099982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06507965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064453244 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084596652 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064965244 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068363871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065891794 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067846977 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065444345 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06857418 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08021969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081592985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069161405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079620278 seconds)
  done (took 6.913510266 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083789725 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089998915 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082681474 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083934936 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065420113 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065918085 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06598862 seconds)
  done (took 2.18106276 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066147409 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088169827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088711382 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088574066 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084205126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086986941 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075313106 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066186382 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080292558 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067174204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087201295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100864597 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066675472 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07229718 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090155741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066087903 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089781302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066086304 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06930417 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089375205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068107282 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081805832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069823519 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066342444 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079825922 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066188812 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111843626 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070183453 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067583363 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069236537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064186767 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105506595 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079812412 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074959741 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066143964 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080375288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080332292 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064562799 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082038072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070942167 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079729098 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066701225 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067093978 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063797653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070290677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076222947 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066872487 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067051235 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068372438 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085531351 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06662196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079297501 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070612757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068503894 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067409846 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069502361 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075353969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066674561 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085651372 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067270432 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08282968 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081807488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079582045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082122802 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067938408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079069292 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079669143 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068433505 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067811905 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069400167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082283464 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064591545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067876351 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076390203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068246079 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088709134 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088364704 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067187723 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075097257 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066705466 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066281508 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066061037 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088356128 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068726862 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065913577 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070079691 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069295482 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064341025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065416919 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069297702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064337876 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067939913 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06879894 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069049236 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068458637 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082683107 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068274323 seconds)
  done (took 8.858642969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069144482 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068045756 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06918056 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06755291 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068015625 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067991728 seconds)
  done (took 2.078771743 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094353515 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069647866 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080237868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07290472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106006088 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08639561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08670779 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078725672 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083885776 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078947474 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086330141 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087742215 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091840011 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072253094 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086073606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071870284 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086552009 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075415192 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078124905 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072859979 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086215772 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072250796 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073081669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080922061 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075246596 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071615705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067478326 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078442132 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078226103 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078170656 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071952543 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075682898 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070341084 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078225291 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086741177 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070519946 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071438527 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076920245 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072028661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075157867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087879663 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072680326 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074040035 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076666448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07815646 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069831699 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076924283 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075775521 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085812313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076808761 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076382306 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071627245 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074875694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076364766 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069740718 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07772132 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076363587 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085764891 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072051419 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069623283 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068472731 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074970386 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0775552 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07522832 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078313171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076322437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069990708 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072084869 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0724704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07172526 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07664063 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068924132 seconds)
  done (took 7.213978574 seconds)
done (took 28.879282879 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537091925 seconds)
  done (took 2.175685821 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597223864 seconds)
  done (took 2.257455664 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.684102098 seconds)
  done (took 8.339612818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390226268 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471548574 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713430902 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130002435 seconds)
  done (took 3.401308762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.654111827 seconds)
  done (took 2.325271807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20878865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19710457 seconds)
  done (took 2.080916228 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375987718 seconds)
  done (took 2.035127904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099136989 seconds)
  done (took 2.760822754 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261674687 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16247327 seconds)
  done (took 2.088444087 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457887407 seconds)
  done (took 2.120321398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.847669047 seconds)
  done (took 6.511969189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204509323 seconds)
  done (took 1.909641377 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242789555 seconds)
  done (took 1.90754331 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.69558653 seconds)
  done (took 3.359146071 seconds)
done (took 44.941832224 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078821206 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080546646 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080838876 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07744137 seconds)
  done (took 1.968731331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075548082 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072131982 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076317101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071926705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075478464 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07149084 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073619673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076133281 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071600687 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07187312 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07174777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071600252 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074044843 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073937009 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070001633 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074114177 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07537661 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071455719 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074690273 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071745284 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070090415 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074064953 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073925707 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071052428 seconds)
  done (took 3.419946245 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077737375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072909524 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074364956 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071534972 seconds)
  done (took 1.96909053 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076396947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092303183 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088203309 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076635929 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092265261 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08543727 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069092867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068430612 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073049465 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076179255 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067564872 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09492993 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087092926 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076295891 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078019122 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065312602 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067881601 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086228728 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076137105 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076383449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069549122 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076183581 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067369648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087298079 seconds)
  done (took 3.543785162 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077466802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102529602 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077172796 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087446857 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089570587 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06472968 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073611292 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08850527 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121834817 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064668681 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069324229 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064543717 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071549475 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064653818 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075351117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10389589 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107188945 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067457437 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09464322 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064818682 seconds)
  done (took 3.309386122 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072514396 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068848545 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06598823 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068581621 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077171571 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072469871 seconds)
  done (took 2.102400833 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067814128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06652619 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067246373 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066710018 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071348975 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067061073 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065170052 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06620848 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066444831 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066437366 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066000184 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065019772 seconds)
  done (took 2.474605373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.411751855 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067904145 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068007821 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065167167 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070045494 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06591684 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078825228 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06722411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089973566 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065873886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066322593 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067967592 seconds)
  done (took 2.85948462 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206900517 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075436971 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235131396 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135652779 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111217215 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115160294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102954589 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112742309 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14272868 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101278129 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166717247 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164682138 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106740544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136168406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088051494 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09747392 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154513701 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161499797 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102712923 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164617142 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142502284 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123610203 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146230886 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100576805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105100886 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120711612 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070595705 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079223943 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169545468 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131140647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145392555 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109912575 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092893208 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174602267 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169480893 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140938695 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133151728 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083359382 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101974539 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133011857 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198484618 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087457214 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162805996 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245394029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081389377 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134268737 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120102196 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119568525 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107128743 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089807206 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146075587 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182739877 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138460957 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086075658 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111949328 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115391696 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115550114 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102700663 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182035664 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161068008 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127341595 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070007261 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098659072 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152990325 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131336134 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108006116 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126994081 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092947797 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133592931 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153611541 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117319612 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142785986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127386577 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087581529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118148817 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138341249 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127397994 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168696335 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123627051 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072083782 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123732061 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102405739 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08003156 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141777744 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074501738 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173857514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097885296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105828392 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112971877 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107636715 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107612811 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159643255 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142224455 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245059804 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065862558 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104076753 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120754747 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148094075 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087669953 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108289011 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115881335 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077378117 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13916386 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075113231 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123599687 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075059796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125263624 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130938365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075397881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120971283 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100313355 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100162965 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13311894 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15938321 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087893253 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08145607 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166086672 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121981742 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103520001 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14285876 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155904378 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098522218 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101705558 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148835043 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178484611 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088935249 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161735585 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106481194 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083228947 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086777232 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12296663 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112062112 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121035564 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08137505 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117644272 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166943087 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07439255 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094235348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132640733 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078513726 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080610674 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103059281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101157747 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094678227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099363488 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103378045 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136108424 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12213017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103613806 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270690106 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099051043 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171103798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088768314 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099861131 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103208366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069580736 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137580824 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156103473 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078777385 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165141091 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123529514 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104662355 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119213632 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082727539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138776617 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078297985 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07021022 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145356066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110166802 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109858892 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150472016 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103555104 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126767242 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118747711 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134952295 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132504977 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127858512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10483663 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087530261 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110795244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125144057 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072648441 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090345383 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079446161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103242765 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094878963 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082430891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14171749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123939456 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09949949 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110661217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09553337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145522493 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075948784 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128196152 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118443829 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093926278 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151487242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15101204 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129642693 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098522943 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143200909 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069272475 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072984767 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232512339 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124183374 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082865888 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083603521 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117280279 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146588672 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129013945 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139161241 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11116257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122092283 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155024213 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069050114 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114854821 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147983871 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121399806 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104648528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089951254 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098360315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141961234 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107556135 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182121081 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113151074 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125631858 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152313339 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098728425 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078960132 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102923406 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139157671 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104401478 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143506127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098860523 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087095213 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109090826 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073397462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099330875 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126445226 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118848049 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134578125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113424949 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131746294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076482542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11567739 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119757837 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122129563 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063657375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119627149 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161432922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093109837 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117318752 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151064081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078642984 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122326634 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32086633 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147317133 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084924282 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109264374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118767146 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128818027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120536 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139648466 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107243759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134390414 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108371683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084480171 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087168132 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096560045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104141291 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093665495 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107614557 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11431832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095029961 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131773789 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102122219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108505545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117132162 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09510258 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088890466 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096229078 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173173868 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11869607 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171446309 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098425691 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144311619 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164441558 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074183804 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077916994 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077449092 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139186314 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083334853 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130317587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097504396 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104614232 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123578557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140827567 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094045907 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06762563 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107271451 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133117231 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111014238 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097789315 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103535815 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162678269 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099688886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078489241 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112533743 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103108423 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101282739 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316630678 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062053016 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097711777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076293601 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080703551 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127006974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153951454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.0811327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102534022 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118693036 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110329519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127279897 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101285938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098345494 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114182882 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149380089 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128630901 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089400354 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111287445 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129158745 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155908631 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105214617 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097525864 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170962279 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151539147 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160287073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089164589 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113634673 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113600304 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123645835 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138153266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082533954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162453899 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080984546 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13498933 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10340474 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089713745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129156203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09784409 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087536718 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146875783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116410426 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08151365 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076797517 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116718575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119511495 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106121063 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074929642 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138922309 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072070549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131715718 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167095308 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080221215 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247219751 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096396265 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079743709 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108713179 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103126675 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089194911 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098920774 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173103146 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088901891 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149563609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141035762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112268887 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13603542 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099516523 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636443834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077110907 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151463349 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115295003 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172752402 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09678243 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116942956 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108343517 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123429956 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144274202 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105556822 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175657013 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131603513 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115202849 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079392382 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101873448 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101980821 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0888633 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104279723 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112407647 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115173677 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092925274 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114542356 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122572373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.0813679 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094669308 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154327252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11591028 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143574467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139494479 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084415351 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117002258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138824183 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079640427 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120859229 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150461301 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104705841 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096458453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.223877617 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102553223 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170513536 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073024745 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164115051 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120615109 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109148903 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113258766 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114744231 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13189629 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107214824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121063774 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093566694 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110706538 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112222262 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081687202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076514538 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103879112 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112194155 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096574035 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099908487 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097797143 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151167644 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070791799 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096098792 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102421375 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145435912 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173778152 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087912861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081926508 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119161024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112424392 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112648784 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119552968 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078444114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081787878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081305408 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076436163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107627123 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110965717 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103471285 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110572726 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163012877 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081663313 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224293186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094104357 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103543544 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068905309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078134055 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095348477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096522239 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107407872 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099949128 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169359724 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094256384 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089674577 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091864449 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072256301 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081659579 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272676678 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110809016 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119338123 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097489923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062695674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108644889 seconds)
  done (took 58.748587902 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108176535 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082511722 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095628079 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148973652 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122645455 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21087902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157035915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199556114 seconds)
  done (took 2.910086466 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068564008 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093776841 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099040989 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081533972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067060752 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06799005 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223624794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078912687 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065601269 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087907955 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077504581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067615453 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420840146 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065488165 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066598995 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062129142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066731408 seconds)
  done (took 3.537479956 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363920689 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361900956 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370869093 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07231726 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.802285572 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088555807 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.083275245 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095901292 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070702002 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.283270078 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705713517 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093000945 seconds)
  done (took 14.178380347 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076498612 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071483942 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084321665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084038754 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072821287 seconds)
  done (took 2.233883302 seconds)
done (took 104.956759386 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080302957 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393377217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054088909 seconds)
  done (took 2.261924734 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083299481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084774896 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084998057 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08377807 seconds)
  done (took 2.130646725 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074861156 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076979122 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085200883 seconds)
  done (took 2.023764238 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2260102 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141257045 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087209794 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082787853 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078793688 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079085438 seconds)
  done (took 2.032758017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072987273 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075166591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073220016 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076631272 seconds)
  done (took 2.085906739 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076324814 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053073926 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055202079 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056097889 seconds)
  done (took 2.028731832 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086805839 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079101806 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078940034 seconds)
  done (took 2.033286317 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107414477 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085679593 seconds)
  done (took 1.98194033 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081971475 seconds)
  done (took 1.87235959 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098536168 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115160483 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128948785 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109607292 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137283723 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10882453 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085655371 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087612928 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.0774457 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087302932 seconds)
  done (took 2.825682597 seconds)
done (took 23.597210698 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078863966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365639657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364856098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091311411 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6694968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358794066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011914402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092359985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113983654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067955626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084754456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651784759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971730734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320711587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960121827 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418096416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649319531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068790002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067963506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067899072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006093183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067914122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068186051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068827387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649034873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372414412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068597663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418705002 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068022723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06995818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359952319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068206483 seconds)
  done (took 16.5385091 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071349167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118475724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0737839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084725817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071351719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070696997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07189437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069061265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120203718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06816199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084633453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068322827 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072144951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068990716 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08714299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068205074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068683666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068513301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068314572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068580715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086489276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067630572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068433427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068519275 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067994318 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079899589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068690656 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068360541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068640695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070523571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071329192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069242931 seconds)
  done (took 4.201386001 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115782965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125935594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075029243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10429492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113153904 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070703282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143947039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09284632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127858594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068645408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084960401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068342504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101435265 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069197696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087767453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069053043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069729754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069024641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06866655 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069302173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087670904 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068482522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069153053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06958595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068838592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081779913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069119597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069005815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068977923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070688394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072043724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069700806 seconds)
  done (took 4.464740953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072492948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075770688 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083383971 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085030049 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070690598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072897643 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072962936 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069971859 seconds)
  done (took 2.41048201 seconds)
done (took 29.412008037 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079159251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068845215 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07363724 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081675535 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074428786 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079208449 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06748785 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074776956 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072290023 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073043376 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075155014 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067828031 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07139215 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067552653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073902531 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068428602 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079735421 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0720411 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079592802 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079350631 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069947323 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073219029 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074881199 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079129221 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079515487 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079565181 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078071964 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072902545 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069396983 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07054786 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077103813 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084046879 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068923632 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079604465 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068247016 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068167766 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071701455 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068146968 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079535433 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077034365 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069869751 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076772303 seconds)
  done (took 4.901887734 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087667972 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09143985 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085392411 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061505896 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066800072 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065202178 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089602519 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060206448 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060025869 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088145172 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056078997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060149093 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062920201 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054707754 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059761926 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057152065 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061961066 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05645054 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059527672 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059457233 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058585793 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05480899 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06054448 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06594614 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056915447 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062634542 seconds)
  done (took 3.522313498 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07471284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085243916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08863431 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127146907 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104626975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077334022 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078470849 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092791666 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085617187 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067294954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071759327 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094206105 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088382826 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07405511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067684133 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085157708 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082369572 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069473116 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073849047 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091158328 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084451552 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084103175 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093180286 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081275507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067292611 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069807006 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07125889 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081491275 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072350571 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076433859 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071674259 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071078753 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069607275 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07898207 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0714153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069471675 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090393257 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077272249 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077793495 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068128368 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070800218 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068863019 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089777392 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123146356 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066995115 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074296215 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075505856 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076714645 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067605918 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086337673 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07872299 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067003279 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070643072 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066874434 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067618266 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080685083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069505966 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06986019 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076508371 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070531418 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085585209 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071335063 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082782743 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067109266 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075056377 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066637675 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068274578 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066534533 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092421282 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069046329 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10818827 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069041718 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068680447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076539301 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075836016 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074092234 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068397242 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082764596 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078416792 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071615265 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076739725 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071489316 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071051161 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088611549 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070280524 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069796367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068922683 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074362027 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070516119 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069251097 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092337892 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067864504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071018299 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084626941 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067807709 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069238287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074342129 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072647802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067473371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079138683 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072841203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06865695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076838856 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067666524 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070940907 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078095478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073860415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067017155 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072579013 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074007334 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068863838 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069647874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071005466 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069809279 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076554357 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074585164 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072610085 seconds)
  done (took 10.768546671 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161765225 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155354129 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071228543 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145767182 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076716887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079326242 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148760931 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094605369 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068311954 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068873283 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069383999 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110587881 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106121747 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116237262 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078618942 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068003153 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083729601 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116572155 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150061149 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143491723 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083708336 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077035974 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070785662 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069451252 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071192716 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078566665 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085749634 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076455798 seconds)
  done (took 4.569472302 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081712758 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101499765 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07469751 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089266891 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091840186 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068109725 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070633457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069705337 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080842906 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079141405 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067775784 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073565869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074633559 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071346488 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068669105 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074771456 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075088543 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069613751 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071436967 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073455501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077892665 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081260414 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072118793 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067679206 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074473018 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067158731 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064941063 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08520084 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06814416 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090912404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066393776 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075283312 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082010696 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068806292 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067948455 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068446243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067836538 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067809002 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0702892 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066871574 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066836346 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058582308 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067240913 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07997761 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074835976 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057165127 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073004002 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073236456 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073575212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065981828 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070907427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070983636 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071414524 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075368202 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073105612 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073430838 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06947669 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066127331 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075808658 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067992168 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065278258 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066742845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072507212 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066742502 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076082138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072890011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066874523 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068042283 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069949398 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074337835 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06797542 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071391342 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065844937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069884219 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072510184 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069745306 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069231749 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066857017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067844202 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068168814 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056087837 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067926217 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05386251 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07079466 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066232199 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066299297 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067590675 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072435139 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079944765 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069184887 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073521158 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068760391 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066903363 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070793402 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060425488 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071040337 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083106677 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082712709 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067578414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066001292 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082053614 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072588791 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066777271 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056498213 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075206842 seconds)
  done (took 9.34501651 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094813583 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088871256 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070402164 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083768332 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09116031 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08724279 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07507024 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076890027 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069566139 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082550985 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074001358 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076715524 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068848959 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077813849 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093513856 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076999422 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070284164 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07757405 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072079282 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101451177 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083351225 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082320015 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07514815 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068350843 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076239891 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080283826 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089874375 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081290574 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078940092 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.076127276 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080359699 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08957354 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074754482 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072286475 seconds)
  done (took 4.569866592 seconds)
done (took 39.478201483 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.900104227 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.058366485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.883064115 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.239042625 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.967462965 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.054816007 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.940171263 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.874077562 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.110381391 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.918621003 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.117117048 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.924040814 seconds)
done (took 66.8089746 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.937369297 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.018619442 seconds)
    (2/2) benchmarking "String"...
    done (took 2.151243089 seconds)
  done (took 5.989883876 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.188086067 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.40920037 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.124910946 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.87673069 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.883038803 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.188825728 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.667791514 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.396832472 seconds)
  done (took 31.365959749 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.101609697 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.077039811 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.558606653 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.597278191 seconds)
  done (took 16.202839868 seconds)
done (took 65.578555105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.886012052 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.917559159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.886695296 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.862991855 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.93863827 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.887490998 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.272936067 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.940969884 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.880373294 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.871390679 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.880052751 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.314896478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.887204641 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.305177593 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.880657449 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.894667892 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.919789316 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.453169275 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.036160887 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.891705314 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.90293486 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.895945663 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.884618912 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.879417928 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.935291003 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.881323151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.335260542 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.879114798 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.701533532 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.879761505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.936839387 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.44675887 seconds)
  done (took 208.186284726 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.878986059 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.043241203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.127914386 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.920007946 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.517317149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.078596236 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.017454699 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.527840457 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.882174608 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.904226823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.199524646 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.880704431 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.202672333 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.832588307 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.888464742 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.988121244 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.036004611 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.191792745 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.882211854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.153880868 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.895471155 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.153386485 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.105907986 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.153056429 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.900494012 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.889917533 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.894117418 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.886774428 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.073190588 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.021749669 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.919221566 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.883119946 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.088157187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.754731101 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.890961698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.905768637 seconds)
  done (took 175.393188736 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.0143099 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.880665791 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.880760942 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.880230628 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.887135134 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.880583656 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.004239444 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.005898987 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.351656821 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.349847484 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.933229575 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.715693889 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.883840859 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.949016962 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.895041134 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.882178318 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.896707326 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.908832032 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.880941458 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.881558741 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.005848831 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.895653972 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.009312309 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.88887039 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.882593196 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887559411 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.252051081 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.88299912 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.888784237 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.12586217 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.883542001 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.882272057 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.780141679 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.226788105 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.887153286 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.965586798 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.884508395 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.888334507 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.883102745 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.103056086 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.883257577 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.883834612 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.885780378 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.061856588 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.882382848 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.006694091 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.883859627 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.382494588 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.883017652 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.882910975 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.548741623 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.56930683 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.885196521 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.883152192 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.886122409 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.88320899 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.883376391 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.889328204 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.491084906 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.957678678 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.885831166 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.88686716 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.888830381 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.883945838 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.951821184 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.883911194 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.87559043 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.943298906 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.003114832 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.006423794 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.886551867 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.883729496 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.951711365 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.978382339 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.8847616 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.884762012 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.884060622 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.884590901 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.965727994 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.884695354 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.005086331 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.892426034 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.88636196 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.935010507 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.954498192 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.88553268 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.782495434 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.887593733 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.884731383 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.203521118 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.88573418 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.95227315 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.886317186 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.88463861 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.885331633 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.010152539 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.008857253 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.673145894 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.886595647 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.885883095 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.472731963 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.88860346 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.019129005 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.887260905 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.078571236 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.888836579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.968154353 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.890972338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.888172226 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.886410539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.918027627 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.887190418 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.94328464 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.889488883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.256173559 seconds)
  done (took 414.732488203 seconds)
done (took 802.202361968 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.58993952 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.553537118 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.665177275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.580176718 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.552622905 seconds)
  done (took 14.768413723 seconds)
done (took 16.596641179 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972351138 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978713847 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.911538752 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97586291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.907757743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975985479 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957843793 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.912523178 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942737463 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.912568758 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.944984211 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.911779216 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.89915445 seconds)
  done (took 27.03171129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.116791611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.126840524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.957787626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.123891186 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.934577981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.118542878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.051087246 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.039715456 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.04041514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.902591374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.901143882 seconds)
  done (took 24.142412445 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.123769035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.131880673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.961658536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.130267881 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.935884039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.143869544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.050493108 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.039528773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.040725285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.903288799 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.900937285 seconds)
  done (took 24.191367123 seconds)
done (took 77.193884738 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.896112868 seconds)
  done (took 3.725367261 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.917484125 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.054430432 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.901980062 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.900912498 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.897203917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.897243824 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.90085072 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.897063835 seconds)
  done (took 17.197799895 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.893214664 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.895965341 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.894114966 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.892861056 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.893515906 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.896778135 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.896134322 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.896972009 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.89672947 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.894032611 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.896790347 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.896838442 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.894417828 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.8946859 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.894217958 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.897318464 seconds)
  done (took 32.154963348 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.896057042 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.894647285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.89388668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.895082232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.894117127 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.894646112 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.895020405 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.894571299 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.8950043 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.895042304 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.896348437 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.894744802 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.895324742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.895623612 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.895723503 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.896593625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.895342933 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.896356978 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.900374859 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.895395449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.896104031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.89640419 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.895766699 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.896537177 seconds)
  done (took 47.328862183 seconds)
done (took 102.237457223 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.575004455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.513964579 seconds)
  done (took 8.920757817 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.899519301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.898260321 seconds)
  done (took 5.669261044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.898034617 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.898289802 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.898884701 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.898684083 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.898759307 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.899616525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.899243773 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.898786478 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.899677586 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.89913918 seconds)
  done (took 20.82132095 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.898685087 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.899465044 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.896465075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.899015503 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.899299112 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.896622597 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.89911565 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.900039387 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.899612818 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.897449133 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.899317385 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.897457228 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.899825849 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.897605189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.899696957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.896776075 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.897395289 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.898016984 seconds)
  done (took 36.004709643 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.900087089 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.901107832 seconds)
  done (took 5.63493434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.897075343 seconds)
    (2/7) benchmarking "second"...
    done (took 1.897475106 seconds)
    (3/7) benchmarking "month"...
    done (took 1.897452072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.898276033 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.897672643 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.898286238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.897839743 seconds)
  done (took 15.117662771 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.901415699 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.067611869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.134181914 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.584263603 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.902798092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.903654508 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.792223477 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.90379476 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.905019807 seconds)
  done (took 20.929931255 seconds)
done (took 114.930979469 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.741868235 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.897026065 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.296135541 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.949056597 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.951890426 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.193275616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.927374073 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.118573093 seconds)
done (took 43.910904459 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.913135428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.376240486 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.380786068 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.599543225 seconds)
  done (took 12.191456144 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.88727918 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.417139313 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.935934439 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.487870444 seconds)
  done (took 20.576644925 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.265828157 seconds)
    (2/2) benchmarking "read"...
    done (took 2.265751039 seconds)
  done (took 6.371206948 seconds)
done (took 47.890099398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.901497457 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.901690151 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.898907237 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.902254799 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.89932046 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.899562937 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.902070764 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.902425523 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.903129178 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.901737121 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902674004 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.900086352 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89955688 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.902386518 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.90257476 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.902728113 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.901030183 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900840794 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.900064332 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900505293 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.90007966 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902563279 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.900318434 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.900143878 seconds)
  done (took 47.464116354 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.902919357 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.90100269 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.903798746 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.904224551 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.901349579 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.903587717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.903275134 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.900998 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.904084951 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.903530351 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.901682424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.901623516 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.904170114 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.902364068 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904536742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.902196382 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.904333357 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901827476 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904942854 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.902604626 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.90545305 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901391926 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.901324629 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.905034097 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.901859526 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.901672969 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.905834944 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.902491942 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.904868219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.902171423 seconds)
  done (took 58.928424574 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.909880081 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.912039625 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.904634238 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.904786842 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.904570594 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.904845812 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.904935106 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.905294134 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.904498146 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.904868865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.906222052 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.905231451 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.905649051 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.905466251 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.90559742 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.905550736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.906209725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.905699936 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.905323302 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.906161017 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.905534255 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.905501228 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.905568075 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.905603061 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.906136183 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.906935283 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.906928654 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.906005557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.906127321 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.907626606 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.907071672 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.906622901 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.905798549 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.906683413 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.90691028 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.907134693 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.911341222 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.914471565 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.906886928 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.907104186 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.907845567 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.907089914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.906719085 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.907217375 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.907497803 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.906491292 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.907691655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.90713898 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.907099795 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.907598276 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.907334611 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.908647033 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.907199848 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.907742917 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.907550498 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.907797981 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.908527636 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.908221256 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.908282164 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.908531914 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.907777507 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.907676728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.908070033 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.908793987 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.908794039 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.907469304 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.907866742 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.908288435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.907713883 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.90871841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.908899636 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.909270433 seconds)
  done (took 139.151709555 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.908464176 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.906780022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.906037066 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.905751349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.905846639 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.908650768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.906380225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.908096641 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906215076 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.908795629 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909401965 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.907195233 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907040599 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.909445698 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909685678 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.906756489 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.91006052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.907429302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.909630034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.910115815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.90994508 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.907559832 seconds)
  done (took 43.817921554 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.908884217 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.909182598 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.906941293 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.908561309 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.906717962 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.909490689 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.909848405 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.909581544 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911696252 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.907752323 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.907244688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909906227 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.907071637 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.908288043 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.908307883 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.909486418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.910121535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.907595278 seconds)
  done (took 36.200030579 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.908116832 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.907897785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.910380177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.907736292 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.909172032 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.911457947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.90862472 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.911048023 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.910727327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.908595839 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.911014574 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.910549922 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.911102512 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.908391844 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.911412931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.9088961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.912085501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.908765783 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.912074557 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.908959993 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.909942258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.912983314 seconds)
  done (took 43.863842264 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.91140819 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.913099355 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.910311686 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.90978488 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.909701189 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.912465512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.912364754 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.909869229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.912525484 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.91235033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.910121006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.912982586 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.909694893 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.911178625 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.910765574 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.909183956 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.912542122 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.911122263 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.91251976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.909608152 seconds)
  done (took 40.069635608 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.913551505 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912464272 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.913903506 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.913562897 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913923929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.914073457 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.914073921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.914345113 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914601135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.914136155 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.914447073 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.915085553 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.913867041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.913178128 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.913857052 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913818183 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.914731006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914860083 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.914252264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.91417966 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.915458326 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.914316312 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914237787 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.915704425 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.915466752 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.915134351 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.914926341 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.914983835 seconds)
  done (took 55.447920519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913828791 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.914579765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.911462361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.911160891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.912015497 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.910909048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.912380742 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.912744048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.914689088 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.912085547 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.914801263 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.914460216 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.914449014 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.914993829 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.915115269 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.915230745 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.915540893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.912744638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.912649519 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911752291 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.915175149 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.914933684 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.915812802 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.912932817 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912589143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.915304668 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.912955002 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.913201514 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.915544546 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.912700475 seconds)
  done (took 59.256918485 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.934497641 seconds)
    (2/2) benchmarking "in"...
    done (took 1.934946784 seconds)
  done (took 5.717795633 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.913144635 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.91572987 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.915509247 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.913552184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.913076625 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.916653988 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.91675934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.91369436 seconds)
  done (took 17.167240037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.917123014 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.915498436 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.916754692 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.916134259 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.916907259 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.919292049 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.92582301 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.917186488 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.920316413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.918831727 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.92484857 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.926934999 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.922372393 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.918225404 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.917964294 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.91969709 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.91731479 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.917639725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.917538573 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.917663525 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.918367958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.920181345 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.920020733 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.915484141 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.919276721 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.931612911 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.924455395 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.917064566 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.919982385 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.924189905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.919131236 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.915664604 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.91951419 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.918873463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.91778915 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.91853148 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.928631095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.91926649 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.926897344 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.91823416 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.918512557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.915670022 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.92136259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.921664252 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.920615501 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.91866307 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.919745761 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.916115031 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.920581905 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.92284199 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.924033575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.918646088 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.916454348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.925693227 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.920796621 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.927578268 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.919994288 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.924026041 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.92893922 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.932748656 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.9368946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.927980531 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.9222495 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.919978159 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.930993399 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.945699573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.927925732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.917708523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.917643449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.920245883 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.930010429 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.937168709 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.930212422 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.920302611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.920511094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.919911342 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.921708445 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.91975435 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.930040914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.923980982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.920537646 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.920261168 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.931497075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.943214137 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.920299615 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.920655496 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.921619203 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.920588237 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.922408422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.933767296 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.921372404 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.921370906 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.921255881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.922182481 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.92595385 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.922024842 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.920539417 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.923581882 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.918296207 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.921501157 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.921421423 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.926639951 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.931576676 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.921936448 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.922609009 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.93101042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.921887608 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.922538485 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.932965502 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.92214043 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.921913463 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.924392395 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.931152764 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.919626909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.926933817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.932509089 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.923099804 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.925305873 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.923063368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.923027739 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.933171761 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.950245747 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.922892239 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.923007844 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.929230663 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.934847099 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.923459607 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.927860145 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.923685545 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.920850335 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.920450876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.926332948 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.924093904 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.925241651 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.924332196 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.92626999 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.920838367 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.923541737 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.924409859 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.926431511 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.92773803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.925520532 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.926358948 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.928372196 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.924517726 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.926983003 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.93283002 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.924853346 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.926088014 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.926878771 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.922009138 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.924138795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.928522437 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.924628579 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.925847905 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.925098792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.925204104 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.925357855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.924801936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.92535153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.92542535 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.925517349 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.930906622 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.925895989 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.93122783 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.9263562 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.923041569 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.925437613 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.926300554 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.92684434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.925492835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.925224491 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.9300168 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.934202819 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.925854219 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.926161693 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.931569442 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.926624541 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.926589435 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.927062252 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.930504322 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.935326957 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.926362185 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.934542967 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.926859159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.925889541 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.926089636 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.928079291 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.926744765 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.927169778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.930270398 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.933632137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.942498439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.936679718 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.929199895 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.930589358 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.928478173 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.93153934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.933476338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.927316641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.926573829 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.927719218 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927165149 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.928698932 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.930931075 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.92758805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.927766096 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.927842114 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.927735029 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.927325646 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.927447331 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.929735195 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.931604343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.926257392 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.927710071 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.929059451 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.92771348 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.925820446 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.927701892 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.928525794 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.927649856 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.929586527 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.939490534 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.9255594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.929795743 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.930390065 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.929872525 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.92799523 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.928950898 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.932313418 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.930136582 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.938394496 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.929968141 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.930440383 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.937173628 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.929810418 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.929909616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.932198024 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.929345784 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.926599444 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.932813412 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.937269747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.928262329 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.929841827 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.929548956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.931041641 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.929479891 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.938485321 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.926733506 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.929742042 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.929509901 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.933795033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.926720744 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.931595668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.931513965 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.931682221 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.933279198 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.929584154 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.930346299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.932652637 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.930335351 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.93148226 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.929902278 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.934365625 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.938787098 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.938109254 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.932426877 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.93623391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.933577197 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.935791972 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.933219301 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.931685997 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.931391638 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.946996388 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.939111317 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.941305274 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.935066341 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.931105382 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.939557248 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.933469444 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.937703267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.932926846 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.933129576 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.933361495 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.93166859 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.928767005 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.934145068 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.931443927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.934074209 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.93304337 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.936099652 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.931868183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.931660142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.932516588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.932826534 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.931969534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.93244448 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.931168503 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.937457918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.934943686 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.933265606 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.932613849 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.942133866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.934134341 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.936246425 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.933181245 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.933856568 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.932536417 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.935817897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.932613509 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.936338531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.941378604 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.936740969 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.943872931 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.93567617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.94446935 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.933216378 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.937789361 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.941674705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.930640238 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.933171428 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.936063059 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.934388514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.94296406 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.934875821 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.936338163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.93819285 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.934894689 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.934233739 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.933843922 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.935479499 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.934001585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.933610774 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.944619852 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.936383698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.938188415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.939244873 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.931696208 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.935203901 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.934514897 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.934461545 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.941008013 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.936105147 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.936855367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.935024173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.936952134 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.934534559 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.935446027 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.934693939 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.931686275 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.93436722 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.945168332 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.935970405 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.93882001 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.936027126 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.947321952 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.9358156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.945496462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.936385286 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.936969876 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.93586298 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.935588649 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.939586109 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.936641525 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.937786488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.936186602 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.937702811 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.939959728 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.935984373 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.941106044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.937641111 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.936605465 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.936793065 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.946832039 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.960004001 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.938824355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.940556954 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.933882826 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.939515412 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.940966726 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.937432189 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.936821173 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.940138842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.948200885 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.94426644 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.938614496 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.936840332 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.940383498 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.937528465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.93716202 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.93733856 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.937688717 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.937081688 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.940691731 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.937316141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.944311881 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.936747842 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.939268324 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.940318858 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.939896247 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.950126939 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.938396639 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.939509839 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.938337921 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.937918344 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.939331119 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.939886775 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.939062089 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.940071649 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.938269263 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.940083623 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.944996824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.945461767 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.941569036 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.937703051 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.939276292 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.940260983 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.942248502 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.937885371 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.939223572 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.938334098 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.940927287 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.939547579 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.940908868 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.937804903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.937309378 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.93845756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.938323079 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.941725633 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.94544925 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.939289652 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.935289271 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.939058242 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.937844408 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.93704009 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.939157294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.949963982 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.942961361 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.948244956 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.946101381 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.940377252 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.936256791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.938573935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.945706585 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.935373897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.937247693 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.936486022 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.940028383 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.937389417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.940657238 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.936235581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.946181184 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.937269767 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.939408779 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.943943287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.935540216 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.934087916 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.936519185 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.952293853 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.934483399 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.931146893 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.933069843 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.933621963 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.944918864 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.935246857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.930933081 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.933748814 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.931259556 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.932873971 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.936754283 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.930192363 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.932400652 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.928195827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.932115893 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.932566974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.929637516 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.927963922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.930175097 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.930616562 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.935219139 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.937285248 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.926705247 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.932312937 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.931116923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.93106613 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.92923673 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.929137776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.926537049 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.927887819 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.932485264 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.930245862 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.932402816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.934001503 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.929712628 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.932126853 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.93222275 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.929545195 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.933983834 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.940793618 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.936465135 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.928112905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.929989095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.932752437 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.934635594 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.930069299 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.930192615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.930948811 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.934547498 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.930122662 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.930987575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.929752927 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.934720052 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.949457383 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.930454698 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.931779106 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.932936104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.937730868 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.930817874 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.928407561 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.930369796 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.936290066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.934128028 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.938600421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.932340065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.938213821 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.931457528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.934268687 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.934644137 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.934612196 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.941596089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.935829817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.932827419 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.931929976 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.936851168 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.950383585 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.931921245 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.943638495 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.963467035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.933576796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.933899919 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.932812173 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.932761031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.931020906 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.937157501 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.932440683 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.931871034 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.932443574 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.931270305 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.933974587 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.938740892 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.934041477 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.932546679 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.930670322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.933587121 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.93551597 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.928064193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.93237943 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.932878491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.931560887 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.932560577 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.933015481 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.93364334 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.948528837 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.942710739 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.929976739 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.930782362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.927592235 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.936688287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.929623235 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.937643963 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.93397734 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.926808664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.927063506 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.92805881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925259566 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.92239057 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.927136422 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.92751547 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.925794304 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.921945172 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.941302145 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.933871575 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.933654747 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.927215449 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925565515 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.925349005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.927612213 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.925705154 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.926089022 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.929197747 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.926124788 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.929265241 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.923765314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.924732487 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.928391138 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.932248527 seconds)
  done (took 1152.987468419 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.921453885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92137322 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.921148997 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.921743349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.921745687 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921949171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.92217474 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.921641305 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.921237619 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921543458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.921840645 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922268485 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.920646416 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.921809651 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.922861161 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.921896365 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.921705259 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.921360329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.921139678 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.922315728 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.921416679 seconds)
  done (took 42.21165955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.92435275 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.922052285 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.921823727 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.923739143 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.922172056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.92582108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.922343845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925140307 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.924879978 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922386807 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.925488532 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.925028785 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.921674176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.922260997 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922611446 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924949205 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.926687568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921618863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.925130057 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.921844549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.925748057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.921530716 seconds)
  done (took 44.176527961 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.925170072 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.92450809 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.925863746 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.923738335 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.920911473 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.918819581 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.922421629 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.921692436 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.92253115 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.919105892 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.916481098 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.918300796 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.924259692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.92245705 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.919937567 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.915829632 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.059485388 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.916113898 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.916722319 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.915341672 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.912031443 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.922653458 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.912176595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.91292616 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.91506534 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.914484659 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.913890317 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.914472851 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.914352306 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.9167122 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.917442418 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.912858704 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.913172821 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.915786932 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.914571877 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.914395908 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.917480574 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.914134668 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.910034964 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.914509203 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.923258711 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.93167538 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.912883477 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.921561741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.912720705 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.914216442 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.916382062 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.920741044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.909982241 seconds)
  done (took 95.964017667 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.913300267 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.912218707 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.909926867 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.911484301 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.912210745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.913652296 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.911549177 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.912988486 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.909885835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.910225172 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.912871832 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.910584268 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.910310081 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.912295229 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.912361714 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.909926523 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.910317344 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.909948601 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.909707979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.909833322 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.909384476 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.913011436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.91230703 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.910019072 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.91295874 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.909498874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.911665706 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.91172096 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.909696369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.908541206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.912738677 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.911997023 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.912777766 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.911626703 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.909692669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.912376259 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.913084809 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.909420549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.912630968 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.911177529 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.911833711 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.912316031 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.913054272 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.913111525 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.909902722 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.910932697 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.91129397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.91016824 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.910433348 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.91209011 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.912708004 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.910378024 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.913193214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.909716467 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.912925115 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.913372139 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.909825332 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.911042685 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.913339246 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.91028155 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.909408906 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912228292 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.909763864 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.913276405 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.91239229 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.910528104 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.909824717 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.913878105 seconds)
  done (took 131.823078564 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.913292758 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.915022252 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.913583454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.912935367 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914126358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.912240498 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.912658444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.912628115 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.912445578 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.913508314 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.913029357 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.912380302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.912885853 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.913017064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.912905961 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.913423877 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.913625892 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.912696683 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.913538627 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.912569175 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.913686052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.912935196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.913018878 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.912712403 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.914393353 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.913718592 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.913681216 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.912943322 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.912779661 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.913068048 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.914989394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.913591691 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.913681268 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.913440061 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.914147751 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.913077755 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.914719574 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913128024 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.913529481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.913789575 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.913482936 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914912462 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.913833252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.914260731 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.913850282 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.913152386 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.914203114 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.913514879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.912571301 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.912942362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.913729492 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.914931596 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.912417771 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.91379458 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.912805106 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.912982177 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.914279247 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.912678685 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.913242965 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.914215763 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.913154291 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.912974984 seconds)
  done (took 120.479071072 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.912636829 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.9125674 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.910822318 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.910709566 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.913947655 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.909666472 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.912429628 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.912379761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.912500621 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.914058133 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912462344 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.910041993 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909836181 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912616472 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.910255316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910658907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.909376124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.910410517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.913255018 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.910893051 seconds)
  done (took 40.078895987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.910432024 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.91309201 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.910685139 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.910809351 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.913577762 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.911179733 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.91219804 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.913109944 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910227343 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913205737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.911978274 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.912977579 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.909828789 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.909593863 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.913737445 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.91060367 seconds)
  done (took 32.433287308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.90978714 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.912600508 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.913487511 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.914240837 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.910334265 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.910866553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.912673478 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.910111735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.911335235 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.913209848 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.912285419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.912627791 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.913181112 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.915404736 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.909476673 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.912568808 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.910445819 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.910839244 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.913907699 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.913511639 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.912189894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.910991196 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.912342035 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.913044526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.911275057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.911009945 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.909902122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.910945928 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.911393221 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.913410131 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.910855881 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.910960758 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.910719829 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.911533944 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.914776921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.910522643 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.913627569 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.912700894 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.913673439 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.914729498 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.913327754 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.911182282 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.914186245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.914457549 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.912647776 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.913933988 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.911978749 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.912279198 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.911383024 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.912441997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.915941346 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.915830479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.914947982 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.914826871 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.914848706 seconds)
  done (took 107.034978446 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.913922711 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.914540392 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.911448694 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.914048803 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.916149892 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.912889675 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.914863291 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.91277271 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.912356421 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.916267342 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.91407327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.915120151 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.912544216 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.91543665 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.913499961 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.916491543 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.912310507 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.912413722 seconds)
  done (took 36.300423325 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.912498858 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.914623065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.914945948 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.912454154 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.91270871 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.915395249 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.914615278 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.915142059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.915401094 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.912992375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.913034328 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.916993573 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.916229521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.916605255 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.914655479 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.913814569 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.918320709 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919105503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.914826097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.914142307 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.916787579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.916583432 seconds)
  done (took 43.979969629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.915991949 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.916706961 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.933168538 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.956338926 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.94551494 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.916821075 seconds)
  done (took 13.434982733 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914910888 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916869291 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.915122841 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916928811 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917056705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914188328 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91394766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915625202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917519724 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914344587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914608087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917301502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.916707114 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91471895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917311598 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917857359 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914548548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914767619 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917421268 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.917355536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915628033 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918074041 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915328524 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916754684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914654587 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915120073 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917332278 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.915608087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916812009 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918543061 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.917605829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.915493599 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917923624 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916820254 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92275641 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919077084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917632931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920176479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918710869 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.916640401 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.918603356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918010676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918466485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915989667 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919542438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916782458 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917015758 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916234317 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91620115 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920304888 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919418882 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.91630815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919321001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919135425 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919319495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919408649 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917824989 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917345919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918649476 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91803537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918171914 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919406585 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917800317 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917437247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920036376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918433941 seconds)
  done (took 128.391153196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917551693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.918082702 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.916804877 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920388597 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917281488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917628805 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918546141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917857448 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918481136 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918292135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920156386 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918099766 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917653135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919696362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918336726 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918638836 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.918642105 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919066452 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919043768 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921371593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91817224 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918027147 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918692853 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919031571 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919633053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921414201 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918806946 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91873982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.918620506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920386221 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920087122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918836347 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918399386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.919240642 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920722058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919180819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920153409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918855055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919293395 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921840291 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920282964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921596119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920365942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919024909 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919608737 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921206437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920131751 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919994031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919381785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919214602 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921958798 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920054978 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920084416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919059456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920089787 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92148351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919884616 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.919167259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919704556 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922627751 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921134047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.919803919 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923168051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920502023 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920669313 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920483506 seconds)
  done (took 128.54598178 seconds)
done (took 2666.764220264 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.979256732 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.030740369 seconds)
  done (took 15.865145155 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.084323093 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.038966702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.922760989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.923270595 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.923398438 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.944716744 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.935328951 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.923241905 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.923004326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.923300549 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.92310293 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.110827661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.923819466 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.923447434 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.92269217 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.017319904 seconds)
  done (took 53.236895946 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.926682941 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.927714752 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.93735483 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.928806324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.927037897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.938647498 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.958195342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.929560389 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.959665692 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.948627071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.993907654 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.937800294 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.927066706 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.974619438 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.939120946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.940425273 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.030818726 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.000691009 seconds)
  done (took 36.983911493 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.003163897 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.930307048 seconds)
  done (took 10.797403371 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.94840879 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.94782988 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.941010378 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.95041681 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.92625202 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.953202247 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.963525561 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.937749468 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.956230416 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.93435769 seconds)
  done (took 71.333258375 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.931908092 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.92756183 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.927032466 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.926124825 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.91966042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.924794425 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.926816304 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.920236143 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.613603463 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.961773471 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.933449566 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.932259523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.927125055 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.929026725 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.925319666 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.950095148 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.045848063 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.92511991 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.924591394 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.932872138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.928424336 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.018403342 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.940109015 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.927269758 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.95625916 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.611092901 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.935820083 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.933552089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.063312239 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.925015163 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.927331498 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.928147983 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.928781661 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321462236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.216888124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.926820609 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.935112841 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.935915843 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.925080933 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.098899728 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.928684336 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.933503112 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.922129603 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.210089949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.007376084 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.969484596 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.289408515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.932628115 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.930502965 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.959081683 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.930670664 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.929913209 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.942614561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.439660145 seconds)
  done (took 135.975871563 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.922320699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.498921753 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.087769274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.9258516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.20601491 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.16729063 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.924510968 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973345877 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.927025933 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.174268766 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.101581782 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.043923072 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.925838216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.923266501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.926515743 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.922831146 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078219055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.995720744 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.926286259 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.923085092 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.961436248 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.190423981 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.052552445 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.92760294 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.949058888 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.153396481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.051086753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.043799448 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.436459427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.924129776 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.993704106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.927070519 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.923456144 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.923844196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.090502221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.034527724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.024331235 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.927675738 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925293354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.924788914 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.588344026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14847419 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.036500008 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.064180256 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.174649329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.155285034 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.5709583 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.925317503 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563968478 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.122306712 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.134502222 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.182375693 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055417031 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.927831048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.180380695 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.924804818 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.924904726 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.189431822 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.153361887 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.041294139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.929601213 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.926705591 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.925006419 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.240981014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.929560471 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.038311436 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.928281464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.925065764 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.039031757 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.043068985 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.156127082 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17108099 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.958250106 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.863042938 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.436632065 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.21130749 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.999765284 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.192647026 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.930706116 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.92585806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021715656 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.679545134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099732796 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244528377 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.192693958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969430042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.531977499 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.92707699 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.174846378 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.178394555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.157453985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172303388 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.093585629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.24736914 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.92699323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.92678297 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.12227884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059630734 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.930644071 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.293295334 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.179077683 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.660025133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.959285326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235049082 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06644496 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.930769157 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.555804619 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.928082024 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130485504 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.971512532 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.929263693 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.927354003 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.175402049 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.802475027 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928334411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.722309671 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.995351273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.933384224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.194511109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.932917252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.170497018 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932659618 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240154034 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.480094936 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974434452 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.121828075 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.173136413 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.718376807 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19729785 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.244017873 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054380627 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.189861347 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.758018412 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.929149668 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.212580139 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.931266786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.929752795 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10022508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.93046279 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08476756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.933527795 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190192603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.956703215 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101423961 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932134967 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.204519481 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.976527587 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982883186 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.933213805 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.048849887 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.93409048 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.978712784 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.115872503 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.934396065 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.93201922 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.508282524 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.932517345 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.079218515 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.230093244 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.956571926 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.001785488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.457928017 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.931269626 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025519204 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.958343127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.538328464 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.930091001 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.101775145 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.933815284 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.891478539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.930762993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242880866 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.15571654 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.935464437 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.933080931 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.727873235 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.639865043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.931476558 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.108109793 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.160925027 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.58468495 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152500367 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933040939 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065944198 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.93620643 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.008474591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.283974581 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.931876438 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.93222498 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.932968816 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.933164031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.93251693 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.159895093 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.962813267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.623954452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.07166829 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178792119 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.244021825 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.196313288 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.982970202 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.935155881 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.201244643 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.936484236 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.001125741 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.935484238 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.958066945 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181947794 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.936441635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16381967 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.220729217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.984967662 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.98577582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.936657272 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.935638637 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.933449093 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.078486098 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034277217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.936115936 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.932784252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.051616907 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062149726 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.125016617 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.523671391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.109265374 seconds)
  done (took 917.695940803 seconds)
done (took 1243.746102422 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.935613854 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.935242766 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.923421924 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.936069337 seconds)
  done (took 29.603074258 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.940926676 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.939024846 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.939907865 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.939807671 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.940301816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.939198538 seconds)
  done (took 13.508736267 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.981860722 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.933297149 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.936409549 seconds)
  done (took 21.722125053 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.01081758 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.351755469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.043729554 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.385426347 seconds)
  done (took 10.662415601 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.94180814 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.941211823 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.940370759 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.941305222 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.942524193 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.943722585 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.940984732 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.941971608 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.944057393 seconds)
  done (took 19.35069026 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.081338093 seconds)
done (took 100.801156912 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.943052986 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.963754323 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.934500841 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.334788874 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.984774528 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.997379929 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.036976075 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.936216093 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.815320628 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.58920105 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035107065 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.259340242 seconds)
    (13/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.069332764 seconds)
    (14/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.891967142 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.139641657 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.978783056 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.920258931 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.981332611 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.172807205 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.950280918 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.219355234 seconds)
    (22/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.229505463 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.345195728 seconds)
    (24/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.075931741 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.722412784 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.050679546 seconds)
    (27/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.960050979 seconds)
    (28/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.93715763 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.219789047 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.957276418 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.936018275 seconds)
    (32/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.063326046 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302145343 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.936816396 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.347338519 seconds)
    (36/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.300443719 seconds)
    (37/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.00263747 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.039784065 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.040942123 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.596400725 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.043385972 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.116822868 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.700618294 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.190839798 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.988341205 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.527631009 seconds)
    (47/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.922960197 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.584224961 seconds)
    (49/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.336175242 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.952519625 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.979708557 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.926188206 seconds)
    (53/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.064920653 seconds)
    (54/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.065360487 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.999435602 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.942440845 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.050165358 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.536383406 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.219717332 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.994972197 seconds)
    (61/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.966606962 seconds)
    (62/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.561569791 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.061977977 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.146495646 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.038284628 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.168658377 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.928077762 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.058527567 seconds)
    (69/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.368384571 seconds)
    (70/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.031188958 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.05945555 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.937830595 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 4.113999258 seconds)
    (74/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.172933341 seconds)
    (75/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.863124924 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.941779554 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.974140818 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.556858973 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.118458963 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.273073946 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.329955139 seconds)
    (82/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.943404798 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.078150355 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.3240206 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.114917132 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.021804612 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.940768451 seconds)
    (88/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.039739232 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.654467359 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.24555199 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.924178668 seconds)
    (92/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.032956196 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.965317985 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.241302167 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 5.713934139 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.827670186 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.93248435 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.488782719 seconds)
    (99/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.019109491 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.027496625 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.144873486 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.945411825 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.253964119 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.190241667 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.943601249 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.156961839 seconds)
    (107/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.133690906 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.539126818 seconds)
    (109/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.220784571 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.459129033 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.032593828 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.53082392 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.048064602 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.940762308 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.231077398 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.091123866 seconds)
    (117/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.182972478 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.969143931 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.835664529 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.151021274 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.236654357 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.591069954 seconds)
    (123/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.103843789 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.944641952 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.86464009 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.044925897 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.083022707 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.488396018 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.966872059 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.942600278 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.02625407 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.197063644 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.288777586 seconds)
    (134/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.246850686 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.943668198 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.584335571 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.158914487 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.11419895 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.295389836 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.207032133 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.282042347 seconds)
    (142/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.101080975 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.037911748 seconds)
    (144/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.115058927 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.949630255 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.078607239 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 4.97987783 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.857868873 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.5023995 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.173409801 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.246443874 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.956489442 seconds)
    (153/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.952512475 seconds)
    (154/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.969594188 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.137386846 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.212174766 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.130689718 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.326544219 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.164419246 seconds)
    (160/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.31528521 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.116897022 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.252955002 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.972841166 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.002428783 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.245263491 seconds)
    (166/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.12660823 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.054195195 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.928106802 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.311584381 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.095924719 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.946785866 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.108896938 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.94905212 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.586355905 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.452484067 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.976451657 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.050005477 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.247744223 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.300110769 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.768696629 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.774899567 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.255133754 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.322228475 seconds)
    (184/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.955788543 seconds)
    (185/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.278220821 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.947541115 seconds)
    (187/309) benchmarking ("sort", BigInt, false)...
    done (took 6.949633352 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.931943616 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.672266633 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.200466524 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.975026474 seconds)
    (192/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.93034328 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.760975158 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.972974548 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.418605532 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.071617639 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.052644847 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.018592166 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.628094262 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.952737706 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.634605663 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.190948212 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.138534934 seconds)
    (204/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.36259946 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.017883311 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.055775161 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.97138436 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.987276972 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.219791757 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.949185634 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.952310649 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.978593285 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.540164183 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.322329607 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.910137251 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.173671949 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.93397204 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.957314308 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.008551808 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.143533542 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.992430889 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.962004998 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.122973761 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.171698723 seconds)
    (225/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.232484383 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.465468064 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.041706388 seconds)
    (228/309) benchmarking ("sort", Float64, false)...
    done (took 5.740665518 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.475457374 seconds)
    (230/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.948246091 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.783631371 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.043236049 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.281845901 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.055482333 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.932652954 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.146375849 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.844220698 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.971278053 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.974181039 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.073697265 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.956940968 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.454677007 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.949479908 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.333161545 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.223894949 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.99461287 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.011682157 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.192856638 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.94508332 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.818955396 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.037600666 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.959892346 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.026521629 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.839109397 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.975914594 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.31152756 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.250336814 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.293924513 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.144692635 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.605053926 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.056395912 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.13245045 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.982477168 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.935491508 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.295648042 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.937351033 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.194137895 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.985269787 seconds)
    (269/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.047063897 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.243498215 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.46738329 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.473475248 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.066179868 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.974952027 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.935427023 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.027245338 seconds)
    (277/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.975965959 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.453881284 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.884109758 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.052880469 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.938184603 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 4.073396715 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.344446842 seconds)
    (284/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.12239955 seconds)
    (285/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.083498601 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.35142497 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.003725616 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.251610726 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.978832004 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.284450634 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.646444889 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.946251952 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.535050516 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 4.830981088 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.047498714 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.066903409 seconds)
    (297/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.211470252 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.100383542 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.08013561 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.386941587 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.52934107 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.092069163 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.99295572 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.914648571 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.205162772 seconds)
    (306/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.333237509 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.43512268 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.123154393 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.982353765 seconds)
  done (took 1046.900505788 seconds)
done (took 1048.787009572 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.984380018 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.978651485 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.961509841 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.983715336 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.073946417 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.990736473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.97257714 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.964928326 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.010372157 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.011700786 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.961932555 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.989100103 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.964072629 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.962464907 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.962067715 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977752211 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.272008754 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.990685753 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.980750604 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.972886991 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.979518896 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.962535077 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.012876942 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.990216858 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.968152624 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.967177443 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.96856132 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.983817944 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.075948709 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.967673792 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.966781087 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.97542427 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.273135227 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.988167216 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.957938006 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.984309995 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.975839743 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.973668969 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.967577971 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.995839689 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.408744346 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.971162295 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.966746021 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.965144091 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.965701852 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.967678544 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.966759915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.970955588 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.977483145 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978368212 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.408020435 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.98515905 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.968051885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.964823062 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.975401646 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.965463068 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.968203615 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981214326 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.984213007 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.98084924 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.264537093 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.995629877 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.967625178 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.981660234 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.973821085 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.446808087 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.968575498 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.970199193 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.412282038 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.976850681 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.447274572 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.981246632 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.968903883 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.980242496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.99799602 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.2745039 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.988063871 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.966424646 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.974075792 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.965434068 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.977246677 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979997378 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.970532885 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.967029395 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.981040206 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.994566288 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.976800111 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.968672945 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.976870843 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.986785033 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.974407393 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.979537623 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.970011103 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.96286382 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.97636602 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.970709132 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.970618225 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.970679491 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.973130794 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.977982346 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.41055746 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.99047032 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.964402873 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.964815802 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.966163979 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.98131958 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.410342775 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.974859546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.989618987 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.015156589 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.968999514 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.266217336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.997088204 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.983612928 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.97797849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.971192728 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.962991965 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265959272 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.437348973 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.989371692 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.970176032 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.966569164 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985354851 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.970622799 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.964739611 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.277834255 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.996836109 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.983425933 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.090346912 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.980132608 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.001980684 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.96785128 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.973529638 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.996603285 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985483297 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.000816344 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.973967804 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985230838 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.985145313 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.966137129 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.98103028 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.979794427 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.970106765 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.976249405 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.964121255 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.002096731 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982819869 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.981992625 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.991696246 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.091352762 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.967494285 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.268389622 seconds)
done (took 308.795567567 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.038938118 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.96395879 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.067887632 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.966678674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051209786 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.05223423 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.964116938 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.964450443 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.964386564 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.379305787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.964559813 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.965342843 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.961151958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.963888022 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.049943009 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.967641847 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.964900743 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.312343812 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.968601282 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.040432191 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.96028923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.964879188 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.967034401 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.354475937 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.963581026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.966554537 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.040001764 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.967604802 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.346994345 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.966743468 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.961723926 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.317628595 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.059564424 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.987668398 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.978003172 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.975588549 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.05259696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.971997362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.051446789 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.050939177 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.069327446 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.009519826 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.961913557 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.961961113 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.972036979 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.969582223 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.966192166 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.996389931 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.96584981 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.966123698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.341045281 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.979537603 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.967593059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.966674881 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.966383096 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.000413068 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.966678052 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.969692124 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.062839744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.970579316 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.033598414 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.387561955 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.349893831 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.969517498 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.964509583 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.96723924 seconds)
  done (took 191.078309148 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.038635131 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.043998301 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.037252948 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.974386164 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.021682557 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.042433788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.974287858 seconds)
  done (took 16.031606033 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.977490918 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.969920036 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.020548319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.021027611 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.970448409 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.121336709 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.970147677 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.982117011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.968914087 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.023984211 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971618748 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.970825963 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.977512743 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.965505301 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.019814975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.982963009 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.088093287 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.972662543 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.97112282 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.129657687 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969077584 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.977903827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.026000719 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.982782677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971841468 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.977923187 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.553812076 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.972731433 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.968645723 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.971546807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.969411565 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.01278743 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972036431 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.971779655 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969197201 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.088124185 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.972137004 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.97023922 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.9715774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.969474199 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.971362978 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.971624259 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.971639211 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.969204517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.97226187 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.996113754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.971874947 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.972191019 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.970870919 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.97263503 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.022971866 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.973161856 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.969895197 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.971035754 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.029148458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.98024549 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.973466904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.970208607 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.97414547 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.970349538 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.131280817 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.021836613 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.973092914 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.021805037 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972558014 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.973246428 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.972804095 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.972441841 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.028832082 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.973531363 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.022287152 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.970258714 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.12990956 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.99661999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.974129795 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.976090925 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.976565676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.974392104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.966059364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.981333499 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.970743875 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975624784 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.980296374 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981595869 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.971699857 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.081630872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.083825358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.971107733 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.987887043 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.981538948 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.971515606 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.027109059 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.974732593 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.385141342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.026499612 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.090630179 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.031811771 seconds)
  done (took 216.294307649 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.981562532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.984258483 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976615374 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.990902873 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.975777312 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.975811505 seconds)
  done (took 13.789114323 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.978658068 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.976633943 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.975976532 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.975993652 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.97664289 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.976316555 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.976170979 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.976804864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.980376412 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.97615164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.976506944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.979324544 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.976465969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.976921907 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.977002537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.975236211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.976000476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.972667255 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.975456363 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.976008835 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.139016282 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.977049129 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.976578125 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.977688018 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.979797555 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.975630017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.984338722 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.976242546 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.975646233 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.982346308 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.980194011 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.977370436 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.978360604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.982540538 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.98182486 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.979661026 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.979436662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.979864801 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.975152075 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.977231562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.978503365 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.977915244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.977423721 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.980349636 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.9802405 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.983353601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.983933161 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.987015298 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.979363569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.979996934 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.980976214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.977546752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.979207153 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.980763787 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.982853337 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.983762327 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.983973964 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.978906798 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.978759002 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.979592595 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.978005836 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.978639566 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.981144313 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.983144639 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.98610182 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.981144051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.979552673 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.982491332 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.979292102 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.978748433 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.981448546 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.975337793 seconds)
  done (took 145.55385388 seconds)
done (took 584.660955096 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.216493372 seconds)
  done (took 9.124020492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.110899238 seconds)
  done (took 9.104460996 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.618861239 seconds)
  done (took 10.527126159 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.977570978 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.001161515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.982640151 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.983599915 seconds)
  done (took 29.864078507 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.259038416 seconds)
  done (took 9.167669523 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.983469939 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.972353644 seconds)
  done (took 15.926123529 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.060018098 seconds)
  done (took 8.9694365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.16991289 seconds)
  done (took 9.087113482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.977895338 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.981041886 seconds)
  done (took 15.879181776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.957855518 seconds)
  done (took 8.866257496 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.70814103 seconds)
  done (took 11.628254201 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.983714628 seconds)
  done (took 8.904904718 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.004954373 seconds)
  done (took 8.914267442 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.148002957 seconds)
  done (took 10.057406111 seconds)
done (took 167.929122197 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.977306048 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.975224517 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.973871986 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.973520217 seconds)
  done (took 29.809135377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.013440029 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.014957929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.015965312 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.024409478 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.01726202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.014282977 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.00639712 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.007231677 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.025035254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.016994231 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.016008217 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.015270755 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.014849243 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.005529275 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.016538718 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.016101126 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.025219768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.015666213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.006360617 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.017882512 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.981393194 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.025242278 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.017960563 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.981617459 seconds)
  done (took 50.221817246 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.180558306 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.053939124 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.136631301 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.033690132 seconds)
  done (took 10.315485051 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.034042966 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.034541227 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.04645241 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.085204579 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.110909798 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.043846069 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.007984639 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.00335077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.989192134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.034628637 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.110245323 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.051599888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.118905481 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.981630522 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.16855415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.981384902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.982086242 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.033991763 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.084899906 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.098963779 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.982920959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.033871517 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.037031688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.051117983 seconds)
  done (took 51.019448047 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.980450304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.990208228 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.987833984 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.981410831 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.981529408 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.981970514 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.98821123 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.983660637 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.003714884 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.983254561 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.980837451 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.981529467 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.981037912 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.982403924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.982895797 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.994644891 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.996551814 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.982730545 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.985706805 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.988399368 seconds)
  done (took 41.631820063 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.976945195 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.903290189 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.329855143 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.232529597 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.978343132 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.976286305 seconds)
  done (took 33.309691879 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.996076082 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.047090622 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.99142454 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.040579817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.122767721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.991584193 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.984274295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.051284848 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.095327906 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.057586183 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.003131597 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.01099249 seconds)
  done (took 26.3053076 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.97921616 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.981409812 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.980664184 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.997789733 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.995346975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.991996951 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.992151096 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.978037772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.999120892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.003983416 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.993136558 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.997864099 seconds)
  done (took 45.808191183 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067622727 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.021309749 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.972026432 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654914519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358643623 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191639683 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.630074007 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308624985 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.98299259 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253060686 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903594232 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083760111 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237032511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52071372 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01258143 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.431205115 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269233994 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175787121 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002500608 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627196172 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042980224 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.193647287 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.689947837 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035950905 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19163521 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.113016724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.241533194 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980872041 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114959399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017875888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990965152 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980510775 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254894121 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351012288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082136192 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991611707 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602028656 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.693337454 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.015593694 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.629466467 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.641116623 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.092905269 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991879081 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981836337 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.915027533 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.1504281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356194372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.987203991 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.692405711 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.981222489 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992718128 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076863301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.985390124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.798312456 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895322325 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.98551151 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.979470027 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989129185 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.55704448 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053290453 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182500003 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.957030746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.075375115 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676560888 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360165138 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.123951125 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.985991816 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986821577 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916892401 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.623961883 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037048655 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311967005 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.003831612 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631425688 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277313688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.946528287 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925662489 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236695708 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.534266699 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.957717492 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212054293 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983145808 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920162328 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.930740418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918230239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226849119 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014767991 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.746207329 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018327558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310698316 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995474022 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001466232 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007611136 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207794957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.868246018 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984199221 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.676979284 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153029032 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006181788 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313013593 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919105392 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.989238641 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244505821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.196701238 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.069261569 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.471383504 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134807934 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.568876037 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.038643661 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.141002779 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035355559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.244647848 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036142997 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055182812 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039294816 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.98620615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261252163 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.592599426 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.124112657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.917074588 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112241654 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.283578473 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008278815 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067886759 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994596107 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.986745451 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.730864387 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538512539 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.986401389 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.988827019 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.067291905 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035640712 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.986416102 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936812206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.61608783 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903416446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.000560179 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210654073 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.578340165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299657464 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922316082 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315916375 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.078905792 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.209065856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.627658578 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.055089572 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248104456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066794086 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097687544 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035798228 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006323043 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085272162 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008804478 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.147688416 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281767806 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.991260061 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.991182796 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.735284532 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.024221255 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987487878 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.992560927 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739293418 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251360585 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010865291 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.994629493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.877906105 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.002447779 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052560085 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993901634 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999109843 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.534192682 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700335026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.994860251 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.580000805 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213276159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999113191 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.629379585 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106322903 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.070566614 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.252278768 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04196296 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.923604042 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.700352486 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.682120129 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989916653 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925355445 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.989798802 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999487375 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00039028 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.186848488 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254326081 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.027223719 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.637147361 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.032575195 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000834013 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.995048085 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990134281 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.503770229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063735502 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.192732742 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038955428 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135124797 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.004061252 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.923770296 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.994721646 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995810151 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.991989347 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.99076989 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023408635 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.63531031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364632642 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251374119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599362156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004718337 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.661721967 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.047468156 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.992207726 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706939 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165042447 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.030708972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016920016 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.003034346 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.710073339 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.698011947 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.562929374 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293320116 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278428069 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408917658 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.200949607 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021848689 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32716309 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92530071 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.556137511 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052410879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333897559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9369005 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075713828 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.63413366 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327924137 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006678456 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220279621 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364980777 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.760862956 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016293775 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20460169 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027703213 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.156442039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958493546 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.516411557 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133526689 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622749746 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184669797 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323616844 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.577314389 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.140371387 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.992372165 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.640098106 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070715798 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.702673697 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165021841 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208096267 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825251576 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452481114 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.999249365 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.219235866 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327507341 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.17410852 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.115772141 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930846297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003899479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00428795 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.995031768 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.993492556 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.875454694 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.248390906 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005678458 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927589913 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126214324 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271278691 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.889267294 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.000987667 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994952128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267492657 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.548345285 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164903972 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.116669867 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.519461686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003132308 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.929778902 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929085808 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.688440974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.000021796 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971314979 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194274117 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.087845936 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915039885 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.081142749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079801495 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251734763 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.010114398 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257382822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263670934 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.696138336 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021048365 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.096569418 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.569535229 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.092045313 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997246336 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231814936 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747184772 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223777178 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.989092287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.943875793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.997160962 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210928443 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.996505364 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.843963074 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207961514 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.716410007 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.008505447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298175525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06369057 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.790277174 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028683068 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.089548201 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007578713 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076453514 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008041769 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.008108111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008668293 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043987268 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806784804 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.109430742 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.011840766 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091625893 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073665583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522447389 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.00534493 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261854335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342645574 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307809296 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050641764 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.999059921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99905329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933339785 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147796154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224178481 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273156934 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.127529641 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.116625472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02439493 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.57839025 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207778775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244691964 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2736037 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.894112461 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.54041347 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040762261 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.99919131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010892759 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.211480648 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198985706 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281778612 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.142199776 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.090302859 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362464438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273988002 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.999212009 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001105811 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587973971 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.002622694 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.739698384 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.034635123 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831720119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262802373 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010365415 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369923968 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01941013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.15667168 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.774442138 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678406611 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289801289 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.976288025 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054509667 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264426218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362380049 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307890898 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068391232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013054751 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.110894613 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149102978 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.88800676 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.001165522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001762951 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05053922 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.712569743 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012387395 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26798173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304000392 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.999317665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.890899384 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025751596 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.013079593 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.225801502 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248364395 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247870612 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012515291 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007237366 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.818657884 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261943633 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051550577 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93680336 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.00565741 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093603554 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247533282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02327386 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.455454974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.71466832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256625221 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.996344781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025760292 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17415103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354146596 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30447281 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.529112679 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196815748 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.584311064 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.644441101 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309287068 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.00929276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168910559 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311122799 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.007481821 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.09505827 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04646863 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.260721441 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306000698 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.119292864 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644339045 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.970975093 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345911177 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563748433 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942896206 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013351216 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.066232313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.005006505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132698609 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015822638 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.877390424 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16965905 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.784078213 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280893757 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.011708384 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.989536174 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.645462686 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.288375823 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041811725 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160744378 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007041609 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.67960289 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.355525427 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261421029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.092686668 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.016489591 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.00911972 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005899004 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992405492 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204180738 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.202492832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269321683 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.115720857 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.046162887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009710774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.222754945 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218431603 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.79085994 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129511877 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.09229698 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051656572 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.913229415 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508792417 seconds)
  done (took 1730.454403225 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033553974 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.035523378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.050960585 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.103438922 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.041877198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.064105874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.063172741 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.063228925 seconds)
  done (took 58.397153172 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.006848473 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.230873736 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.016697638 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.007806048 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.01725716 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.021069009 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.184587793 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.01849889 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.027897586 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.018137695 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.009047729 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.008257385 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.332354042 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.032062333 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.008055289 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.013796946 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.01655051 seconds)
  done (took 76.930476598 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.007707241 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.068641867 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.026662393 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.023534152 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.048516635 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.020107321 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.866470509 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.012673851 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.010567964 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.157126214 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.641404943 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.015621055 seconds)
  done (took 88.842021702 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.017848739 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.015438331 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.015969431 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.014632409 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.015445753 seconds)
  done (took 12.024194151 seconds)
done (took 2257.009225369 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.262940709 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.223014888 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.233923257 seconds)
  done (took 6.400115751 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.158116923 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.205503139 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.325740626 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.330290269 seconds)
  done (took 10.965036415 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.29725587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.394745292 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.207254617 seconds)
  done (took 8.8421264 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.410688505 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.013847645 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.119024202 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.008066778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.009112093 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.011791708 seconds)
  done (took 22.973346249 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.012832006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.016278951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.013731057 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.015714644 seconds)
  done (took 10.000718665 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.993728232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.736002442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.995613737 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.007230281 seconds)
  done (took 21.675844693 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.761839483 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.771960934 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.756349653 seconds)
  done (took 10.233630978 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.599671783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.927213933 seconds)
  done (took 9.47041279 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.280499192 seconds)
  done (took 4.223793223 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.145474896 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.2756065 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.466107416 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.489099117 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.554863458 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.887788087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.326586277 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.265649209 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.410762797 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.442052326 seconds)
  done (took 26.207746913 seconds)
done (took 146.743937105 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.400221774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.255356571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.225777057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.396412336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.246164009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.225566196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.408618143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.376905683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.866610802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.861417487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.356232746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.252002803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.149875534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.2503602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.149865296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.378801107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.249580146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.420841299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.086852611 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.252755733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.419701905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.995344103 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.192335403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.010565228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.251637121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.178017196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.58391071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.38063617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.240392929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.603730053 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.178562168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.40864632 seconds)
  done (took 176.199457461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.79767546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.019559739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023920685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.014277364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.549469616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.027593602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.014495611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.013396774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.240239176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.258080694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.030326261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.544395725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.0305513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.0139772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022581858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.013215258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.348099586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872399191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.029280667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.031847806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.034864725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.399459637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.031597118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.421673373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.355750299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.031751383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.013982657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.032397821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.023008128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.024571145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026993144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.014532909 seconds)
  done (took 213.261064433 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.015003453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.016702536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.017810762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.016780011 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.020562445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.02164593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.018642896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.015600085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.802556307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.793141008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.022297109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.02185802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.022608147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.01542568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.024234584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014612497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.023669066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.02390557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.022310932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.024671083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.025854161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.848996935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.024062374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.869600639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.023087728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025115251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.016950944 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.023408948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.024922409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.025596509 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.02481618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.017290352 seconds)
  done (took 225.868479592 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.211861542 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.022674787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.023354759 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.953494155 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.023030463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.022775659 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.018117663 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.213312952 seconds)
  done (took 20.451811638 seconds)
done (took 637.738118029 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.480863119 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.319661251 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.198362932 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.046626372 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.266145574 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.078082992 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.042010544 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.104559449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.757218074 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.108264533 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.681199173 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.060446932 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.771857206 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.063812025 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.169413033 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.098601015 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.580085654 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.664400745 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.216365532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.104269259 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.210680294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.981033511 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.114944402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.801322892 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.793164185 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.024491362 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.231282358 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.585461166 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.05150812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.204242401 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.789006936 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.448929716 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.05306215 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.040515018 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.092963724 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.07592437 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.398392945 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.052013331 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.16815627 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.779012197 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.095984433 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.641472488 seconds)
  done (took 109.398005267 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.014112908 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.012449439 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.011587355 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.012328785 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.013213855 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.012141804 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.012014741 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.011457328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.012849426 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.011525682 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.011808202 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.013335457 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.012471874 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.014179014 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.012522944 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.011925534 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.013845504 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.01522773 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.012034928 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.012359396 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.013865831 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.013459313 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.013764935 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.012784822 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.013903436 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.013460645 seconds)
  done (took 54.295723923 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.025325205 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.164995349 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.247098759 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04416993 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.026134438 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.029113836 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.04676427 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.031483859 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.030092358 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.029025449 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.116570219 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.031346577 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045438973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.247491294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.040167299 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.025987511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.02683195 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.026882984 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.172679412 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.041742813 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.046575136 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.030599352 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.045125884 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.039451919 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.030221586 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.027787655 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.030361317 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.493627249 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.035083791 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.118569867 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.070274498 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048325069 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.470930015 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.257514463 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.079221726 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.033679375 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.027879384 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122017364 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.033220888 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.028154206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.044572253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.033022153 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249039456 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.529670223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.040436437 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.027833787 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.503302503 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.128897928 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.069654669 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.041471218 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.25239579 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.044821961 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.029620975 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.028932788 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.065578032 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.038274967 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.028574683 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.390879295 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.039107589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.047073989 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.032421863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.029078007 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.180495602 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.035940649 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.169177647 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.037406897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.035712969 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.029533423 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.250702416 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.043590023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.53102253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.041861435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.029594722 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.118234033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.172742048 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.528374154 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.041169371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.185530308 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.480050402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.052725823 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.037317774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.493607552 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.056680267 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.035974748 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.03087089 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.031414772 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.029531918 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.072079141 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.046355722 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.472114519 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.543838319 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.401640555 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.055657802 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.045860508 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.031224238 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.392344067 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.037886124 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.030577544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.246673528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.548181375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.043162292 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.039732056 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.520273492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.044298511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.049611976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.040017188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.256717097 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.044731667 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.074899334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.031650264 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.037138512 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.035604725 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.049023474 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.038475251 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.031471904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.507816742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.136378131 seconds)
  done (took 250.755025217 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.026187338 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.027126865 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.026234755 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.037009306 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.026172918 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.032549843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.025900024 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.024731934 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.031507596 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.024448384 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.025390799 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.024553866 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.027450384 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.02746138 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.512488691 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.037624179 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.641896807 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.031116955 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.031627518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.031614772 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.713020884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.037163867 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.031881961 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.052470419 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.032100898 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.032142817 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.03379427 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.080030614 seconds)
  done (took 172.64798708 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.038163846 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.221455032 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.05626654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.074267594 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.045324853 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.035418361 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.062000457 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.061893003 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.042928582 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.035197209 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.03556113 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.097778526 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.048172991 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.179580125 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.072962103 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.069046476 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.146710004 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.048896876 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.036482991 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.035417053 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.065857194 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.035560035 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.099701855 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.165289877 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.056550543 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.153715922 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.044526492 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.039579199 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.038955472 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.155019097 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.056534851 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.099031562 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.067259042 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.056895878 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.160762134 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.156219673 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.149583388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.069863122 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.044531588 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.036973298 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.03787176 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.027646652 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.157451357 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.059286271 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.041512404 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.147968196 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.05660182 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.041404557 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.049085123 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.037651214 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.053308556 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.058270498 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.107341812 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.17438204 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.074723673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.064402212 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.064234512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.342015548 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.049844153 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.140790241 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.036710333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157387415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.060730884 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.028405256 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.039391989 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.04440755 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.068416066 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.071857436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.148649256 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.049618705 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.141867456 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.077707291 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.046365431 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.038977056 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.0428343 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.158876897 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.159692208 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.077521773 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.078053832 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.072616893 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.037100187 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.040646245 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.030481459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.058342844 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.04520069 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.156475832 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.163129532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.052101785 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.043225856 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.04273131 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.044278507 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.068858685 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.168001803 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.07602357 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.140103052 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.113035832 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.119793216 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.05838081 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.055060774 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.044782721 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.105589617 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.058642727 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.052020478 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.390044438 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.114389268 seconds)
  done (took 220.82987714 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.134964911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.503739563 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.097279107 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.097418026 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.329985709 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.462578708 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.840302715 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.089640465 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.090935097 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.116405663 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.254746104 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.148658632 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.10372347 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.079521818 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.491394085 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.08204988 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.089798143 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.112324107 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.094691894 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.652618837 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.414748914 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.216398938 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.094118932 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.20959302 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.071066358 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364178423 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.415411585 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.477183885 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.125467471 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435324884 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.432929934 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.777384374 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.313105672 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.335474281 seconds)
  done (took 80.532385764 seconds)
done (took 890.409892739 seconds)
SAVING RESULT...
DONE!
